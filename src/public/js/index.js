/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/api/GuildAPI.js":
/*!****************************!*\
  !*** ./js/api/GuildAPI.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GuildAPI: () => (/* binding */ GuildAPI)
/* harmony export */ });
/* harmony import */ var _framework_JsonAjaxer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../framework/JsonAjaxer */ "./js/framework/JsonAjaxer.js");
/* harmony import */ var _factories_GuildFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factories/GuildFactory */ "./js/factories/GuildFactory.js");
/* harmony import */ var _factories_PlayerFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../factories/PlayerFactory */ "./js/factories/PlayerFactory.js");
/* harmony import */ var _factories_GuildAPIResponseFactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../factories/GuildAPIResponseFactory */ "./js/factories/GuildAPIResponseFactory.js");
/* harmony import */ var _errors_GuildAPIError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors/GuildAPIError */ "./js/errors/GuildAPIError.js");






class GuildAPI {

  constructor() {
    this.apiUrl = '/api';
    this.ajax = new _framework_JsonAjaxer__WEBPACK_IMPORTED_MODULE_0__.JsonAjaxer();
    this.guildAPIResponseFactory = new _factories_GuildAPIResponseFactory__WEBPACK_IMPORTED_MODULE_3__.GuildAPIResponseFactory();
    this.guildFactory = new _factories_GuildFactory__WEBPACK_IMPORTED_MODULE_1__.GuildFactory();
    this.playerFactory = new _factories_PlayerFactory__WEBPACK_IMPORTED_MODULE_2__.PlayerFactory();
  }

  /**
   * @param {string} guildId
   * @param {string} address
   * @param {number} nonce
   * @return {string}
   */
  buildGuildMembershipJoinProxyMessage(guildId, address, nonce) {
    return `GUILD${guildId}ADDRESS${address}NONCE${nonce}`;
  }

  /**
   *
   * @param {string} guildId
   * @param {string} address
   * @param {string} unixTimestamp
   * @return {string}
   */
  buildLoginMessage(guildId, address, unixTimestamp) {
    return `LOGIN_GUILD${guildId}ADDRESS${address}DATETIME${unixTimestamp}`;
  }

  /**
   * @param {GuildAPIResponse} guildAPIResponse
   */
  handleResponseFailure(guildAPIResponse) {
    if (!guildAPIResponse.success) {
      throw new _errors_GuildAPIError__WEBPACK_IMPORTED_MODULE_4__.GuildAPIError(`Guild API request was unsuccessful. See network request for details.`);
    }
  }

  /**
   * @param {string} requestUrl
   * @param {string} dataProperty
   * @return {Promise<*>}
   */
  async getSingleDataValue(requestUrl, dataProperty) {
    const jsonResponse = await this.ajax.get(requestUrl);
    const response = this.guildAPIResponseFactory.make(jsonResponse);
    this.handleResponseFailure(response);

    if (response.data === null
      || response.data === undefined
      || !response.data.hasOwnProperty(dataProperty)
    ) {
      throw new _errors_GuildAPIError__WEBPACK_IMPORTED_MODULE_4__.GuildAPIError(`Data does not contain required property (${dataProperty}).`);
    }

    return response.data[dataProperty];
  }

  /**
   * @return {Promise<Guild>}
   */
  async getThisGuild() {
    const jsonResponse = await this.ajax.get(`${this.apiUrl}/guild/this`);
    const response = this.guildAPIResponseFactory.make(jsonResponse);
    this.handleResponseFailure(response);
    return this.guildFactory.make(response.data);
  }

  /**
   * @return {Promise<string>}
   */
  async getTimestamp() {
    const timestamp = await this.getSingleDataValue(`${this.apiUrl}/timestamp`, 'unix_timestamp');
    return `${timestamp}`;
  }

  /**
   * @param {SignupRequestDTO} signupRequestDTO
   * @return {Promise<GuildAPIResponse>}
   */
  async signup(signupRequestDTO) {
    const jsonResponse = await this.ajax.post(`${this.apiUrl}/auth/signup`, signupRequestDTO);
    return this.guildAPIResponseFactory.make(jsonResponse);
  }

  /**
   * @param {LoginRequestDTO} loginRequestDTO
   * @return {GuildAPIResponse}
   */
  async login(loginRequestDTO) {
    const jsonResponse = await this.ajax.post(`${this.apiUrl}/auth/login`, loginRequestDTO);
    return this.guildAPIResponseFactory.make(jsonResponse);
  }

  /**
   * @param {string} playerId
   * @return {Promise<Player>}
   */
  async getPlayer(playerId) {
    const jsonResponse = await this.ajax.get(`${this.apiUrl}/player/${playerId}`);
    const response = this.guildAPIResponseFactory.make(jsonResponse);
    this.handleResponseFailure(response);
    return this.playerFactory.make(response.data);
  }

  /**
   * @param {string} playerId
   * @return {Promise<number>}
   */
  async getPlayerLastActionBlockHeight(playerId) {
    const lastActionBlockHeight = await this.getSingleDataValue(`${this.apiUrl}/player/${playerId}/action/last/block/height`, 'last_action_block_height');
    return parseInt(lastActionBlockHeight);
  }
}

/***/ }),

/***/ "./js/api/GuildAPIResponse.js":
/*!************************************!*\
  !*** ./js/api/GuildAPIResponse.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GuildAPIResponse: () => (/* binding */ GuildAPIResponse)
/* harmony export */ });
class GuildAPIResponse {

  constructor(
    success = false,
    errors = [],
    data = null
  ) {
    this.success = success;
    this.errors = errors;
    this.data = data;
  }
}

/***/ }),

/***/ "./js/constants/RegexPattern.js":
/*!**************************************!*\
  !*** ./js/constants/RegexPattern.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   USERNAME_PATTERN: () => (/* binding */ USERNAME_PATTERN)
/* harmony export */ });
const
  USERNAME_PATTERN = /^[\p{L}0-9-_]{3,20}$/u
;

/***/ }),

/***/ "./js/controllers/AuthController.js":
/*!******************************************!*\
  !*** ./js/controllers/AuthController.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthController: () => (/* binding */ AuthController)
/* harmony export */ });
/* harmony import */ var _framework_AbstractController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../framework/AbstractController */ "./js/framework/AbstractController.js");
/* harmony import */ var _view_models_IndexViewModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../view_models/IndexViewModel */ "./js/view_models/IndexViewModel.js");
/* harmony import */ var _view_models_signup_ConnectingToCorp1ViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../view_models/signup/ConnectingToCorp1ViewModel */ "./js/view_models/signup/ConnectingToCorp1ViewModel.js");
/* harmony import */ var _view_models_signup_ConnectingToCorp2ViewModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../view_models/signup/ConnectingToCorp2ViewModel */ "./js/view_models/signup/ConnectingToCorp2ViewModel.js");
/* harmony import */ var _view_models_signup_IncomingCall1ViewModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../view_models/signup/IncomingCall1ViewModel */ "./js/view_models/signup/IncomingCall1ViewModel.js");
/* harmony import */ var _view_models_signup_IncomingCall2ViewModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../view_models/signup/IncomingCall2ViewModel */ "./js/view_models/signup/IncomingCall2ViewModel.js");
/* harmony import */ var _view_models_signup_IncomingCall3ViewModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../view_models/signup/IncomingCall3ViewModel */ "./js/view_models/signup/IncomingCall3ViewModel.js");
/* harmony import */ var _view_models_signup_SetUsernameViewModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../view_models/signup/SetUsernameViewModel */ "./js/view_models/signup/SetUsernameViewModel.js");
/* harmony import */ var _view_models_signup_RecoveryKeyIntroViewModel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../view_models/signup/RecoveryKeyIntroViewModel */ "./js/view_models/signup/RecoveryKeyIntroViewModel.js");
/* harmony import */ var _view_models_signup_RecoveryKeyCreationViewModel__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../view_models/signup/RecoveryKeyCreationViewModel */ "./js/view_models/signup/RecoveryKeyCreationViewModel.js");
/* harmony import */ var _managers_WalletManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../managers/WalletManager */ "./js/managers/WalletManager.js");
/* harmony import */ var _view_models_signup_RecoveryKeyConfirmationViewModel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../view_models/signup/RecoveryKeyConfirmationViewModel */ "./js/view_models/signup/RecoveryKeyConfirmationViewModel.js");
/* harmony import */ var _view_models_signup_AwaitingIdViewModel__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../view_models/signup/AwaitingIdViewModel */ "./js/view_models/signup/AwaitingIdViewModel.js");
/* harmony import */ var _view_models_signup_RecoveryKeyFaqViewModel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../view_models/signup/RecoveryKeyFaqViewModel */ "./js/view_models/signup/RecoveryKeyFaqViewModel.js");
/* harmony import */ var _view_models_signup_SignupSuccessViewModel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../view_models/signup/SignupSuccessViewModel */ "./js/view_models/signup/SignupSuccessViewModel.js");
/* harmony import */ var _managers_AuthManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../managers/AuthManager */ "./js/managers/AuthManager.js");
/* harmony import */ var _view_models_signup_Orientation1ViewModel__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../view_models/signup/Orientation1ViewModel */ "./js/view_models/signup/Orientation1ViewModel.js");
/* harmony import */ var _view_models_signup_Orientation2ViewModel__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../view_models/signup/Orientation2ViewModel */ "./js/view_models/signup/Orientation2ViewModel.js");
/* harmony import */ var _view_models_signup_Orientation3ViewModel__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../view_models/signup/Orientation3ViewModel */ "./js/view_models/signup/Orientation3ViewModel.js");




















class AuthController extends _framework_AbstractController__WEBPACK_IMPORTED_MODULE_0__.AbstractController {

  /**
   *
   * @param {GameState} gameState
   * @param {GuildAPI} guildAPI
   * @param {WalletManager} walletManager
   * @param {AuthManager} authManager
   */
  constructor(
    gameState,
    guildAPI,
    walletManager,
    authManager
  ) {
    super('Auth', gameState);
    this.guildAPI = guildAPI;
    this.walletManager = walletManager;
    this.authManager  = authManager;
    this.mnemonic = null;
  }

  index() {
    const viewModel = new _view_models_IndexViewModel__WEBPACK_IMPORTED_MODULE_1__.IndexView();
    viewModel.render();
  }

  signupConnectingToCorporate1() {
    const viewModel = new _view_models_signup_ConnectingToCorp1ViewModel__WEBPACK_IMPORTED_MODULE_2__.ConnectingToCorp1ViewModel();
    viewModel.render();
  }

  signupConnectingToCorporate2() {
    const viewModel = new _view_models_signup_ConnectingToCorp2ViewModel__WEBPACK_IMPORTED_MODULE_3__.ConnectingToCorp2ViewModel();
    viewModel.render();
  }

  signupIncomingCall1() {
    const viewModel = new _view_models_signup_IncomingCall1ViewModel__WEBPACK_IMPORTED_MODULE_4__.IncomingCall1ViewModel();
    viewModel.render();
  }

  signupIncomingCall2() {
    const viewModel = new _view_models_signup_IncomingCall2ViewModel__WEBPACK_IMPORTED_MODULE_5__.IncomingCall2ViewModel();
    viewModel.render();
  }

  signupIncomingCall3() {
    const viewModel = new _view_models_signup_IncomingCall3ViewModel__WEBPACK_IMPORTED_MODULE_6__.IncomingCall3ViewModel();
    viewModel.render();
  }

  signupSetUsername() {
    const viewModel = new _view_models_signup_SetUsernameViewModel__WEBPACK_IMPORTED_MODULE_7__.SetUsernameViewModel(this.gameState);
    viewModel.render();
  }

  signupRecoveryKeyIntro() {
    const viewModel = new _view_models_signup_RecoveryKeyIntroViewModel__WEBPACK_IMPORTED_MODULE_8__.RecoveryKeyIntroViewModel();
    viewModel.render();
  }

  signupRecoveryKeyCreation() {
    if (this.mnemonic === null) {
      this.mnemonic = this.walletManager.createMnemonic();
    }
    const viewModel = new _view_models_signup_RecoveryKeyCreationViewModel__WEBPACK_IMPORTED_MODULE_9__.RecoveryKeyCreationViewModel(this.mnemonic);
    viewModel.render();
  }

  signupRecoveryKeyConfirmation() {
    const viewModel = new _view_models_signup_RecoveryKeyConfirmationViewModel__WEBPACK_IMPORTED_MODULE_11__.RecoveryKeyConfirmationViewModel(
      this.mnemonic,
      this.authManager
    );
    viewModel.render();
  }

  /**
   * @param {object} options
   */
  signupRecoveryKeyConfirmFail(options) {
    const viewModel = new _view_models_signup_RecoveryKeyCreationViewModel__WEBPACK_IMPORTED_MODULE_9__.RecoveryKeyCreationViewModel(this.mnemonic);
    viewModel.render(options.view);
  }

  /**
   * @param {object} options
   */
  signupRecoveryKeyFaq(options) {
    const viewModel = new _view_models_signup_RecoveryKeyFaqViewModel__WEBPACK_IMPORTED_MODULE_13__.RecoveryKeyFaqViewModel(options.backButtonHandler);
    viewModel.render();
  }

  signupSuccess() {
    const viewModel = new _view_models_signup_SignupSuccessViewModel__WEBPACK_IMPORTED_MODULE_14__.SignupSuccessViewModel();
    viewModel.render();
  }

  signupAwaitingId() {
    const viewModel = new _view_models_signup_AwaitingIdViewModel__WEBPACK_IMPORTED_MODULE_12__.AwaitingIdViewModel();
    viewModel.render();
  }

  orientation1() {
    const viewModel = new _view_models_signup_Orientation1ViewModel__WEBPACK_IMPORTED_MODULE_16__.Orientation1ViewModel();
    viewModel.render();
  }

  orientation2() {
    const viewModel = new _view_models_signup_Orientation2ViewModel__WEBPACK_IMPORTED_MODULE_17__.Orientation2ViewModel();
    viewModel.render();
  }

  orientation3() {
    const viewModel = new _view_models_signup_Orientation3ViewModel__WEBPACK_IMPORTED_MODULE_18__.Orientation3ViewModel();
    viewModel.render();
  }
}

/***/ }),

/***/ "./js/dtos/LoginRequestDTO.js":
/*!************************************!*\
  !*** ./js/dtos/LoginRequestDTO.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LoginRequestDTO: () => (/* binding */ LoginRequestDTO)
/* harmony export */ });
class LoginRequestDTO {
  constructor() {
    this.address = null;
    this.signature = null;
    this.pubkey = null;
    this.guild_id = null;
    this.unix_timestamp = null;
  }
}

/***/ }),

/***/ "./js/dtos/NavItemDTO.js":
/*!*******************************!*\
  !*** ./js/dtos/NavItemDTO.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NavItemDTO: () => (/* binding */ NavItemDTO)
/* harmony export */ });
class NavItemDTO {
  constructor(id, label, actionHandler = () => {}) {
    this.id = id;
    this.label = label;
    this.actionHandler = actionHandler;
  }
}

/***/ }),

/***/ "./js/dtos/SignupRequestDTO.js":
/*!*************************************!*\
  !*** ./js/dtos/SignupRequestDTO.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignupRequestDTO: () => (/* binding */ SignupRequestDTO)
/* harmony export */ });
class SignupRequestDTO {
  constructor() {
      this.primary_address = null;
      this.signature = null;
      this.pubkey = null;
      this.guild_id = null;
      this.username = null;
      this.pfp = null;
  }
}

/***/ }),

/***/ "./js/errors/GuildAPIError.js":
/*!************************************!*\
  !*** ./js/errors/GuildAPIError.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GuildAPIError: () => (/* binding */ GuildAPIError)
/* harmony export */ });
class GuildAPIError extends Error {}

/***/ }),

/***/ "./js/factories/GuildAPIResponseFactory.js":
/*!*************************************************!*\
  !*** ./js/factories/GuildAPIResponseFactory.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GuildAPIResponseFactory: () => (/* binding */ GuildAPIResponseFactory)
/* harmony export */ });
/* harmony import */ var _api_GuildAPIResponse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/GuildAPIResponse */ "./js/api/GuildAPIResponse.js");
/* harmony import */ var _errors_GuildAPIError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/GuildAPIError */ "./js/errors/GuildAPIError.js");



class GuildAPIResponseFactory {
  make(jsonResponse) {
    if (!jsonResponse.hasOwnProperty('success')
      || typeof jsonResponse.success !== 'boolean'
      || !jsonResponse.hasOwnProperty('errors')
      || !Array.isArray(jsonResponse.errors)
      || !jsonResponse.hasOwnProperty('data')
    ) {
      throw new _errors_GuildAPIError__WEBPACK_IMPORTED_MODULE_1__.GuildAPIError('Invalid response from server');
    }

    return new _api_GuildAPIResponse__WEBPACK_IMPORTED_MODULE_0__.GuildAPIResponse(
      jsonResponse.success,
      jsonResponse.errors,
      jsonResponse.data
    );
  }
}

/***/ }),

/***/ "./js/factories/GuildFactory.js":
/*!**************************************!*\
  !*** ./js/factories/GuildFactory.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GuildFactory: () => (/* binding */ GuildFactory)
/* harmony export */ });
/* harmony import */ var _models_Guild__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Guild */ "./js/models/Guild.js");


class GuildFactory {
  make(obj) {
    const guild = new _models_Guild__WEBPACK_IMPORTED_MODULE_0__.Guild();
    Object.assign(guild, obj);
    return guild;
  }
}

/***/ }),

/***/ "./js/factories/PlayerFactory.js":
/*!***************************************!*\
  !*** ./js/factories/PlayerFactory.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PlayerFactory: () => (/* binding */ PlayerFactory)
/* harmony export */ });
/* harmony import */ var _models_Player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/Player */ "./js/models/Player.js");


class PlayerFactory {
  make(obj) {
    const player = new _models_Player__WEBPACK_IMPORTED_MODULE_0__.Player();
    Object.assign(player, obj);
    return player;
  }
}

/***/ }),

/***/ "./js/framework/AbstractController.js":
/*!********************************************!*\
  !*** ./js/framework/AbstractController.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractController: () => (/* binding */ AbstractController)
/* harmony export */ });
class AbstractController {
  /**
   * @param {string} name
   * @param {GameState} gameState
   */
  constructor(name, gameState) {
    this.name = name;
    this.gameState = gameState;
  }
}

/***/ }),

/***/ "./js/framework/AbstractGrassListener.js":
/*!***********************************************!*\
  !*** ./js/framework/AbstractGrassListener.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractGrassListener: () => (/* binding */ AbstractGrassListener)
/* harmony export */ });
/* harmony import */ var _NotImplementedError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NotImplementedError */ "./js/framework/NotImplementedError.js");


class AbstractGrassListener {

  /**
   * @param {string} name
   */
  constructor(name) {
    this.name = name;
  }

  handler(messageData) {
    throw new _NotImplementedError__WEBPACK_IMPORTED_MODULE_0__.NotImplementedError();
  }

  shouldUnregister() {
    return false;
  }
}

/***/ }),

/***/ "./js/framework/AbstractViewModel.js":
/*!*******************************************!*\
  !*** ./js/framework/AbstractViewModel.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractViewModel: () => (/* binding */ AbstractViewModel)
/* harmony export */ });
/* harmony import */ var _NotImplementedError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NotImplementedError */ "./js/framework/NotImplementedError.js");


class AbstractViewModel {
  render() {
    throw new _NotImplementedError__WEBPACK_IMPORTED_MODULE_0__.NotImplementedError();
  }
}


/***/ }),

/***/ "./js/framework/GrassError.js":
/*!************************************!*\
  !*** ./js/framework/GrassError.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GrassError: () => (/* binding */ GrassError)
/* harmony export */ });
class GrassError extends Error {}

/***/ }),

/***/ "./js/framework/GrassManager.js":
/*!**************************************!*\
  !*** ./js/framework/GrassManager.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GrassManager: () => (/* binding */ GrassManager)
/* harmony export */ });
/* harmony import */ var _nats_io_nats_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @nats-io/nats-core */ "./node_modules/@nats-io/nats-core/lib/mod.js");
/* harmony import */ var _GrassError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GrassError */ "./js/framework/GrassError.js");



/**
 * Guild Rapid Alert System Stream
 */
class GrassManager {

  /**
   * @param {string} grassServerUrl
   * @param {string} subject
   */
  constructor(grassServerUrl, subject) {
    this.grassServerUrl = grassServerUrl;
    this.subject = subject;
    this.listeners = new Map();
  }

  /**
   * @param {MsgImpl} message
   * @return {object}
   */
  getMessageData(message) {
    return message.json();
  }

  /**
   * @param {object} messageData
   * @return {boolean}
   */
  shouldIgnoreMessage(messageData) {
    return !messageData.hasOwnProperty('subject')
      || !messageData.hasOwnProperty('category');
  }

  /**
   * @param {AbstractGrassListener} listener
   */
  registerListener(listener) {
    this.listeners.set(listener.name, listener);
  }

  /**
   * @param {string} name
   */
  unregisterListener(name) {
    this.listeners.delete(name);
  }

  init() {
    _nats_io_nats_core__WEBPACK_IMPORTED_MODULE_0__.wsconnect({
      servers: this.grassServerUrl,
    }).then((nc) => {
      const subscription = nc.subscribe(this.subject);
      (async function () {

        for await (const message of subscription) {

          const messageData = this.getMessageData(message);

          if (this.shouldIgnoreMessage(messageData)) {
            continue;
          }

          this.listeners.forEach((listener) => {
            listener.handler(messageData);

            if (listener.shouldUnregister()) {
              this.unregisterListener(listener.name);
            }
          });

        }

        throw new _GrassError__WEBPACK_IMPORTED_MODULE_1__.GrassError("GRASS subscription closed unexpectedly.");

      }.bind(this))();
    });
  }
}

/***/ }),

/***/ "./js/framework/JsonAjaxer.js":
/*!************************************!*\
  !*** ./js/framework/JsonAjaxer.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JsonAjaxer: () => (/* binding */ JsonAjaxer)
/* harmony export */ });
/**
 * Encapsulate and abstract HTTP request methods.
 */
class JsonAjaxer {
  async get (url) {
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow'
    });
    return response.json();
  }

  async post (url, data) {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    return response.json();
  }
}


/***/ }),

/***/ "./js/framework/MenuPage.js":
/*!**********************************!*\
  !*** ./js/framework/MenuPage.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MenuPage: () => (/* binding */ MenuPage)
/* harmony export */ });
/* harmony import */ var _MenuPageRouter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MenuPageRouter */ "./js/framework/MenuPageRouter.js");
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _sui_SUI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sui/SUI */ "./js/sui/SUI.js");




class MenuPage {

  /* Element IDs Start */

  static pageLayoutId = 'menu-page-layout';

  static navId = 'menu-page-nav';

  static navItemsId = 'menu-page-nav-items';

  static closeBtnId = 'menu-page-nav-close';

  static bodyId = 'menu-page-body-content';

  static dialoguePanelId = 'menu-page-dialogue';

  static dialogueIndicatorId = 'menu-page-dialogue-indicator';

  static dialogueIndicatorContentId = 'menu-page-dialogue-indicator-content';

  static dialogueScreenId = 'menu-page-dialogue-screen';

  static dialogueScreenContentId = 'menu-page-dialogue-screen-content';

  static dialogueBtnChunkBId = 'menu-page-dialogue-btn-chunk-b';

  static dialogueBtnAId = 'menu-page-dialogue-btn-a';

  static dialogueBtnBId = 'menu-page-dialogue-btn-b';

  /* Element IDs End */

  static router = new _MenuPageRouter__WEBPACK_IMPORTED_MODULE_0__.MenuPageRouter();

  static sui = new _sui_SUI__WEBPACK_IMPORTED_MODULE_2__.SUI();

  static dialogueBtnAHandler = () => {};

  static dialogueBtnBHandler = () => {};

  /**
   * @param {NavItemDTO[]}items
   * @param {string|null} activeId the ID of the active nav item
   */
  static setNavItems(items, activeId = null) {

    let itemsHtml = '';

    for (let i = 0; i < items.length; i++) {
      const activeClass= (activeId === items[i].id || (!activeId && i === 0)) ? 'sui-mod-active' : '';

      itemsHtml += `<a 
        id="${items[i].id}"
        class="sui-screen-nav-item ${activeClass}"
        href="javascript:void(0)"
      >${items[i].label}</a>`;
    }

    document.getElementById(MenuPage.navItemsId).innerHTML = itemsHtml;

    for (let i = 0; i < items.length; i++) {
      document.getElementById(items[i].id).addEventListener('click', items[i].actionHandler);
    }
  }

  static disableCloseBtn() {
    document.getElementById(MenuPage.closeBtnId).classList.add('hidden');
  }

  static enableCloseBtn() {
    document.getElementById(MenuPage.closeBtnId).classList.remove('hidden');
  }

  static hideAndClearNav() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__.NavItemDTO(
        'nav-item-structs',
        'Structs'
      )
    ];
    MenuPage.setNavItems(navItems, 'nav-item-structs');
    document.getElementById(MenuPage.navId).classList.add('hidden');
  }

  static showNav() {
    document.getElementById(MenuPage.navId).classList.remove('hidden');
  }

  static setBodyContent(content) {
    document.getElementById(MenuPage.bodyId).innerHTML = content;
  }

  static setDialogueIndicatorContent(content, useFadeAnimation = false) {
    const dialogueIndicatorContent = document.getElementById(MenuPage.dialogueIndicatorContentId);
    dialogueIndicatorContent.innerHTML = content;

    if (useFadeAnimation) {
      MenuPage.applyFadeInFadeOutAnimation(dialogueIndicatorContent);
    }
  }

  static applyFadeInFadeOutAnimation(element) {
    element.classList.add('fade-in-fade-out');
    element.addEventListener('animationend', () => {
      element.classList.remove('fade-in-fade-out');
    });
  }

  static setDialogueScreenContent(content, useFadeAnimation = false) {
    const dialogueScreenContent = document.getElementById(MenuPage.dialogueScreenContentId);
    dialogueScreenContent.innerHTML = content;

    if (useFadeAnimation) {
      MenuPage.applyFadeInFadeOutAnimation(dialogueScreenContent);
    }
  }

  static setDialogueScreenTheme(theme) {
    const dialogueScreen = document.getElementById(MenuPage.dialogueScreenId);
    dialogueScreen.classList.remove(...dialogueScreen.classList);
    dialogueScreen.classList.add('sui-screen-dialogue');
    dialogueScreen.classList.add(theme);
  }

  static setDialogueScreenThemeToNeutral() {
    MenuPage.setDialogueScreenTheme('sui-theme-neutral');
  }

  static setDialogueScreenThemeToEnemy() {
    MenuPage.setDialogueScreenTheme('sui-theme-enemy');
  }

  static enableDialogueBtnA() {
    document.getElementById(MenuPage.dialogueBtnAId).classList.remove('hidden');
  }

  static disableDialogueBtnA() {
    document.getElementById(MenuPage.dialogueBtnAId).classList.add('hidden');
  }

  static enableDialogueBtnB() {
    document.getElementById(MenuPage.dialogueBtnChunkBId).classList.remove('hidden');
  }

  static disableDialogueBtnB() {
    document.getElementById(MenuPage.dialogueBtnChunkBId).classList.add('hidden');
  }

  static clearDialogueScreen() {
    document.getElementById(MenuPage.dialogueScreenContentId).innerHTML = '';
  }

  static clearDialogueBtnAHandler() {
    MenuPage.dialogueBtnAHandler = () => {};
  }

  static clearDialogueBtnBHandler() {
    MenuPage.dialogueBtnBHandler = () => {};
  }

  static hideAndClearDialoguePanel() {
    document.getElementById(MenuPage.dialoguePanelId).classList.add('hidden');
    MenuPage.clearDialogueScreen();
    MenuPage.setDialogueScreenThemeToNeutral();
    MenuPage.clearDialogueBtnAHandler();
    MenuPage.clearDialogueBtnBHandler();
  }

  static showDialoguePanel() {
    document.getElementById(MenuPage.dialoguePanelId).classList.remove('hidden');
  }

  static closeBtnHandler() {
    document.getElementById(MenuPage.pageLayoutId).classList.add('hidden');
  }

  static initCloseBtnListener() {
    document.getElementById(MenuPage.closeBtnId).addEventListener('click', MenuPage.closeBtnHandler);
  }

  static initDialogueBtnAListener() {
    const dialogueBtnA = document.getElementById(MenuPage.dialogueBtnAId);
    dialogueBtnA.addEventListener('click', () => {
      MenuPage.dialogueBtnAHandler();
    });
  }

  static initDialogueBtnBListener() {
    const dialogueBtnB = document.getElementById(MenuPage.dialogueBtnBId);
    dialogueBtnB.addEventListener('click', () => {
      MenuPage.dialogueBtnBHandler();
    });
  }

  static initListeners() {
    MenuPage.initCloseBtnListener();
    MenuPage.initDialogueBtnAListener();
    MenuPage.initDialogueBtnBListener();
  }
}


/***/ }),

/***/ "./js/framework/MenuPageRouter.js":
/*!****************************************!*\
  !*** ./js/framework/MenuPageRouter.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MenuPageRouter: () => (/* binding */ MenuPageRouter)
/* harmony export */ });
class MenuPageRouter {
  constructor() {
    this.controllers = new Map();
  }

  registerController(controller) {
    this.controllers.set(controller.name, controller);
  }

  goto(controllerName, pageName, options = {}) {
    this.controllers.get(controllerName)[pageName](options);
  }
}

/***/ }),

/***/ "./js/framework/NotImplementedError.js":
/*!*********************************************!*\
  !*** ./js/framework/NotImplementedError.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotImplementedError: () => (/* binding */ NotImplementedError)
/* harmony export */ });
class NotImplementedError extends Error {
  constructor(message= 'Function not implemented') {
    super(message);
    this.name = "NotImplementedError";
  }
}


/***/ }),

/***/ "./js/grass_listeners/BlockListener.js":
/*!*********************************************!*\
  !*** ./js/grass_listeners/BlockListener.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BlockListener: () => (/* binding */ BlockListener)
/* harmony export */ });
/* harmony import */ var _framework_AbstractGrassListener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../framework/AbstractGrassListener */ "./js/framework/AbstractGrassListener.js");


class BlockListener extends _framework_AbstractGrassListener__WEBPACK_IMPORTED_MODULE_0__.AbstractGrassListener {

  /**
   * @param {GameState} gameState
   */
  constructor(gameState) {
    super('BLOCK');
    this.gameState = gameState;
  }

  handler(messageData) {
    if (
      messageData.category === 'block'
      && messageData.subject === 'structs.consensus'
    ) {
      this.gameState.setCurrentBlockHeight(messageData.height);
    }
  }
}


/***/ }),

/***/ "./js/grass_listeners/LastActionListener.js":
/*!**************************************************!*\
  !*** ./js/grass_listeners/LastActionListener.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LastActionListener: () => (/* binding */ LastActionListener)
/* harmony export */ });
/* harmony import */ var _framework_AbstractGrassListener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../framework/AbstractGrassListener */ "./js/framework/AbstractGrassListener.js");


class LastActionListener extends _framework_AbstractGrassListener__WEBPACK_IMPORTED_MODULE_0__.AbstractGrassListener {
  /**
   * @param {GameState} gameState
   */
  constructor(gameState) {
    super('LAST_ACTION');
    this.gameState = gameState;
  }

  handler(messageData) {
    if (
      messageData.category === 'lastAction'
      && messageData.subject === `structs.grid.player.${this.gameState.thisPlayerId}`
    ) {
      this.gameState.setLastActionBlockHeight(messageData.height);
    }
  }
}

/***/ }),

/***/ "./js/grass_listeners/PlayerCreatedListener.js":
/*!*****************************************************!*\
  !*** ./js/grass_listeners/PlayerCreatedListener.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PlayerCreatedListener: () => (/* binding */ PlayerCreatedListener)
/* harmony export */ });
/* harmony import */ var _framework_AbstractGrassListener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../framework/AbstractGrassListener */ "./js/framework/AbstractGrassListener.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../framework/MenuPage */ "./js/framework/MenuPage.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");



class PlayerCreatedListener extends _framework_AbstractGrassListener__WEBPACK_IMPORTED_MODULE_0__.AbstractGrassListener {

  constructor() {
    super('PLAYER_CREATED');
    this.guildId = null;
    this.playerAddress = null;
    this.authManager = null;
    this.guildAPI = null;
    this.gameState = null;
  }

  handler(messageData) {
    if (
      messageData.category === 'player_consensus'
      && messageData.subject.startsWith(`structs.player.${this.guildId}`)
      && messageData.primary_address === this.playerAddress
    ) {
      console.log(messageData.id);

      this.gameState.thisPlayerId = messageData.id;

      this.authManager.login();

      this.guildAPI.getPlayer(messageData.id).then(function (player) {
        this.gameState.thisPlayer = player;
      }.bind(this));

      this.guildAPI.getPlayerLastActionBlockHeight(messageData.id).then(function (height) {
        this.gameState.setLastActionBlockHeight(height);
      }.bind(this));

      this.shouldUnregister = () => true;

      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'orientation1');
    }
  }
}

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _controllers_AuthController__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controllers/AuthController */ "./js/controllers/AuthController.js");
/* harmony import */ var _models_GameState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models/GameState */ "./js/models/GameState.js");
/* harmony import */ var _api_GuildAPI__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/GuildAPI */ "./js/api/GuildAPI.js");
/* harmony import */ var _managers_WalletManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./managers/WalletManager */ "./js/managers/WalletManager.js");
/* harmony import */ var _managers_AuthManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./managers/AuthManager */ "./js/managers/AuthManager.js");
/* harmony import */ var _framework_GrassManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./framework/GrassManager */ "./js/framework/GrassManager.js");
/* harmony import */ var _grass_listeners_BlockListener__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./grass_listeners/BlockListener */ "./js/grass_listeners/BlockListener.js");









const gameState = new _models_GameState__WEBPACK_IMPORTED_MODULE_2__.GameState();
__webpack_require__.g.gameState = gameState;

const guildAPI = new _api_GuildAPI__WEBPACK_IMPORTED_MODULE_3__.GuildAPI();

const walletManager = new _managers_WalletManager__WEBPACK_IMPORTED_MODULE_4__.WalletManager();
const grassManager = new _framework_GrassManager__WEBPACK_IMPORTED_MODULE_6__.GrassManager(
  "ws://localhost:1443",
  "structs.>"
);
const authManager = new _managers_AuthManager__WEBPACK_IMPORTED_MODULE_5__.AuthManager(
  gameState,
  guildAPI,
  walletManager,
  grassManager
);

const blockListener = new _grass_listeners_BlockListener__WEBPACK_IMPORTED_MODULE_7__.BlockListener(gameState);

const authController = new _controllers_AuthController__WEBPACK_IMPORTED_MODULE_1__.AuthController(
  gameState,
  guildAPI,
  walletManager,
  authManager
);

_framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.router.registerController(authController);
_framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.initListeners();

gameState.thisGuild = await guildAPI.getThisGuild();

grassManager.registerListener(blockListener);
grassManager.init();

_framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.router.goto('Auth', 'index');

// MenuPage.router.goto('Auth', 'orientation1');

__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } }, 1);

/***/ }),

/***/ "./js/managers/AuthManager.js":
/*!************************************!*\
  !*** ./js/managers/AuthManager.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthManager: () => (/* binding */ AuthManager)
/* harmony export */ });
/* harmony import */ var _grass_listeners_PlayerCreatedListener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../grass_listeners/PlayerCreatedListener */ "./js/grass_listeners/PlayerCreatedListener.js");
/* harmony import */ var _dtos_LoginRequestDTO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dtos/LoginRequestDTO */ "./js/dtos/LoginRequestDTO.js");
/* harmony import */ var _grass_listeners_LastActionListener__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../grass_listeners/LastActionListener */ "./js/grass_listeners/LastActionListener.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");




class AuthManager {

  /**
   * @param {GameState} gameState
   * @param {GuildAPI} guildAPI
   * @param {WalletManager} walletManager
   * @param {GrassManager} grassManager
   */
  constructor(
    gameState,
    guildAPI,
    walletManager,
    grassManager
  ) {
    this.gameState = gameState;
    this.guildAPI = guildAPI;
    this.walletManager = walletManager;
    this.grassManager = grassManager;
  }

  /**
   * @param {string} mnemonic
   * @return {Promise<boolean>}
   */
  async signup(mnemonic) {
    this.gameState.wallet = await this.walletManager.createWallet(mnemonic);
    const accounts = await this.gameState.wallet.getAccountsWithPrivkeys();
    this.gameState.signingAccount = accounts[0];
    this.gameState.pubkey = this.walletManager.bytesToHex(this.gameState.signingAccount.pubkey)

    this.gameState.signupRequest.pubkey = this.gameState.pubkey;
    this.gameState.signupRequest.primary_address = this.gameState.signingAccount.address;
    this.gameState.signupRequest.guild_id = this.gameState.thisGuild.id;

    const message = this.guildAPI.buildGuildMembershipJoinProxyMessage(
      this.gameState.signupRequest.guild_id,
      this.gameState.signupRequest.primary_address,
      0
    );

    this.gameState.signupRequest.signature = await this.walletManager.createSignatureForProxyMessage(
      message,
      this.gameState.signingAccount.privkey
    );

    const playerCreatedListener = new _grass_listeners_PlayerCreatedListener__WEBPACK_IMPORTED_MODULE_0__.PlayerCreatedListener();
    playerCreatedListener.guildId = this.gameState.signupRequest.guild_id;
    playerCreatedListener.playerAddress = this.gameState.signupRequest.primary_address;
    playerCreatedListener.authManager = this;
    playerCreatedListener.guildAPI = this.guildAPI;
    playerCreatedListener.gameState = this.gameState;

    this.grassManager.registerListener(playerCreatedListener);

    const response = await this.guildAPI.signup(this.gameState.signupRequest);

    return response.success;
  }

  async login() {
    const timestamp = await this.guildAPI.getTimestamp();

    const request = new _dtos_LoginRequestDTO__WEBPACK_IMPORTED_MODULE_1__.LoginRequestDTO();
    request.address = this.gameState.signingAccount.address;
    request.pubkey = this.gameState.pubkey;
    request.guild_id = this.gameState.thisGuild.id;
    request.unix_timestamp = timestamp;

    const message = this.guildAPI.buildLoginMessage(
      request.guild_id,
      request.address,
      timestamp
    );

    request.signature = await this.walletManager.createSignatureForProxyMessage(
      message,
      this.gameState.signingAccount.privkey
    );

    const response = await this.guildAPI.login(request);

    console.log('Login response status:', response);

    if (response.success) {
      this.grassManager.registerListener(new _grass_listeners_LastActionListener__WEBPACK_IMPORTED_MODULE_2__.LastActionListener(this.gameState));
    }

    return response.success;
  }

}

/***/ }),

/***/ "./js/managers/WalletManager.js":
/*!**************************************!*\
  !*** ./js/managers/WalletManager.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WalletManager: () => (/* binding */ WalletManager)
/* harmony export */ });
/* harmony import */ var _cosmjs_proto_signing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cosmjs/proto-signing */ "./node_modules/@cosmjs/proto-signing/build/index.js");
/* harmony import */ var _cosmjs_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");



class WalletManager {

  constructor() {
    this.textEncoder = new TextEncoder();
  }

  /**
   * @return {string}
   */
  createMnemonic() {
    const getNewRandom = _cosmjs_crypto__WEBPACK_IMPORTED_MODULE_1__.Random.getBytes(16);
    return _cosmjs_crypto__WEBPACK_IMPORTED_MODULE_1__.Bip39.encode(getNewRandom).toString();
  }

  /**
   * @param {string} mnemonic
   * @return {Promise<DirectSecp256k1HdWallet>}
   */
  async createWallet(mnemonic) {
    return await _cosmjs_proto_signing__WEBPACK_IMPORTED_MODULE_0__.DirectSecp256k1HdWallet.fromMnemonic(
      mnemonic,
      {
        prefix: "structs"
      }
    );
  }

  /**
   * @param {string} message
   * @param {Uint8Array} privateKey
   * @return {Promise<string>}
   */
  async createSignatureForProxyMessage(message, privateKey) {
    const encodedMessage = this.textEncoder.encode(message);
    const digest = (0,_cosmjs_crypto__WEBPACK_IMPORTED_MODULE_1__.sha256)(encodedMessage);
    const rawSignature = await _cosmjs_crypto__WEBPACK_IMPORTED_MODULE_1__.Secp256k1.createSignature(digest, privateKey);
    return this.bytesToHex(rawSignature.toFixedLength());
  }

  /**
   * @param byteArray
   * @return {string}
   */
  bytesToHex(byteArray) {
    return Array.from(byteArray, function(byte) {
      return ('0' + (byte & 0xFF).toString(16)).slice(-2);
    }).join('');
  }
}

/***/ }),

/***/ "./js/models/GameState.js":
/*!********************************!*\
  !*** ./js/models/GameState.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GameState: () => (/* binding */ GameState)
/* harmony export */ });
/* harmony import */ var _dtos_SignupRequestDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dtos/SignupRequestDTO */ "./js/dtos/SignupRequestDTO.js");
/* harmony import */ var _util_ChargeCalculator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/ChargeCalculator */ "./js/util/ChargeCalculator.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");



class GameState {

  constructor() {
    this.chargeCalculator = new _util_ChargeCalculator__WEBPACK_IMPORTED_MODULE_1__.ChargeCalculator();
    this.signupRequest = new _dtos_SignupRequestDTO__WEBPACK_IMPORTED_MODULE_0__.SignupRequestDTO();

    this.server = null;
    this.fee = {
      amount: [
        {
          denom: "ualpha",
          amount: "0",
        },
      ],
      gas: "180000",
    };

    this.thisGuild = null;
    this.wallet = null;
    this.signingAccount = null;
    this.pubkey = null;
    this.thisPlayerId = null;
    this.thisPlayer = null;

    this.currentBlockHeight = 0;
    this.lastActionBlockHeight = 0;
    this.chargeLevel = 0;
  }

  /**
   * @param {number} height
   */
  setCurrentBlockHeight(height) {
    this.currentBlockHeight = height;
    this.chargeLevel = this.chargeCalculator.calc(this.currentBlockHeight, this.lastActionBlockHeight);
    console.log(`(Block Update) Charge Level: ${this.chargeLevel}`);
  }

  /**
   * @param {number} height
   */
  setLastActionBlockHeight(height) {
    this.lastActionBlockHeight = height;
    this.chargeLevel = this.chargeCalculator.calc(this.currentBlockHeight, this.lastActionBlockHeight);
    console.log(`(Last Action Update) Charge Level: ${this.chargeLevel}`);
  }
}


/***/ }),

/***/ "./js/models/Guild.js":
/*!****************************!*\
  !*** ./js/models/Guild.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Guild: () => (/* binding */ Guild)
/* harmony export */ });
class Guild {
  constructor() {
    this.id = null;
    this.endpoint = null;
    this.join_infusion_minimum = null;
    this.join_infusion_minimum_bypass_by_request = null;
    this.join_infusion_minimum_bypass_by_invite = null;
    this.primary_reactor_id = null;
    this.entry_substation_id = null;
    this.creator = null;
    this.owner = null;
    this.name = null;
    this.description = null;
    this.tag = null;
    this.logo = null;
    this.socials = null;
    this.website = null;
    this.this_infrastructure = true;
    this.status = null;
  }
}

/***/ }),

/***/ "./js/models/Player.js":
/*!*****************************!*\
  !*** ./js/models/Player.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Player: () => (/* binding */ Player)
/* harmony export */ });
class Player {
  constructor() {
    this.id = null;
    this.primary_address = null;
    this.guild_id = null;
    this.substation_id = null;
    this.planet_id = null;
    this.fleet_id = null;
    this.username = null;
    this.pfp = null;
    this.guild_name = null;
    this.tag = null;
    this.alpha = null;
    this.ore = null;
    this.load = null;
    this.structs_load = null;
    this.capacity = null;
    this.connection_capacity = null;
  }
}

/***/ }),

/***/ "./js/sui/SUI.js":
/*!***********************!*\
  !*** ./js/sui/SUI.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SUI: () => (/* binding */ SUI)
/* harmony export */ });
/* harmony import */ var _SUIInputStepper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SUIInputStepper.js */ "./js/sui/SUIInputStepper.js");
/* harmony import */ var _SUITooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SUITooltip.js */ "./js/sui/SUITooltip.js");



class SUI {

  constructor() {
    this.inputStepper = new _SUIInputStepper_js__WEBPACK_IMPORTED_MODULE_0__.SUIInputStepper();
    this.tooltip = new _SUITooltip_js__WEBPACK_IMPORTED_MODULE_1__.SUITooltip();

    this.autoInitClasses = [
      this.inputStepper,
      this.tooltip
    ];
  }

  /**
   * Auto initialize all SUI features
   */
  autoInitAll() {
    this.autoInitClasses.forEach(suiFeature => {
      suiFeature.autoInitAll();
    });
  }

}


/***/ }),

/***/ "./js/sui/SUIFeature.js":
/*!******************************!*\
  !*** ./js/sui/SUIFeature.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SUIFeature: () => (/* binding */ SUIFeature)
/* harmony export */ });
/* harmony import */ var _SUINotImplementedError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SUINotImplementedError.js */ "./js/sui/SUINotImplementedError.js");


class SUIFeature {

  init(featureElement) {
    throw new _SUINotImplementedError_js__WEBPACK_IMPORTED_MODULE_0__.SUINotImplementedError(`init() not implemented for ${featureElement.id}`);
  }

  /**
   * Auto initialize feature
   */
  autoInitAll() {
    throw new _SUINotImplementedError_js__WEBPACK_IMPORTED_MODULE_0__.SUINotImplementedError();
  }

}


/***/ }),

/***/ "./js/sui/SUIInputStepper.js":
/*!***********************************!*\
  !*** ./js/sui/SUIInputStepper.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SUIInputStepper: () => (/* binding */ SUIInputStepper)
/* harmony export */ });
/* harmony import */ var _SUIFeature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SUIFeature.js */ "./js/sui/SUIFeature.js");


class SUIInputStepper extends _SUIFeature_js__WEBPACK_IMPORTED_MODULE_0__.SUIFeature {

  /**
   * Ensure that the number is a number between the min or max value or the empty string.
   *
   * @param {string|number} value
   * @param {number} min
   * @param {number} max
   * @return {number|string}
   */
  filterNumberInput(value, min, max) {
    let cleanValue = `${value}`.replace(/^[^0-9]*$/, '');

    if (cleanValue === '') {
      return cleanValue;
    }

    cleanValue = parseInt(cleanValue);
    cleanValue = Math.max(cleanValue, min);
    cleanValue = Math.min(cleanValue, max);

    return cleanValue;
  }

  /**
   * Initialize all input steppers on the page.
   */
  autoInitAll() {
    let inputSteppers = document.querySelectorAll('.sui-input-stepper input[type=number]');

    if (inputSteppers.length === 0) {
      return;
    }

    inputSteppers.forEach(inputStepper => {
      const decreaseBtn = inputStepper.previousElementSibling;
      const increaseBtn = inputStepper.nextElementSibling;

      const enableDisableButtons = () => {
        decreaseBtn.disabled = inputStepper.disabled || (inputStepper.value <= inputStepper.min);
        increaseBtn.disabled = inputStepper.disabled || (inputStepper.value >= inputStepper.max);
      };

      decreaseBtn.addEventListener('click', function(event) {
        event.preventDefault();
        inputStepper.stepDown();
        enableDisableButtons();
      });

      increaseBtn.addEventListener('click', function(event) {
        event.preventDefault();
        inputStepper.stepUp();
        enableDisableButtons();
      });

      inputStepper.addEventListener('input', function() {
        inputStepper.value = this.filterNumberInput(inputStepper.value, inputStepper.min, inputStepper.max);
        enableDisableButtons();
      }.bind(this));

      enableDisableButtons();
    });
  }
}


/***/ }),

/***/ "./js/sui/SUINotImplementedError.js":
/*!******************************************!*\
  !*** ./js/sui/SUINotImplementedError.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SUINotImplementedError: () => (/* binding */ SUINotImplementedError)
/* harmony export */ });
class SUINotImplementedError extends Error {

  /**
   * @param {string} message
   */
  constructor(message= '') {
    super(message);
    this.name = "SUINotImplementedError";
    this.message = message ? message : 'Method not implemented';
  }
}


/***/ }),

/***/ "./js/sui/SUITooltip.js":
/*!******************************!*\
  !*** ./js/sui/SUITooltip.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SUITooltip: () => (/* binding */ SUITooltip)
/* harmony export */ });
/* harmony import */ var _SUIFeature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SUIFeature.js */ "./js/sui/SUIFeature.js");
/* harmony import */ var _SUIUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SUIUtil.js */ "./js/sui/SUIUtil.js");



class SUITooltip extends _SUIFeature_js__WEBPACK_IMPORTED_MODULE_0__.SUIFeature {

  /**
   * Used to track how long the mouse or touch screen is pressed.
   *
   * @type {number|null} a timeout ID
   */
  static pointerPressedTimer = null;

  constructor() {
    super();
    this.util = new _SUIUtil_js__WEBPACK_IMPORTED_MODULE_1__.SUIUtil();
  }

  /**
   * @param {HTMLElement} trigger
   * @return {HTMLDivElement}
   */
  buildTooltipHTML(trigger) {
    const div = document.createElement('div');
    div.id = `${trigger.id}-message`;
    div.classList.add('sui-tooltip');
    div.innerHTML = trigger.dataset.suiTooltip;
    return div;
  }

  /**
   * @param {HTMLElement} tooltipHtmlElement
   */
  clearPointerPressedTimer(tooltipHtmlElement) {
    tooltipHtmlElement.classList.remove('sui-mod-show');
    clearTimeout(SUITooltip.pointerPressedTimer);
  }

  /**
   * @param {HTMLElement} tooltipElm
   * @param {HTMLElement} tooltipTriggerElm
   */
  pointerPressed(tooltipElm, tooltipTriggerElm) {
    clearTimeout(SUITooltip.pointerPressedTimer);

    SUITooltip.pointerPressedTimer = setTimeout(function() {
      tooltipElm.classList.add('sui-mod-show');

      tooltipElm.style.position = 'absolute';
      this.util.horizontallyCenter(tooltipElm, tooltipTriggerElm);

      if (tooltipTriggerElm.dataset.suiModPlacement === 'bottom') {
        this.util.positionBelow(tooltipElm, tooltipTriggerElm);
      } else {
        this.util.positionAbove(tooltipElm, tooltipTriggerElm);
      }

    }.bind(this), 100);
  }

  init(tooltipTrigger) {
    const tooltipElm = this.buildTooltipHTML(tooltipTrigger);
    tooltipTrigger.parentElement.appendChild(tooltipElm);

    // To position the tooltip the parent also must have position defined.
    if (!tooltipTrigger.parentElement.style.position) {
      tooltipTrigger.parentElement.style.position = 'relative';
    }

    let pressedEvent = 'mousedown';
    let releasedEvent = 'mouseup';

    // Attach relevant pointer event listeners for mobile or desktop
    if(window.matchMedia("(pointer: coarse)").matches) {
      pressedEvent = 'touchstart';
      releasedEvent = 'touchend';

      // Press and hold on mobile also fires a contextmenu event which we need to block
      // because it can obscure the tooltip and also cause inadvertent actions.
      tooltipTrigger.addEventListener("contextmenu", (event) => {
        event.preventDefault();
      }, { passive: false });

    }

    tooltipTrigger.addEventListener(pressedEvent, function() {
      this.pointerPressed(tooltipElm, tooltipTrigger);
    }.bind(this), { passive: true });

    window.addEventListener(releasedEvent, function () {
      this.clearPointerPressedTimer(tooltipElm);
    }.bind(this), { passive: true });
  }

  /**
   * Initialize all tooltips on the page.
   */
  autoInitAll() {
    let tooltips = document.querySelectorAll('[data-sui-tooltip]');

    if (tooltips.length === 0) {
      return;
    }

    tooltips.forEach(tooltipTrigger => {
      this.init(tooltipTrigger);
    });
  }
}


/***/ }),

/***/ "./js/sui/SUIUtil.js":
/*!***************************!*\
  !*** ./js/sui/SUIUtil.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SUIUtil: () => (/* binding */ SUIUtil)
/* harmony export */ });
class SUIUtil {
  /**
   * @param {HTMLElement} dynamicElm
   * @param {HTMLElement} originElm
   */
  positionAbove(dynamicElm, originElm) {
    const originRect = originElm.getBoundingClientRect();

    // If dynamic element would end up offscreen, place it below
    if (
      originRect.top < dynamicElm.offsetHeight
      && (window.innerHeight - originRect.bottom) >= dynamicElm.offsetHeight
    ) {
      this.positionBelow(dynamicElm, originElm);
    } else {
      dynamicElm.style.top = `${originElm.offsetTop - dynamicElm.offsetHeight}px`;
    }
  }

  /**
   * @param {HTMLElement} dynamicElm
   * @param {HTMLElement} originElm
   */
  positionBelow(dynamicElm, originElm) {
    const originRect = originElm.getBoundingClientRect();

    // If dynamic element would end up offscreen, place it above
    if (
      (window.innerHeight - originRect.bottom) < dynamicElm.offsetHeight
      && originRect.top > dynamicElm.offsetHeight
    ) {
      this.positionAbove(dynamicElm, originElm);
    } else {
      dynamicElm.style.top = `${originElm.offsetTop + originElm.offsetHeight}px`;
    }
  }

  /**
   * @param {HTMLElement} dynamicElm
   * @param {HTMLElement} originElm
   */
  horizontallyCenter(dynamicElm, originElm) {
    const originRect = originElm.getBoundingClientRect();

    // If the dynamic element will go offscreen on the left,
    // align the dynamic element up to the left edge.
    if (originRect.left - (originElm.offsetWidth / 2) < dynamicElm.offsetWidth / 2) {
      dynamicElm.style.left = `${originElm.offsetLeft}px`;

    // If the dynamic element will go offscreen on the right,
    // align the dynamic element up to the right edge.
    } else if ((originElm.offsetWidth / 2) + (window.innerWidth - originRect.right) < dynamicElm.offsetWidth / 2) {
      dynamicElm.style.left = `${(originElm.offsetLeft + originElm.offsetWidth) - dynamicElm.offsetWidth}px`;

    } else {
      dynamicElm.style.left = `${originElm.offsetLeft - (dynamicElm.offsetWidth - originElm.offsetWidth) / 2}px`;
    }
  }
}


/***/ }),

/***/ "./js/util/ChargeCalculator.js":
/*!*************************************!*\
  !*** ./js/util/ChargeCalculator.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChargeCalculator: () => (/* binding */ ChargeCalculator)
/* harmony export */ });
class ChargeCalculator {
  constructor() {
    this.chargeLevelThresholds = [
      0,
      1,
      8,
      20,
      39,
      666
    ];
  }

  /**
   * @param {number} currentBlockHeight
   * @param {number} lastActionBlockHeight
   * @return {number}
   */
  calc(currentBlockHeight, lastActionBlockHeight) {
    const charge = currentBlockHeight - lastActionBlockHeight;

    for (let i = 0; i < this.chargeLevelThresholds.length; i++) {
      if (charge < this.chargeLevelThresholds[i]) {
        return i;
      }
    }

    return this.chargeLevelThresholds.length - 1;
  }
}

/***/ }),

/***/ "./js/view_models/IndexViewModel.js":
/*!******************************************!*\
  !*** ./js/view_models/IndexViewModel.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IndexView: () => (/* binding */ IndexView)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");




class IndexView extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {

  initPageCode() {
    document.getElementById('new-player-btn').addEventListener('click', () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupConnectingToCorporate1');
    });
    document.getElementById('returning-player-btn').addEventListener('click', () => {
      console.log('Returning Player');
    });
  }

  render () {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-structs',
        'Structs'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems, 'nav-item-structs');
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableCloseBtn()

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="sui-page-body-screen-content sui-screen-body justified-centered">
      <img class="glitch-logo" src="/img/sui/logo/logo-structs.gif" alt="Animated Structs logo with glitching">
      
      <a id="new-player-btn" href="javascript: void(0)" class="sui-screen-btn fixed-256 sui-mod-primary">New Player</a>
      <a id="returning-player-btn" href="javascript: void(0)" class="sui-screen-btn fixed-256 sui-mod-secondary">Returning Player</a>
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.hideAndClearDialoguePanel();

    this.initPageCode();
  }
}


/***/ }),

/***/ "./js/view_models/signup/AwaitingIdViewModel.js":
/*!******************************************************!*\
  !*** ./js/view_models/signup/AwaitingIdViewModel.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AwaitingIdViewModel: () => (/* binding */ AwaitingIdViewModel)
/* harmony export */ });
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");




class AwaitingIdViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__.AbstractViewModel{
  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__.NavItemDTO(
        'nav-item-text-only',
        'Connecting...'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setNavItems(navItems);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.disableCloseBtn();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.showNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
        
      <div class="common-layout-col">
        <div class="common-group-col">
          <img id="computer-connecting-animation" src="/img/loading.gif" alt="Computer connecting to SN.C">
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setDialogueIndicatorContent(`<i class="sui-icon-md icon-info sui-text-warning"></i>`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setDialogueScreenContent(`Please wait while your Employee Record is confirmed...`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.disableDialogueBtnB();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.disableDialogueBtnA();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.showDialoguePanel();
  }
}


/***/ }),

/***/ "./js/view_models/signup/ConnectingToCorp1ViewModel.js":
/*!*************************************************************!*\
  !*** ./js/view_models/signup/ConnectingToCorp1ViewModel.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConnectingToCorp1ViewModel: () => (/* binding */ ConnectingToCorp1ViewModel)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");




class ConnectingToCorp1ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {

  initPageCode() {
    document.getElementById('glitch-logo-fade').addEventListener('animationstart', () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupConnectingToCorporate2');
    });
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-text-only',
        'Connecting...'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableCloseBtn()

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="sui-page-body-screen-content sui-screen-body justified-centered">
      <div class="connecting-logo-swap-container">
        <img
          id="glitch-logo-fade"
          class="glitch-logo fade-out"
          src="/img/sui/logo/logo-structs.gif"
          alt="Animated Structs logo with glitching"
        >
        <div id="snc-logo-wrapper" class="snc-logo-wrapper fade-in">
        </div>
      </div>
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueIndicatorContent(`<i class="sui-icon-md icon-info sui-text-primary"></i>`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(`Connecting to Corporate Database...`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableDialogueBtnB();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableDialogueBtnA();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.showDialoguePanel();

    this.initPageCode();
  }
}


/***/ }),

/***/ "./js/view_models/signup/ConnectingToCorp2ViewModel.js":
/*!*************************************************************!*\
  !*** ./js/view_models/signup/ConnectingToCorp2ViewModel.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConnectingToCorp2ViewModel: () => (/* binding */ ConnectingToCorp2ViewModel)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");




class ConnectingToCorp2ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {

  initPageCode() {
    setTimeout(() => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupIncomingCall1');
    }, 4000);
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-text-only',
        'SN.Corporation'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems);

    document.getElementById('snc-logo-wrapper').innerHTML = `
        <img 
          class="snc-logo"
          src="/img/logo-snc.gif"
          alt="SNC logo"
        >
        <h2 class="sui-text-header sui-text-disabled">WE KNOW BETTER.</h2>
      `;

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueIndicatorContent(`<i class="sui-icon-md icon-success sui-text-primary"></i>`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(`Connection Successful.`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.showDialoguePanel();

    this.initPageCode();
  }
}


/***/ }),

/***/ "./js/view_models/signup/IncomingCall1ViewModel.js":
/*!*********************************************************!*\
  !*** ./js/view_models/signup/IncomingCall1ViewModel.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IncomingCall1ViewModel: () => (/* binding */ IncomingCall1ViewModel)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");




class IncomingCall1ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {

  initLottieAnimations() {
    const {lottie} = window;
    const {loadAnimation} = lottie;
    loadAnimation({
      container: document.getElementById('lottie-scan-lines'),
      renderer: 'svg',
      loop: false,
      autoplay: true,
      path: '/lottie/transition-scan-lines/data.json'
    });
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-text-only',
        'Incoming Call'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableCloseBtn();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
      <div class="lottie-scan-lines-wrapper">
        <div id="lottie-scan-lines"></div>
      </div>
      <img
        id="hrbot-silhouette"
        class="hrbot-silhouette"
        src="/img/hrbot-silhouette.png"
        alt="A silhouette of the HR Bot"
      >
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueIndicatorContent(`<i class="sui-icon-md icon-alert sui-text-warning"></i>`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(`<strong>Alert:</strong> Priority Call`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.dialogueBtnAHandler = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupIncomingCall2');
    };
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.enableDialogueBtnA();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.showDialoguePanel();

    this.initLottieAnimations();
  }
}

/***/ }),

/***/ "./js/view_models/signup/IncomingCall2ViewModel.js":
/*!*********************************************************!*\
  !*** ./js/view_models/signup/IncomingCall2ViewModel.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IncomingCall2ViewModel: () => (/* binding */ IncomingCall2ViewModel)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");




class IncomingCall2ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {
  initLottieAnimations() {
    const {lottie} = window;
    const {loadAnimation} = lottie;
    loadAnimation({
      container: document.getElementById('hrbot-talking-large'),
      renderer: 'svg',
      loop: false,
      autoplay: false,
      path: '/lottie/hr-bot/data.json'
    });
  }

  initPageCode() {
    setTimeout(() => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupIncomingCall3');
    }, 800);
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-text-only',
        'Connecting...'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
      <div id="hrbot-talking-large" class="fade-in"></div>
      <img
        id="hrbot-silhouette"
        class="hrbot-silhouette"
        src="/img/hrbot-silhouette.png"
        alt="A silhouette of the HR Bot"
      >
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableDialogueBtnA();

    this.initLottieAnimations();

    this.initPageCode();
  }
}

/***/ }),

/***/ "./js/view_models/signup/IncomingCall3ViewModel.js":
/*!*********************************************************!*\
  !*** ./js/view_models/signup/IncomingCall3ViewModel.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IncomingCall3ViewModel: () => (/* binding */ IncomingCall3ViewModel)
/* harmony export */ });
/* harmony import */ var _templates_HRBotTalkingTemplate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../templates/HRBotTalkingTemplate */ "./js/view_models/templates/HRBotTalkingTemplate.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");




class IncomingCall3ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {
  render() {
    const view = new _templates_HRBotTalkingTemplate__WEBPACK_IMPORTED_MODULE_0__.HRBotTalkingTemplate();
    view.dialogueSequence = [
      `<strong>SN.CORP:</strong> Greetings, SN.CORPORATION employee. I am your designated Synthetic Resources Officer.`,
      `I have been tasked with assisting you as you complete your <a id="employeeOrientationHint" class="sui-mod-secondary" href="javascript: void(0)" data-sui-tooltip="Failure to complete Employee Orientation may result in serious injury or death.">Employee Orientation.</a>`
    ];
    view.actionOnSequenceEnd = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupSetUsername');
    }
    view.initPageCode = function () {
      if (this.dialogueIndex === 1) {
        _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.sui.tooltip.init(document.getElementById('employeeOrientationHint'));
      }
    };
    view.render();
  }
}


/***/ }),

/***/ "./js/view_models/signup/Orientation1ViewModel.js":
/*!********************************************************!*\
  !*** ./js/view_models/signup/Orientation1ViewModel.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Orientation1ViewModel: () => (/* binding */ Orientation1ViewModel)
/* harmony export */ });
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");




class Orientation1ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__.AbstractViewModel {

  initLottieAnimations() {
    const {lottie} = window;
    const {loadAnimation} = lottie;
    const scanLines = loadAnimation({
      container: document.getElementById('lottie-scan-lines'),
      renderer: 'svg',
      loop: false,
      autoplay: true,
      path: '/lottie/transition-scan-lines/data.json'
    });
    loadAnimation({
      container: document.getElementById('hrbot-talking-small'),
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: '/lottie/hr-bot/data.json'
    });

    scanLines.addEventListener('complete', () => {
      document.getElementById('lottie-scan-lines').classList.add('hidden');
    });
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__.NavItemDTO(
        'nav-item-text-only',
        'SN.Corporation'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setNavItems(navItems);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.disableCloseBtn();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.showNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
      <div id="lottie-scan-lines-wrapper" class="lottie-scan-lines-wrapper">
        <div id="lottie-scan-lines"></div>
      </div>
        
      <div class="common-layout-col">
        <div class="orientation-contract-layout">
          <div class="orientation-contract-text-group">
            <div class="orientation-contract-text-header">
              <span class="sui-text-display">SN.CORPORATION</span>
            </div>
            <div class="orientation-contract-text-body">
              <span class="sui-text-hint">Contract #8322</span>
            </div>
          </div>
          <i class="sui-icon-xxl icon-success sui-text-primary"></i>
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setDialogueIndicatorContent(`<div id="hrbot-talking-small"></div>`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setDialogueScreenContent(`Thank you. We can now begin your orientation.`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.dialogueBtnAHandler = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'orientation2');
    };
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.disableDialogueBtnB();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.enableDialogueBtnA();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.showDialoguePanel();

    this.initLottieAnimations()
  }
}


/***/ }),

/***/ "./js/view_models/signup/Orientation2ViewModel.js":
/*!********************************************************!*\
  !*** ./js/view_models/signup/Orientation2ViewModel.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Orientation2ViewModel: () => (/* binding */ Orientation2ViewModel)
/* harmony export */ });
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");




class Orientation2ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__.AbstractViewModel {

  initPageCode() {
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.sui.tooltip.init(document.getElementById('structsConglomerateHint'));
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__.NavItemDTO(
        'nav-item-text-only',
        'SN.Corporation'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setNavItems(navItems);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">

      <div class="common-layout-col">
        <div class="common-group-col">
        
          <div id="snc-logo-wrapper" class="snc-logo-wrapper">
            <img 
              class="snc-logo"
              src="/img/logo-snc.gif"
              alt="SNC logo"
            >
            <h2 class="sui-text-header sui-text-disabled">WE KNOW BETTER.</h2>
          </div>
          
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setDialogueScreenContent(
      `You have been contracted by SN.CORPORATION, a member of the 
      <a 
        id="structsConglomerateHint" 
        class="sui-mod-secondary"
        href="javascript: void(0)" 
        data-sui-tooltip="A loose federation of machine states with the goal of [REDACTED]"
      >Structs Conglomerate</a>,
      to conduct Alpha Matter mining operations in the Milky Way Galaxy.`
    );
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.dialogueBtnAHandler = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'orientation3');
    };

    this.initPageCode();
  }
}


/***/ }),

/***/ "./js/view_models/signup/Orientation3ViewModel.js":
/*!********************************************************!*\
  !*** ./js/view_models/signup/Orientation3ViewModel.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Orientation3ViewModel: () => (/* binding */ Orientation3ViewModel)
/* harmony export */ });
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");




class Orientation3ViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__.AbstractViewModel {

  initLottieAnimations() {
    const {lottie} = window;
    const {loadAnimation} = lottie;
    const scanLines = loadAnimation({
      container: document.getElementById('lottie-scan-lines'),
      renderer: 'svg',
      loop: false,
      autoplay: true,
      path: '/lottie/transition-scan-lines/data.json'
    });

    scanLines.addEventListener('complete', () => {
      document.getElementById('lottie-scan-lines').classList.add('hidden');
    });
  }

  initPageCode() {
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.sui.tooltip.init(document.getElementById('dialogueAlphaMatterHint'));
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_1__.NavItemDTO(
        'nav-item-text-only',
        'SN.Corporation'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setNavItems(navItems);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.disableCloseBtn();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.showNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
      <div id="lottie-scan-lines-wrapper" class="lottie-scan-lines-wrapper">
        <div id="lottie-scan-lines"></div>
      </div>
        
      <div class="common-layout-col">
        <div class="orientation-alpha-layout">
          <div class="alpha-matter-128"></div>
          <div class="orientation-alpha-text-group">
            <div class="orientation-alpha-text-header">
              <span class="sui-text-display">Alpha Matter</span>
            </div>
            <div class="orientation-alpha-text-body">
              <span class="sui-text-hint">Ap - 52.456u</span>
            </div>
          </div>
          
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setDialogueScreenContent(
      `<a 
        id="dialogueAlphaMatterHint" 
        class="sui-mod-secondary"
        href="javascript: void(0)" 
        data-sui-tooltip="Alpha Matter fuels faster-than-light travel and provides power to the galaxy."
      >Alpha Matter</a>
      is a rare and powerful substance that fuels galactic civilization. Unfortunately, it is dangerously unstable.`
    );

    this.initLottieAnimations();
    this.initPageCode();
  }
}


/***/ }),

/***/ "./js/view_models/signup/RecoveryKeyConfirmationViewModel.js":
/*!*******************************************************************!*\
  !*** ./js/view_models/signup/RecoveryKeyConfirmationViewModel.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RecoveryKeyConfirmationViewModel: () => (/* binding */ RecoveryKeyConfirmationViewModel)
/* harmony export */ });
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../templates/partials/PageHeader */ "./js/view_models/templates/partials/PageHeader.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");




class RecoveryKeyConfirmationViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__.AbstractViewModel {
  /**
   * @param {string} mnemonic
   * @param {AuthManager} authManager
   */
  constructor(
    mnemonic,
    authManager
  ) {
    super();
    this.mnemonic = mnemonic;
    this.authManager = authManager;
  }

  initPageCode() {
    const recoveryKeyInput = document.getElementById('recovery-key-input');
    recoveryKeyInput.addEventListener('keyup', () => {
      const submitBtn = document.getElementById('submit-btn');

      if (recoveryKeyInput.value.length > 0 && submitBtn.classList.contains('sui-mod-disabled')) {
        submitBtn.disabled = false;
        submitBtn.classList.remove('sui-mod-disabled');
        submitBtn.classList.add('sui-mod-primary');
      } else if (recoveryKeyInput.value.length === 0 && submitBtn.classList.contains('sui-mod-primary')) {
        submitBtn.disabled = true;
        submitBtn.classList.remove('sui-mod-primary');
        submitBtn.classList.add('sui-mod-disabled');
      }
    });

    const submitBtnHandler = () => {
      const recoveryKeyInput = document.getElementById('recovery-key-input');
      recoveryKeyInput.value = recoveryKeyInput.value.replace(/\s\s+/g, ' ');

      if (recoveryKeyInput.value !== this.mnemonic) {

        _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'signupRecoveryKeyConfirmFail', {view: 'CONFIRM_FAIL'});

      } else {

        this.authManager.signup(this.mnemonic).then((success) => {
          if (success) {
            _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'signupSuccess');
          } else {
            _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'signupRecoveryKeyConfirmFail', {view: 'CONFIRM_FAIL'});
          }
        });

      }
    };

    document.getElementById('submit-btn').addEventListener('click', submitBtnHandler);
    recoveryKeyInput.addEventListener('keyup', (e) => {
      if (e.key === 'Enter') {
        submitBtnHandler();
      }
    });
  }

  async render() {
    const pageHeader = new _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_1__.PageHeader();
    pageHeader.pageLabel = 'Confirm Recovery Key';
    pageHeader.showBackButton = true;
    pageHeader.backButtonHandler = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'signupRecoveryKeyCreation');
    };

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.hideAndClearNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
    
      ${pageHeader.render()}
        
      <div class="common-layout-col">
        <div class="common-group-col">
          <div>To confirm your Recovery Key, enter each word, in order, separated by spaces.</div>
        </div>
        <div class="common-group-row mod-border">
          <label class="sui-input-text" for="recovery-key-input">
            <span>Confirm Recovery Key</span>
            <input
              type="text"
              name="recovery-key-input"
              id="recovery-key-input"
              placeholder="word word word ..."
            >
          </label>
          <button id="submit-btn" class="sui-screen-btn sui-mod-disabled" disabled>Next</button>
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.hideAndClearDialoguePanel();

    pageHeader.init();
    this.initPageCode();
  }
}

/***/ }),

/***/ "./js/view_models/signup/RecoveryKeyCreationViewModel.js":
/*!***************************************************************!*\
  !*** ./js/view_models/signup/RecoveryKeyCreationViewModel.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RecoveryKeyCreationViewModel: () => (/* binding */ RecoveryKeyCreationViewModel)
/* harmony export */ });
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../templates/partials/PageHeader */ "./js/view_models/templates/partials/PageHeader.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");




class RecoveryKeyCreationViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_1__.AbstractViewModel {

  /**
   * @param mnemonic
   */
  constructor(mnemonic) {
    super();
    this.mnemonic = mnemonic;
  }

  /**
   * @param {string} mnemonic
   * @return {string} html
   */
  renderRecoveryKeyHtml(mnemonic) {
    const mnemonicArray = mnemonic.split(' ');

    let html = `<div id="recovery-key" class="text-recovery-key hidden">`;

    for (let i = 0; i < mnemonicArray.length; i++) {
      html += `
      <div class="recovery-key-word">
        <span class="sui-text-secondary">${i + 1}</span>
        <span class="mod-white">${mnemonicArray[i]}</span>
      </div>
      `;
    }

    html += `</div>`;

    return html;
  }

  initPageCode() {
    document.getElementById('display-recovery-key-btn').addEventListener('click', () => {
      document.getElementById('display-recovery-key-btn').classList.add('hidden');
      document.getElementById('recovery-key').classList.remove('hidden');

      const writtenDownBtn = document.getElementById('written-down-btn');
      writtenDownBtn.classList.remove('sui-mod-disabled');
      writtenDownBtn.classList.add('sui-mod-primary');
      writtenDownBtn.disabled = false;
    });

    document.getElementById('written-down-btn').addEventListener('click', () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.router.goto('Auth', 'signupRecoveryKeyConfirmation');
    });
  }

  /**
   * @param {string} pageLabel
   * @param {boolean} showBackButton
   * @param {function} backButtonHandler
   * @param {string} messageHtml
   * @param {string} writtenDownBtnLabel
   * @param {function} customCodeCallback
   */
  renderPage(
    pageLabel,
    showBackButton,
    backButtonHandler,
    messageHtml,
    writtenDownBtnLabel,
    customCodeCallback = () => {}
  ) {
    const recoveryKeyHtml = this.renderRecoveryKeyHtml(this.mnemonic);

    const pageHeader = new _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_2__.PageHeader();
    pageHeader.pageLabel = pageLabel;
    pageHeader.showBackButton = true;
    pageHeader.backButtonHandler = backButtonHandler;

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.hideAndClearNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
    
      ${pageHeader.render()}
        
      <div class="common-layout-col">
        <div class="common-group-col">
          ${messageHtml}
        </div>
        <div class="common-group-col mod-border">
          <a id="display-recovery-key-btn" href="javascript: void(0);" class="sui-screen-btn sui-mod-secondary">
            <i class="sui-icon-md icon-key"></i>
            <span>Display Recovery Key</span>
          </a>
          ${ recoveryKeyHtml }
        </div>
        <div>
          <button id="written-down-btn" class="sui-screen-btn sui-mod-disabled" disabled>${writtenDownBtnLabel}</button>
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.hideAndClearDialoguePanel();

    this.initPageCode();

    pageHeader.init();

    customCodeCallback();
  }

  renderCreationView() {
    this.renderPage(
      'Create Recovery Key',
      false,
      () => {},
      `
      <div>Write down your 12-word Recovery Key and keep it in a safe place. You will need this Key to recover your account if you log out or clear your browser cache.</div>
      <a id="recovery-key-faq-link" href="javascript: void(0);" class="sui-text-secondary">Learn More About Recovery Keys</a>
      `,
      `I've Written It Down`,
      () => {
        document.getElementById('recovery-key-faq-link').addEventListener('click', () => {
          _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.router.goto(
            'Auth',
            'signupRecoveryKeyFaq',
            {
              backButtonHandler: () => {
                _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.router.goto('Auth', 'signupRecoveryKeyCreation');
              }
            }
          );
        });
      }
    );
  }

  renderConfirmFail() {
    this.renderPage(
      'Confirm Recovery Key',
      true,
      () => {
        _framework_MenuPage__WEBPACK_IMPORTED_MODULE_0__.MenuPage.router.goto('Auth', 'signupRecoveryKeyConfirmation');
      },
      `
      <div>
        <i class="sui-icon-md icon-alert sui-text-destructive"></i>
        <span class="sui-text-destructive">Incorrect Recovery Key</span>
      </div>
      <div>Please review the exact spelling and order of your 12-word Recovery Key below, then try again.</div>
      `,
      `Try Again`
    );
  }

  render(view = 'CREATION') {
    if (view === 'CREATION') {
      this.renderCreationView();
    } else if (view === 'CONFIRM_FAIL') {
      this.renderConfirmFail();
    }
    console.log(this.mnemonic);
  }
}

/***/ }),

/***/ "./js/view_models/signup/RecoveryKeyFaqViewModel.js":
/*!**********************************************************!*\
  !*** ./js/view_models/signup/RecoveryKeyFaqViewModel.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RecoveryKeyFaqViewModel: () => (/* binding */ RecoveryKeyFaqViewModel)
/* harmony export */ });
/* harmony import */ var _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../templates/partials/PageHeader */ "./js/view_models/templates/partials/PageHeader.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");




class RecoveryKeyFaqViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_2__.AbstractViewModel {

  /**
   * @param {function} backButtonHandler
   */
  constructor(backButtonHandler) {
    super();
    this.backButtonHandler = backButtonHandler;
  }

  render() {
    const pageHeader = new _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_0__.PageHeader();
    pageHeader.pageLabel = 'About Recovery Keys';
    pageHeader.showBackButton = true;
    pageHeader.backButtonHandler = this.backButtonHandler;

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.hideAndClearNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
    
      ${pageHeader.render()}
        
      <div class="recovery-key-faq-layout">
        <div class="recovery-key-faq-question-group">
          <div class="sui-text-secondary">What is a Recovery Key?</div>
          <div>Your recovery key is the 12-word secrect code that was given to you created your account.</div>
        </div>
        <div class="recovery-key-faq-question-group">
          <div class="sui-text-secondary">Why do I need my Recovery Key?</div>
          <div>In the event that you lose access to your account, you can use your Recovery Key to log in.</div>
        </div>
        <div class="recovery-key-faq-question-group">
          <div class="sui-text-secondary">How can I protect my Recovery Key?</div>
          <div>It is important to write down your Recovery Key and keep it in a safe place. You may also consider saving your Recovery Key to a password manager. We do not store Recovery Keys and cannot help you retrieve your Key if you lose it.</div>
        </div>
        <div class="recovery-key-faq-question-group">
          <div class="sui-text-secondary">I want to log in on a new device. Do I need my recovery Key?</div>
          <div>No. If you currently have access to a logged-in device, you can log in a new device by using the Login From Another Device option.<br> 
            <br>
            Note: this option is only available if the logged-in device has Account Management permissions.<br>
            <br>
            If you have no currently logged-in devices with Account Management permissions, you will need to use your Recovery Key to log in again.
          </div>
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.hideAndClearDialoguePanel();

    pageHeader.init();
  }
}

/***/ }),

/***/ "./js/view_models/signup/RecoveryKeyIntroViewModel.js":
/*!************************************************************!*\
  !*** ./js/view_models/signup/RecoveryKeyIntroViewModel.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RecoveryKeyIntroViewModel: () => (/* binding */ RecoveryKeyIntroViewModel)
/* harmony export */ });
/* harmony import */ var _templates_HRBotTalkingTemplate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../templates/HRBotTalkingTemplate */ "./js/view_models/templates/HRBotTalkingTemplate.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");



class RecoveryKeyIntroViewModel {
  render() {
    const view = new _templates_HRBotTalkingTemplate__WEBPACK_IMPORTED_MODULE_0__.HRBotTalkingTemplate();
    view.startWithScanLines = true;
    view.dialogueSequence = [
      `Next, you will create a Recovery Key for your account. This Key allows you to recover your account in the event that you lose access.`,
    ];
    view.actionOnSequenceEnd = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupRecoveryKeyCreation');
    }
    view.render();
  }
}

/***/ }),

/***/ "./js/view_models/signup/SetUsernameViewModel.js":
/*!*******************************************************!*\
  !*** ./js/view_models/signup/SetUsernameViewModel.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SetUsernameViewModel: () => (/* binding */ SetUsernameViewModel)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");
/* harmony import */ var _constants_RegexPattern__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants/RegexPattern */ "./js/constants/RegexPattern.js");
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");





class SetUsernameViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_3__.AbstractViewModel {

  /**
   * @param {GameState} gameState
   */
  constructor(gameState) {
    super();
    this.gameState = gameState;
  }

  initLottieAnimations() {
    const {lottie} = window;
    const {loadAnimation} = lottie;
    const scanLines = loadAnimation({
      container: document.getElementById('lottie-scan-lines'),
      renderer: 'svg',
      loop: false,
      autoplay: true,
      path: '/lottie/transition-scan-lines/data.json'
    });
    loadAnimation({
      container: document.getElementById('hrbot-talking-small'),
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: '/lottie/hr-bot/data.json'
    });

    scanLines.addEventListener('complete', () => {
      document.getElementById('lottie-scan-lines').classList.add('hidden');
    });
  }

  initPageCode() {
    const usernameInput = document.getElementById('username-input');
    usernameInput.addEventListener('keyup', () => {
      const submitBtn = document.getElementById('submit-btn');

      if (usernameInput.value.length > 0 && submitBtn.classList.contains('sui-mod-disabled')) {
        submitBtn.disabled = false;
        submitBtn.classList.remove('sui-mod-disabled');
        submitBtn.classList.add('sui-mod-primary');
      } else if (usernameInput.value.length === 0 && submitBtn.classList.contains('sui-mod-primary')) {
        submitBtn.disabled = true;
        submitBtn.classList.remove('sui-mod-primary');
        submitBtn.classList.add('sui-mod-disabled');
      }
    });

    const submitBtnHandler = () => {
      const usernameInput = document.getElementById('username-input');

      if (!_constants_RegexPattern__WEBPACK_IMPORTED_MODULE_2__.USERNAME_PATTERN.test(usernameInput.value)) {
        _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(`Only <strong>letters</strong>, <strong>numbers</strong>, <strong>-</strong> and <strong>_</strong> are allowed. <strong>Length</strong> must be between <strong>3</strong> and <strong>20</strong> characters.`, true);
      } else {
        this.gameState.signupRequest.username = document.getElementById('username-input').value;

        this.renderSuccessfulSubmission();
      }
    };

    document.getElementById('submit-btn').addEventListener('click', submitBtnHandler);
    usernameInput.addEventListener('keyup', (e) => {
      if (e.key === 'Enter') {
        submitBtnHandler();
      }
    });
  }

  renderSuccessfulSubmission() {
    const setUsernameNameSection = document.getElementById('set-username-name-section');

    setUsernameNameSection.classList.remove('set-username-input-mode');
    setUsernameNameSection.classList.add('set-username-display-mode');

    setUsernameNameSection.innerHTML = `
      <div class="set-username-chosen-name sui-text-primary"><h1>${this.gameState.signupRequest.username}</h1></div>
      <div class="set-username-profile-created">Profile Created</div>
    `;

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(`Welcome, ${this.gameState.signupRequest.username}.`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.dialogueBtnAHandler = () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.router.goto('Auth', 'signupRecoveryKeyIntro');
    };
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.enableDialogueBtnA();
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-text-only',
        'SN.Corporation'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
      <div id="lottie-scan-lines-wrapper" class="lottie-scan-lines-wrapper">
        <div id="lottie-scan-lines"></div>
      </div>
      <div class="sui-page-body-screen-content mod-positioned-absolute">
        <div class="set-username-screen-body">
          <div class="set-username-wrapper">
            <div class="set-username-pfp-section">
              <div class="set-username-pfp">
              </div>
            </div>
            <div id="set-username-name-section" class="set-username-input-mode">
              <div class="set-username-field-wrapper">
                <label class="sui-input-text" for="username">
                  <span>Display Name</span>
                  <input
                    type="text"
                    name="username"
                    id="username-input"
                    placeholder="Your Name"
                  >
                </label>
              </div>
              <div class="set-username-btn-wrapper">
                <button id="submit-btn" class="sui-screen-btn sui-mod-disabled" disabled>Submit</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueIndicatorContent(`<div id="hrbot-talking-small"></div>`);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(`To begin, please confirm your identity.`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.clearDialogueBtnAHandler();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.clearDialogueBtnBHandler();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableDialogueBtnA();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableDialogueBtnB();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.showDialoguePanel();

    this.initLottieAnimations()

    this.initPageCode();
  }
}

/***/ }),

/***/ "./js/view_models/signup/SignupSuccessViewModel.js":
/*!*********************************************************!*\
  !*** ./js/view_models/signup/SignupSuccessViewModel.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignupSuccessViewModel: () => (/* binding */ SignupSuccessViewModel)
/* harmony export */ });
/* harmony import */ var _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../framework/AbstractViewModel */ "./js/framework/AbstractViewModel.js");
/* harmony import */ var _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../templates/partials/PageHeader */ "./js/view_models/templates/partials/PageHeader.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");




class SignupSuccessViewModel extends _framework_AbstractViewModel__WEBPACK_IMPORTED_MODULE_0__.AbstractViewModel {

  initPageCode() {
    document.getElementById('return-to-game-btn').addEventListener('click', () => {
      _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.router.goto('Auth', 'signupAwaitingId');
    });
  }

  render() {
    const pageHeader = new _templates_partials_PageHeader__WEBPACK_IMPORTED_MODULE_1__.PageHeader();
    pageHeader.pageLabel = 'Success!';

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.hideAndClearNav();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
    
      ${pageHeader.render()}
        
      <div class="common-layout-col">
        <div class="common-group-col">
          <div>
            <i class="sui-icon-md icon-alert sui-text-primary"></i>
            <span class="sui-text-primary">Success!</span>
          </div>
          <div>Your account has been created. Keep your Recovery Key safe; you will need it if you lose access to your account.</div>
        </div>
        <div>
          <button id="return-to-game-btn" class="sui-screen-btn sui-mod-secondary" >Return To Game</button>
        </div>
      </div>
        
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_2__.MenuPage.hideAndClearDialoguePanel();

    this.initPageCode();
  }
}

/***/ }),

/***/ "./js/view_models/templates/HRBotTalkingTemplate.js":
/*!**********************************************************!*\
  !*** ./js/view_models/templates/HRBotTalkingTemplate.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HRBotTalkingTemplate: () => (/* binding */ HRBotTalkingTemplate)
/* harmony export */ });
/* harmony import */ var _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dtos/NavItemDTO */ "./js/dtos/NavItemDTO.js");
/* harmony import */ var _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../framework/MenuPage */ "./js/framework/MenuPage.js");



class HRBotTalkingTemplate {

  constructor() {
    this.dialogueSequence = [];
    this.dialogueIndex = 0;
    this.actionOnSequenceEnd = () => {};
    this.startWithScanLines = false;
    this.initPageCode = () => {};
  }

  initLottieAnimations() {
    const {lottie} = window;
    const {loadAnimation} = lottie;

    if (this.startWithScanLines) {

      const scanLines = loadAnimation({
        container: document.getElementById('lottie-scan-lines'),
        renderer: 'svg',
        loop: false,
        autoplay: true,
        path: '/lottie/transition-scan-lines/data.json'
      });
      scanLines.addEventListener('complete', () => {
        document.getElementById('lottie-scan-lines').classList.add('hidden');
      });

    }

    const lottieHRBotLarge = loadAnimation({
      container: document.getElementById('hrbot-talking-large'),
      renderer: 'svg',
      loop: true,
      autoplay: false,
      path: '/lottie/hr-bot/data.json'
    });
    const lottieHRBotSmall = loadAnimation({
      container: document.getElementById('hrbot-talking-small'),
      renderer: 'svg',
      loop: true,
      autoplay: false,
      path: '/lottie/hr-bot/data.json'
    });
    setTimeout(() => {
      lottieHRBotLarge.play();
      lottieHRBotSmall.play();
    }, 500);
  }

  render() {
    const navItems = [
      new _dtos_NavItemDTO__WEBPACK_IMPORTED_MODULE_0__.NavItemDTO(
        'nav-item-text-only',
        'SN.Corporation'
      )
    ];
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setNavItems(navItems);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableCloseBtn();

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setBodyContent(`
    <div class="full-screen-content-container">
      <div id="lottie-scan-lines-wrapper" class="lottie-scan-lines-wrapper">
        <div id="lottie-scan-lines"></div>
      </div>
      <div id="hrbot-talking-large" class="mod-opaque"></div>
    </div>
    `);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueIndicatorContent(`<div id="hrbot-talking-small"></div>`, true);
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(this.dialogueSequence[0], true);

    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.disableDialogueBtnB();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.clearDialogueBtnBHandler();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.dialogueBtnAHandler = () => {
      this.dialogueIndex++;

      if (this.dialogueIndex < this.dialogueSequence.length) {
        _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.setDialogueScreenContent(this.dialogueSequence[this.dialogueIndex], true);
        this.initPageCode();
      }

      if (this.dialogueIndex === this.dialogueSequence.length) {
        this.actionOnSequenceEnd();
      }
    };
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.enableDialogueBtnA();
    _framework_MenuPage__WEBPACK_IMPORTED_MODULE_1__.MenuPage.showDialoguePanel();

    this.initLottieAnimations();
    this.initPageCode();
  }
}

/***/ }),

/***/ "./js/view_models/templates/partials/PageHeader.js":
/*!*********************************************************!*\
  !*** ./js/view_models/templates/partials/PageHeader.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PageHeader: () => (/* binding */ PageHeader)
/* harmony export */ });
class PageHeader {

  constructor() {
    this.pageLabel = '';
    this.showBackButton = false;
    this.backButtonHandler = () => {};
  }

  init() {
    document.getElementById('page-header-back-button').addEventListener('click', this.backButtonHandler);
  }

  render() {
    const backButtonIcon = this.showBackButton
      ? `<i class="sui-icon-sm icon-chevron-left sui-text-secondary"></i>`
      : '';
    const backButtonHref = this.showBackButton
      ? 'href="javascript: void(0)"'
      : '';

    return `
    <!-- Page Header Start -->

    <div class="sui-page-header">
      <a id="page-header-back-button" ${backButtonHref} class="sui-nav-btn">
        ${backButtonIcon}
        ${this.pageLabel}
      </a>
    </div>

    <!-- Page Header End -->
    `;
  }
}

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/addresses.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/addresses.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// See https://github.com/tendermint/tendermint/blob/f2ada0a604b4c0763bda2f64fac53d506d3beca7/docs/spec/blockchain/encoding.md#public-key-cryptography
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const encoding_2 = __webpack_require__(/*! ./encoding */ "./node_modules/@cosmjs/amino/build/encoding.js");
const pubkeys_1 = __webpack_require__(/*! ./pubkeys */ "./node_modules/@cosmjs/amino/build/pubkeys.js");
function rawEd25519PubkeyToRawAddress(pubkeyData) {
    if (pubkeyData.length !== 32) {
        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);
    }
    return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
}
exports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;
function rawSecp256k1PubkeyToRawAddress(pubkeyData) {
    if (pubkeyData.length !== 33) {
        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);
    }
    return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));
}
exports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;
// For secp256k1 this assumes we already have a compressed pubkey.
function pubkeyToRawAddress(pubkey) {
    if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {
        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);
        return rawSecp256k1PubkeyToRawAddress(pubkeyData);
    }
    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {
        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);
        return rawEd25519PubkeyToRawAddress(pubkeyData);
    }
    else if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {
        // https://github.com/tendermint/tendermint/blob/38b401657e4ad7a7eeb3c30a3cbf512037df3740/crypto/multisig/threshold_pubkey.go#L71-L74
        const pubkeyData = (0, encoding_2.encodeAminoPubkey)(pubkey);
        return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);
    }
    else {
        throw new Error("Unsupported public key type");
    }
}
exports.pubkeyToRawAddress = pubkeyToRawAddress;
function pubkeyToAddress(pubkey, prefix) {
    return (0, encoding_1.toBech32)(prefix, pubkeyToRawAddress(pubkey));
}
exports.pubkeyToAddress = pubkeyToAddress;
//# sourceMappingURL=addresses.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/coins.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/coins.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;
const math_1 = __webpack_require__(/*! @cosmjs/math */ "./node_modules/@cosmjs/math/build/index.js");
/**
 * Creates a coin.
 *
 * If your values do not exceed the safe integer range of JS numbers (53 bit),
 * you can use the number type here. This is the case for all typical Cosmos SDK
 * chains that use the default 6 decimals.
 *
 * In case you need to supportr larger values, use unsigned integer strings instead.
 */
function coin(amount, denom) {
    let outAmount;
    if (typeof amount === "number") {
        try {
            outAmount = new math_1.Uint53(amount).toString();
        }
        catch (_err) {
            throw new Error("Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.");
        }
    }
    else {
        if (!amount.match(/^[0-9]+$/)) {
            throw new Error("Invalid unsigned integer string format");
        }
        outAmount = amount.replace(/^0*/, "") || "0";
    }
    return {
        amount: outAmount,
        denom: denom,
    };
}
exports.coin = coin;
/**
 * Creates a list of coins with one element.
 */
function coins(amount, denom) {
    return [coin(amount, denom)];
}
exports.coins = coins;
/**
 * Takes a coins list like "819966000ucosm,700000000ustake" and parses it.
 *
 * Starting with CosmJS 0.32.3, the following imports are all synonym and support
 * a variety of denom types such as IBC denoms or tokenfactory. If you need to
 * restrict the denom to something very minimal, this needs to be implemented
 * separately in the caller.
 *
 * ```
 * import { parseCoins } from "@cosmjs/proto-signing";
 * // equals
 * import { parseCoins } from "@cosmjs/stargate";
 * // equals
 * import { parseCoins } from "@cosmjs/amino";
 * ```
 *
 * This function is not made for supporting decimal amounts and does not support
 * parsing gas prices.
 */
function parseCoins(input) {
    return input
        .replace(/\s/g, "")
        .split(",")
        .filter(Boolean)
        .map((part) => {
        // Denom regex from Stargate (https://github.com/cosmos/cosmos-sdk/blob/v0.42.7/types/coin.go#L599-L601)
        const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);
        if (!match)
            throw new Error("Got an invalid coin string");
        return {
            amount: match[1].replace(/^0+/, "") || "0",
            denom: match[2],
        };
    });
}
exports.parseCoins = parseCoins;
/**
 * Function to sum up coins with type Coin
 */
function addCoins(lhs, rhs) {
    if (lhs.denom !== rhs.denom)
        throw new Error("Trying to add two coins with different denoms");
    return {
        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,
        denom: lhs.denom,
    };
}
exports.addCoins = addCoins;
//# sourceMappingURL=coins.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/encoding.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/encoding.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const math_1 = __webpack_require__(/*! @cosmjs/math */ "./node_modules/@cosmjs/math/build/index.js");
const utils_1 = __webpack_require__(/*! @cosmjs/utils */ "./node_modules/@cosmjs/utils/build/index.js");
const pubkeys_1 = __webpack_require__(/*! ./pubkeys */ "./node_modules/@cosmjs/amino/build/pubkeys.js");
/**
 * Takes a Secp256k1 public key as raw bytes and returns the Amino JSON
 * representation of it (the type/value wrapper object).
 */
function encodeSecp256k1Pubkey(pubkey) {
    if (pubkey.length !== 33 || (pubkey[0] !== 0x02 && pubkey[0] !== 0x03)) {
        throw new Error("Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03");
    }
    return {
        type: pubkeys_1.pubkeyType.secp256k1,
        value: (0, encoding_1.toBase64)(pubkey),
    };
}
exports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;
/**
 * Takes an Edd25519 public key as raw bytes and returns the Amino JSON
 * representation of it (the type/value wrapper object).
 */
function encodeEd25519Pubkey(pubkey) {
    if (pubkey.length !== 32) {
        throw new Error("Ed25519 public key must be 32 bytes long");
    }
    return {
        type: pubkeys_1.pubkeyType.ed25519,
        value: (0, encoding_1.toBase64)(pubkey),
    };
}
exports.encodeEd25519Pubkey = encodeEd25519Pubkey;
// As discussed in https://github.com/binance-chain/javascript-sdk/issues/163
// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography
// Last bytes is varint-encoded length prefix
const pubkeyAminoPrefixSecp256k1 = (0, encoding_1.fromHex)("eb5ae987" + "21" /* fixed length */);
const pubkeyAminoPrefixEd25519 = (0, encoding_1.fromHex)("1624de64" + "20" /* fixed length */);
const pubkeyAminoPrefixSr25519 = (0, encoding_1.fromHex)("0dfb1005" + "20" /* fixed length */);
/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */
const pubkeyAminoPrefixMultisigThreshold = (0, encoding_1.fromHex)("22c1f7e2" /* variable length not included */);
/**
 * Decodes a pubkey in the Amino binary format to a type/value object.
 */
function decodeAminoPubkey(data) {
    if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSecp256k1)) {
        const rest = data.slice(pubkeyAminoPrefixSecp256k1.length);
        if (rest.length !== 33) {
            throw new Error("Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).");
        }
        return {
            type: pubkeys_1.pubkeyType.secp256k1,
            value: (0, encoding_1.toBase64)(rest),
        };
    }
    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixEd25519)) {
        const rest = data.slice(pubkeyAminoPrefixEd25519.length);
        if (rest.length !== 32) {
            throw new Error("Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).");
        }
        return {
            type: pubkeys_1.pubkeyType.ed25519,
            value: (0, encoding_1.toBase64)(rest),
        };
    }
    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSr25519)) {
        const rest = data.slice(pubkeyAminoPrefixSr25519.length);
        if (rest.length !== 32) {
            throw new Error("Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).");
        }
        return {
            type: pubkeys_1.pubkeyType.sr25519,
            value: (0, encoding_1.toBase64)(rest),
        };
    }
    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixMultisigThreshold)) {
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        return decodeMultisigPubkey(data);
    }
    else {
        throw new Error("Unsupported public key type. Amino data starts with: " + (0, encoding_1.toHex)(data.slice(0, 5)));
    }
}
exports.decodeAminoPubkey = decodeAminoPubkey;
/**
 * Decodes a bech32 pubkey to Amino binary, which is then decoded to a type/value object.
 * The bech32 prefix is ignored and discareded.
 *
 * @param bechEncoded the bech32 encoded pubkey
 */
function decodeBech32Pubkey(bechEncoded) {
    const { data } = (0, encoding_1.fromBech32)(bechEncoded);
    return decodeAminoPubkey(data);
}
exports.decodeBech32Pubkey = decodeBech32Pubkey;
/**
 * Uvarint decoder for Amino.
 * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/decoder.go#L64-76
 * @returns varint as number, and bytes count occupied by varaint
 */
function decodeUvarint(reader) {
    if (reader.length < 1) {
        throw new Error("Can't decode varint. EOF");
    }
    if (reader[0] > 127) {
        throw new Error("Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.");
    }
    return [reader[0], 1];
}
/**
 * Decodes a multisig pubkey to type object.
 * Pubkey structure [ prefix + const + threshold + loop:(const + pubkeyLength + pubkey            ) ]
 *                  [   4b   + 1b    +  varint   + loop:(1b    +    varint    + pubkeyLength bytes) ]
 * @param data encoded pubkey
 */
function decodeMultisigPubkey(data) {
    const reader = Array.from(data);
    // remove multisig amino prefix;
    const prefixFromReader = reader.splice(0, pubkeyAminoPrefixMultisigThreshold.length);
    if (!(0, utils_1.arrayContentStartsWith)(prefixFromReader, pubkeyAminoPrefixMultisigThreshold)) {
        throw new Error("Invalid multisig prefix.");
    }
    // remove 0x08 threshold prefix;
    if (reader.shift() != 0x08) {
        throw new Error("Invalid multisig data. Expecting 0x08 prefix before threshold.");
    }
    // read threshold
    const [threshold, thresholdBytesLength] = decodeUvarint(reader);
    reader.splice(0, thresholdBytesLength);
    // read participants pubkeys
    const pubkeys = [];
    while (reader.length > 0) {
        // remove 0x12 threshold prefix;
        if (reader.shift() != 0x12) {
            throw new Error("Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.");
        }
        // read pubkey length
        const [pubkeyLength, pubkeyLengthBytesSize] = decodeUvarint(reader);
        reader.splice(0, pubkeyLengthBytesSize);
        // verify that we can read pubkey
        if (reader.length < pubkeyLength) {
            throw new Error("Invalid multisig data length.");
        }
        // read and decode participant pubkey
        const encodedPubkey = reader.splice(0, pubkeyLength);
        const pubkey = decodeAminoPubkey(Uint8Array.from(encodedPubkey));
        pubkeys.push(pubkey);
    }
    return {
        type: pubkeys_1.pubkeyType.multisigThreshold,
        value: {
            threshold: threshold.toString(),
            pubkeys: pubkeys,
        },
    };
}
/**
 * Uvarint encoder for Amino. This is the same encoding as `binary.PutUvarint` from the Go
 * standard library.
 *
 * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/encoder.go#L77-L85
 */
function encodeUvarint(value) {
    const checked = math_1.Uint53.fromString(value.toString()).toNumber();
    if (checked > 127) {
        throw new Error("Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.");
    }
    return [checked];
}
/**
 * Encodes a public key to binary Amino.
 */
function encodeAminoPubkey(pubkey) {
    if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {
        const out = Array.from(pubkeyAminoPrefixMultisigThreshold);
        out.push(0x08); // TODO: What is this?
        out.push(...encodeUvarint(pubkey.value.threshold));
        for (const pubkeyData of pubkey.value.pubkeys.map((p) => encodeAminoPubkey(p))) {
            out.push(0x12); // TODO: What is this?
            out.push(...encodeUvarint(pubkeyData.length));
            out.push(...pubkeyData);
        }
        return new Uint8Array(out);
    }
    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {
        return new Uint8Array([...pubkeyAminoPrefixEd25519, ...(0, encoding_1.fromBase64)(pubkey.value)]);
    }
    else if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {
        return new Uint8Array([...pubkeyAminoPrefixSecp256k1, ...(0, encoding_1.fromBase64)(pubkey.value)]);
    }
    else {
        throw new Error("Unsupported pubkey type");
    }
}
exports.encodeAminoPubkey = encodeAminoPubkey;
/**
 * Encodes a public key to binary Amino and then to bech32.
 *
 * @param pubkey the public key to encode
 * @param prefix the bech32 prefix (human readable part)
 */
function encodeBech32Pubkey(pubkey, prefix) {
    return (0, encoding_1.toBech32)(prefix, encodeAminoPubkey(pubkey));
}
exports.encodeBech32Pubkey = encodeBech32Pubkey;
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.omitDefault = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;
var addresses_1 = __webpack_require__(/*! ./addresses */ "./node_modules/@cosmjs/amino/build/addresses.js");
Object.defineProperty(exports, "pubkeyToAddress", ({ enumerable: true, get: function () { return addresses_1.pubkeyToAddress; } }));
Object.defineProperty(exports, "pubkeyToRawAddress", ({ enumerable: true, get: function () { return addresses_1.pubkeyToRawAddress; } }));
Object.defineProperty(exports, "rawEd25519PubkeyToRawAddress", ({ enumerable: true, get: function () { return addresses_1.rawEd25519PubkeyToRawAddress; } }));
Object.defineProperty(exports, "rawSecp256k1PubkeyToRawAddress", ({ enumerable: true, get: function () { return addresses_1.rawSecp256k1PubkeyToRawAddress; } }));
var coins_1 = __webpack_require__(/*! ./coins */ "./node_modules/@cosmjs/amino/build/coins.js");
Object.defineProperty(exports, "addCoins", ({ enumerable: true, get: function () { return coins_1.addCoins; } }));
Object.defineProperty(exports, "coin", ({ enumerable: true, get: function () { return coins_1.coin; } }));
Object.defineProperty(exports, "coins", ({ enumerable: true, get: function () { return coins_1.coins; } }));
Object.defineProperty(exports, "parseCoins", ({ enumerable: true, get: function () { return coins_1.parseCoins; } }));
var encoding_1 = __webpack_require__(/*! ./encoding */ "./node_modules/@cosmjs/amino/build/encoding.js");
Object.defineProperty(exports, "decodeAminoPubkey", ({ enumerable: true, get: function () { return encoding_1.decodeAminoPubkey; } }));
Object.defineProperty(exports, "decodeBech32Pubkey", ({ enumerable: true, get: function () { return encoding_1.decodeBech32Pubkey; } }));
Object.defineProperty(exports, "encodeAminoPubkey", ({ enumerable: true, get: function () { return encoding_1.encodeAminoPubkey; } }));
Object.defineProperty(exports, "encodeBech32Pubkey", ({ enumerable: true, get: function () { return encoding_1.encodeBech32Pubkey; } }));
Object.defineProperty(exports, "encodeEd25519Pubkey", ({ enumerable: true, get: function () { return encoding_1.encodeEd25519Pubkey; } }));
Object.defineProperty(exports, "encodeSecp256k1Pubkey", ({ enumerable: true, get: function () { return encoding_1.encodeSecp256k1Pubkey; } }));
var multisig_1 = __webpack_require__(/*! ./multisig */ "./node_modules/@cosmjs/amino/build/multisig.js");
Object.defineProperty(exports, "createMultisigThresholdPubkey", ({ enumerable: true, get: function () { return multisig_1.createMultisigThresholdPubkey; } }));
var omitdefault_1 = __webpack_require__(/*! ./omitdefault */ "./node_modules/@cosmjs/amino/build/omitdefault.js");
Object.defineProperty(exports, "omitDefault", ({ enumerable: true, get: function () { return omitdefault_1.omitDefault; } }));
var paths_1 = __webpack_require__(/*! ./paths */ "./node_modules/@cosmjs/amino/build/paths.js");
Object.defineProperty(exports, "makeCosmoshubPath", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));
var pubkeys_1 = __webpack_require__(/*! ./pubkeys */ "./node_modules/@cosmjs/amino/build/pubkeys.js");
Object.defineProperty(exports, "isEd25519Pubkey", ({ enumerable: true, get: function () { return pubkeys_1.isEd25519Pubkey; } }));
Object.defineProperty(exports, "isMultisigThresholdPubkey", ({ enumerable: true, get: function () { return pubkeys_1.isMultisigThresholdPubkey; } }));
Object.defineProperty(exports, "isSecp256k1Pubkey", ({ enumerable: true, get: function () { return pubkeys_1.isSecp256k1Pubkey; } }));
Object.defineProperty(exports, "isSinglePubkey", ({ enumerable: true, get: function () { return pubkeys_1.isSinglePubkey; } }));
Object.defineProperty(exports, "pubkeyType", ({ enumerable: true, get: function () { return pubkeys_1.pubkeyType; } }));
var secp256k1hdwallet_1 = __webpack_require__(/*! ./secp256k1hdwallet */ "./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js");
Object.defineProperty(exports, "extractKdfConfiguration", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.extractKdfConfiguration; } }));
Object.defineProperty(exports, "Secp256k1HdWallet", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.Secp256k1HdWallet; } }));
var secp256k1wallet_1 = __webpack_require__(/*! ./secp256k1wallet */ "./node_modules/@cosmjs/amino/build/secp256k1wallet.js");
Object.defineProperty(exports, "Secp256k1Wallet", ({ enumerable: true, get: function () { return secp256k1wallet_1.Secp256k1Wallet; } }));
var signature_1 = __webpack_require__(/*! ./signature */ "./node_modules/@cosmjs/amino/build/signature.js");
Object.defineProperty(exports, "decodeSignature", ({ enumerable: true, get: function () { return signature_1.decodeSignature; } }));
Object.defineProperty(exports, "encodeSecp256k1Signature", ({ enumerable: true, get: function () { return signature_1.encodeSecp256k1Signature; } }));
var signdoc_1 = __webpack_require__(/*! ./signdoc */ "./node_modules/@cosmjs/amino/build/signdoc.js");
Object.defineProperty(exports, "makeSignDoc", ({ enumerable: true, get: function () { return signdoc_1.makeSignDoc; } }));
Object.defineProperty(exports, "serializeSignDoc", ({ enumerable: true, get: function () { return signdoc_1.serializeSignDoc; } }));
var stdtx_1 = __webpack_require__(/*! ./stdtx */ "./node_modules/@cosmjs/amino/build/stdtx.js");
Object.defineProperty(exports, "isStdTx", ({ enumerable: true, get: function () { return stdtx_1.isStdTx; } }));
Object.defineProperty(exports, "makeStdTx", ({ enumerable: true, get: function () { return stdtx_1.makeStdTx; } }));
var wallet_1 = __webpack_require__(/*! ./wallet */ "./node_modules/@cosmjs/amino/build/wallet.js");
Object.defineProperty(exports, "executeKdf", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/multisig.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/multisig.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMultisigThresholdPubkey = exports.compareArrays = void 0;
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const math_1 = __webpack_require__(/*! @cosmjs/math */ "./node_modules/@cosmjs/math/build/index.js");
const addresses_1 = __webpack_require__(/*! ./addresses */ "./node_modules/@cosmjs/amino/build/addresses.js");
/**
 * Compare arrays lexicographically.
 *
 * Returns value < 0 if `a < b`.
 * Returns value > 0 if `a > b`.
 * Returns 0 if `a === b`.
 */
function compareArrays(a, b) {
    const aHex = (0, encoding_1.toHex)(a);
    const bHex = (0, encoding_1.toHex)(b);
    return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;
}
exports.compareArrays = compareArrays;
function createMultisigThresholdPubkey(pubkeys, threshold, nosort = false) {
    const uintThreshold = new math_1.Uint53(threshold);
    if (uintThreshold.toNumber() > pubkeys.length) {
        throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);
    }
    const outPubkeys = nosort
        ? pubkeys
        : Array.from(pubkeys).sort((lhs, rhs) => {
            // https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174
            const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);
            const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);
            return compareArrays(addressLhs, addressRhs);
        });
    return {
        type: "tendermint/PubKeyMultisigThreshold",
        value: {
            threshold: uintThreshold.toString(),
            pubkeys: outPubkeys,
        },
    };
}
exports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;
//# sourceMappingURL=multisig.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/omitdefault.js":
/*!*********************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/omitdefault.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.omitDefault = void 0;
/**
 * Returns the given input. If the input is the default value
 * of protobuf, undefined is retunred. Use this when creating Amino JSON converters.
 */
function omitDefault(input) {
    switch (typeof input) {
        case "string":
            return input === "" ? undefined : input;
        case "number":
            return input === 0 ? undefined : input;
        case "bigint":
            return input === BigInt(0) ? undefined : input;
        case "boolean":
            return !input ? undefined : input;
        default:
            throw new Error(`Got unsupported type '${typeof input}'`);
    }
}
exports.omitDefault = omitDefault;
//# sourceMappingURL=omitdefault.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/paths.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/paths.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeCosmoshubPath = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
/**
 * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`
 * with 0-based account index `a`.
 */
function makeCosmoshubPath(a) {
    return [
        crypto_1.Slip10RawIndex.hardened(44),
        crypto_1.Slip10RawIndex.hardened(118),
        crypto_1.Slip10RawIndex.hardened(0),
        crypto_1.Slip10RawIndex.normal(0),
        crypto_1.Slip10RawIndex.normal(a),
    ];
}
exports.makeCosmoshubPath = makeCosmoshubPath;
//# sourceMappingURL=paths.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/pubkeys.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/pubkeys.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;
function isEd25519Pubkey(pubkey) {
    return pubkey.type === "tendermint/PubKeyEd25519";
}
exports.isEd25519Pubkey = isEd25519Pubkey;
function isSecp256k1Pubkey(pubkey) {
    return pubkey.type === "tendermint/PubKeySecp256k1";
}
exports.isSecp256k1Pubkey = isSecp256k1Pubkey;
exports.pubkeyType = {
    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */
    secp256k1: "tendermint/PubKeySecp256k1",
    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */
    ed25519: "tendermint/PubKeyEd25519",
    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */
    sr25519: "tendermint/PubKeySr25519",
    multisigThreshold: "tendermint/PubKeyMultisigThreshold",
};
function isSinglePubkey(pubkey) {
    const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];
    return singPubkeyTypes.includes(pubkey.type);
}
exports.isSinglePubkey = isSinglePubkey;
function isMultisigThresholdPubkey(pubkey) {
    return pubkey.type === "tendermint/PubKeyMultisigThreshold";
}
exports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;
//# sourceMappingURL=pubkeys.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js":
/*!***************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Secp256k1HdWallet = exports.extractKdfConfiguration = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const utils_1 = __webpack_require__(/*! @cosmjs/utils */ "./node_modules/@cosmjs/utils/build/index.js");
const addresses_1 = __webpack_require__(/*! ./addresses */ "./node_modules/@cosmjs/amino/build/addresses.js");
const paths_1 = __webpack_require__(/*! ./paths */ "./node_modules/@cosmjs/amino/build/paths.js");
const signature_1 = __webpack_require__(/*! ./signature */ "./node_modules/@cosmjs/amino/build/signature.js");
const signdoc_1 = __webpack_require__(/*! ./signdoc */ "./node_modules/@cosmjs/amino/build/signdoc.js");
const wallet_1 = __webpack_require__(/*! ./wallet */ "./node_modules/@cosmjs/amino/build/wallet.js");
const serializationTypeV1 = "secp256k1wallet-v1";
/**
 * A KDF configuration that is not very strong but can be used on the main thread.
 * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.
 */
const basicPasswordHashingOptions = {
    algorithm: "argon2id",
    params: {
        outputLength: 32,
        opsLimit: 24,
        memLimitKib: 12 * 1024,
    },
};
function isDerivationJson(thing) {
    if (!(0, utils_1.isNonNullObject)(thing))
        return false;
    if (typeof thing.hdPath !== "string")
        return false;
    if (typeof thing.prefix !== "string")
        return false;
    return true;
}
function extractKdfConfigurationV1(doc) {
    return doc.kdf;
}
function extractKdfConfiguration(serialization) {
    const root = JSON.parse(serialization);
    if (!(0, utils_1.isNonNullObject)(root))
        throw new Error("Root document is not an object.");
    switch (root.type) {
        case serializationTypeV1:
            return extractKdfConfigurationV1(root);
        default:
            throw new Error("Unsupported serialization type");
    }
}
exports.extractKdfConfiguration = extractKdfConfiguration;
const defaultOptions = {
    bip39Password: "",
    hdPaths: [(0, paths_1.makeCosmoshubPath)(0)],
    prefix: "cosmos",
};
class Secp256k1HdWallet {
    /**
     * Restores a wallet from the given BIP39 mnemonic.
     *
     * @param mnemonic Any valid English mnemonic.
     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
     */
    static async fromMnemonic(mnemonic, options = {}) {
        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);
        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
        return new Secp256k1HdWallet(mnemonicChecked, {
            ...options,
            seed: seed,
        });
    }
    /**
     * Generates a new wallet with a BIP39 mnemonic of the given length.
     *
     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).
     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
     */
    static async generate(length = 12, options = {}) {
        const entropyLength = 4 * Math.floor((11 * length) / 33);
        const entropy = crypto_1.Random.getBytes(entropyLength);
        const mnemonic = crypto_1.Bip39.encode(entropy);
        return Secp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);
    }
    /**
     * Restores a wallet from an encrypted serialization.
     *
     * @param password The user provided password used to generate an encryption key via a KDF.
     *                 This is not normalized internally (see "Unicode normalization" to learn more).
     */
    static async deserialize(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
            throw new Error("Root document is not an object.");
        switch (root.type) {
            case serializationTypeV1:
                return Secp256k1HdWallet.deserializeTypeV1(serialization, password);
            default:
                throw new Error("Unsupported serialization type");
        }
    }
    /**
     * Restores a wallet from an encrypted serialization.
     *
     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows
     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
     *
     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be
     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.
     */
    static async deserializeWithEncryptionKey(serialization, encryptionKey) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
            throw new Error("Root document is not an object.");
        const untypedRoot = root;
        switch (untypedRoot.type) {
            case serializationTypeV1: {
                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);
                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));
                const { mnemonic, accounts } = decryptedDocument;
                (0, utils_1.assert)(typeof mnemonic === "string");
                if (!Array.isArray(accounts))
                    throw new Error("Property 'accounts' is not an array");
                if (!accounts.every((account) => isDerivationJson(account))) {
                    throw new Error("Account is not in the correct format.");
                }
                const firstPrefix = accounts[0].prefix;
                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {
                    throw new Error("Accounts do not all have the same prefix");
                }
                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));
                return Secp256k1HdWallet.fromMnemonic(mnemonic, {
                    hdPaths: hdPaths,
                    prefix: firstPrefix,
                });
            }
            default:
                throw new Error("Unsupported serialization type");
        }
    }
    static async deserializeTypeV1(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
            throw new Error("Root document is not an object.");
        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);
        return Secp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);
    }
    constructor(mnemonic, options) {
        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
        const prefix = options.prefix ?? defaultOptions.prefix;
        this.secret = mnemonic;
        this.seed = options.seed;
        this.accounts = hdPaths.map((hdPath) => ({
            hdPath: hdPath,
            prefix,
        }));
    }
    get mnemonic() {
        return this.secret.toString();
    }
    async getAccounts() {
        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();
        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({
            algo: algo,
            pubkey: pubkey,
            address: address,
        }));
    }
    async signAmino(signerAddress, signDoc) {
        const accounts = await this.getAccountsWithPrivkeys();
        const account = accounts.find(({ address }) => address === signerAddress);
        if (account === undefined) {
            throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const { privkey, pubkey } = account;
        const message = (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signDoc));
        const signature = await crypto_1.Secp256k1.createSignature(message, privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        return {
            signed: signDoc,
            signature: (0, signature_1.encodeSecp256k1Signature)(pubkey, signatureBytes),
        };
    }
    /**
     * Generates an encrypted serialization of this wallet.
     *
     * @param password The user provided password used to generate an encryption key via a KDF.
     *                 This is not normalized internally (see "Unicode normalization" to learn more).
     */
    async serialize(password) {
        const kdfConfiguration = basicPasswordHashingOptions;
        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);
    }
    /**
     * Generates an encrypted serialization of this wallet.
     *
     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to
     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
     *
     * The caller is responsible for ensuring the key was derived with the given KDF options. If this
     * is not the case, the wallet cannot be restored with the original password.
     */
    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {
        const dataToEncrypt = {
            mnemonic: this.mnemonic,
            accounts: this.accounts.map(({ hdPath, prefix }) => ({
                hdPath: (0, crypto_1.pathToString)(hdPath),
                prefix: prefix,
            })),
        };
        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));
        const encryptionConfiguration = {
            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,
        };
        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);
        const out = {
            type: serializationTypeV1,
            kdf: kdfConfiguration,
            encryption: encryptionConfiguration,
            data: (0, encoding_1.toBase64)(encryptedData),
        };
        return JSON.stringify(out);
    }
    async getKeyPair(hdPath) {
        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);
        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);
        return {
            privkey: privkey,
            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),
        };
    }
    async getAccountsWithPrivkeys() {
        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {
            const { privkey, pubkey } = await this.getKeyPair(hdPath);
            const address = (0, encoding_1.toBech32)(prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(pubkey));
            return {
                algo: "secp256k1",
                privkey: privkey,
                pubkey: pubkey,
                address: address,
            };
        }));
    }
}
exports.Secp256k1HdWallet = Secp256k1HdWallet;
//# sourceMappingURL=secp256k1hdwallet.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/secp256k1wallet.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1wallet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Secp256k1Wallet = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const addresses_1 = __webpack_require__(/*! ./addresses */ "./node_modules/@cosmjs/amino/build/addresses.js");
const signature_1 = __webpack_require__(/*! ./signature */ "./node_modules/@cosmjs/amino/build/signature.js");
const signdoc_1 = __webpack_require__(/*! ./signdoc */ "./node_modules/@cosmjs/amino/build/signdoc.js");
/**
 * A wallet that holds a single secp256k1 keypair.
 *
 * If you want to work with BIP39 mnemonics and multiple accounts, use Secp256k1HdWallet.
 */
class Secp256k1Wallet {
    /**
     * Creates a Secp256k1Wallet from the given private key
     *
     * @param privkey The private key.
     * @param prefix The bech32 address prefix (human readable part). Defaults to "cosmos".
     */
    static async fromKey(privkey, prefix = "cosmos") {
        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;
        return new Secp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);
    }
    constructor(privkey, pubkey, prefix) {
        this.privkey = privkey;
        this.pubkey = pubkey;
        this.prefix = prefix;
    }
    get address() {
        return (0, encoding_1.toBech32)(this.prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));
    }
    async getAccounts() {
        return [
            {
                algo: "secp256k1",
                address: this.address,
                pubkey: this.pubkey,
            },
        ];
    }
    async signAmino(signerAddress, signDoc) {
        if (signerAddress !== this.address) {
            throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const message = new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signDoc)).digest();
        const signature = await crypto_1.Secp256k1.createSignature(message, this.privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        return {
            signed: signDoc,
            signature: (0, signature_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes),
        };
    }
}
exports.Secp256k1Wallet = Secp256k1Wallet;
//# sourceMappingURL=secp256k1wallet.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/signature.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signature.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeSignature = exports.encodeSecp256k1Signature = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const encoding_2 = __webpack_require__(/*! ./encoding */ "./node_modules/@cosmjs/amino/build/encoding.js");
const pubkeys_1 = __webpack_require__(/*! ./pubkeys */ "./node_modules/@cosmjs/amino/build/pubkeys.js");
/**
 * Takes a binary pubkey and signature to create a signature object
 *
 * @param pubkey a compressed secp256k1 public key
 * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s
 */
function encodeSecp256k1Signature(pubkey, signature) {
    if (signature.length !== 64) {
        throw new Error("Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.");
    }
    return {
        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),
        signature: (0, encoding_1.toBase64)(signature),
    };
}
exports.encodeSecp256k1Signature = encodeSecp256k1Signature;
function decodeSignature(signature) {
    switch (signature.pub_key.type) {
        // Note: please don't add cases here without writing additional unit tests
        case pubkeys_1.pubkeyType.secp256k1:
            return {
                pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),
                signature: (0, encoding_1.fromBase64)(signature.signature),
            };
        default:
            throw new Error("Unsupported pubkey type");
    }
}
exports.decodeSignature = decodeSignature;
//# sourceMappingURL=signature.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/signdoc.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signdoc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.serializeSignDoc = exports.escapeCharacters = exports.makeSignDoc = exports.sortedJsonStringify = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const math_1 = __webpack_require__(/*! @cosmjs/math */ "./node_modules/@cosmjs/math/build/index.js");
function sortedObject(obj) {
    if (typeof obj !== "object" || obj === null) {
        return obj;
    }
    if (Array.isArray(obj)) {
        return obj.map(sortedObject);
    }
    const sortedKeys = Object.keys(obj).sort();
    const result = {};
    // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code
    sortedKeys.forEach((key) => {
        result[key] = sortedObject(obj[key]);
    });
    return result;
}
/** Returns a JSON string with objects sorted by key */
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function sortedJsonStringify(obj) {
    return JSON.stringify(sortedObject(obj));
}
exports.sortedJsonStringify = sortedJsonStringify;
function makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence, timeout_height) {
    return {
        chain_id: chainId,
        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),
        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),
        fee: fee,
        msgs: msgs,
        memo: memo || "",
        ...(timeout_height && { timeout_height: timeout_height.toString() }),
    };
}
exports.makeSignDoc = makeSignDoc;
/**
 * Takes a valid JSON document and performs the following escapings in string values:
 *
 * `&` -> `\u0026`
 * `<` -> `\u003c`
 * `>` -> `\u003e`
 *
 * Since those characters do not occur in other places of the JSON document, only
 * string values are affected.
 *
 * If the input is invalid JSON, the behaviour is undefined.
 */
function escapeCharacters(input) {
    // When we migrate to target es2021 or above, we can use replaceAll instead of global patterns.
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll
    const amp = /&/g;
    const lt = /</g;
    const gt = />/g;
    return input.replace(amp, "\\u0026").replace(lt, "\\u003c").replace(gt, "\\u003e");
}
exports.escapeCharacters = escapeCharacters;
function serializeSignDoc(signDoc) {
    const serialized = escapeCharacters(sortedJsonStringify(signDoc));
    return (0, encoding_1.toUtf8)(serialized);
}
exports.serializeSignDoc = serializeSignDoc;
//# sourceMappingURL=signdoc.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/stdtx.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/stdtx.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeStdTx = exports.isStdTx = void 0;
function isStdTx(txValue) {
    const { memo, msg, fee, signatures } = txValue;
    return (typeof memo === "string" && Array.isArray(msg) && typeof fee === "object" && Array.isArray(signatures));
}
exports.isStdTx = isStdTx;
function makeStdTx(content, signatures) {
    return {
        msg: content.msgs,
        fee: content.fee,
        memo: content.memo,
        signatures: Array.isArray(signatures) ? signatures : [signatures],
    };
}
exports.makeStdTx = makeStdTx;
//# sourceMappingURL=stdtx.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/amino/build/wallet.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/wallet.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
/**
 * A fixed salt is chosen to archive a deterministic password to key derivation.
 * This reduces the scope of a potential rainbow attack to all CosmJS users.
 * Must be 16 bytes due to implementation limitations.
 */
exports.cosmjsSalt = (0, encoding_1.toAscii)("The CosmJS salt.");
async function executeKdf(password, configuration) {
    switch (configuration.algorithm) {
        case "argon2id": {
            const options = configuration.params;
            if (!(0, crypto_1.isArgon2idOptions)(options))
                throw new Error("Invalid format of argon2id params");
            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);
        }
        default:
            throw new Error("Unsupported KDF algorithm");
    }
}
exports.executeKdf = executeKdf;
exports.supportedAlgorithms = {
    xchacha20poly1305Ietf: "xchacha20poly1305-ietf",
};
async function encrypt(plaintext, encryptionKey, config) {
    switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);
            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api
            return new Uint8Array([
                ...nonce,
                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),
            ]);
        }
        default:
            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
    }
}
exports.encrypt = encrypt;
async function decrypt(ciphertext, encryptionKey, config) {
    switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);
            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);
        }
        default:
            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
    }
}
exports.decrypt = decrypt;
//# sourceMappingURL=wallet.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/bip39.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/bip39.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Bip39 = exports.EnglishMnemonic = exports.mnemonicToEntropy = exports.entropyToMnemonic = void 0;
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const pbkdf2_1 = __webpack_require__(/*! ./pbkdf2 */ "./node_modules/@cosmjs/crypto/build/pbkdf2.js");
const sha_1 = __webpack_require__(/*! ./sha */ "./node_modules/@cosmjs/crypto/build/sha.js");
const wordlist = [
    "abandon",
    "ability",
    "able",
    "about",
    "above",
    "absent",
    "absorb",
    "abstract",
    "absurd",
    "abuse",
    "access",
    "accident",
    "account",
    "accuse",
    "achieve",
    "acid",
    "acoustic",
    "acquire",
    "across",
    "act",
    "action",
    "actor",
    "actress",
    "actual",
    "adapt",
    "add",
    "addict",
    "address",
    "adjust",
    "admit",
    "adult",
    "advance",
    "advice",
    "aerobic",
    "affair",
    "afford",
    "afraid",
    "again",
    "age",
    "agent",
    "agree",
    "ahead",
    "aim",
    "air",
    "airport",
    "aisle",
    "alarm",
    "album",
    "alcohol",
    "alert",
    "alien",
    "all",
    "alley",
    "allow",
    "almost",
    "alone",
    "alpha",
    "already",
    "also",
    "alter",
    "always",
    "amateur",
    "amazing",
    "among",
    "amount",
    "amused",
    "analyst",
    "anchor",
    "ancient",
    "anger",
    "angle",
    "angry",
    "animal",
    "ankle",
    "announce",
    "annual",
    "another",
    "answer",
    "antenna",
    "antique",
    "anxiety",
    "any",
    "apart",
    "apology",
    "appear",
    "apple",
    "approve",
    "april",
    "arch",
    "arctic",
    "area",
    "arena",
    "argue",
    "arm",
    "armed",
    "armor",
    "army",
    "around",
    "arrange",
    "arrest",
    "arrive",
    "arrow",
    "art",
    "artefact",
    "artist",
    "artwork",
    "ask",
    "aspect",
    "assault",
    "asset",
    "assist",
    "assume",
    "asthma",
    "athlete",
    "atom",
    "attack",
    "attend",
    "attitude",
    "attract",
    "auction",
    "audit",
    "august",
    "aunt",
    "author",
    "auto",
    "autumn",
    "average",
    "avocado",
    "avoid",
    "awake",
    "aware",
    "away",
    "awesome",
    "awful",
    "awkward",
    "axis",
    "baby",
    "bachelor",
    "bacon",
    "badge",
    "bag",
    "balance",
    "balcony",
    "ball",
    "bamboo",
    "banana",
    "banner",
    "bar",
    "barely",
    "bargain",
    "barrel",
    "base",
    "basic",
    "basket",
    "battle",
    "beach",
    "bean",
    "beauty",
    "because",
    "become",
    "beef",
    "before",
    "begin",
    "behave",
    "behind",
    "believe",
    "below",
    "belt",
    "bench",
    "benefit",
    "best",
    "betray",
    "better",
    "between",
    "beyond",
    "bicycle",
    "bid",
    "bike",
    "bind",
    "biology",
    "bird",
    "birth",
    "bitter",
    "black",
    "blade",
    "blame",
    "blanket",
    "blast",
    "bleak",
    "bless",
    "blind",
    "blood",
    "blossom",
    "blouse",
    "blue",
    "blur",
    "blush",
    "board",
    "boat",
    "body",
    "boil",
    "bomb",
    "bone",
    "bonus",
    "book",
    "boost",
    "border",
    "boring",
    "borrow",
    "boss",
    "bottom",
    "bounce",
    "box",
    "boy",
    "bracket",
    "brain",
    "brand",
    "brass",
    "brave",
    "bread",
    "breeze",
    "brick",
    "bridge",
    "brief",
    "bright",
    "bring",
    "brisk",
    "broccoli",
    "broken",
    "bronze",
    "broom",
    "brother",
    "brown",
    "brush",
    "bubble",
    "buddy",
    "budget",
    "buffalo",
    "build",
    "bulb",
    "bulk",
    "bullet",
    "bundle",
    "bunker",
    "burden",
    "burger",
    "burst",
    "bus",
    "business",
    "busy",
    "butter",
    "buyer",
    "buzz",
    "cabbage",
    "cabin",
    "cable",
    "cactus",
    "cage",
    "cake",
    "call",
    "calm",
    "camera",
    "camp",
    "can",
    "canal",
    "cancel",
    "candy",
    "cannon",
    "canoe",
    "canvas",
    "canyon",
    "capable",
    "capital",
    "captain",
    "car",
    "carbon",
    "card",
    "cargo",
    "carpet",
    "carry",
    "cart",
    "case",
    "cash",
    "casino",
    "castle",
    "casual",
    "cat",
    "catalog",
    "catch",
    "category",
    "cattle",
    "caught",
    "cause",
    "caution",
    "cave",
    "ceiling",
    "celery",
    "cement",
    "census",
    "century",
    "cereal",
    "certain",
    "chair",
    "chalk",
    "champion",
    "change",
    "chaos",
    "chapter",
    "charge",
    "chase",
    "chat",
    "cheap",
    "check",
    "cheese",
    "chef",
    "cherry",
    "chest",
    "chicken",
    "chief",
    "child",
    "chimney",
    "choice",
    "choose",
    "chronic",
    "chuckle",
    "chunk",
    "churn",
    "cigar",
    "cinnamon",
    "circle",
    "citizen",
    "city",
    "civil",
    "claim",
    "clap",
    "clarify",
    "claw",
    "clay",
    "clean",
    "clerk",
    "clever",
    "click",
    "client",
    "cliff",
    "climb",
    "clinic",
    "clip",
    "clock",
    "clog",
    "close",
    "cloth",
    "cloud",
    "clown",
    "club",
    "clump",
    "cluster",
    "clutch",
    "coach",
    "coast",
    "coconut",
    "code",
    "coffee",
    "coil",
    "coin",
    "collect",
    "color",
    "column",
    "combine",
    "come",
    "comfort",
    "comic",
    "common",
    "company",
    "concert",
    "conduct",
    "confirm",
    "congress",
    "connect",
    "consider",
    "control",
    "convince",
    "cook",
    "cool",
    "copper",
    "copy",
    "coral",
    "core",
    "corn",
    "correct",
    "cost",
    "cotton",
    "couch",
    "country",
    "couple",
    "course",
    "cousin",
    "cover",
    "coyote",
    "crack",
    "cradle",
    "craft",
    "cram",
    "crane",
    "crash",
    "crater",
    "crawl",
    "crazy",
    "cream",
    "credit",
    "creek",
    "crew",
    "cricket",
    "crime",
    "crisp",
    "critic",
    "crop",
    "cross",
    "crouch",
    "crowd",
    "crucial",
    "cruel",
    "cruise",
    "crumble",
    "crunch",
    "crush",
    "cry",
    "crystal",
    "cube",
    "culture",
    "cup",
    "cupboard",
    "curious",
    "current",
    "curtain",
    "curve",
    "cushion",
    "custom",
    "cute",
    "cycle",
    "dad",
    "damage",
    "damp",
    "dance",
    "danger",
    "daring",
    "dash",
    "daughter",
    "dawn",
    "day",
    "deal",
    "debate",
    "debris",
    "decade",
    "december",
    "decide",
    "decline",
    "decorate",
    "decrease",
    "deer",
    "defense",
    "define",
    "defy",
    "degree",
    "delay",
    "deliver",
    "demand",
    "demise",
    "denial",
    "dentist",
    "deny",
    "depart",
    "depend",
    "deposit",
    "depth",
    "deputy",
    "derive",
    "describe",
    "desert",
    "design",
    "desk",
    "despair",
    "destroy",
    "detail",
    "detect",
    "develop",
    "device",
    "devote",
    "diagram",
    "dial",
    "diamond",
    "diary",
    "dice",
    "diesel",
    "diet",
    "differ",
    "digital",
    "dignity",
    "dilemma",
    "dinner",
    "dinosaur",
    "direct",
    "dirt",
    "disagree",
    "discover",
    "disease",
    "dish",
    "dismiss",
    "disorder",
    "display",
    "distance",
    "divert",
    "divide",
    "divorce",
    "dizzy",
    "doctor",
    "document",
    "dog",
    "doll",
    "dolphin",
    "domain",
    "donate",
    "donkey",
    "donor",
    "door",
    "dose",
    "double",
    "dove",
    "draft",
    "dragon",
    "drama",
    "drastic",
    "draw",
    "dream",
    "dress",
    "drift",
    "drill",
    "drink",
    "drip",
    "drive",
    "drop",
    "drum",
    "dry",
    "duck",
    "dumb",
    "dune",
    "during",
    "dust",
    "dutch",
    "duty",
    "dwarf",
    "dynamic",
    "eager",
    "eagle",
    "early",
    "earn",
    "earth",
    "easily",
    "east",
    "easy",
    "echo",
    "ecology",
    "economy",
    "edge",
    "edit",
    "educate",
    "effort",
    "egg",
    "eight",
    "either",
    "elbow",
    "elder",
    "electric",
    "elegant",
    "element",
    "elephant",
    "elevator",
    "elite",
    "else",
    "embark",
    "embody",
    "embrace",
    "emerge",
    "emotion",
    "employ",
    "empower",
    "empty",
    "enable",
    "enact",
    "end",
    "endless",
    "endorse",
    "enemy",
    "energy",
    "enforce",
    "engage",
    "engine",
    "enhance",
    "enjoy",
    "enlist",
    "enough",
    "enrich",
    "enroll",
    "ensure",
    "enter",
    "entire",
    "entry",
    "envelope",
    "episode",
    "equal",
    "equip",
    "era",
    "erase",
    "erode",
    "erosion",
    "error",
    "erupt",
    "escape",
    "essay",
    "essence",
    "estate",
    "eternal",
    "ethics",
    "evidence",
    "evil",
    "evoke",
    "evolve",
    "exact",
    "example",
    "excess",
    "exchange",
    "excite",
    "exclude",
    "excuse",
    "execute",
    "exercise",
    "exhaust",
    "exhibit",
    "exile",
    "exist",
    "exit",
    "exotic",
    "expand",
    "expect",
    "expire",
    "explain",
    "expose",
    "express",
    "extend",
    "extra",
    "eye",
    "eyebrow",
    "fabric",
    "face",
    "faculty",
    "fade",
    "faint",
    "faith",
    "fall",
    "false",
    "fame",
    "family",
    "famous",
    "fan",
    "fancy",
    "fantasy",
    "farm",
    "fashion",
    "fat",
    "fatal",
    "father",
    "fatigue",
    "fault",
    "favorite",
    "feature",
    "february",
    "federal",
    "fee",
    "feed",
    "feel",
    "female",
    "fence",
    "festival",
    "fetch",
    "fever",
    "few",
    "fiber",
    "fiction",
    "field",
    "figure",
    "file",
    "film",
    "filter",
    "final",
    "find",
    "fine",
    "finger",
    "finish",
    "fire",
    "firm",
    "first",
    "fiscal",
    "fish",
    "fit",
    "fitness",
    "fix",
    "flag",
    "flame",
    "flash",
    "flat",
    "flavor",
    "flee",
    "flight",
    "flip",
    "float",
    "flock",
    "floor",
    "flower",
    "fluid",
    "flush",
    "fly",
    "foam",
    "focus",
    "fog",
    "foil",
    "fold",
    "follow",
    "food",
    "foot",
    "force",
    "forest",
    "forget",
    "fork",
    "fortune",
    "forum",
    "forward",
    "fossil",
    "foster",
    "found",
    "fox",
    "fragile",
    "frame",
    "frequent",
    "fresh",
    "friend",
    "fringe",
    "frog",
    "front",
    "frost",
    "frown",
    "frozen",
    "fruit",
    "fuel",
    "fun",
    "funny",
    "furnace",
    "fury",
    "future",
    "gadget",
    "gain",
    "galaxy",
    "gallery",
    "game",
    "gap",
    "garage",
    "garbage",
    "garden",
    "garlic",
    "garment",
    "gas",
    "gasp",
    "gate",
    "gather",
    "gauge",
    "gaze",
    "general",
    "genius",
    "genre",
    "gentle",
    "genuine",
    "gesture",
    "ghost",
    "giant",
    "gift",
    "giggle",
    "ginger",
    "giraffe",
    "girl",
    "give",
    "glad",
    "glance",
    "glare",
    "glass",
    "glide",
    "glimpse",
    "globe",
    "gloom",
    "glory",
    "glove",
    "glow",
    "glue",
    "goat",
    "goddess",
    "gold",
    "good",
    "goose",
    "gorilla",
    "gospel",
    "gossip",
    "govern",
    "gown",
    "grab",
    "grace",
    "grain",
    "grant",
    "grape",
    "grass",
    "gravity",
    "great",
    "green",
    "grid",
    "grief",
    "grit",
    "grocery",
    "group",
    "grow",
    "grunt",
    "guard",
    "guess",
    "guide",
    "guilt",
    "guitar",
    "gun",
    "gym",
    "habit",
    "hair",
    "half",
    "hammer",
    "hamster",
    "hand",
    "happy",
    "harbor",
    "hard",
    "harsh",
    "harvest",
    "hat",
    "have",
    "hawk",
    "hazard",
    "head",
    "health",
    "heart",
    "heavy",
    "hedgehog",
    "height",
    "hello",
    "helmet",
    "help",
    "hen",
    "hero",
    "hidden",
    "high",
    "hill",
    "hint",
    "hip",
    "hire",
    "history",
    "hobby",
    "hockey",
    "hold",
    "hole",
    "holiday",
    "hollow",
    "home",
    "honey",
    "hood",
    "hope",
    "horn",
    "horror",
    "horse",
    "hospital",
    "host",
    "hotel",
    "hour",
    "hover",
    "hub",
    "huge",
    "human",
    "humble",
    "humor",
    "hundred",
    "hungry",
    "hunt",
    "hurdle",
    "hurry",
    "hurt",
    "husband",
    "hybrid",
    "ice",
    "icon",
    "idea",
    "identify",
    "idle",
    "ignore",
    "ill",
    "illegal",
    "illness",
    "image",
    "imitate",
    "immense",
    "immune",
    "impact",
    "impose",
    "improve",
    "impulse",
    "inch",
    "include",
    "income",
    "increase",
    "index",
    "indicate",
    "indoor",
    "industry",
    "infant",
    "inflict",
    "inform",
    "inhale",
    "inherit",
    "initial",
    "inject",
    "injury",
    "inmate",
    "inner",
    "innocent",
    "input",
    "inquiry",
    "insane",
    "insect",
    "inside",
    "inspire",
    "install",
    "intact",
    "interest",
    "into",
    "invest",
    "invite",
    "involve",
    "iron",
    "island",
    "isolate",
    "issue",
    "item",
    "ivory",
    "jacket",
    "jaguar",
    "jar",
    "jazz",
    "jealous",
    "jeans",
    "jelly",
    "jewel",
    "job",
    "join",
    "joke",
    "journey",
    "joy",
    "judge",
    "juice",
    "jump",
    "jungle",
    "junior",
    "junk",
    "just",
    "kangaroo",
    "keen",
    "keep",
    "ketchup",
    "key",
    "kick",
    "kid",
    "kidney",
    "kind",
    "kingdom",
    "kiss",
    "kit",
    "kitchen",
    "kite",
    "kitten",
    "kiwi",
    "knee",
    "knife",
    "knock",
    "know",
    "lab",
    "label",
    "labor",
    "ladder",
    "lady",
    "lake",
    "lamp",
    "language",
    "laptop",
    "large",
    "later",
    "latin",
    "laugh",
    "laundry",
    "lava",
    "law",
    "lawn",
    "lawsuit",
    "layer",
    "lazy",
    "leader",
    "leaf",
    "learn",
    "leave",
    "lecture",
    "left",
    "leg",
    "legal",
    "legend",
    "leisure",
    "lemon",
    "lend",
    "length",
    "lens",
    "leopard",
    "lesson",
    "letter",
    "level",
    "liar",
    "liberty",
    "library",
    "license",
    "life",
    "lift",
    "light",
    "like",
    "limb",
    "limit",
    "link",
    "lion",
    "liquid",
    "list",
    "little",
    "live",
    "lizard",
    "load",
    "loan",
    "lobster",
    "local",
    "lock",
    "logic",
    "lonely",
    "long",
    "loop",
    "lottery",
    "loud",
    "lounge",
    "love",
    "loyal",
    "lucky",
    "luggage",
    "lumber",
    "lunar",
    "lunch",
    "luxury",
    "lyrics",
    "machine",
    "mad",
    "magic",
    "magnet",
    "maid",
    "mail",
    "main",
    "major",
    "make",
    "mammal",
    "man",
    "manage",
    "mandate",
    "mango",
    "mansion",
    "manual",
    "maple",
    "marble",
    "march",
    "margin",
    "marine",
    "market",
    "marriage",
    "mask",
    "mass",
    "master",
    "match",
    "material",
    "math",
    "matrix",
    "matter",
    "maximum",
    "maze",
    "meadow",
    "mean",
    "measure",
    "meat",
    "mechanic",
    "medal",
    "media",
    "melody",
    "melt",
    "member",
    "memory",
    "mention",
    "menu",
    "mercy",
    "merge",
    "merit",
    "merry",
    "mesh",
    "message",
    "metal",
    "method",
    "middle",
    "midnight",
    "milk",
    "million",
    "mimic",
    "mind",
    "minimum",
    "minor",
    "minute",
    "miracle",
    "mirror",
    "misery",
    "miss",
    "mistake",
    "mix",
    "mixed",
    "mixture",
    "mobile",
    "model",
    "modify",
    "mom",
    "moment",
    "monitor",
    "monkey",
    "monster",
    "month",
    "moon",
    "moral",
    "more",
    "morning",
    "mosquito",
    "mother",
    "motion",
    "motor",
    "mountain",
    "mouse",
    "move",
    "movie",
    "much",
    "muffin",
    "mule",
    "multiply",
    "muscle",
    "museum",
    "mushroom",
    "music",
    "must",
    "mutual",
    "myself",
    "mystery",
    "myth",
    "naive",
    "name",
    "napkin",
    "narrow",
    "nasty",
    "nation",
    "nature",
    "near",
    "neck",
    "need",
    "negative",
    "neglect",
    "neither",
    "nephew",
    "nerve",
    "nest",
    "net",
    "network",
    "neutral",
    "never",
    "news",
    "next",
    "nice",
    "night",
    "noble",
    "noise",
    "nominee",
    "noodle",
    "normal",
    "north",
    "nose",
    "notable",
    "note",
    "nothing",
    "notice",
    "novel",
    "now",
    "nuclear",
    "number",
    "nurse",
    "nut",
    "oak",
    "obey",
    "object",
    "oblige",
    "obscure",
    "observe",
    "obtain",
    "obvious",
    "occur",
    "ocean",
    "october",
    "odor",
    "off",
    "offer",
    "office",
    "often",
    "oil",
    "okay",
    "old",
    "olive",
    "olympic",
    "omit",
    "once",
    "one",
    "onion",
    "online",
    "only",
    "open",
    "opera",
    "opinion",
    "oppose",
    "option",
    "orange",
    "orbit",
    "orchard",
    "order",
    "ordinary",
    "organ",
    "orient",
    "original",
    "orphan",
    "ostrich",
    "other",
    "outdoor",
    "outer",
    "output",
    "outside",
    "oval",
    "oven",
    "over",
    "own",
    "owner",
    "oxygen",
    "oyster",
    "ozone",
    "pact",
    "paddle",
    "page",
    "pair",
    "palace",
    "palm",
    "panda",
    "panel",
    "panic",
    "panther",
    "paper",
    "parade",
    "parent",
    "park",
    "parrot",
    "party",
    "pass",
    "patch",
    "path",
    "patient",
    "patrol",
    "pattern",
    "pause",
    "pave",
    "payment",
    "peace",
    "peanut",
    "pear",
    "peasant",
    "pelican",
    "pen",
    "penalty",
    "pencil",
    "people",
    "pepper",
    "perfect",
    "permit",
    "person",
    "pet",
    "phone",
    "photo",
    "phrase",
    "physical",
    "piano",
    "picnic",
    "picture",
    "piece",
    "pig",
    "pigeon",
    "pill",
    "pilot",
    "pink",
    "pioneer",
    "pipe",
    "pistol",
    "pitch",
    "pizza",
    "place",
    "planet",
    "plastic",
    "plate",
    "play",
    "please",
    "pledge",
    "pluck",
    "plug",
    "plunge",
    "poem",
    "poet",
    "point",
    "polar",
    "pole",
    "police",
    "pond",
    "pony",
    "pool",
    "popular",
    "portion",
    "position",
    "possible",
    "post",
    "potato",
    "pottery",
    "poverty",
    "powder",
    "power",
    "practice",
    "praise",
    "predict",
    "prefer",
    "prepare",
    "present",
    "pretty",
    "prevent",
    "price",
    "pride",
    "primary",
    "print",
    "priority",
    "prison",
    "private",
    "prize",
    "problem",
    "process",
    "produce",
    "profit",
    "program",
    "project",
    "promote",
    "proof",
    "property",
    "prosper",
    "protect",
    "proud",
    "provide",
    "public",
    "pudding",
    "pull",
    "pulp",
    "pulse",
    "pumpkin",
    "punch",
    "pupil",
    "puppy",
    "purchase",
    "purity",
    "purpose",
    "purse",
    "push",
    "put",
    "puzzle",
    "pyramid",
    "quality",
    "quantum",
    "quarter",
    "question",
    "quick",
    "quit",
    "quiz",
    "quote",
    "rabbit",
    "raccoon",
    "race",
    "rack",
    "radar",
    "radio",
    "rail",
    "rain",
    "raise",
    "rally",
    "ramp",
    "ranch",
    "random",
    "range",
    "rapid",
    "rare",
    "rate",
    "rather",
    "raven",
    "raw",
    "razor",
    "ready",
    "real",
    "reason",
    "rebel",
    "rebuild",
    "recall",
    "receive",
    "recipe",
    "record",
    "recycle",
    "reduce",
    "reflect",
    "reform",
    "refuse",
    "region",
    "regret",
    "regular",
    "reject",
    "relax",
    "release",
    "relief",
    "rely",
    "remain",
    "remember",
    "remind",
    "remove",
    "render",
    "renew",
    "rent",
    "reopen",
    "repair",
    "repeat",
    "replace",
    "report",
    "require",
    "rescue",
    "resemble",
    "resist",
    "resource",
    "response",
    "result",
    "retire",
    "retreat",
    "return",
    "reunion",
    "reveal",
    "review",
    "reward",
    "rhythm",
    "rib",
    "ribbon",
    "rice",
    "rich",
    "ride",
    "ridge",
    "rifle",
    "right",
    "rigid",
    "ring",
    "riot",
    "ripple",
    "risk",
    "ritual",
    "rival",
    "river",
    "road",
    "roast",
    "robot",
    "robust",
    "rocket",
    "romance",
    "roof",
    "rookie",
    "room",
    "rose",
    "rotate",
    "rough",
    "round",
    "route",
    "royal",
    "rubber",
    "rude",
    "rug",
    "rule",
    "run",
    "runway",
    "rural",
    "sad",
    "saddle",
    "sadness",
    "safe",
    "sail",
    "salad",
    "salmon",
    "salon",
    "salt",
    "salute",
    "same",
    "sample",
    "sand",
    "satisfy",
    "satoshi",
    "sauce",
    "sausage",
    "save",
    "say",
    "scale",
    "scan",
    "scare",
    "scatter",
    "scene",
    "scheme",
    "school",
    "science",
    "scissors",
    "scorpion",
    "scout",
    "scrap",
    "screen",
    "script",
    "scrub",
    "sea",
    "search",
    "season",
    "seat",
    "second",
    "secret",
    "section",
    "security",
    "seed",
    "seek",
    "segment",
    "select",
    "sell",
    "seminar",
    "senior",
    "sense",
    "sentence",
    "series",
    "service",
    "session",
    "settle",
    "setup",
    "seven",
    "shadow",
    "shaft",
    "shallow",
    "share",
    "shed",
    "shell",
    "sheriff",
    "shield",
    "shift",
    "shine",
    "ship",
    "shiver",
    "shock",
    "shoe",
    "shoot",
    "shop",
    "short",
    "shoulder",
    "shove",
    "shrimp",
    "shrug",
    "shuffle",
    "shy",
    "sibling",
    "sick",
    "side",
    "siege",
    "sight",
    "sign",
    "silent",
    "silk",
    "silly",
    "silver",
    "similar",
    "simple",
    "since",
    "sing",
    "siren",
    "sister",
    "situate",
    "six",
    "size",
    "skate",
    "sketch",
    "ski",
    "skill",
    "skin",
    "skirt",
    "skull",
    "slab",
    "slam",
    "sleep",
    "slender",
    "slice",
    "slide",
    "slight",
    "slim",
    "slogan",
    "slot",
    "slow",
    "slush",
    "small",
    "smart",
    "smile",
    "smoke",
    "smooth",
    "snack",
    "snake",
    "snap",
    "sniff",
    "snow",
    "soap",
    "soccer",
    "social",
    "sock",
    "soda",
    "soft",
    "solar",
    "soldier",
    "solid",
    "solution",
    "solve",
    "someone",
    "song",
    "soon",
    "sorry",
    "sort",
    "soul",
    "sound",
    "soup",
    "source",
    "south",
    "space",
    "spare",
    "spatial",
    "spawn",
    "speak",
    "special",
    "speed",
    "spell",
    "spend",
    "sphere",
    "spice",
    "spider",
    "spike",
    "spin",
    "spirit",
    "split",
    "spoil",
    "sponsor",
    "spoon",
    "sport",
    "spot",
    "spray",
    "spread",
    "spring",
    "spy",
    "square",
    "squeeze",
    "squirrel",
    "stable",
    "stadium",
    "staff",
    "stage",
    "stairs",
    "stamp",
    "stand",
    "start",
    "state",
    "stay",
    "steak",
    "steel",
    "stem",
    "step",
    "stereo",
    "stick",
    "still",
    "sting",
    "stock",
    "stomach",
    "stone",
    "stool",
    "story",
    "stove",
    "strategy",
    "street",
    "strike",
    "strong",
    "struggle",
    "student",
    "stuff",
    "stumble",
    "style",
    "subject",
    "submit",
    "subway",
    "success",
    "such",
    "sudden",
    "suffer",
    "sugar",
    "suggest",
    "suit",
    "summer",
    "sun",
    "sunny",
    "sunset",
    "super",
    "supply",
    "supreme",
    "sure",
    "surface",
    "surge",
    "surprise",
    "surround",
    "survey",
    "suspect",
    "sustain",
    "swallow",
    "swamp",
    "swap",
    "swarm",
    "swear",
    "sweet",
    "swift",
    "swim",
    "swing",
    "switch",
    "sword",
    "symbol",
    "symptom",
    "syrup",
    "system",
    "table",
    "tackle",
    "tag",
    "tail",
    "talent",
    "talk",
    "tank",
    "tape",
    "target",
    "task",
    "taste",
    "tattoo",
    "taxi",
    "teach",
    "team",
    "tell",
    "ten",
    "tenant",
    "tennis",
    "tent",
    "term",
    "test",
    "text",
    "thank",
    "that",
    "theme",
    "then",
    "theory",
    "there",
    "they",
    "thing",
    "this",
    "thought",
    "three",
    "thrive",
    "throw",
    "thumb",
    "thunder",
    "ticket",
    "tide",
    "tiger",
    "tilt",
    "timber",
    "time",
    "tiny",
    "tip",
    "tired",
    "tissue",
    "title",
    "toast",
    "tobacco",
    "today",
    "toddler",
    "toe",
    "together",
    "toilet",
    "token",
    "tomato",
    "tomorrow",
    "tone",
    "tongue",
    "tonight",
    "tool",
    "tooth",
    "top",
    "topic",
    "topple",
    "torch",
    "tornado",
    "tortoise",
    "toss",
    "total",
    "tourist",
    "toward",
    "tower",
    "town",
    "toy",
    "track",
    "trade",
    "traffic",
    "tragic",
    "train",
    "transfer",
    "trap",
    "trash",
    "travel",
    "tray",
    "treat",
    "tree",
    "trend",
    "trial",
    "tribe",
    "trick",
    "trigger",
    "trim",
    "trip",
    "trophy",
    "trouble",
    "truck",
    "true",
    "truly",
    "trumpet",
    "trust",
    "truth",
    "try",
    "tube",
    "tuition",
    "tumble",
    "tuna",
    "tunnel",
    "turkey",
    "turn",
    "turtle",
    "twelve",
    "twenty",
    "twice",
    "twin",
    "twist",
    "two",
    "type",
    "typical",
    "ugly",
    "umbrella",
    "unable",
    "unaware",
    "uncle",
    "uncover",
    "under",
    "undo",
    "unfair",
    "unfold",
    "unhappy",
    "uniform",
    "unique",
    "unit",
    "universe",
    "unknown",
    "unlock",
    "until",
    "unusual",
    "unveil",
    "update",
    "upgrade",
    "uphold",
    "upon",
    "upper",
    "upset",
    "urban",
    "urge",
    "usage",
    "use",
    "used",
    "useful",
    "useless",
    "usual",
    "utility",
    "vacant",
    "vacuum",
    "vague",
    "valid",
    "valley",
    "valve",
    "van",
    "vanish",
    "vapor",
    "various",
    "vast",
    "vault",
    "vehicle",
    "velvet",
    "vendor",
    "venture",
    "venue",
    "verb",
    "verify",
    "version",
    "very",
    "vessel",
    "veteran",
    "viable",
    "vibrant",
    "vicious",
    "victory",
    "video",
    "view",
    "village",
    "vintage",
    "violin",
    "virtual",
    "virus",
    "visa",
    "visit",
    "visual",
    "vital",
    "vivid",
    "vocal",
    "voice",
    "void",
    "volcano",
    "volume",
    "vote",
    "voyage",
    "wage",
    "wagon",
    "wait",
    "walk",
    "wall",
    "walnut",
    "want",
    "warfare",
    "warm",
    "warrior",
    "wash",
    "wasp",
    "waste",
    "water",
    "wave",
    "way",
    "wealth",
    "weapon",
    "wear",
    "weasel",
    "weather",
    "web",
    "wedding",
    "weekend",
    "weird",
    "welcome",
    "west",
    "wet",
    "whale",
    "what",
    "wheat",
    "wheel",
    "when",
    "where",
    "whip",
    "whisper",
    "wide",
    "width",
    "wife",
    "wild",
    "will",
    "win",
    "window",
    "wine",
    "wing",
    "wink",
    "winner",
    "winter",
    "wire",
    "wisdom",
    "wise",
    "wish",
    "witness",
    "wolf",
    "woman",
    "wonder",
    "wood",
    "wool",
    "word",
    "work",
    "world",
    "worry",
    "worth",
    "wrap",
    "wreck",
    "wrestle",
    "wrist",
    "write",
    "wrong",
    "yard",
    "year",
    "yellow",
    "you",
    "young",
    "youth",
    "zebra",
    "zero",
    "zone",
    "zoo",
];
function bytesToBitstring(bytes) {
    return Array.from(bytes)
        .map((byte) => byte.toString(2).padStart(8, "0"))
        .join("");
}
function deriveChecksumBits(entropy) {
    const entropyLengthBits = entropy.length * 8; // "ENT" (in bits)
    const checksumLengthBits = entropyLengthBits / 32; // "CS" (in bits)
    const hash = (0, sha_1.sha256)(entropy);
    return bytesToBitstring(hash).slice(0, checksumLengthBits);
}
function bitstringToByte(bin) {
    return parseInt(bin, 2);
}
const allowedEntropyLengths = [16, 20, 24, 28, 32];
const allowedWordLengths = [12, 15, 18, 21, 24];
function entropyToMnemonic(entropy) {
    if (allowedEntropyLengths.indexOf(entropy.length) === -1) {
        throw new Error("invalid input length");
    }
    const entropyBits = bytesToBitstring(entropy);
    const checksumBits = deriveChecksumBits(entropy);
    const bits = entropyBits + checksumBits;
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const chunks = bits.match(/(.{11})/g);
    const words = chunks.map((binary) => {
        const index = bitstringToByte(binary);
        return wordlist[index];
    });
    return words.join(" ");
}
exports.entropyToMnemonic = entropyToMnemonic;
const invalidNumberOfWorks = "Invalid number of words";
const wordNotInWordlist = "Found word that is not in the wordlist";
const invalidEntropy = "Invalid entropy";
const invalidChecksum = "Invalid mnemonic checksum";
function normalize(str) {
    return str.normalize("NFKD");
}
function mnemonicToEntropy(mnemonic) {
    const words = normalize(mnemonic).split(" ");
    if (!allowedWordLengths.includes(words.length)) {
        throw new Error(invalidNumberOfWorks);
    }
    // convert word indices to 11 bit binary strings
    const bits = words
        .map((word) => {
        const index = wordlist.indexOf(word);
        if (index === -1) {
            throw new Error(wordNotInWordlist);
        }
        return index.toString(2).padStart(11, "0");
    })
        .join("");
    // split the binary string into ENT/CS
    const dividerIndex = Math.floor(bits.length / 33) * 32;
    const entropyBits = bits.slice(0, dividerIndex);
    const checksumBits = bits.slice(dividerIndex);
    // calculate the checksum and compare
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(bitstringToByte);
    if (entropyBytes.length < 16 || entropyBytes.length > 32 || entropyBytes.length % 4 !== 0) {
        throw new Error(invalidEntropy);
    }
    const entropy = Uint8Array.from(entropyBytes);
    const newChecksum = deriveChecksumBits(entropy);
    if (newChecksum !== checksumBits) {
        throw new Error(invalidChecksum);
    }
    return entropy;
}
exports.mnemonicToEntropy = mnemonicToEntropy;
class EnglishMnemonic {
    constructor(mnemonic) {
        if (!EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {
            throw new Error("Invalid mnemonic format");
        }
        const words = mnemonic.split(" ");
        const allowedWordsLengths = [12, 15, 18, 21, 24];
        if (allowedWordsLengths.indexOf(words.length) === -1) {
            throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);
        }
        for (const word of words) {
            if (EnglishMnemonic.wordlist.indexOf(word) === -1) {
                throw new Error("Mnemonic contains invalid word");
            }
        }
        // Throws with informative error message if mnemonic is not valid
        mnemonicToEntropy(mnemonic);
        this.data = mnemonic;
    }
    toString() {
        return this.data;
    }
}
exports.EnglishMnemonic = EnglishMnemonic;
EnglishMnemonic.wordlist = wordlist;
// list of space separated lower case words (1 or more)
EnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;
class Bip39 {
    /**
     * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.
     *
     * | Entropy            | Words |
     * |--------------------|-------|
     * | 128 bit (16 bytes) |    12 |
     * | 160 bit (20 bytes) |    15 |
     * | 192 bit (24 bytes) |    18 |
     * | 224 bit (28 bytes) |    21 |
     * | 256 bit (32 bytes) |    24 |
     *
     *
     * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic
     * @param entropy The entropy to be encoded. This must be cryptographically secure.
     */
    static encode(entropy) {
        return new EnglishMnemonic(entropyToMnemonic(entropy));
    }
    static decode(mnemonic) {
        return mnemonicToEntropy(mnemonic.toString());
    }
    static async mnemonicToSeed(mnemonic, password) {
        const mnemonicBytes = (0, encoding_1.toUtf8)(normalize(mnemonic.toString()));
        const salt = "mnemonic" + (password ? normalize(password) : "");
        const saltBytes = (0, encoding_1.toUtf8)(salt);
        return (0, pbkdf2_1.pbkdf2Sha512)(mnemonicBytes, saltBytes, 2048, 64);
    }
}
exports.Bip39 = Bip39;
//# sourceMappingURL=bip39.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/hmac.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/hmac.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Hmac = void 0;
class Hmac {
    constructor(hashFunctionConstructor, originalKey) {
        // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation
        // with the addition of incremental hashing support. Thus part of the algorithm
        // is in the constructor and the rest in digest().
        const blockSize = new hashFunctionConstructor().blockSize;
        this.hash = (data) => new hashFunctionConstructor().update(data).digest();
        let key = originalKey;
        if (key.length > blockSize) {
            key = this.hash(key);
        }
        if (key.length < blockSize) {
            const zeroPadding = new Uint8Array(blockSize - key.length);
            key = new Uint8Array([...key, ...zeroPadding]);
        }
        // eslint-disable-next-line no-bitwise
        this.oKeyPad = key.map((keyByte) => keyByte ^ 0x5c);
        // eslint-disable-next-line no-bitwise
        this.iKeyPad = key.map((keyByte) => keyByte ^ 0x36);
        this.messageHasher = new hashFunctionConstructor();
        this.blockSize = blockSize;
        this.update(this.iKeyPad);
    }
    update(data) {
        this.messageHasher.update(data);
        return this;
    }
    digest() {
        const innerHash = this.messageHasher.digest();
        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));
    }
}
exports.Hmac = Hmac;
//# sourceMappingURL=hmac.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;
var bip39_1 = __webpack_require__(/*! ./bip39 */ "./node_modules/@cosmjs/crypto/build/bip39.js");
Object.defineProperty(exports, "Bip39", ({ enumerable: true, get: function () { return bip39_1.Bip39; } }));
Object.defineProperty(exports, "EnglishMnemonic", ({ enumerable: true, get: function () { return bip39_1.EnglishMnemonic; } }));
var hmac_1 = __webpack_require__(/*! ./hmac */ "./node_modules/@cosmjs/crypto/build/hmac.js");
Object.defineProperty(exports, "Hmac", ({ enumerable: true, get: function () { return hmac_1.Hmac; } }));
var keccak_1 = __webpack_require__(/*! ./keccak */ "./node_modules/@cosmjs/crypto/build/keccak.js");
Object.defineProperty(exports, "Keccak256", ({ enumerable: true, get: function () { return keccak_1.Keccak256; } }));
Object.defineProperty(exports, "keccak256", ({ enumerable: true, get: function () { return keccak_1.keccak256; } }));
var libsodium_1 = __webpack_require__(/*! ./libsodium */ "./node_modules/@cosmjs/crypto/build/libsodium.js");
Object.defineProperty(exports, "Argon2id", ({ enumerable: true, get: function () { return libsodium_1.Argon2id; } }));
Object.defineProperty(exports, "Ed25519", ({ enumerable: true, get: function () { return libsodium_1.Ed25519; } }));
Object.defineProperty(exports, "Ed25519Keypair", ({ enumerable: true, get: function () { return libsodium_1.Ed25519Keypair; } }));
Object.defineProperty(exports, "isArgon2idOptions", ({ enumerable: true, get: function () { return libsodium_1.isArgon2idOptions; } }));
Object.defineProperty(exports, "xchacha20NonceLength", ({ enumerable: true, get: function () { return libsodium_1.xchacha20NonceLength; } }));
Object.defineProperty(exports, "Xchacha20poly1305Ietf", ({ enumerable: true, get: function () { return libsodium_1.Xchacha20poly1305Ietf; } }));
var random_1 = __webpack_require__(/*! ./random */ "./node_modules/@cosmjs/crypto/build/random.js");
Object.defineProperty(exports, "Random", ({ enumerable: true, get: function () { return random_1.Random; } }));
var ripemd_1 = __webpack_require__(/*! ./ripemd */ "./node_modules/@cosmjs/crypto/build/ripemd.js");
Object.defineProperty(exports, "Ripemd160", ({ enumerable: true, get: function () { return ripemd_1.Ripemd160; } }));
Object.defineProperty(exports, "ripemd160", ({ enumerable: true, get: function () { return ripemd_1.ripemd160; } }));
var secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ "./node_modules/@cosmjs/crypto/build/secp256k1.js");
Object.defineProperty(exports, "Secp256k1", ({ enumerable: true, get: function () { return secp256k1_1.Secp256k1; } }));
var secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ "./node_modules/@cosmjs/crypto/build/secp256k1signature.js");
Object.defineProperty(exports, "ExtendedSecp256k1Signature", ({ enumerable: true, get: function () { return secp256k1signature_1.ExtendedSecp256k1Signature; } }));
Object.defineProperty(exports, "Secp256k1Signature", ({ enumerable: true, get: function () { return secp256k1signature_1.Secp256k1Signature; } }));
var sha_1 = __webpack_require__(/*! ./sha */ "./node_modules/@cosmjs/crypto/build/sha.js");
Object.defineProperty(exports, "Sha256", ({ enumerable: true, get: function () { return sha_1.Sha256; } }));
Object.defineProperty(exports, "sha256", ({ enumerable: true, get: function () { return sha_1.sha256; } }));
Object.defineProperty(exports, "Sha512", ({ enumerable: true, get: function () { return sha_1.Sha512; } }));
Object.defineProperty(exports, "sha512", ({ enumerable: true, get: function () { return sha_1.sha512; } }));
var slip10_1 = __webpack_require__(/*! ./slip10 */ "./node_modules/@cosmjs/crypto/build/slip10.js");
Object.defineProperty(exports, "pathToString", ({ enumerable: true, get: function () { return slip10_1.pathToString; } }));
Object.defineProperty(exports, "Slip10", ({ enumerable: true, get: function () { return slip10_1.Slip10; } }));
Object.defineProperty(exports, "Slip10Curve", ({ enumerable: true, get: function () { return slip10_1.Slip10Curve; } }));
Object.defineProperty(exports, "slip10CurveFromString", ({ enumerable: true, get: function () { return slip10_1.slip10CurveFromString; } }));
Object.defineProperty(exports, "Slip10RawIndex", ({ enumerable: true, get: function () { return slip10_1.Slip10RawIndex; } }));
Object.defineProperty(exports, "stringToPath", ({ enumerable: true, get: function () { return slip10_1.stringToPath; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/keccak.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/keccak.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keccak256 = exports.Keccak256 = void 0;
const sha3_1 = __webpack_require__(/*! @noble/hashes/sha3 */ "./node_modules/@noble/hashes/sha3.js");
const utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/@cosmjs/crypto/build/utils.js");
class Keccak256 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha3_1.keccak_256.create();
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
    }
    digest() {
        return this.impl.digest();
    }
}
exports.Keccak256 = Keccak256;
/** Convenience function equivalent to `new Keccak256(data).digest()` */
function keccak256(data) {
    return new Keccak256(data).digest();
}
exports.keccak256 = keccak256;
//# sourceMappingURL=keccak.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/libsodium.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/libsodium.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Keep all classes requiring libsodium-js in one file as having multiple
// requiring of the libsodium-wrappers module currently crashes browsers
//
// libsodium.js API: https://gist.github.com/webmaster128/b2dbe6d54d36dd168c9fabf441b9b09c
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;
const utils_1 = __webpack_require__(/*! @cosmjs/utils */ "./node_modules/@cosmjs/utils/build/index.js");
// Using crypto_pwhash requires sumo. Once we migrate to a standalone
// Argon2 implementation, we can use the normal libsodium-wrappers
// again: https://github.com/cosmos/cosmjs/issues/1031
const libsodium_wrappers_sumo_1 = __importDefault(__webpack_require__(/*! libsodium-wrappers-sumo */ "./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js"));
function isArgon2idOptions(thing) {
    if (!(0, utils_1.isNonNullObject)(thing))
        return false;
    if (typeof thing.outputLength !== "number")
        return false;
    if (typeof thing.opsLimit !== "number")
        return false;
    if (typeof thing.memLimitKib !== "number")
        return false;
    return true;
}
exports.isArgon2idOptions = isArgon2idOptions;
class Argon2id {
    static async execute(password, salt, options) {
        await libsodium_wrappers_sumo_1.default.ready;
        return libsodium_wrappers_sumo_1.default.crypto_pwhash(options.outputLength, password, salt, // libsodium only supports 16 byte salts and will throw when you don't respect that
        options.opsLimit, options.memLimitKib * 1024, libsodium_wrappers_sumo_1.default.crypto_pwhash_ALG_ARGON2ID13);
    }
}
exports.Argon2id = Argon2id;
class Ed25519Keypair {
    // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`
    static fromLibsodiumPrivkey(libsodiumPrivkey) {
        if (libsodiumPrivkey.length !== 64) {
            throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);
        }
        return new Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));
    }
    constructor(privkey, pubkey) {
        this.privkey = privkey;
        this.pubkey = pubkey;
    }
    toLibsodiumPrivkey() {
        return new Uint8Array([...this.privkey, ...this.pubkey]);
    }
}
exports.Ed25519Keypair = Ed25519Keypair;
class Ed25519 {
    /**
     * Generates a keypair deterministically from a given 32 bytes seed.
     *
     * This seed equals the Ed25519 private key.
     * For implementation details see crypto_sign_seed_keypair in
     * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html
     * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/
     */
    static async makeKeypair(seed) {
        await libsodium_wrappers_sumo_1.default.ready;
        const keypair = libsodium_wrappers_sumo_1.default.crypto_sign_seed_keypair(seed);
        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);
    }
    static async createSignature(message, keyPair) {
        await libsodium_wrappers_sumo_1.default.ready;
        return libsodium_wrappers_sumo_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());
    }
    static async verifySignature(signature, message, pubkey) {
        await libsodium_wrappers_sumo_1.default.ready;
        return libsodium_wrappers_sumo_1.default.crypto_sign_verify_detached(signature, message, pubkey);
    }
}
exports.Ed25519 = Ed25519;
/**
 * Nonce length in bytes for all flavours of XChaCha20.
 *
 * @see https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xchacha20#notes
 */
exports.xchacha20NonceLength = 24;
class Xchacha20poly1305Ietf {
    static async encrypt(message, key, nonce) {
        await libsodium_wrappers_sumo_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_sumo_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(message, additionalData, null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
        nonce, key);
    }
    static async decrypt(ciphertext, key, nonce) {
        await libsodium_wrappers_sumo_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_sumo_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
        ciphertext, additionalData, nonce, key);
    }
}
exports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;
//# sourceMappingURL=libsodium.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/pbkdf2.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/pbkdf2.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512NodeCrypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getNodeCrypto = void 0;
const utils_1 = __webpack_require__(/*! @cosmjs/utils */ "./node_modules/@cosmjs/utils/build/index.js");
const pbkdf2_1 = __webpack_require__(/*! @noble/hashes/pbkdf2 */ "./node_modules/@noble/hashes/pbkdf2.js");
const sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ "./node_modules/@noble/hashes/sha512.js");
/**
 * Returns the Node.js crypto module when available and `undefined`
 * otherwise.
 *
 * Detects an unimplemented fallback module from Webpack 5 and returns
 * `undefined` in that case.
 */
async function getNodeCrypto() {
    try {
        const nodeCrypto = await Promise.resolve().then(() => __importStar(__webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js")));
        // We get `Object{default: Object{}}` as a fallback when using
        // `crypto: false` in Webpack 5, which we interprete as unavailable.
        if (typeof nodeCrypto === "object" && Object.keys(nodeCrypto).length <= 1) {
            return undefined;
        }
        return nodeCrypto;
    }
    catch {
        return undefined;
    }
}
exports.getNodeCrypto = getNodeCrypto;
async function getSubtle() {
    // From Node.js 15 onwards, webcrypto is available in globalThis.
    // In version 15 and 16 this was stored under the webcrypto key.
    // With Node.js 17 it was moved to the same locations where browsers
    // make it available.
    // Loading `require("crypto")` here seems unnecessary since it only
    // causes issues with bundlers and does not increase compatibility.
    // Browsers and Node.js 17+
    let subtle = globalThis?.crypto?.subtle;
    // Node.js 15+
    if (!subtle)
        subtle = globalThis?.crypto?.webcrypto?.subtle;
    return subtle;
}
exports.getSubtle = getSubtle;
async function pbkdf2Sha512Subtle(
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
subtle, secret, salt, iterations, keylen) {
    (0, utils_1.assert)(subtle, "Argument subtle is falsy");
    (0, utils_1.assert)(typeof subtle === "object", "Argument subtle is not of type object");
    (0, utils_1.assert)(typeof subtle.importKey === "function", "subtle.importKey is not a function");
    (0, utils_1.assert)(typeof subtle.deriveBits === "function", "subtle.deriveBits is not a function");
    return subtle.importKey("raw", secret, { name: "PBKDF2" }, false, ["deriveBits"]).then((key) => subtle
        .deriveBits({
        name: "PBKDF2",
        salt: salt,
        iterations: iterations,
        hash: { name: "SHA-512" },
    }, key, keylen * 8)
        .then((buffer) => new Uint8Array(buffer)));
}
exports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;
/**
 * Implements pbkdf2-sha512 using the Node.js crypro module (`import "crypto"`).
 * This does not use subtle from [Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Crypto).
 */
async function pbkdf2Sha512NodeCrypto(
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
nodeCrypto, secret, salt, iterations, keylen) {
    (0, utils_1.assert)(nodeCrypto, "Argument nodeCrypto is falsy");
    (0, utils_1.assert)(typeof nodeCrypto === "object", "Argument nodeCrypto is not of type object");
    (0, utils_1.assert)(typeof nodeCrypto.pbkdf2 === "function", "nodeCrypto.pbkdf2 is not a function");
    return new Promise((resolve, reject) => {
        nodeCrypto.pbkdf2(secret, salt, iterations, keylen, "sha512", (error, result) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(Uint8Array.from(result));
            }
        });
    });
}
exports.pbkdf2Sha512NodeCrypto = pbkdf2Sha512NodeCrypto;
async function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {
    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, { c: iterations, dkLen: keylen });
}
exports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;
/**
 * A pbkdf2 implementation for BIP39. This is not exported at package level and thus a private API.
 */
async function pbkdf2Sha512(secret, salt, iterations, keylen) {
    const subtle = await getSubtle();
    if (subtle) {
        return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);
    }
    else {
        const nodeCrypto = await getNodeCrypto();
        if (nodeCrypto) {
            return pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen);
        }
        else {
            return pbkdf2Sha512Noble(secret, salt, iterations, keylen);
        }
    }
}
exports.pbkdf2Sha512 = pbkdf2Sha512;
//# sourceMappingURL=pbkdf2.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/random.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/random.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Random = void 0;
class Random {
    /**
     * Returns `count` cryptographically secure random bytes
     */
    static getBytes(count) {
        try {
            const globalObject = typeof window === "object" ? window : self;
            const cryptoApi = typeof globalObject.crypto !== "undefined" ? globalObject.crypto : globalObject.msCrypto;
            const out = new Uint8Array(count);
            cryptoApi.getRandomValues(out);
            return out;
        }
        catch {
            try {
                // eslint-disable-next-line @typescript-eslint/no-var-requires
                const crypto = __webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js");
                return new Uint8Array([...crypto.randomBytes(count)]);
            }
            catch {
                throw new Error("No secure random number generator found");
            }
        }
    }
}
exports.Random = Random;
//# sourceMappingURL=random.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/ripemd.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/ripemd.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ripemd160 = exports.Ripemd160 = void 0;
const ripemd160_1 = __webpack_require__(/*! @noble/hashes/ripemd160 */ "./node_modules/@noble/hashes/ripemd160.js");
const utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/@cosmjs/crypto/build/utils.js");
class Ripemd160 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = ripemd160_1.ripemd160.create();
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
    }
    digest() {
        return this.impl.digest();
    }
}
exports.Ripemd160 = Ripemd160;
/** Convenience function equivalent to `new Ripemd160(data).digest()` */
function ripemd160(data) {
    return new Ripemd160(data).digest();
}
exports.ripemd160 = ripemd160;
//# sourceMappingURL=ripemd.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/secp256k1.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Secp256k1 = void 0;
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js"));
const elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js"));
const secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ "./node_modules/@cosmjs/crypto/build/secp256k1signature.js");
const secp256k1 = new elliptic_1.default.ec("secp256k1");
const secp256k1N = new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", "hex");
class Secp256k1 {
    /**
     * Takes a 32 byte private key and returns a privkey/pubkey pair.
     *
     * The resulting pubkey is uncompressed. For the use in Cosmos it should
     * be compressed first using `Secp256k1.compressPubkey`.
     */
    static async makeKeypair(privkey) {
        if (privkey.length !== 32) {
            // is this check missing in secp256k1.validatePrivateKey?
            // https://github.com/bitjson/bitcoin-ts/issues/4
            throw new Error("input data is not a valid secp256k1 private key");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        if (keypair.validate().result !== true) {
            throw new Error("input data is not a valid secp256k1 private key");
        }
        // range test that is not part of the elliptic implementation
        const privkeyAsBigInteger = new bn_js_1.default(privkey);
        if (privkeyAsBigInteger.gte(secp256k1N)) {
            // not strictly smaller than N
            throw new Error("input data is not a valid secp256k1 private key");
        }
        const out = {
            privkey: (0, encoding_1.fromHex)(keypair.getPrivate("hex")),
            // encodes uncompressed as
            // - 1-byte prefix "04"
            // - 32-byte x coordinate
            // - 32-byte y coordinate
            pubkey: Uint8Array.from(keypair.getPublic("array")),
        };
        return out;
    }
    /**
     * Creates a signature that is
     * - deterministic (RFC 6979)
     * - lowS signature
     * - DER encoded
     */
    static async createSignature(messageHash, privkey) {
        if (messageHash.length === 0) {
            throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
            throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        // the `canonical` option ensures creation of lowS signature representations
        const { r, s, recoveryParam } = keypair.sign(messageHash, { canonical: true });
        if (typeof recoveryParam !== "number")
            throw new Error("Recovery param missing");
        return new secp256k1signature_1.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s.toArray()), recoveryParam);
    }
    static async verifySignature(signature, messageHash, pubkey) {
        if (messageHash.length === 0) {
            throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
            throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPublic(pubkey);
        // From https://github.com/indutny/elliptic:
        //
        //     Sign the message's hash (input must be an array, or a hex-string)
        //
        //     Signature MUST be either:
        //     1) DER-encoded signature as hex-string; or
        //     2) DER-encoded signature as buffer; or
        //     3) object with two hex-string properties (r and s); or
        //     4) object with two buffer properties (r and s)
        //
        // Uint8Array is not a Buffer, but elliptic seems to be happy with the interface
        // common to both types. Uint8Array is not an array of ints but the interface is
        // similar
        try {
            return keypair.verify(messageHash, signature.toDer());
        }
        catch (error) {
            return false;
        }
    }
    static recoverPubkey(signature, messageHash) {
        const signatureForElliptic = { r: (0, encoding_1.toHex)(signature.r()), s: (0, encoding_1.toHex)(signature.s()) };
        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);
        const keypair = secp256k1.keyFromPublic(point);
        return (0, encoding_1.fromHex)(keypair.getPublic(false, "hex"));
    }
    /**
     * Takes a compressed or uncompressed pubkey and return a compressed one.
     *
     * This function is idempotent.
     */
    static compressPubkey(pubkey) {
        switch (pubkey.length) {
            case 33:
                return pubkey;
            case 65:
                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, "array"));
            default:
                throw new Error("Invalid pubkey length");
        }
    }
    /**
     * Takes a compressed or uncompressed pubkey and returns an uncompressed one.
     *
     * This function is idempotent.
     */
    static uncompressPubkey(pubkey) {
        switch (pubkey.length) {
            case 33:
                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(false, "array"));
            case 65:
                return pubkey;
            default:
                throw new Error("Invalid pubkey length");
        }
    }
    static trimRecoveryByte(signature) {
        switch (signature.length) {
            case 64:
                return signature;
            case 65:
                return signature.slice(0, 64);
            default:
                throw new Error("Invalid signature length");
        }
    }
}
exports.Secp256k1 = Secp256k1;
//# sourceMappingURL=secp256k1.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/secp256k1signature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1signature.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;
function trimLeadingNullBytes(inData) {
    let numberOfLeadingNullBytes = 0;
    for (const byte of inData) {
        if (byte === 0x00) {
            numberOfLeadingNullBytes++;
        }
        else {
            break;
        }
    }
    return inData.slice(numberOfLeadingNullBytes);
}
const derTagInteger = 0x02;
class Secp256k1Signature {
    /**
     * Takes the pair of integers (r, s) as 2x32 byte of binary data.
     *
     * Note: This is the format Cosmos SDK uses natively.
     *
     * @param data a 64 byte value containing integers r and s.
     */
    static fromFixedLength(data) {
        if (data.length !== 64) {
            throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);
        }
        return new Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));
    }
    static fromDer(data) {
        let pos = 0;
        if (data[pos++] !== 0x30) {
            throw new Error("Prefix 0x30 expected");
        }
        const bodyLength = data[pos++];
        if (data.length - pos !== bodyLength) {
            throw new Error("Data length mismatch detected");
        }
        // r
        const rTag = data[pos++];
        if (rTag !== derTagInteger) {
            throw new Error("INTEGER tag expected");
        }
        const rLength = data[pos++];
        if (rLength >= 0x80) {
            throw new Error("Decoding length values above 127 not supported");
        }
        const rData = data.slice(pos, pos + rLength);
        pos += rLength;
        // s
        const sTag = data[pos++];
        if (sTag !== derTagInteger) {
            throw new Error("INTEGER tag expected");
        }
        const sLength = data[pos++];
        if (sLength >= 0x80) {
            throw new Error("Decoding length values above 127 not supported");
        }
        const sData = data.slice(pos, pos + sLength);
        pos += sLength;
        return new Secp256k1Signature(
        // r/s data can contain leading 0 bytes to express integers being non-negative in DER
        trimLeadingNullBytes(rData), trimLeadingNullBytes(sData));
    }
    constructor(r, s) {
        if (r.length > 32 || r.length === 0 || r[0] === 0x00) {
            throw new Error("Unsigned integer r must be encoded as unpadded big endian.");
        }
        if (s.length > 32 || s.length === 0 || s[0] === 0x00) {
            throw new Error("Unsigned integer s must be encoded as unpadded big endian.");
        }
        this.data = {
            r: r,
            s: s,
        };
    }
    r(length) {
        if (length === undefined) {
            return this.data.r;
        }
        else {
            const paddingLength = length - this.data.r.length;
            if (paddingLength < 0) {
                throw new Error("Length too small to hold parameter r");
            }
            const padding = new Uint8Array(paddingLength);
            return new Uint8Array([...padding, ...this.data.r]);
        }
    }
    s(length) {
        if (length === undefined) {
            return this.data.s;
        }
        else {
            const paddingLength = length - this.data.s.length;
            if (paddingLength < 0) {
                throw new Error("Length too small to hold parameter s");
            }
            const padding = new Uint8Array(paddingLength);
            return new Uint8Array([...padding, ...this.data.s]);
        }
    }
    toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32)]);
    }
    toDer() {
        // DER supports negative integers but our data is unsigned. Thus we need to prepend
        // a leading 0 byte when the higest bit is set to differentiate nagative values
        const rEncoded = this.data.r[0] >= 0x80 ? new Uint8Array([0, ...this.data.r]) : this.data.r;
        const sEncoded = this.data.s[0] >= 0x80 ? new Uint8Array([0, ...this.data.s]) : this.data.s;
        const rLength = rEncoded.length;
        const sLength = sEncoded.length;
        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);
        return new Uint8Array([0x30, data.length, ...data]);
    }
}
exports.Secp256k1Signature = Secp256k1Signature;
/**
 * A Secp256k1Signature plus the recovery parameter
 */
class ExtendedSecp256k1Signature extends Secp256k1Signature {
    /**
     * Decode extended signature from the simple fixed length encoding
     * described in toFixedLength().
     */
    static fromFixedLength(data) {
        if (data.length !== 65) {
            throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);
        }
        return new ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);
    }
    constructor(r, s, recovery) {
        super(r, s);
        if (!Number.isInteger(recovery)) {
            throw new Error("The recovery parameter must be an integer.");
        }
        if (recovery < 0 || recovery > 4) {
            throw new Error("The recovery parameter must be one of 0, 1, 2, 3.");
        }
        this.recovery = recovery;
    }
    /**
     * A simple custom encoding that encodes the extended signature as
     * r (32 bytes) | s (32 bytes) | recovery param (1 byte)
     * where | denotes concatenation of bonary data.
     */
    toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);
    }
}
exports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;
//# sourceMappingURL=secp256k1signature.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/sha.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/sha.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;
const sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ "./node_modules/@noble/hashes/sha256.js");
const sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ "./node_modules/@noble/hashes/sha512.js");
const utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/@cosmjs/crypto/build/utils.js");
class Sha256 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha256_1.sha256.create();
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
    }
    digest() {
        return this.impl.digest();
    }
}
exports.Sha256 = Sha256;
/** Convenience function equivalent to `new Sha256(data).digest()` */
function sha256(data) {
    return new Sha256(data).digest();
}
exports.sha256 = sha256;
class Sha512 {
    constructor(firstData) {
        this.blockSize = 1024 / 8;
        this.impl = sha512_1.sha512.create();
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update((0, utils_1.toRealUint8Array)(data));
        return this;
    }
    digest() {
        return this.impl.digest();
    }
}
exports.Sha512 = Sha512;
/** Convenience function equivalent to `new Sha512(data).digest()` */
function sha512(data) {
    return new Sha512(data).digest();
}
exports.sha512 = sha512;
//# sourceMappingURL=sha.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/slip10.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/slip10.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const math_1 = __webpack_require__(/*! @cosmjs/math */ "./node_modules/@cosmjs/math/build/index.js");
const bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js"));
const elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js"));
const hmac_1 = __webpack_require__(/*! ./hmac */ "./node_modules/@cosmjs/crypto/build/hmac.js");
const sha_1 = __webpack_require__(/*! ./sha */ "./node_modules/@cosmjs/crypto/build/sha.js");
/**
 * Raw values must match the curve string in SLIP-0010 master key generation
 *
 * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md#master-key-generation
 */
var Slip10Curve;
(function (Slip10Curve) {
    Slip10Curve["Secp256k1"] = "Bitcoin seed";
    Slip10Curve["Ed25519"] = "ed25519 seed";
})(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));
/**
 * Reverse mapping of Slip10Curve
 */
function slip10CurveFromString(curveString) {
    switch (curveString) {
        case Slip10Curve.Ed25519:
            return Slip10Curve.Ed25519;
        case Slip10Curve.Secp256k1:
            return Slip10Curve.Secp256k1;
        default:
            throw new Error(`Unknown curve string: '${curveString}'`);
    }
}
exports.slip10CurveFromString = slip10CurveFromString;
class Slip10RawIndex extends math_1.Uint32 {
    static hardened(hardenedIndex) {
        return new Slip10RawIndex(hardenedIndex + 2 ** 31);
    }
    static normal(normalIndex) {
        return new Slip10RawIndex(normalIndex);
    }
    isHardened() {
        return this.data >= 2 ** 31;
    }
}
exports.Slip10RawIndex = Slip10RawIndex;
const secp256k1 = new elliptic_1.default.ec("secp256k1");
// Universal private key derivation accoring to
// https://github.com/satoshilabs/slips/blob/master/slip-0010.md
class Slip10 {
    static derivePath(curve, seed, path) {
        let result = this.master(curve, seed);
        for (const rawIndex of path) {
            result = this.child(curve, result.privkey, result.chainCode, rawIndex);
        }
        return result;
    }
    static master(curve, seed) {
        const i = new hmac_1.Hmac(sha_1.Sha512, (0, encoding_1.toAscii)(curve)).update(seed).digest();
        const il = i.slice(0, 32);
        const ir = i.slice(32, 64);
        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {
            return this.master(curve, i);
        }
        return {
            chainCode: ir,
            privkey: il,
        };
    }
    static child(curve, parentPrivkey, parentChainCode, rawIndex) {
        let i;
        if (rawIndex.isHardened()) {
            const payload = new Uint8Array([0x00, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);
            i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(payload).digest();
        }
        else {
            if (curve === Slip10Curve.Ed25519) {
                throw new Error("Normal keys are not allowed with ed25519");
            }
            else {
                // Step 1 of https://github.com/satoshilabs/slips/blob/master/slip-0010.md#private-parent-key--private-child-key
                // Calculate I = HMAC-SHA512(Key = c_par, Data = ser_P(point(k_par)) || ser_32(i)).
                // where the functions point() and ser_p() are defined in BIP-0032
                const data = new Uint8Array([
                    ...Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),
                    ...rawIndex.toBytesBigEndian(),
                ]);
                i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(data).digest();
            }
        }
        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);
    }
    /**
     * Implementation of ser_P(point(k_par)) from BIP-0032
     *
     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
     */
    static serializedPoint(curve, p) {
        switch (curve) {
            case Slip10Curve.Secp256k1:
                return (0, encoding_1.fromHex)(secp256k1.g.mul(p).encodeCompressed("hex"));
            default:
                throw new Error("curve not supported");
        }
    }
    static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {
        // step 2 (of the Private parent key → private child key algorithm)
        const il = i.slice(0, 32);
        const ir = i.slice(32, 64);
        // step 3
        const returnChainCode = ir;
        // step 4
        if (curve === Slip10Curve.Ed25519) {
            return {
                chainCode: returnChainCode,
                privkey: il,
            };
        }
        // step 5
        const n = this.n(curve);
        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n);
        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray("be", 32));
        // step 6
        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {
            const newI = new hmac_1.Hmac(sha_1.Sha512, parentChainCode)
                .update(new Uint8Array([0x01, ...ir, ...rawIndex.toBytesBigEndian()]))
                .digest();
            return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);
        }
        // step 7
        return {
            chainCode: returnChainCode,
            privkey: returnChildKey,
        };
    }
    static isZero(privkey) {
        return privkey.every((byte) => byte === 0);
    }
    static isGteN(curve, privkey) {
        const keyAsNumber = new bn_js_1.default(privkey);
        return keyAsNumber.gte(this.n(curve));
    }
    static n(curve) {
        switch (curve) {
            case Slip10Curve.Secp256k1:
                return new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", 16);
            default:
                throw new Error("curve not supported");
        }
    }
}
exports.Slip10 = Slip10;
function pathToString(path) {
    return path.reduce((current, component) => {
        const componentString = component.isHardened()
            ? `${component.toNumber() - 2 ** 31}'`
            : component.toString();
        return current + "/" + componentString;
    }, "m");
}
exports.pathToString = pathToString;
function stringToPath(input) {
    if (!input.startsWith("m"))
        throw new Error("Path string must start with 'm'");
    let rest = input.slice(1);
    const out = new Array();
    while (rest) {
        const match = rest.match(/^\/([0-9]+)('?)/);
        if (!match)
            throw new Error("Syntax error while reading path component");
        const [fullMatch, numberString, apostrophe] = match;
        const value = math_1.Uint53.fromString(numberString).toNumber();
        if (value >= 2 ** 31)
            throw new Error("Component value too high. Must not exceed 2**31-1.");
        if (apostrophe)
            out.push(Slip10RawIndex.hardened(value));
        else
            out.push(Slip10RawIndex.normal(value));
        rest = rest.slice(fullMatch.length);
    }
    return out;
}
exports.stringToPath = stringToPath;
//# sourceMappingURL=slip10.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/crypto/build/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toRealUint8Array = void 0;
// See https://github.com/paulmillr/noble-hashes/issues/25 for why this is needed
function toRealUint8Array(data) {
    if (data instanceof Uint8Array)
        return data;
    else
        return Uint8Array.from(data);
}
exports.toRealUint8Array = toRealUint8Array;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/ascii.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/ascii.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromAscii = exports.toAscii = void 0;
function toAscii(input) {
    const toNums = (str) => str.split("").map((x) => {
        const charCode = x.charCodeAt(0);
        // 0x00–0x1F control characters
        // 0x20–0x7E printable characters
        // 0x7F delete character
        // 0x80–0xFF out of 7 bit ascii range
        if (charCode < 0x20 || charCode > 0x7e) {
            throw new Error("Cannot encode character that is out of printable ASCII range: " + charCode);
        }
        return charCode;
    });
    return Uint8Array.from(toNums(input));
}
exports.toAscii = toAscii;
function fromAscii(data) {
    const fromNums = (listOfNumbers) => listOfNumbers.map((x) => {
        // 0x00–0x1F control characters
        // 0x20–0x7E printable characters
        // 0x7F delete character
        // 0x80–0xFF out of 7 bit ascii range
        if (x < 0x20 || x > 0x7e) {
            throw new Error("Cannot decode character that is out of printable ASCII range: " + x);
        }
        return String.fromCharCode(x);
    });
    return fromNums(Array.from(data)).join("");
}
exports.fromAscii = fromAscii;
//# sourceMappingURL=ascii.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/base64.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromBase64 = exports.toBase64 = void 0;
const base64js = __importStar(__webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js"));
function toBase64(data) {
    return base64js.fromByteArray(data);
}
exports.toBase64 = toBase64;
function fromBase64(base64String) {
    if (!base64String.match(/^[a-zA-Z0-9+/]*={0,2}$/)) {
        throw new Error("Invalid base64 string format");
    }
    return base64js.toByteArray(base64String);
}
exports.fromBase64 = fromBase64;
//# sourceMappingURL=base64.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/bech32.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/bech32.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeBech32 = exports.fromBech32 = exports.toBech32 = void 0;
const bech32 = __importStar(__webpack_require__(/*! bech32 */ "./node_modules/bech32/index.js"));
function toBech32(prefix, data, limit) {
    const address = bech32.encode(prefix, bech32.toWords(data), limit);
    return address;
}
exports.toBech32 = toBech32;
function fromBech32(address, limit = Infinity) {
    const decodedAddress = bech32.decode(address, limit);
    return {
        prefix: decodedAddress.prefix,
        data: new Uint8Array(bech32.fromWords(decodedAddress.words)),
    };
}
exports.fromBech32 = fromBech32;
/**
 * Takes a bech32 address and returns a normalized (i.e. lower case) representation of it.
 *
 * The input is validated along the way, which makes this significantly safer than
 * using `address.toLowerCase()`.
 */
function normalizeBech32(address) {
    const { prefix, data } = fromBech32(address);
    return toBech32(prefix, data);
}
exports.normalizeBech32 = normalizeBech32;
//# sourceMappingURL=bech32.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/hex.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/hex.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromHex = exports.toHex = void 0;
function toHex(data) {
    let out = "";
    for (const byte of data) {
        out += ("0" + byte.toString(16)).slice(-2);
    }
    return out;
}
exports.toHex = toHex;
function fromHex(hexstring) {
    if (hexstring.length % 2 !== 0) {
        throw new Error("hex string length must be a multiple of 2");
    }
    const out = new Uint8Array(hexstring.length / 2);
    for (let i = 0; i < out.length; i++) {
        const j = 2 * i;
        const hexByteAsString = hexstring.slice(j, j + 2);
        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {
            throw new Error("hex string contains invalid characters");
        }
        out[i] = parseInt(hexByteAsString, 16);
    }
    return out;
}
exports.fromHex = fromHex;
//# sourceMappingURL=hex.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;
var ascii_1 = __webpack_require__(/*! ./ascii */ "./node_modules/@cosmjs/encoding/build/ascii.js");
Object.defineProperty(exports, "fromAscii", ({ enumerable: true, get: function () { return ascii_1.fromAscii; } }));
Object.defineProperty(exports, "toAscii", ({ enumerable: true, get: function () { return ascii_1.toAscii; } }));
var base64_1 = __webpack_require__(/*! ./base64 */ "./node_modules/@cosmjs/encoding/build/base64.js");
Object.defineProperty(exports, "fromBase64", ({ enumerable: true, get: function () { return base64_1.fromBase64; } }));
Object.defineProperty(exports, "toBase64", ({ enumerable: true, get: function () { return base64_1.toBase64; } }));
var bech32_1 = __webpack_require__(/*! ./bech32 */ "./node_modules/@cosmjs/encoding/build/bech32.js");
Object.defineProperty(exports, "fromBech32", ({ enumerable: true, get: function () { return bech32_1.fromBech32; } }));
Object.defineProperty(exports, "normalizeBech32", ({ enumerable: true, get: function () { return bech32_1.normalizeBech32; } }));
Object.defineProperty(exports, "toBech32", ({ enumerable: true, get: function () { return bech32_1.toBech32; } }));
var hex_1 = __webpack_require__(/*! ./hex */ "./node_modules/@cosmjs/encoding/build/hex.js");
Object.defineProperty(exports, "fromHex", ({ enumerable: true, get: function () { return hex_1.fromHex; } }));
Object.defineProperty(exports, "toHex", ({ enumerable: true, get: function () { return hex_1.toHex; } }));
var rfc3339_1 = __webpack_require__(/*! ./rfc3339 */ "./node_modules/@cosmjs/encoding/build/rfc3339.js");
Object.defineProperty(exports, "fromRfc3339", ({ enumerable: true, get: function () { return rfc3339_1.fromRfc3339; } }));
Object.defineProperty(exports, "toRfc3339", ({ enumerable: true, get: function () { return rfc3339_1.toRfc3339; } }));
var utf8_1 = __webpack_require__(/*! ./utf8 */ "./node_modules/@cosmjs/encoding/build/utf8.js");
Object.defineProperty(exports, "fromUtf8", ({ enumerable: true, get: function () { return utf8_1.fromUtf8; } }));
Object.defineProperty(exports, "toUtf8", ({ enumerable: true, get: function () { return utf8_1.toUtf8; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/rfc3339.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/rfc3339.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toRfc3339 = exports.fromRfc3339 = void 0;
const rfc3339Matcher = /^(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(\.\d{1,9})?((?:[+-]\d{2}:\d{2})|Z)$/;
function padded(integer, length = 2) {
    return integer.toString().padStart(length, "0");
}
function fromRfc3339(str) {
    const matches = rfc3339Matcher.exec(str);
    if (!matches) {
        throw new Error("Date string is not in RFC3339 format");
    }
    const year = +matches[1];
    const month = +matches[2];
    const day = +matches[3];
    const hour = +matches[4];
    const minute = +matches[5];
    const second = +matches[6];
    // fractional seconds match either undefined or a string like ".1", ".123456789"
    const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1000) : 0;
    let tzOffsetSign;
    let tzOffsetHours;
    let tzOffsetMinutes;
    // if timezone is undefined, it must be Z or nothing (otherwise the group would have captured).
    if (matches[8] === "Z") {
        tzOffsetSign = 1;
        tzOffsetHours = 0;
        tzOffsetMinutes = 0;
    }
    else {
        tzOffsetSign = matches[8].substring(0, 1) === "-" ? -1 : 1;
        tzOffsetHours = +matches[8].substring(1, 3);
        tzOffsetMinutes = +matches[8].substring(4, 6);
    }
    const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60; // seconds
    const date = new Date();
    date.setUTCFullYear(year, month - 1, day);
    date.setUTCHours(hour, minute, second, milliSeconds);
    return new Date(date.getTime() - tzOffset * 1000);
}
exports.fromRfc3339 = fromRfc3339;
function toRfc3339(date) {
    const year = date.getUTCFullYear();
    const month = padded(date.getUTCMonth() + 1);
    const day = padded(date.getUTCDate());
    const hour = padded(date.getUTCHours());
    const minute = padded(date.getUTCMinutes());
    const second = padded(date.getUTCSeconds());
    const ms = padded(date.getUTCMilliseconds(), 3);
    return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;
}
exports.toRfc3339 = toRfc3339;
//# sourceMappingURL=rfc3339.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/encoding/build/utf8.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/utf8.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromUtf8 = exports.toUtf8 = void 0;
function toUtf8(str) {
    return new TextEncoder().encode(str);
}
exports.toUtf8 = toUtf8;
/**
 * Takes UTF-8 data and decodes it to a string.
 *
 * In lossy mode, the [REPLACEMENT CHARACTER](https://en.wikipedia.org/wiki/Specials_(Unicode_block))
 * is used to substitude invalid encodings.
 * By default lossy mode is off and invalid data will lead to exceptions.
 */
function fromUtf8(data, lossy = false) {
    const fatal = !lossy;
    return new TextDecoder("utf-8", { fatal }).decode(data);
}
exports.fromUtf8 = fromUtf8;
//# sourceMappingURL=utf8.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/math/build/decimal.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/decimal.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Decimal = void 0;
const bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js"));
// Too large values lead to massive memory usage. Limit to something sensible.
// The largest value we need is 18 (Ether).
const maxFractionalDigits = 100;
/**
 * A type for arbitrary precision, non-negative decimals.
 *
 * Instances of this class are immutable.
 */
class Decimal {
    static fromUserInput(input, fractionalDigits) {
        Decimal.verifyFractionalDigits(fractionalDigits);
        const badCharacter = input.match(/[^0-9.]/);
        if (badCharacter) {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            throw new Error(`Invalid character at position ${badCharacter.index + 1}`);
        }
        let whole;
        let fractional;
        if (input === "") {
            whole = "0";
            fractional = "";
        }
        else if (input.search(/\./) === -1) {
            // integer format, no separator
            whole = input;
            fractional = "";
        }
        else {
            const parts = input.split(".");
            switch (parts.length) {
                case 0:
                case 1:
                    throw new Error("Fewer than two elements in split result. This must not happen here.");
                case 2:
                    if (!parts[1])
                        throw new Error("Fractional part missing");
                    whole = parts[0];
                    fractional = parts[1].replace(/0+$/, "");
                    break;
                default:
                    throw new Error("More than one separator found");
            }
        }
        if (fractional.length > fractionalDigits) {
            throw new Error("Got more fractional digits than supported");
        }
        const quantity = `${whole}${fractional.padEnd(fractionalDigits, "0")}`;
        return new Decimal(quantity, fractionalDigits);
    }
    static fromAtomics(atomics, fractionalDigits) {
        Decimal.verifyFractionalDigits(fractionalDigits);
        return new Decimal(atomics, fractionalDigits);
    }
    /**
     * Creates a Decimal with value 0.0 and the given number of fractial digits.
     *
     * Fractional digits are not relevant for the value but needed to be able
     * to perform arithmetic operations with other decimals.
     */
    static zero(fractionalDigits) {
        Decimal.verifyFractionalDigits(fractionalDigits);
        return new Decimal("0", fractionalDigits);
    }
    /**
     * Creates a Decimal with value 1.0 and the given number of fractial digits.
     *
     * Fractional digits are not relevant for the value but needed to be able
     * to perform arithmetic operations with other decimals.
     */
    static one(fractionalDigits) {
        Decimal.verifyFractionalDigits(fractionalDigits);
        return new Decimal("1" + "0".repeat(fractionalDigits), fractionalDigits);
    }
    static verifyFractionalDigits(fractionalDigits) {
        if (!Number.isInteger(fractionalDigits))
            throw new Error("Fractional digits is not an integer");
        if (fractionalDigits < 0)
            throw new Error("Fractional digits must not be negative");
        if (fractionalDigits > maxFractionalDigits) {
            throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);
        }
    }
    static compare(a, b) {
        if (a.fractionalDigits !== b.fractionalDigits)
            throw new Error("Fractional digits do not match");
        return a.data.atomics.cmp(new bn_js_1.default(b.atomics));
    }
    get atomics() {
        return this.data.atomics.toString();
    }
    get fractionalDigits() {
        return this.data.fractionalDigits;
    }
    constructor(atomics, fractionalDigits) {
        if (!atomics.match(/^[0-9]+$/)) {
            throw new Error("Invalid string format. Only non-negative integers in decimal representation supported.");
        }
        this.data = {
            atomics: new bn_js_1.default(atomics),
            fractionalDigits: fractionalDigits,
        };
    }
    /** Creates a new instance with the same value */
    clone() {
        return new Decimal(this.atomics, this.fractionalDigits);
    }
    /** Returns the greatest decimal <= this which has no fractional part (rounding down) */
    floor() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
            return this.clone();
        }
        else {
            return Decimal.fromAtomics(whole.mul(factor).toString(), this.fractionalDigits);
        }
    }
    /** Returns the smallest decimal >= this which has no fractional part (rounding up) */
    ceil() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
            return this.clone();
        }
        else {
            return Decimal.fromAtomics(whole.addn(1).mul(factor).toString(), this.fractionalDigits);
        }
    }
    toString() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
            return whole.toString();
        }
        else {
            const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, "0");
            const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, "");
            return `${whole.toString()}.${trimmedFractionalPart}`;
        }
    }
    /**
     * Returns an approximation as a float type. Only use this if no
     * exact calculation is required.
     */
    toFloatApproximation() {
        const out = Number(this.toString());
        if (Number.isNaN(out))
            throw new Error("Conversion to number failed");
        return out;
    }
    /**
     * a.plus(b) returns a+b.
     *
     * Both values need to have the same fractional digits.
     */
    plus(b) {
        if (this.fractionalDigits !== b.fractionalDigits)
            throw new Error("Fractional digits do not match");
        const sum = this.data.atomics.add(new bn_js_1.default(b.atomics));
        return new Decimal(sum.toString(), this.fractionalDigits);
    }
    /**
     * a.minus(b) returns a-b.
     *
     * Both values need to have the same fractional digits.
     * The resulting difference needs to be non-negative.
     */
    minus(b) {
        if (this.fractionalDigits !== b.fractionalDigits)
            throw new Error("Fractional digits do not match");
        const difference = this.data.atomics.sub(new bn_js_1.default(b.atomics));
        if (difference.ltn(0))
            throw new Error("Difference must not be negative");
        return new Decimal(difference.toString(), this.fractionalDigits);
    }
    /**
     * a.multiply(b) returns a*b.
     *
     * We only allow multiplication by unsigned integers to avoid rounding errors.
     */
    multiply(b) {
        const product = this.data.atomics.mul(new bn_js_1.default(b.toString()));
        return new Decimal(product.toString(), this.fractionalDigits);
    }
    equals(b) {
        return Decimal.compare(this, b) === 0;
    }
    isLessThan(b) {
        return Decimal.compare(this, b) < 0;
    }
    isLessThanOrEqual(b) {
        return Decimal.compare(this, b) <= 0;
    }
    isGreaterThan(b) {
        return Decimal.compare(this, b) > 0;
    }
    isGreaterThanOrEqual(b) {
        return Decimal.compare(this, b) >= 0;
    }
}
exports.Decimal = Decimal;
//# sourceMappingURL=decimal.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/math/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;
var decimal_1 = __webpack_require__(/*! ./decimal */ "./node_modules/@cosmjs/math/build/decimal.js");
Object.defineProperty(exports, "Decimal", ({ enumerable: true, get: function () { return decimal_1.Decimal; } }));
var integers_1 = __webpack_require__(/*! ./integers */ "./node_modules/@cosmjs/math/build/integers.js");
Object.defineProperty(exports, "Int53", ({ enumerable: true, get: function () { return integers_1.Int53; } }));
Object.defineProperty(exports, "Uint32", ({ enumerable: true, get: function () { return integers_1.Uint32; } }));
Object.defineProperty(exports, "Uint53", ({ enumerable: true, get: function () { return integers_1.Uint53; } }));
Object.defineProperty(exports, "Uint64", ({ enumerable: true, get: function () { return integers_1.Uint64; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/math/build/integers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/integers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;
/* eslint-disable no-bitwise */
const bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js"));
const uint64MaxValue = new bn_js_1.default("18446744073709551615", 10, "be");
class Uint32 {
    /** @deprecated use Uint32.fromBytes */
    static fromBigEndianBytes(bytes) {
        return Uint32.fromBytes(bytes);
    }
    /**
     * Creates a Uint32 from a fixed length byte array.
     *
     * @param bytes a list of exactly 4 bytes
     * @param endianess defaults to big endian
     */
    static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 4) {
            throw new Error("Invalid input length. Expected 4 bytes.");
        }
        for (let i = 0; i < bytes.length; ++i) {
            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {
                throw new Error("Invalid value in byte. Found: " + bytes[i]);
            }
        }
        const beBytes = endianess === "be" ? bytes : Array.from(bytes).reverse();
        // Use mulitiplication instead of shifting since bitwise operators are defined
        // on SIGNED int32 in JavaScript and we don't want to risk surprises
        return new Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);
    }
    static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
            throw new Error("Invalid string format");
        }
        return new Uint32(Number.parseInt(str, 10));
    }
    constructor(input) {
        if (Number.isNaN(input)) {
            throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
            throw new Error("Input is not an integer");
        }
        if (input < 0 || input > 4294967295) {
            throw new Error("Input not in uint32 range: " + input.toString());
        }
        this.data = input;
    }
    toBytesBigEndian() {
        // Use division instead of shifting since bitwise operators are defined
        // on SIGNED int32 in JavaScript and we don't want to risk surprises
        return new Uint8Array([
            Math.floor(this.data / 2 ** 24) & 0xff,
            Math.floor(this.data / 2 ** 16) & 0xff,
            Math.floor(this.data / 2 ** 8) & 0xff,
            Math.floor(this.data / 2 ** 0) & 0xff,
        ]);
    }
    toBytesLittleEndian() {
        // Use division instead of shifting since bitwise operators are defined
        // on SIGNED int32 in JavaScript and we don't want to risk surprises
        return new Uint8Array([
            Math.floor(this.data / 2 ** 0) & 0xff,
            Math.floor(this.data / 2 ** 8) & 0xff,
            Math.floor(this.data / 2 ** 16) & 0xff,
            Math.floor(this.data / 2 ** 24) & 0xff,
        ]);
    }
    toNumber() {
        return this.data;
    }
    toBigInt() {
        return BigInt(this.toNumber());
    }
    toString() {
        return this.data.toString();
    }
}
exports.Uint32 = Uint32;
class Int53 {
    static fromString(str) {
        if (!str.match(/^-?[0-9]+$/)) {
            throw new Error("Invalid string format");
        }
        return new Int53(Number.parseInt(str, 10));
    }
    constructor(input) {
        if (Number.isNaN(input)) {
            throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
            throw new Error("Input is not an integer");
        }
        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {
            throw new Error("Input not in int53 range: " + input.toString());
        }
        this.data = input;
    }
    toNumber() {
        return this.data;
    }
    toBigInt() {
        return BigInt(this.toNumber());
    }
    toString() {
        return this.data.toString();
    }
}
exports.Int53 = Int53;
class Uint53 {
    static fromString(str) {
        const signed = Int53.fromString(str);
        return new Uint53(signed.toNumber());
    }
    constructor(input) {
        const signed = new Int53(input);
        if (signed.toNumber() < 0) {
            throw new Error("Input is negative");
        }
        this.data = signed;
    }
    toNumber() {
        return this.data.toNumber();
    }
    toBigInt() {
        return BigInt(this.toNumber());
    }
    toString() {
        return this.data.toString();
    }
}
exports.Uint53 = Uint53;
class Uint64 {
    /** @deprecated use Uint64.fromBytes */
    static fromBytesBigEndian(bytes) {
        return Uint64.fromBytes(bytes);
    }
    /**
     * Creates a Uint64 from a fixed length byte array.
     *
     * @param bytes a list of exactly 8 bytes
     * @param endianess defaults to big endian
     */
    static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 8) {
            throw new Error("Invalid input length. Expected 8 bytes.");
        }
        for (let i = 0; i < bytes.length; ++i) {
            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {
                throw new Error("Invalid value in byte. Found: " + bytes[i]);
            }
        }
        const beBytes = endianess === "be" ? Array.from(bytes) : Array.from(bytes).reverse();
        return new Uint64(new bn_js_1.default(beBytes));
    }
    static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
            throw new Error("Invalid string format");
        }
        return new Uint64(new bn_js_1.default(str, 10, "be"));
    }
    static fromNumber(input) {
        if (Number.isNaN(input)) {
            throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
            throw new Error("Input is not an integer");
        }
        let bigint;
        try {
            bigint = new bn_js_1.default(input);
        }
        catch {
            throw new Error("Input is not a safe integer");
        }
        return new Uint64(bigint);
    }
    constructor(data) {
        if (data.isNeg()) {
            throw new Error("Input is negative");
        }
        if (data.gt(uint64MaxValue)) {
            throw new Error("Input exceeds uint64 range");
        }
        this.data = data;
    }
    toBytesBigEndian() {
        return Uint8Array.from(this.data.toArray("be", 8));
    }
    toBytesLittleEndian() {
        return Uint8Array.from(this.data.toArray("le", 8));
    }
    toString() {
        return this.data.toString(10);
    }
    toBigInt() {
        return BigInt(this.toString());
    }
    toNumber() {
        return this.data.toNumber();
    }
}
exports.Uint64 = Uint64;
// Assign classes to unused variables in order to verify static interface conformance at compile time.
// Workaround for https://github.com/microsoft/TypeScript/issues/33892
const _int53Class = Int53;
const _uint53Class = Uint53;
const _uint32Class = Uint32;
const _uint64Class = Uint64;
//# sourceMappingURL=integers.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/coins.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/coins.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseCoins = void 0;
/**
 * Takes a coins list like "819966000ucosm,700000000ustake" and parses it.
 *
 * This is a Stargate ready version of parseCoins from @cosmjs/amino.
 * It supports more denoms.
 */
function parseCoins(input) {
    return input
        .replace(/\s/g, "")
        .split(",")
        .filter(Boolean)
        .map((part) => {
        // Denom regex from Stargate (https://github.com/cosmos/cosmos-sdk/blob/v0.42.7/types/coin.go#L599-L601)
        const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);
        if (!match)
            throw new Error("Got an invalid coin string");
        return {
            amount: match[1].replace(/^0+/, "") || "0",
            denom: match[2],
        };
    });
}
exports.parseCoins = parseCoins;
//# sourceMappingURL=coins.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/decode.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/decode.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeTxRaw = void 0;
const tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ "./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js");
/**
 * Takes a serialized TxRaw (the bytes stored in Tendermint) and decodes it into something usable.
 */
function decodeTxRaw(tx) {
    const txRaw = tx_1.TxRaw.decode(tx);
    return {
        authInfo: tx_1.AuthInfo.decode(txRaw.authInfoBytes),
        body: tx_1.TxBody.decode(txRaw.bodyBytes),
        signatures: txRaw.signatures,
    };
}
exports.decodeTxRaw = decodeTxRaw;
//# sourceMappingURL=decode.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DirectSecp256k1HdWallet = exports.extractKdfConfiguration = void 0;
const amino_1 = __webpack_require__(/*! @cosmjs/amino */ "./node_modules/@cosmjs/amino/build/index.js");
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const utils_1 = __webpack_require__(/*! @cosmjs/utils */ "./node_modules/@cosmjs/utils/build/index.js");
const signing_1 = __webpack_require__(/*! ./signing */ "./node_modules/@cosmjs/proto-signing/build/signing.js");
const wallet_1 = __webpack_require__(/*! ./wallet */ "./node_modules/@cosmjs/proto-signing/build/wallet.js");
const serializationTypeV1 = "directsecp256k1hdwallet-v1";
/**
 * A KDF configuration that is not very strong but can be used on the main thread.
 * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.
 */
const basicPasswordHashingOptions = {
    algorithm: "argon2id",
    params: {
        outputLength: 32,
        opsLimit: 24,
        memLimitKib: 12 * 1024,
    },
};
function isDerivationJson(thing) {
    if (!(0, utils_1.isNonNullObject)(thing))
        return false;
    if (typeof thing.hdPath !== "string")
        return false;
    if (typeof thing.prefix !== "string")
        return false;
    return true;
}
function extractKdfConfigurationV1(doc) {
    return doc.kdf;
}
function extractKdfConfiguration(serialization) {
    const root = JSON.parse(serialization);
    if (!(0, utils_1.isNonNullObject)(root))
        throw new Error("Root document is not an object.");
    switch (root.type) {
        case serializationTypeV1:
            return extractKdfConfigurationV1(root);
        default:
            throw new Error("Unsupported serialization type");
    }
}
exports.extractKdfConfiguration = extractKdfConfiguration;
const defaultOptions = {
    bip39Password: "",
    hdPaths: [(0, amino_1.makeCosmoshubPath)(0)],
    prefix: "cosmos",
};
/** A wallet for protobuf based signing using SIGN_MODE_DIRECT */
class DirectSecp256k1HdWallet {
    /**
     * Restores a wallet from the given BIP39 mnemonic.
     *
     * @param mnemonic Any valid English mnemonic.
     * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
     */
    static async fromMnemonic(mnemonic, options = {}) {
        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);
        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
        return new DirectSecp256k1HdWallet(mnemonicChecked, {
            ...options,
            seed: seed,
        });
    }
    /**
     * Generates a new wallet with a BIP39 mnemonic of the given length.
     *
     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).
     * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.
     */
    static async generate(length = 12, options = {}) {
        const entropyLength = 4 * Math.floor((11 * length) / 33);
        const entropy = crypto_1.Random.getBytes(entropyLength);
        const mnemonic = crypto_1.Bip39.encode(entropy);
        return DirectSecp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);
    }
    /**
     * Restores a wallet from an encrypted serialization.
     *
     * @param password The user provided password used to generate an encryption key via a KDF.
     *                 This is not normalized internally (see "Unicode normalization" to learn more).
     */
    static async deserialize(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
            throw new Error("Root document is not an object.");
        switch (root.type) {
            case serializationTypeV1:
                return DirectSecp256k1HdWallet.deserializeTypeV1(serialization, password);
            default:
                throw new Error("Unsupported serialization type");
        }
    }
    /**
     * Restores a wallet from an encrypted serialization.
     *
     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows
     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
     *
     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be
     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.
     */
    static async deserializeWithEncryptionKey(serialization, encryptionKey) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
            throw new Error("Root document is not an object.");
        const untypedRoot = root;
        switch (untypedRoot.type) {
            case serializationTypeV1: {
                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);
                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));
                const { mnemonic, accounts } = decryptedDocument;
                (0, utils_1.assert)(typeof mnemonic === "string");
                if (!Array.isArray(accounts))
                    throw new Error("Property 'accounts' is not an array");
                if (!accounts.every((account) => isDerivationJson(account))) {
                    throw new Error("Account is not in the correct format.");
                }
                const firstPrefix = accounts[0].prefix;
                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {
                    throw new Error("Accounts do not all have the same prefix");
                }
                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));
                return DirectSecp256k1HdWallet.fromMnemonic(mnemonic, {
                    hdPaths: hdPaths,
                    prefix: firstPrefix,
                });
            }
            default:
                throw new Error("Unsupported serialization type");
        }
    }
    static async deserializeTypeV1(serialization, password) {
        const root = JSON.parse(serialization);
        if (!(0, utils_1.isNonNullObject)(root))
            throw new Error("Root document is not an object.");
        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);
        return DirectSecp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);
    }
    constructor(mnemonic, options) {
        const prefix = options.prefix ?? defaultOptions.prefix;
        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;
        this.secret = mnemonic;
        this.seed = options.seed;
        this.accounts = hdPaths.map((hdPath) => ({
            hdPath: hdPath,
            prefix: prefix,
        }));
    }
    get mnemonic() {
        return this.secret.toString();
    }
    async getAccounts() {
        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();
        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({
            algo: algo,
            pubkey: pubkey,
            address: address,
        }));
    }
    async signDirect(signerAddress, signDoc) {
        const accounts = await this.getAccountsWithPrivkeys();
        const account = accounts.find(({ address }) => address === signerAddress);
        if (account === undefined) {
            throw new Error(`Address ${signerAddress} not found in wallet`);
        }
        const { privkey, pubkey } = account;
        const signBytes = (0, signing_1.makeSignBytes)(signDoc);
        const hashedMessage = (0, crypto_1.sha256)(signBytes);
        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(pubkey, signatureBytes);
        return {
            signed: signDoc,
            signature: stdSignature,
        };
    }
    /**
     * Generates an encrypted serialization of this wallet.
     *
     * @param password The user provided password used to generate an encryption key via a KDF.
     *                 This is not normalized internally (see "Unicode normalization" to learn more).
     */
    async serialize(password) {
        const kdfConfiguration = basicPasswordHashingOptions;
        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);
        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);
    }
    /**
     * Generates an encrypted serialization of this wallet.
     *
     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to
     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).
     *
     * The caller is responsible for ensuring the key was derived with the given KDF options. If this
     * is not the case, the wallet cannot be restored with the original password.
     */
    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {
        const dataToEncrypt = {
            mnemonic: this.mnemonic,
            accounts: this.accounts.map(({ hdPath, prefix }) => ({
                hdPath: (0, crypto_1.pathToString)(hdPath),
                prefix: prefix,
            })),
        };
        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));
        const encryptionConfiguration = {
            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,
        };
        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);
        const out = {
            type: serializationTypeV1,
            kdf: kdfConfiguration,
            encryption: encryptionConfiguration,
            data: (0, encoding_1.toBase64)(encryptedData),
        };
        return JSON.stringify(out);
    }
    async getKeyPair(hdPath) {
        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);
        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);
        return {
            privkey: privkey,
            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),
        };
    }
    async getAccountsWithPrivkeys() {
        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {
            const { privkey, pubkey } = await this.getKeyPair(hdPath);
            const address = (0, encoding_1.toBech32)(prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(pubkey));
            return {
                algo: "secp256k1",
                privkey: privkey,
                pubkey: pubkey,
                address: address,
            };
        }));
    }
}
exports.DirectSecp256k1HdWallet = DirectSecp256k1HdWallet;
//# sourceMappingURL=directsecp256k1hdwallet.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DirectSecp256k1Wallet = void 0;
const amino_1 = __webpack_require__(/*! @cosmjs/amino */ "./node_modules/@cosmjs/amino/build/index.js");
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const signing_1 = __webpack_require__(/*! ./signing */ "./node_modules/@cosmjs/proto-signing/build/signing.js");
/**
 * A wallet that holds a single secp256k1 keypair.
 *
 * If you want to work with BIP39 mnemonics and multiple accounts, use DirectSecp256k1HdWallet.
 */
class DirectSecp256k1Wallet {
    /**
     * Creates a DirectSecp256k1Wallet from the given private key
     *
     * @param privkey The private key.
     * @param prefix The bech32 address prefix (human readable part). Defaults to "cosmos".
     */
    static async fromKey(privkey, prefix = "cosmos") {
        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;
        return new DirectSecp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);
    }
    constructor(privkey, pubkey, prefix) {
        this.privkey = privkey;
        this.pubkey = pubkey;
        this.prefix = prefix;
    }
    get address() {
        return (0, encoding_1.toBech32)(this.prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));
    }
    async getAccounts() {
        return [
            {
                algo: "secp256k1",
                address: this.address,
                pubkey: this.pubkey,
            },
        ];
    }
    async signDirect(address, signDoc) {
        const signBytes = (0, signing_1.makeSignBytes)(signDoc);
        if (address !== this.address) {
            throw new Error(`Address ${address} not found in wallet`);
        }
        const hashedMessage = (0, crypto_1.sha256)(signBytes);
        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, this.privkey);
        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes);
        return {
            signed: signDoc,
            signature: stdSignature,
        };
    }
}
exports.DirectSecp256k1Wallet = DirectSecp256k1Wallet;
//# sourceMappingURL=directsecp256k1wallet.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.coins = exports.coin = exports.executeKdf = exports.makeSignDoc = exports.makeSignBytes = exports.makeAuthInfoBytes = exports.isOfflineDirectSigner = exports.Registry = exports.isTxBodyEncodeObject = exports.isTsProtoGeneratedType = exports.isPbjsGeneratedType = exports.encodePubkey = exports.decodePubkey = exports.decodeOptionalPubkey = exports.anyToSinglePubkey = exports.makeCosmoshubPath = exports.DirectSecp256k1Wallet = exports.extractKdfConfiguration = exports.DirectSecp256k1HdWallet = exports.decodeTxRaw = exports.parseCoins = void 0;
// This type happens to be shared between Amino and Direct sign modes
var coins_1 = __webpack_require__(/*! ./coins */ "./node_modules/@cosmjs/proto-signing/build/coins.js");
Object.defineProperty(exports, "parseCoins", ({ enumerable: true, get: function () { return coins_1.parseCoins; } }));
var decode_1 = __webpack_require__(/*! ./decode */ "./node_modules/@cosmjs/proto-signing/build/decode.js");
Object.defineProperty(exports, "decodeTxRaw", ({ enumerable: true, get: function () { return decode_1.decodeTxRaw; } }));
var directsecp256k1hdwallet_1 = __webpack_require__(/*! ./directsecp256k1hdwallet */ "./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js");
Object.defineProperty(exports, "DirectSecp256k1HdWallet", ({ enumerable: true, get: function () { return directsecp256k1hdwallet_1.DirectSecp256k1HdWallet; } }));
Object.defineProperty(exports, "extractKdfConfiguration", ({ enumerable: true, get: function () { return directsecp256k1hdwallet_1.extractKdfConfiguration; } }));
var directsecp256k1wallet_1 = __webpack_require__(/*! ./directsecp256k1wallet */ "./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js");
Object.defineProperty(exports, "DirectSecp256k1Wallet", ({ enumerable: true, get: function () { return directsecp256k1wallet_1.DirectSecp256k1Wallet; } }));
var paths_1 = __webpack_require__(/*! ./paths */ "./node_modules/@cosmjs/proto-signing/build/paths.js");
Object.defineProperty(exports, "makeCosmoshubPath", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));
var pubkey_1 = __webpack_require__(/*! ./pubkey */ "./node_modules/@cosmjs/proto-signing/build/pubkey.js");
Object.defineProperty(exports, "anyToSinglePubkey", ({ enumerable: true, get: function () { return pubkey_1.anyToSinglePubkey; } }));
Object.defineProperty(exports, "decodeOptionalPubkey", ({ enumerable: true, get: function () { return pubkey_1.decodeOptionalPubkey; } }));
Object.defineProperty(exports, "decodePubkey", ({ enumerable: true, get: function () { return pubkey_1.decodePubkey; } }));
Object.defineProperty(exports, "encodePubkey", ({ enumerable: true, get: function () { return pubkey_1.encodePubkey; } }));
var registry_1 = __webpack_require__(/*! ./registry */ "./node_modules/@cosmjs/proto-signing/build/registry.js");
Object.defineProperty(exports, "isPbjsGeneratedType", ({ enumerable: true, get: function () { return registry_1.isPbjsGeneratedType; } }));
Object.defineProperty(exports, "isTsProtoGeneratedType", ({ enumerable: true, get: function () { return registry_1.isTsProtoGeneratedType; } }));
Object.defineProperty(exports, "isTxBodyEncodeObject", ({ enumerable: true, get: function () { return registry_1.isTxBodyEncodeObject; } }));
Object.defineProperty(exports, "Registry", ({ enumerable: true, get: function () { return registry_1.Registry; } }));
var signer_1 = __webpack_require__(/*! ./signer */ "./node_modules/@cosmjs/proto-signing/build/signer.js");
Object.defineProperty(exports, "isOfflineDirectSigner", ({ enumerable: true, get: function () { return signer_1.isOfflineDirectSigner; } }));
var signing_1 = __webpack_require__(/*! ./signing */ "./node_modules/@cosmjs/proto-signing/build/signing.js");
Object.defineProperty(exports, "makeAuthInfoBytes", ({ enumerable: true, get: function () { return signing_1.makeAuthInfoBytes; } }));
Object.defineProperty(exports, "makeSignBytes", ({ enumerable: true, get: function () { return signing_1.makeSignBytes; } }));
Object.defineProperty(exports, "makeSignDoc", ({ enumerable: true, get: function () { return signing_1.makeSignDoc; } }));
var wallet_1 = __webpack_require__(/*! ./wallet */ "./node_modules/@cosmjs/proto-signing/build/wallet.js");
Object.defineProperty(exports, "executeKdf", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));
var amino_1 = __webpack_require__(/*! @cosmjs/amino */ "./node_modules/@cosmjs/amino/build/index.js");
Object.defineProperty(exports, "coin", ({ enumerable: true, get: function () { return amino_1.coin; } }));
Object.defineProperty(exports, "coins", ({ enumerable: true, get: function () { return amino_1.coins; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/paths.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/paths.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeCosmoshubPath = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
/**
 * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`
 * with 0-based account index `a`.
 */
function makeCosmoshubPath(a) {
    return [
        crypto_1.Slip10RawIndex.hardened(44),
        crypto_1.Slip10RawIndex.hardened(118),
        crypto_1.Slip10RawIndex.hardened(0),
        crypto_1.Slip10RawIndex.normal(0),
        crypto_1.Slip10RawIndex.normal(a),
    ];
}
exports.makeCosmoshubPath = makeCosmoshubPath;
//# sourceMappingURL=paths.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/pubkey.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/pubkey.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeOptionalPubkey = exports.decodePubkey = exports.anyToSinglePubkey = exports.encodePubkey = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
const amino_1 = __webpack_require__(/*! @cosmjs/amino */ "./node_modules/@cosmjs/amino/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
const math_1 = __webpack_require__(/*! @cosmjs/math */ "./node_modules/@cosmjs/math/build/index.js");
const keys_1 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/ed25519/keys */ "./node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js");
const keys_2 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/multisig/keys */ "./node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js");
const keys_3 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/secp256k1/keys */ "./node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js");
const any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ "./node_modules/cosmjs-types/google/protobuf/any.js");
/**
 * Takes a pubkey in the Amino JSON object style (type/value wrapper)
 * and convertes it into a protobuf `Any`.
 *
 * This is the reverse operation to `decodePubkey`.
 */
function encodePubkey(pubkey) {
    if ((0, amino_1.isSecp256k1Pubkey)(pubkey)) {
        const pubkeyProto = keys_3.PubKey.fromPartial({
            key: (0, encoding_1.fromBase64)(pubkey.value),
        });
        return any_1.Any.fromPartial({
            typeUrl: "/cosmos.crypto.secp256k1.PubKey",
            value: Uint8Array.from(keys_3.PubKey.encode(pubkeyProto).finish()),
        });
    }
    else if ((0, amino_1.isEd25519Pubkey)(pubkey)) {
        const pubkeyProto = keys_1.PubKey.fromPartial({
            key: (0, encoding_1.fromBase64)(pubkey.value),
        });
        return any_1.Any.fromPartial({
            typeUrl: "/cosmos.crypto.ed25519.PubKey",
            value: Uint8Array.from(keys_1.PubKey.encode(pubkeyProto).finish()),
        });
    }
    else if ((0, amino_1.isMultisigThresholdPubkey)(pubkey)) {
        const pubkeyProto = keys_2.LegacyAminoPubKey.fromPartial({
            threshold: math_1.Uint53.fromString(pubkey.value.threshold).toNumber(),
            publicKeys: pubkey.value.pubkeys.map(encodePubkey),
        });
        return any_1.Any.fromPartial({
            typeUrl: "/cosmos.crypto.multisig.LegacyAminoPubKey",
            value: Uint8Array.from(keys_2.LegacyAminoPubKey.encode(pubkeyProto).finish()),
        });
    }
    else {
        throw new Error(`Pubkey type ${pubkey.type} not recognized`);
    }
}
exports.encodePubkey = encodePubkey;
/**
 * Decodes a single pubkey (i.e. not a multisig pubkey) from `Any` into
 * `SinglePubkey`.
 *
 * In most cases you probably want to use `decodePubkey`.
 */
function anyToSinglePubkey(pubkey) {
    switch (pubkey.typeUrl) {
        case "/cosmos.crypto.secp256k1.PubKey": {
            const { key } = keys_3.PubKey.decode(pubkey.value);
            return (0, amino_1.encodeSecp256k1Pubkey)(key);
        }
        case "/cosmos.crypto.ed25519.PubKey": {
            const { key } = keys_1.PubKey.decode(pubkey.value);
            return (0, amino_1.encodeEd25519Pubkey)(key);
        }
        default:
            throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized as single public key type`);
    }
}
exports.anyToSinglePubkey = anyToSinglePubkey;
/**
 * Decodes a pubkey from a protobuf `Any` into `Pubkey`.
 * This supports single pubkeys such as Cosmos ed25519 and secp256k1 keys
 * as well as multisig threshold pubkeys.
 */
function decodePubkey(pubkey) {
    switch (pubkey.typeUrl) {
        case "/cosmos.crypto.secp256k1.PubKey":
        case "/cosmos.crypto.ed25519.PubKey": {
            return anyToSinglePubkey(pubkey);
        }
        case "/cosmos.crypto.multisig.LegacyAminoPubKey": {
            const { threshold, publicKeys } = keys_2.LegacyAminoPubKey.decode(pubkey.value);
            const out = {
                type: "tendermint/PubKeyMultisigThreshold",
                value: {
                    threshold: threshold.toString(),
                    pubkeys: publicKeys.map(anyToSinglePubkey),
                },
            };
            return out;
        }
        default:
            throw new Error(`Pubkey type URL '${pubkey.typeUrl}' not recognized`);
    }
}
exports.decodePubkey = decodePubkey;
/**
 * Decodes an optional pubkey from a protobuf `Any` into `Pubkey | null`.
 * This supports single pubkeys such as Cosmos ed25519 and secp256k1 keys
 * as well as multisig threshold pubkeys.
 */
function decodeOptionalPubkey(pubkey) {
    if (!pubkey)
        return null;
    if (pubkey.typeUrl) {
        if (pubkey.value.length) {
            // both set
            return decodePubkey(pubkey);
        }
        else {
            throw new Error(`Pubkey is an Any with type URL '${pubkey.typeUrl}' but an empty value`);
        }
    }
    else {
        if (pubkey.value.length) {
            throw new Error(`Pubkey is an Any with an empty type URL but a value set`);
        }
        else {
            // both unset, assuming this empty instance means null
            return null;
        }
    }
}
exports.decodeOptionalPubkey = decodeOptionalPubkey;
//# sourceMappingURL=pubkey.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/registry.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/registry.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Registry = exports.isTxBodyEncodeObject = exports.isPbjsGeneratedType = exports.isTsProtoGeneratedType = exports.isTelescopeGeneratedType = void 0;
const tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/bank/v1beta1/tx */ "./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js");
const coin_1 = __webpack_require__(/*! cosmjs-types/cosmos/base/v1beta1/coin */ "./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js");
const tx_2 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ "./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js");
const any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ "./node_modules/cosmjs-types/google/protobuf/any.js");
function isTelescopeGeneratedType(type) {
    const casted = type;
    return typeof casted.fromPartial === "function" && typeof casted.typeUrl == "string";
}
exports.isTelescopeGeneratedType = isTelescopeGeneratedType;
function isTsProtoGeneratedType(type) {
    return typeof type.fromPartial === "function";
}
exports.isTsProtoGeneratedType = isTsProtoGeneratedType;
function isPbjsGeneratedType(type) {
    return !isTsProtoGeneratedType(type);
}
exports.isPbjsGeneratedType = isPbjsGeneratedType;
const defaultTypeUrls = {
    cosmosCoin: "/cosmos.base.v1beta1.Coin",
    cosmosMsgSend: "/cosmos.bank.v1beta1.MsgSend",
    cosmosTxBody: "/cosmos.tx.v1beta1.TxBody",
    googleAny: "/google.protobuf.Any",
};
function isTxBodyEncodeObject(encodeObject) {
    return encodeObject.typeUrl === "/cosmos.tx.v1beta1.TxBody";
}
exports.isTxBodyEncodeObject = isTxBodyEncodeObject;
class Registry {
    /**
     * Creates a new Registry for mapping protobuf type identifiers/type URLs to
     * actual implementations. Those implementations are typically generated with ts-proto
     * but we also support protobuf.js as a type generator.
     *
     * If there is no parameter given, a `new Registry()` adds the types `Coin` and `MsgSend`
     * for historic reasons. Those can be overriden by customTypes.
     *
     * There are currently two methods for adding new types:
     * 1. Passing types to the constructor.
     * 2. Using the `register()` method
     */
    constructor(customTypes) {
        const { cosmosCoin, cosmosMsgSend } = defaultTypeUrls;
        this.types = customTypes
            ? new Map([...customTypes])
            : new Map([
                [cosmosCoin, coin_1.Coin],
                [cosmosMsgSend, tx_1.MsgSend],
            ]);
    }
    register(typeUrl, type) {
        this.types.set(typeUrl, type);
    }
    /**
     * Looks up a type that was previously added to the registry.
     *
     * The generator information (ts-proto or pbjs) gets lost along the way.
     * If you need to work with the result type in TypeScript, you can use:
     *
     * ```
     * import { assert } from "@cosmjs/utils";
     *
     * const Coin = registry.lookupType("/cosmos.base.v1beta1.Coin");
     * assert(Coin); // Ensures not unset
     * assert(isTsProtoGeneratedType(Coin)); // Ensures this is the type we expect
     *
     * // Coin is typed TsProtoGeneratedType now.
     * ```
     */
    lookupType(typeUrl) {
        return this.types.get(typeUrl);
    }
    lookupTypeWithError(typeUrl) {
        const type = this.lookupType(typeUrl);
        if (!type) {
            throw new Error(`Unregistered type url: ${typeUrl}`);
        }
        return type;
    }
    /**
     * Takes a typeUrl/value pair and encodes the value to protobuf if
     * the given type was previously registered.
     *
     * If the value has to be wrapped in an Any, this needs to be done
     * manually after this call. Or use `encodeAsAny` instead.
     */
    encode(encodeObject) {
        const { value, typeUrl } = encodeObject;
        if (isTxBodyEncodeObject(encodeObject)) {
            return this.encodeTxBody(value);
        }
        const type = this.lookupTypeWithError(typeUrl);
        const instance = isTelescopeGeneratedType(type) || isTsProtoGeneratedType(type)
            ? type.fromPartial(value)
            : type.create(value);
        return type.encode(instance).finish();
    }
    /**
     * Takes a typeUrl/value pair and encodes the value to an Any if
     * the given type was previously registered.
     */
    encodeAsAny(encodeObject) {
        const binaryValue = this.encode(encodeObject);
        return any_1.Any.fromPartial({
            typeUrl: encodeObject.typeUrl,
            value: binaryValue,
        });
    }
    encodeTxBody(txBodyFields) {
        const wrappedMessages = txBodyFields.messages.map((message) => this.encodeAsAny(message));
        const txBody = tx_2.TxBody.fromPartial({
            ...txBodyFields,
            timeoutHeight: BigInt(txBodyFields.timeoutHeight?.toString() ?? "0"),
            messages: wrappedMessages,
        });
        return tx_2.TxBody.encode(txBody).finish();
    }
    decode({ typeUrl, value }) {
        if (typeUrl === defaultTypeUrls.cosmosTxBody) {
            return this.decodeTxBody(value);
        }
        const type = this.lookupTypeWithError(typeUrl);
        const decoded = type.decode(value);
        Object.entries(decoded).forEach(([key, val]) => {
            if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined" && Buffer.isBuffer(val)) {
                decoded[key] = Uint8Array.from(val);
            }
        });
        return decoded;
    }
    decodeTxBody(txBody) {
        const decodedTxBody = tx_2.TxBody.decode(txBody);
        return {
            ...decodedTxBody,
            messages: decodedTxBody.messages.map(({ typeUrl: typeUrl, value }) => {
                if (!typeUrl) {
                    throw new Error("Missing type_url in Any");
                }
                if (!value) {
                    throw new Error("Missing value in Any");
                }
                return this.decode({ typeUrl, value });
            }),
        };
    }
}
exports.Registry = Registry;
//# sourceMappingURL=registry.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/signer.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/signer.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isOfflineDirectSigner = void 0;
function isOfflineDirectSigner(signer) {
    return signer.signDirect !== undefined;
}
exports.isOfflineDirectSigner = isOfflineDirectSigner;
//# sourceMappingURL=signer.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/signing.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/signing.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeSignBytes = exports.makeSignDoc = exports.makeAuthInfoBytes = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
const utils_1 = __webpack_require__(/*! @cosmjs/utils */ "./node_modules/@cosmjs/utils/build/index.js");
const signing_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/signing/v1beta1/signing */ "./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js");
const tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ "./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js");
/**
 * Create signer infos from the provided signers.
 *
 * This implementation does not support different signing modes for the different signers.
 */
function makeSignerInfos(signers, signMode) {
    return signers.map(({ pubkey, sequence }) => ({
        publicKey: pubkey,
        modeInfo: {
            single: { mode: signMode },
        },
        sequence: BigInt(sequence),
    }));
}
/**
 * Creates and serializes an AuthInfo document.
 *
 * This implementation does not support different signing modes for the different signers.
 */
function makeAuthInfoBytes(signers, feeAmount, gasLimit, feeGranter, feePayer, signMode = signing_1.SignMode.SIGN_MODE_DIRECT) {
    // Required arguments 4 and 5 were added in CosmJS 0.29. Use runtime checks to help our non-TS users.
    (0, utils_1.assert)(feeGranter === undefined || typeof feeGranter === "string", "feeGranter must be undefined or string");
    (0, utils_1.assert)(feePayer === undefined || typeof feePayer === "string", "feePayer must be undefined or string");
    const authInfo = tx_1.AuthInfo.fromPartial({
        signerInfos: makeSignerInfos(signers, signMode),
        fee: {
            amount: [...feeAmount],
            gasLimit: BigInt(gasLimit),
            granter: feeGranter,
            payer: feePayer,
        },
    });
    return tx_1.AuthInfo.encode(authInfo).finish();
}
exports.makeAuthInfoBytes = makeAuthInfoBytes;
function makeSignDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {
    return {
        bodyBytes: bodyBytes,
        authInfoBytes: authInfoBytes,
        chainId: chainId,
        accountNumber: BigInt(accountNumber),
    };
}
exports.makeSignDoc = makeSignDoc;
function makeSignBytes({ accountNumber, authInfoBytes, bodyBytes, chainId }) {
    const signDoc = tx_1.SignDoc.fromPartial({
        accountNumber: accountNumber,
        authInfoBytes: authInfoBytes,
        bodyBytes: bodyBytes,
        chainId: chainId,
    });
    return tx_1.SignDoc.encode(signDoc).finish();
}
exports.makeSignBytes = makeSignBytes;
//# sourceMappingURL=signing.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/proto-signing/build/wallet.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/wallet.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;
const crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ "./node_modules/@cosmjs/crypto/build/index.js");
const encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ "./node_modules/@cosmjs/encoding/build/index.js");
/**
 * A fixed salt is chosen to archive a deterministic password to key derivation.
 * This reduces the scope of a potential rainbow attack to all CosmJS users.
 * Must be 16 bytes due to implementation limitations.
 */
exports.cosmjsSalt = (0, encoding_1.toAscii)("The CosmJS salt.");
async function executeKdf(password, configuration) {
    switch (configuration.algorithm) {
        case "argon2id": {
            const options = configuration.params;
            if (!(0, crypto_1.isArgon2idOptions)(options))
                throw new Error("Invalid format of argon2id params");
            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);
        }
        default:
            throw new Error("Unsupported KDF algorithm");
    }
}
exports.executeKdf = executeKdf;
exports.supportedAlgorithms = {
    xchacha20poly1305Ietf: "xchacha20poly1305-ietf",
};
async function encrypt(plaintext, encryptionKey, config) {
    switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);
            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api
            return new Uint8Array([
                ...nonce,
                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),
            ]);
        }
        default:
            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
    }
}
exports.encrypt = encrypt;
async function decrypt(ciphertext, encryptionKey, config) {
    switch (config.algorithm) {
        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {
            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);
            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);
        }
        default:
            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);
    }
}
exports.decrypt = decrypt;
//# sourceMappingURL=wallet.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/utils/build/arrays.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/arrays.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;
/**
 * Compares the content of two arrays-like objects for equality.
 *
 * Equality is defined as having equal length and element values, where element equality means `===` returning `true`.
 *
 * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.
 * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.
 */
function arrayContentEquals(a, b) {
    if (a.length !== b.length)
        return false;
    for (let i = 0; i < a.length; ++i) {
        if (a[i] !== b[i])
            return false;
    }
    return true;
}
exports.arrayContentEquals = arrayContentEquals;
/**
 * Checks if `a` starts with the contents of `b`.
 *
 * This requires equality of the element values, where element equality means `===` returning `true`.
 *
 * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.
 * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.
 */
function arrayContentStartsWith(a, b) {
    if (a.length < b.length)
        return false;
    for (let i = 0; i < b.length; ++i) {
        if (a[i] !== b[i])
            return false;
    }
    return true;
}
exports.arrayContentStartsWith = arrayContentStartsWith;
//# sourceMappingURL=arrays.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/utils/build/assert.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/assert.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function assert(condition, msg) {
    if (!condition) {
        throw new Error(msg || "condition is not truthy");
    }
}
exports.assert = assert;
function assertDefined(value, msg) {
    if (value === undefined) {
        throw new Error(msg ?? "value is undefined");
    }
}
exports.assertDefined = assertDefined;
function assertDefinedAndNotNull(value, msg) {
    if (value === undefined || value === null) {
        throw new Error(msg ?? "value is undefined or null");
    }
}
exports.assertDefinedAndNotNull = assertDefinedAndNotNull;
//# sourceMappingURL=assert.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/utils/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isUint8Array = exports.isNonNullObject = exports.isDefined = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;
var arrays_1 = __webpack_require__(/*! ./arrays */ "./node_modules/@cosmjs/utils/build/arrays.js");
Object.defineProperty(exports, "arrayContentEquals", ({ enumerable: true, get: function () { return arrays_1.arrayContentEquals; } }));
Object.defineProperty(exports, "arrayContentStartsWith", ({ enumerable: true, get: function () { return arrays_1.arrayContentStartsWith; } }));
var assert_1 = __webpack_require__(/*! ./assert */ "./node_modules/@cosmjs/utils/build/assert.js");
Object.defineProperty(exports, "assert", ({ enumerable: true, get: function () { return assert_1.assert; } }));
Object.defineProperty(exports, "assertDefined", ({ enumerable: true, get: function () { return assert_1.assertDefined; } }));
Object.defineProperty(exports, "assertDefinedAndNotNull", ({ enumerable: true, get: function () { return assert_1.assertDefinedAndNotNull; } }));
var sleep_1 = __webpack_require__(/*! ./sleep */ "./node_modules/@cosmjs/utils/build/sleep.js");
Object.defineProperty(exports, "sleep", ({ enumerable: true, get: function () { return sleep_1.sleep; } }));
var typechecks_1 = __webpack_require__(/*! ./typechecks */ "./node_modules/@cosmjs/utils/build/typechecks.js");
Object.defineProperty(exports, "isDefined", ({ enumerable: true, get: function () { return typechecks_1.isDefined; } }));
Object.defineProperty(exports, "isNonNullObject", ({ enumerable: true, get: function () { return typechecks_1.isNonNullObject; } }));
Object.defineProperty(exports, "isUint8Array", ({ enumerable: true, get: function () { return typechecks_1.isUint8Array; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/utils/build/sleep.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/sleep.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sleep = void 0;
async function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
exports.sleep = sleep;
//# sourceMappingURL=sleep.js.map

/***/ }),

/***/ "./node_modules/@cosmjs/utils/build/typechecks.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/typechecks.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isDefined = exports.isUint8Array = exports.isNonNullObject = void 0;
/**
 * Checks if data is a non-null object (i.e. matches the TypeScript object type).
 *
 * Note: this returns true for arrays, which are objects in JavaScript
 * even though array and object are different types in JSON.
 *
 * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function isNonNullObject(data) {
    return typeof data === "object" && data !== null;
}
exports.isNonNullObject = isNonNullObject;
/**
 * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array
 */
function isUint8Array(data) {
    if (!isNonNullObject(data))
        return false;
    // Avoid instanceof check which is unreliable in some JS environments
    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400
    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81
    if (Object.prototype.toString.call(data) !== "[object Uint8Array]")
        return false;
    if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined") {
        // Buffer.isBuffer is available at runtime
        if (Buffer.isBuffer(data))
            return false;
    }
    return true;
}
exports.isUint8Array = isUint8Array;
/**
 * Checks if input is not undefined in a TypeScript-friendly way.
 *
 * This is convenient to use in e.g. `Array.filter` as it will convert
 * the type of a `Array<Foo | undefined>` to `Array<Foo>`.
 */
function isDefined(value) {
    return value !== undefined;
}
exports.isDefined = isDefined;
//# sourceMappingURL=typechecks.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/authenticator.js":
/*!**************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/authenticator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.multiAuthenticator = multiAuthenticator;
exports.noAuthFn = noAuthFn;
exports.usernamePasswordAuthenticator = usernamePasswordAuthenticator;
exports.tokenAuthenticator = tokenAuthenticator;
exports.nkeyAuthenticator = nkeyAuthenticator;
exports.jwtAuthenticator = jwtAuthenticator;
exports.credsAuthenticator = credsAuthenticator;
/*
 * Copyright 2020-2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const nkeys_1 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nats-core/lib/nkeys.js");
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
function multiAuthenticator(authenticators) {
    return (nonce) => {
        let auth = {};
        authenticators.forEach((a) => {
            const args = a(nonce) || {};
            auth = Object.assign(auth, args);
        });
        return auth;
    };
}
function noAuthFn() {
    return () => {
        return;
    };
}
/**
 * Returns a user/pass authenticator for the specified user and optional password
 * @param { string | () => string } user
 * @param {string | () => string } pass
 * @return {UserPass}
 */
function usernamePasswordAuthenticator(user, pass) {
    return () => {
        const u = typeof user === "function" ? user() : user;
        const p = typeof pass === "function" ? pass() : pass;
        return { user: u, pass: p };
    };
}
/**
 * Returns a token authenticator for the specified token
 * @param { string | () => string } token
 * @return {TokenAuth}
 */
function tokenAuthenticator(token) {
    return () => {
        const auth_token = typeof token === "function" ? token() : token;
        return { auth_token };
    };
}
/**
 * Returns an Authenticator that returns a NKeyAuth based that uses the
 * specified seed or function returning a seed.
 * @param {Uint8Array | (() => Uint8Array)} seed - the nkey seed
 * @return {NKeyAuth}
 */
function nkeyAuthenticator(seed) {
    return (nonce) => {
        const s = typeof seed === "function" ? seed() : seed;
        const kp = s ? nkeys_1.nkeys.fromSeed(s) : undefined;
        const nkey = kp ? kp.getPublicKey() : "";
        const challenge = encoders_1.TE.encode(nonce || "");
        const sigBytes = kp !== undefined && nonce ? kp.sign(challenge) : undefined;
        const sig = sigBytes ? nkeys_1.nkeys.encode(sigBytes) : "";
        return { nkey, sig };
    };
}
/**
 * Returns an Authenticator function that returns a JwtAuth.
 * If a seed is provided, the public key, and signature are
 * calculated.
 *
 * @param {string | ()=>string} ajwt - the jwt
 * @param {Uint8Array | ()=> Uint8Array } seed - the optional nkey seed
 * @return {Authenticator}
 */
function jwtAuthenticator(ajwt, seed) {
    return (nonce) => {
        const jwt = typeof ajwt === "function" ? ajwt() : ajwt;
        const fn = nkeyAuthenticator(seed);
        const { nkey, sig } = fn(nonce);
        return { jwt, nkey, sig };
    };
}
/**
 * Returns an Authenticator function that returns a JwtAuth.
 * This is a convenience Authenticator that parses the
 * specified creds and delegates to the jwtAuthenticator.
 * @param {Uint8Array | () => Uint8Array } creds - the contents of a creds file or a function that returns the creds
 * @returns {JwtAuth}
 */
function credsAuthenticator(creds) {
    const fn = typeof creds !== "function" ? () => creds : creds;
    const parse = () => {
        const CREDS = /\s*(?:(?:[-]{3,}[^\n]*[-]{3,}\n)(.+)(?:\n\s*[-]{3,}[^\n]*[-]{3,}\n))/ig;
        const s = encoders_1.TD.decode(fn());
        // get the JWT
        let m = CREDS.exec(s);
        if (!m) {
            throw new Error("unable to parse credentials");
        }
        const jwt = m[1].trim();
        // get the nkey
        m = CREDS.exec(s);
        if (!m) {
            throw new Error("unable to parse credentials");
        }
        const seed = encoders_1.TE.encode(m[1].trim());
        return { jwt, seed };
    };
    const jwtFn = () => {
        const { jwt } = parse();
        return jwt;
    };
    const nkeyFn = () => {
        const { seed } = parse();
        return seed;
    };
    return jwtAuthenticator(jwtFn, nkeyFn);
}
//# sourceMappingURL=authenticator.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/bench.js":
/*!******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/bench.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2020-2022 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Bench = exports.Metric = void 0;
exports.throughput = throughput;
exports.msgThroughput = msgThroughput;
exports.humanizeBytes = humanizeBytes;
const types_1 = __webpack_require__(/*! ./types */ "./node_modules/@nats-io/nats-core/lib/types.js");
const nuid_1 = __webpack_require__(/*! ./nuid */ "./node_modules/@nats-io/nats-core/lib/nuid.js");
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
class Metric {
    name;
    duration;
    date;
    payload;
    msgs;
    lang;
    version;
    bytes;
    asyncRequests;
    min;
    max;
    constructor(name, duration) {
        this.name = name;
        this.duration = duration;
        this.date = Date.now();
        this.payload = 0;
        this.msgs = 0;
        this.bytes = 0;
    }
    toString() {
        const sec = (this.duration) / 1000;
        const mps = Math.round(this.msgs / sec);
        const label = this.asyncRequests ? "asyncRequests" : "";
        let minmax = "";
        if (this.max) {
            minmax = `${this.min}/${this.max}`;
        }
        return `${this.name}${label ? " [asyncRequests]" : ""} ${humanizeNumber(mps)} msgs/sec - [${sec.toFixed(2)} secs] ~ ${throughput(this.bytes, sec)} ${minmax}`;
    }
    toCsv() {
        return `"${this.name}",${new Date(this.date).toISOString()},${this.lang},${this.version},${this.msgs},${this.payload},${this.bytes},${this.duration},${this.asyncRequests ? this.asyncRequests : false}\n`;
    }
    static header() {
        return `Test,Date,Lang,Version,Count,MsgPayload,Bytes,Millis,Async\n`;
    }
}
exports.Metric = Metric;
class Bench {
    nc;
    callbacks;
    msgs;
    size;
    subject;
    asyncRequests;
    pub;
    sub;
    req;
    rep;
    perf;
    payload;
    constructor(nc, opts = {
        msgs: 100000,
        size: 128,
        subject: "",
        asyncRequests: false,
        pub: false,
        sub: false,
        req: false,
        rep: false,
    }) {
        this.nc = nc;
        this.callbacks = opts.callbacks || false;
        this.msgs = opts.msgs || 0;
        this.size = opts.size || 0;
        this.subject = opts.subject || nuid_1.nuid.next();
        this.asyncRequests = opts.asyncRequests || false;
        this.pub = opts.pub || false;
        this.sub = opts.sub || false;
        this.req = opts.req || false;
        this.rep = opts.rep || false;
        this.perf = new util_1.Perf();
        this.payload = this.size ? new Uint8Array(this.size) : types_1.Empty;
        if (!this.pub && !this.sub && !this.req && !this.rep) {
            throw new Error("no options selected");
        }
    }
    async run() {
        this.nc.closed()
            .then((err) => {
            if (err) {
                throw err;
            }
        });
        if (this.callbacks) {
            await this.runCallbacks();
        }
        else {
            await this.runAsync();
        }
        return this.processMetrics();
    }
    processMetrics() {
        const nc = this.nc;
        const { lang, version } = nc.protocol.transport;
        if (this.pub && this.sub) {
            this.perf.measure("pubsub", "pubStart", "subStop");
        }
        if (this.req && this.rep) {
            this.perf.measure("reqrep", "reqStart", "reqStop");
        }
        const measures = this.perf.getEntries();
        const pubsub = measures.find((m) => m.name === "pubsub");
        const reqrep = measures.find((m) => m.name === "reqrep");
        const req = measures.find((m) => m.name === "req");
        const rep = measures.find((m) => m.name === "rep");
        const pub = measures.find((m) => m.name === "pub");
        const sub = measures.find((m) => m.name === "sub");
        const stats = this.nc.stats();
        const metrics = [];
        if (pubsub) {
            const { name, duration } = pubsub;
            const m = new Metric(name, duration);
            m.msgs = this.msgs * 2;
            m.bytes = stats.inBytes + stats.outBytes;
            m.lang = lang;
            m.version = version;
            m.payload = this.payload.length;
            metrics.push(m);
        }
        if (reqrep) {
            const { name, duration } = reqrep;
            const m = new Metric(name, duration);
            m.msgs = this.msgs * 2;
            m.bytes = stats.inBytes + stats.outBytes;
            m.lang = lang;
            m.version = version;
            m.payload = this.payload.length;
            metrics.push(m);
        }
        if (pub) {
            const { name, duration } = pub;
            const m = new Metric(name, duration);
            m.msgs = this.msgs;
            m.bytes = stats.outBytes;
            m.lang = lang;
            m.version = version;
            m.payload = this.payload.length;
            metrics.push(m);
        }
        if (sub) {
            const { name, duration } = sub;
            const m = new Metric(name, duration);
            m.msgs = this.msgs;
            m.bytes = stats.inBytes;
            m.lang = lang;
            m.version = version;
            m.payload = this.payload.length;
            metrics.push(m);
        }
        if (rep) {
            const { name, duration } = rep;
            const m = new Metric(name, duration);
            m.msgs = this.msgs;
            m.bytes = stats.inBytes + stats.outBytes;
            m.lang = lang;
            m.version = version;
            m.payload = this.payload.length;
            metrics.push(m);
        }
        if (req) {
            const { name, duration } = req;
            const m = new Metric(name, duration);
            m.msgs = this.msgs;
            m.bytes = stats.inBytes + stats.outBytes;
            m.lang = lang;
            m.version = version;
            m.payload = this.payload.length;
            metrics.push(m);
        }
        return metrics;
    }
    async runCallbacks() {
        const jobs = [];
        if (this.sub) {
            const d = (0, util_1.deferred)();
            jobs.push(d);
            let i = 0;
            this.nc.subscribe(this.subject, {
                max: this.msgs,
                callback: () => {
                    i++;
                    if (i === 1) {
                        this.perf.mark("subStart");
                    }
                    if (i === this.msgs) {
                        this.perf.mark("subStop");
                        this.perf.measure("sub", "subStart", "subStop");
                        d.resolve();
                    }
                },
            });
        }
        if (this.rep) {
            const d = (0, util_1.deferred)();
            jobs.push(d);
            let i = 0;
            this.nc.subscribe(this.subject, {
                max: this.msgs,
                callback: (_, m) => {
                    m.respond(this.payload);
                    i++;
                    if (i === 1) {
                        this.perf.mark("repStart");
                    }
                    if (i === this.msgs) {
                        this.perf.mark("repStop");
                        this.perf.measure("rep", "repStart", "repStop");
                        d.resolve();
                    }
                },
            });
        }
        if (this.pub) {
            const job = (async () => {
                this.perf.mark("pubStart");
                for (let i = 0; i < this.msgs; i++) {
                    this.nc.publish(this.subject, this.payload);
                }
                await this.nc.flush();
                this.perf.mark("pubStop");
                this.perf.measure("pub", "pubStart", "pubStop");
            })();
            jobs.push(job);
        }
        if (this.req) {
            const job = (async () => {
                if (this.asyncRequests) {
                    this.perf.mark("reqStart");
                    const a = [];
                    for (let i = 0; i < this.msgs; i++) {
                        a.push(this.nc.request(this.subject, this.payload, { timeout: 20000 }));
                    }
                    await Promise.all(a);
                    this.perf.mark("reqStop");
                    this.perf.measure("req", "reqStart", "reqStop");
                }
                else {
                    this.perf.mark("reqStart");
                    for (let i = 0; i < this.msgs; i++) {
                        await this.nc.request(this.subject);
                    }
                    this.perf.mark("reqStop");
                    this.perf.measure("req", "reqStart", "reqStop");
                }
            })();
            jobs.push(job);
        }
        await Promise.all(jobs);
    }
    async runAsync() {
        const jobs = [];
        if (this.rep) {
            let first = false;
            const sub = this.nc.subscribe(this.subject, { max: this.msgs });
            const job = (async () => {
                for await (const m of sub) {
                    if (!first) {
                        this.perf.mark("repStart");
                        first = true;
                    }
                    m.respond(this.payload);
                }
                await this.nc.flush();
                this.perf.mark("repStop");
                this.perf.measure("rep", "repStart", "repStop");
            })();
            jobs.push(job);
        }
        if (this.sub) {
            let first = false;
            const sub = this.nc.subscribe(this.subject, { max: this.msgs });
            const job = (async () => {
                for await (const _m of sub) {
                    if (!first) {
                        this.perf.mark("subStart");
                        first = true;
                    }
                }
                this.perf.mark("subStop");
                this.perf.measure("sub", "subStart", "subStop");
            })();
            jobs.push(job);
        }
        if (this.pub) {
            const job = (async () => {
                this.perf.mark("pubStart");
                for (let i = 0; i < this.msgs; i++) {
                    this.nc.publish(this.subject, this.payload);
                }
                await this.nc.flush();
                this.perf.mark("pubStop");
                this.perf.measure("pub", "pubStart", "pubStop");
            })();
            jobs.push(job);
        }
        if (this.req) {
            const job = (async () => {
                if (this.asyncRequests) {
                    this.perf.mark("reqStart");
                    const a = [];
                    for (let i = 0; i < this.msgs; i++) {
                        a.push(this.nc.request(this.subject, this.payload, { timeout: 20000 }));
                    }
                    await Promise.all(a);
                    this.perf.mark("reqStop");
                    this.perf.measure("req", "reqStart", "reqStop");
                }
                else {
                    this.perf.mark("reqStart");
                    for (let i = 0; i < this.msgs; i++) {
                        await this.nc.request(this.subject);
                    }
                    this.perf.mark("reqStop");
                    this.perf.measure("req", "reqStart", "reqStop");
                }
            })();
            jobs.push(job);
        }
        await Promise.all(jobs);
    }
}
exports.Bench = Bench;
function throughput(bytes, seconds) {
    return `${humanizeBytes(bytes / seconds)}/sec`;
}
function msgThroughput(msgs, seconds) {
    return `${(Math.floor(msgs / seconds))} msgs/sec`;
}
function humanizeBytes(bytes, si = false) {
    const base = si ? 1000 : 1024;
    const pre = si
        ? ["k", "M", "G", "T", "P", "E"]
        : ["K", "M", "G", "T", "P", "E"];
    const post = si ? "iB" : "B";
    if (bytes < base) {
        return `${bytes.toFixed(2)} ${post}`;
    }
    const exp = parseInt(Math.log(bytes) / Math.log(base) + "");
    const index = parseInt((exp - 1) + "");
    return `${(bytes / Math.pow(base, exp)).toFixed(2)} ${pre[index]}${post}`;
}
function humanizeNumber(n) {
    return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
//# sourceMappingURL=bench.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/core.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/core.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_HOST = exports.DEFAULT_PORT = exports.Match = void 0;
exports.syncIterator = syncIterator;
exports.createInbox = createInbox;
const nuid_1 = __webpack_require__(/*! ./nuid */ "./node_modules/@nats-io/nats-core/lib/nuid.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
exports.Match = {
    // Exact option is case-sensitive
    Exact: "exact",
    // Case-sensitive, but key is transformed to Canonical MIME representation
    CanonicalMIME: "canonical",
    // Case-insensitive matches
    IgnoreCase: "insensitive",
};
/**
 * syncIterator is a utility function that allows an AsyncIterator to be triggered
 * by calling next() - the utility will yield null if the underlying iterator is closed.
 * Note it is possibly an error to call use this function on an AsyncIterable that has
 * already been started (Symbol.asyncIterator() has been called) from a looping construct.
 */
function syncIterator(src) {
    const iter = src[Symbol.asyncIterator]();
    return {
        async next() {
            const m = await iter.next();
            if (m.done) {
                return Promise.resolve(null);
            }
            return Promise.resolve(m.value);
        },
    };
}
function createInbox(prefix = "") {
    prefix = prefix || "_INBOX";
    if (typeof prefix !== "string") {
        throw (new TypeError("prefix must be a string"));
    }
    prefix.split(".")
        .forEach((v) => {
        if (v === "*" || v === ">") {
            throw errors_1.InvalidArgumentError.format("prefix", `cannot have wildcards ('${prefix}')`);
        }
    });
    return `${prefix}.${nuid_1.nuid.next()}`;
}
exports.DEFAULT_PORT = 4222;
exports.DEFAULT_HOST = "127.0.0.1";
//# sourceMappingURL=core.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/databuffer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/databuffer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2018-2021 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DataBuffer = void 0;
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
class DataBuffer {
    buffers;
    byteLength;
    constructor() {
        this.buffers = [];
        this.byteLength = 0;
    }
    static concat(...bufs) {
        let max = 0;
        for (let i = 0; i < bufs.length; i++) {
            max += bufs[i].length;
        }
        const out = new Uint8Array(max);
        let index = 0;
        for (let i = 0; i < bufs.length; i++) {
            out.set(bufs[i], index);
            index += bufs[i].length;
        }
        return out;
    }
    static fromAscii(m) {
        if (!m) {
            m = "";
        }
        return encoders_1.TE.encode(m);
    }
    static toAscii(a) {
        return encoders_1.TD.decode(a);
    }
    reset() {
        this.buffers.length = 0;
        this.byteLength = 0;
    }
    pack() {
        if (this.buffers.length > 1) {
            const v = new Uint8Array(this.byteLength);
            let index = 0;
            for (let i = 0; i < this.buffers.length; i++) {
                v.set(this.buffers[i], index);
                index += this.buffers[i].length;
            }
            this.buffers.length = 0;
            this.buffers.push(v);
        }
    }
    shift() {
        if (this.buffers.length) {
            const a = this.buffers.shift();
            if (a) {
                this.byteLength -= a.length;
                return a;
            }
        }
        return new Uint8Array(0);
    }
    drain(n) {
        if (this.buffers.length) {
            this.pack();
            const v = this.buffers.pop();
            if (v) {
                const max = this.byteLength;
                if (n === undefined || n > max) {
                    n = max;
                }
                const d = v.subarray(0, n);
                if (max > n) {
                    this.buffers.push(v.subarray(n));
                }
                this.byteLength = max - n;
                return d;
            }
        }
        return new Uint8Array(0);
    }
    fill(a, ...bufs) {
        if (a) {
            this.buffers.push(a);
            this.byteLength += a.length;
        }
        for (let i = 0; i < bufs.length; i++) {
            if (bufs[i] && bufs[i].length) {
                this.buffers.push(bufs[i]);
                this.byteLength += bufs[i].length;
            }
        }
    }
    peek() {
        if (this.buffers.length) {
            this.pack();
            return this.buffers[0];
        }
        return new Uint8Array(0);
    }
    size() {
        return this.byteLength;
    }
    length() {
        return this.buffers.length;
    }
}
exports.DataBuffer = DataBuffer;
//# sourceMappingURL=databuffer.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/denobuffer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/denobuffer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DenoBuffer = exports.MAX_SIZE = exports.AssertionError = void 0;
exports.assert = assert;
exports.concat = concat;
exports.append = append;
exports.readAll = readAll;
exports.writeAll = writeAll;
// This code has been ported almost directly from Go's src/bytes/buffer.go
// Copyright 2009 The Go Authors. All rights reserved. BSD license.
// https://github.com/golang/go/blob/master/LICENSE
// This code removes all Deno specific functionality to enable its use
// in a browser environment
//@internal
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
class AssertionError extends Error {
    constructor(msg) {
        super(msg);
        this.name = "AssertionError";
    }
}
exports.AssertionError = AssertionError;
// @internal
function assert(cond, msg = "Assertion failed.") {
    if (!cond) {
        throw new AssertionError(msg);
    }
}
// MIN_READ is the minimum ArrayBuffer size passed to a read call by
// buffer.ReadFrom. As long as the Buffer has at least MIN_READ bytes beyond
// what is required to hold the contents of r, readFrom() will not grow the
// underlying buffer.
const MIN_READ = 32 * 1024;
exports.MAX_SIZE = 2 ** 32 - 2;
// `off` is the offset into `dst` where it will at which to begin writing values
// from `src`.
// Returns the number of bytes copied.
function copy(src, dst, off = 0) {
    const r = dst.byteLength - off;
    if (src.byteLength > r) {
        src = src.subarray(0, r);
    }
    dst.set(src, off);
    return src.byteLength;
}
function concat(origin, b) {
    if (origin === undefined && b === undefined) {
        return new Uint8Array(0);
    }
    if (origin === undefined) {
        return b;
    }
    if (b === undefined) {
        return origin;
    }
    const output = new Uint8Array(origin.length + b.length);
    output.set(origin, 0);
    output.set(b, origin.length);
    return output;
}
function append(origin, b) {
    return concat(origin, Uint8Array.of(b));
}
class DenoBuffer {
    _buf; // contents are the bytes _buf[off : len(_buf)]
    _off; // read at _buf[off], write at _buf[_buf.byteLength]
    constructor(ab) {
        this._off = 0;
        if (ab == null) {
            this._buf = new Uint8Array(0);
            return;
        }
        this._buf = new Uint8Array(ab);
    }
    bytes(options = { copy: true }) {
        if (options.copy === false)
            return this._buf.subarray(this._off);
        return this._buf.slice(this._off);
    }
    empty() {
        return this._buf.byteLength <= this._off;
    }
    get length() {
        return this._buf.byteLength - this._off;
    }
    get capacity() {
        return this._buf.buffer.byteLength;
    }
    truncate(n) {
        if (n === 0) {
            this.reset();
            return;
        }
        if (n < 0 || n > this.length) {
            throw Error("bytes.Buffer: truncation out of range");
        }
        this._reslice(this._off + n);
    }
    reset() {
        this._reslice(0);
        this._off = 0;
    }
    _tryGrowByReslice(n) {
        const l = this._buf.byteLength;
        if (n <= this.capacity - l) {
            this._reslice(l + n);
            return l;
        }
        return -1;
    }
    _reslice(len) {
        assert(len <= this._buf.buffer.byteLength);
        this._buf = new Uint8Array(this._buf.buffer, 0, len);
    }
    readByte() {
        const a = new Uint8Array(1);
        if (this.read(a)) {
            return a[0];
        }
        return null;
    }
    read(p) {
        if (this.empty()) {
            // Buffer is empty, reset to recover space.
            this.reset();
            if (p.byteLength === 0) {
                // this edge case is tested in 'bufferReadEmptyAtEOF' test
                return 0;
            }
            return null;
        }
        const nread = copy(this._buf.subarray(this._off), p);
        this._off += nread;
        return nread;
    }
    writeByte(n) {
        return this.write(Uint8Array.of(n));
    }
    writeString(s) {
        return this.write(encoders_1.TE.encode(s));
    }
    write(p) {
        const m = this._grow(p.byteLength);
        return copy(p, this._buf, m);
    }
    _grow(n) {
        const m = this.length;
        // If buffer is empty, reset to recover space.
        if (m === 0 && this._off !== 0) {
            this.reset();
        }
        // Fast: Try to _grow by means of a _reslice.
        const i = this._tryGrowByReslice(n);
        if (i >= 0) {
            return i;
        }
        const c = this.capacity;
        if (n <= Math.floor(c / 2) - m) {
            // We can slide things down instead of allocating a new
            // ArrayBuffer. We only need m+n <= c to slide, but
            // we instead let capacity get twice as large so we
            // don't spend all our time copying.
            copy(this._buf.subarray(this._off), this._buf);
        }
        else if (c + n > exports.MAX_SIZE) {
            throw new Error("The buffer cannot be grown beyond the maximum size.");
        }
        else {
            // Not enough space anywhere, we need to allocate.
            const buf = new Uint8Array(Math.min(2 * c + n, exports.MAX_SIZE));
            copy(this._buf.subarray(this._off), buf);
            this._buf = buf;
        }
        // Restore this.off and len(this._buf).
        this._off = 0;
        this._reslice(Math.min(m + n, exports.MAX_SIZE));
        return m;
    }
    grow(n) {
        if (n < 0) {
            throw Error("Buffer._grow: negative count");
        }
        const m = this._grow(n);
        this._reslice(m);
    }
    readFrom(r) {
        let n = 0;
        const tmp = new Uint8Array(MIN_READ);
        while (true) {
            const shouldGrow = this.capacity - this.length < MIN_READ;
            // read into tmp buffer if there's not enough room
            // otherwise read directly into the internal buffer
            const buf = shouldGrow
                ? tmp
                : new Uint8Array(this._buf.buffer, this.length);
            const nread = r.read(buf);
            if (nread === null) {
                return n;
            }
            // write will grow if needed
            if (shouldGrow)
                this.write(buf.subarray(0, nread));
            else
                this._reslice(this.length + nread);
            n += nread;
        }
    }
}
exports.DenoBuffer = DenoBuffer;
function readAll(r) {
    const buf = new DenoBuffer();
    buf.readFrom(r);
    return buf.bytes();
}
function writeAll(w, arr) {
    let nwritten = 0;
    while (nwritten < arr.length) {
        nwritten += w.write(arr.subarray(nwritten));
    }
}
//# sourceMappingURL=denobuffer.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/encoders.js":
/*!*********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/encoders.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TD = exports.TE = exports.Empty = void 0;
exports.encode = encode;
exports.decode = decode;
/*
 * Copyright 2020 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
exports.Empty = new Uint8Array(0);
exports.TE = new TextEncoder();
exports.TD = new TextDecoder();
function concat(...bufs) {
    let max = 0;
    for (let i = 0; i < bufs.length; i++) {
        max += bufs[i].length;
    }
    const out = new Uint8Array(max);
    let index = 0;
    for (let i = 0; i < bufs.length; i++) {
        out.set(bufs[i], index);
        index += bufs[i].length;
    }
    return out;
}
function encode(...a) {
    const bufs = [];
    for (let i = 0; i < a.length; i++) {
        bufs.push(exports.TE.encode(a[i]));
    }
    if (bufs.length === 0) {
        return exports.Empty;
    }
    if (bufs.length === 1) {
        return bufs[0];
    }
    return concat(...bufs);
}
function decode(a) {
    if (!a || a.length === 0) {
        return "";
    }
    return exports.TD.decode(a);
}
//# sourceMappingURL=encoders.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2024 Synadia Communications, Inc
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.errors = exports.PermissionViolationError = exports.NoRespondersError = exports.TimeoutError = exports.RequestError = exports.ProtocolError = exports.ConnectionError = exports.DrainingConnectionError = exports.ClosedConnectionError = exports.AuthorizationError = exports.UserAuthenticationExpiredError = exports.InvalidOperationError = exports.InvalidArgumentError = exports.InvalidSubjectError = void 0;
/**
 * Represents an error that is thrown when an invalid subject is encountered.
 * This class extends the built-in Error object.
 *
 * @class
 * @extends Error
 */
class InvalidSubjectError extends Error {
    constructor(subject, options) {
        super(`illegal subject: '${subject}'`, options);
        this.name = "InvalidSubjectError";
    }
}
exports.InvalidSubjectError = InvalidSubjectError;
class InvalidArgumentError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = "InvalidArgumentError";
    }
    static format(property, message, options) {
        if (Array.isArray(message) && message.length > 1) {
            message = message[0];
        }
        if (Array.isArray(property)) {
            property = property.map((n) => `'${n}'`);
            property = property.join(",");
        }
        else {
            property = `'${property}'`;
        }
        return new InvalidArgumentError(`${property} ${message}`, options);
    }
}
exports.InvalidArgumentError = InvalidArgumentError;
/**
 * InvalidOperationError is a custom error class that extends the standard Error object.
 * It represents an error that occurs when an invalid operation is attempted on one of
 * objects returned by the API. For example, trying to iterate on an object that was
 * configured with a callback.
 *
 * @class InvalidOperationError
 * @extends {Error}
 *
 * @param {string} message - The error message that explains the reason for the error.
 * @param {ErrorOptions} [options] - Optional parameter to provide additional error options.
 */
class InvalidOperationError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = "InvalidOperationError";
    }
}
exports.InvalidOperationError = InvalidOperationError;
/**
 * Represents an error indicating that user authentication has expired.
 * This error is typically thrown when a user attempts to access a connection
 * but their authentication credentials have expired.
 */
class UserAuthenticationExpiredError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = "UserAuthenticationExpiredError";
    }
    static parse(s) {
        const ss = s.toLowerCase();
        if (ss.indexOf("user authentication expired") !== -1) {
            return new UserAuthenticationExpiredError(s);
        }
        return null;
    }
}
exports.UserAuthenticationExpiredError = UserAuthenticationExpiredError;
/**
 * Represents an error related to authorization issues.
 * Note that these could represent an authorization violation,
 * or that the account authentication configuration has expired,
 * or an authentication timeout.
 */
class AuthorizationError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = "AuthorizationError";
    }
    static parse(s) {
        const messages = [
            "authorization violation",
            "account authentication expired",
            "authentication timeout",
        ];
        const ss = s.toLowerCase();
        for (let i = 0; i < messages.length; i++) {
            if (ss.indexOf(messages[i]) !== -1) {
                return new AuthorizationError(s);
            }
        }
        return null;
    }
}
exports.AuthorizationError = AuthorizationError;
/**
 * Class representing an error thrown when an operation is attempted on a closed connection.
 *
 * This error is intended to signal that a connection-related operation could not be completed
 * because the connection is no longer open or has been terminated.
 *
 * @class
 * @extends Error
 */
class ClosedConnectionError extends Error {
    constructor() {
        super("closed connection");
        this.name = "ClosedConnectionError";
    }
}
exports.ClosedConnectionError = ClosedConnectionError;
/**
 * The `ConnectionDrainingError` class represents a specific type of error
 * that occurs when a connection is being drained.
 *
 * This error is typically used in scenarios where connections need to be
 * gracefully closed or when they are transitioning to an inactive state.
 *
 * The error message is set to "connection draining" and the error name is
 * overridden to "DrainingConnectionError".
 */
class DrainingConnectionError extends Error {
    constructor() {
        super("connection draining");
        this.name = "DrainingConnectionError";
    }
}
exports.DrainingConnectionError = DrainingConnectionError;
/**
 * Represents an error that occurs when a network connection fails.
 * Extends the built-in Error class to provide additional context for connection-related issues.
 *
 * @param {string} message - A human-readable description of the error.
 * @param {ErrorOptions} [options] - Optional settings for customizing the error behavior.
 */
class ConnectionError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = "ConnectionError";
    }
}
exports.ConnectionError = ConnectionError;
/**
 * Represents an error encountered during protocol operations.
 * This class extends the built-in `Error` class, providing a specific
 * error type called `ProtocolError`.
 *
 * @param {string} message - A descriptive message describing the error.
 * @param {ErrorOptions} [options] - Optional parameters to include additional details.
 */
class ProtocolError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = "ProtocolError";
    }
}
exports.ProtocolError = ProtocolError;
/**
 * Class representing an error that occurs during an request operation
 * (such as TimeoutError, or NoRespondersError, or some other error).
 *
 * @extends Error
 */
class RequestError extends Error {
    constructor(message = "", options) {
        super(message, options);
        this.name = "RequestError";
    }
    isNoResponders() {
        return this.cause instanceof NoRespondersError;
    }
}
exports.RequestError = RequestError;
/**
 * TimeoutError is a custom error class that extends the built-in Error class.
 * It is used to represent an error that occurs when an operation exceeds a
 * predefined time limit.
 *
 * @class
 * @extends {Error}
 */
class TimeoutError extends Error {
    constructor(options) {
        super("timeout", options);
        this.name = "TimeoutError";
    }
}
exports.TimeoutError = TimeoutError;
/**
 * NoRespondersError is an error thrown when no responders (no service is
 * subscribing to the subject) are found for a given subject. This error
 * is typically found as the cause for a RequestError
 *
 * @extends Error
 *
 * @param {string} subject - The subject for which no responders were found.
 * @param {ErrorOptions} [options] - Optional error options.
 */
class NoRespondersError extends Error {
    subject;
    constructor(subject, options) {
        super(`no responders: '${subject}'`, options);
        this.subject = subject;
        this.name = "NoResponders";
    }
}
exports.NoRespondersError = NoRespondersError;
/**
 * Class representing a Permission Violation Error.
 * It provides information about the operation (either "publish" or "subscription")
 * and the subject used for the operation and the optional queue (if a subscription).
 *
 * This error is terminal for a subscription.
 */
class PermissionViolationError extends Error {
    operation;
    subject;
    queue;
    constructor(message, operation, subject, queue, options) {
        super(message, options);
        this.name = "PermissionViolationError";
        this.operation = operation;
        this.subject = subject;
        this.queue = queue;
    }
    static parse(s) {
        const t = s ? s.toLowerCase() : "";
        if (t.indexOf("permissions violation") === -1) {
            return null;
        }
        let operation = "publish";
        let subject = "";
        let queue = undefined;
        const m = s.match(/(Publish|Subscription) to "(\S+)"/);
        if (m) {
            operation = m[1].toLowerCase();
            subject = m[2];
            if (operation === "subscription") {
                const qm = s.match(/using queue "(\S+)"/);
                if (qm) {
                    queue = qm[1];
                }
            }
        }
        return new PermissionViolationError(s, operation, subject, queue);
    }
}
exports.PermissionViolationError = PermissionViolationError;
exports.errors = {
    AuthorizationError,
    ClosedConnectionError,
    ConnectionError,
    DrainingConnectionError,
    InvalidArgumentError,
    InvalidOperationError,
    InvalidSubjectError,
    NoRespondersError,
    PermissionViolationError,
    ProtocolError,
    RequestError,
    TimeoutError,
    UserAuthenticationExpiredError,
};
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/headers.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/headers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2020-2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MsgHdrsImpl = void 0;
exports.canonicalMIMEHeaderKey = canonicalMIMEHeaderKey;
exports.headers = headers;
// Heavily inspired by Golang's https://golang.org/src/net/http/header.go
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
const core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
// https://www.ietf.org/rfc/rfc822.txt
// 3.1.2.  STRUCTURE OF HEADER FIELDS
//
// Once a field has been unfolded, it may be viewed as being com-
// posed of a field-name followed by a colon (":"), followed by a
// field-body, and  terminated  by  a  carriage-return/line-feed.
// The  field-name must be composed of printable ASCII characters
// (i.e., characters that  have  values  between  33.  and  126.,
// decimal, except colon).  The field-body may be composed of any
// ASCII characters, except CR or LF.  (While CR and/or LF may be
// present  in the actual text, they are removed by the action of
// unfolding the field.)
function canonicalMIMEHeaderKey(k) {
    const a = 97;
    const A = 65;
    const Z = 90;
    const z = 122;
    const dash = 45;
    const colon = 58;
    const start = 33;
    const end = 126;
    const toLower = a - A;
    let upper = true;
    const buf = new Array(k.length);
    for (let i = 0; i < k.length; i++) {
        let c = k.charCodeAt(i);
        if (c === colon || c < start || c > end) {
            throw errors_1.InvalidArgumentError.format("header", `'${k[i]}' is not a valid character in a header name`);
        }
        if (upper && a <= c && c <= z) {
            c -= toLower;
        }
        else if (!upper && A <= c && c <= Z) {
            c += toLower;
        }
        buf[i] = c;
        upper = c == dash;
    }
    return String.fromCharCode(...buf);
}
function headers(code = 0, description = "") {
    if ((code === 0 && description !== "") || (code > 0 && description === "")) {
        throw errors_1.InvalidArgumentError.format("description", "is required");
    }
    return new MsgHdrsImpl(code, description);
}
const HEADER = "NATS/1.0";
class MsgHdrsImpl {
    _code;
    headers;
    _description;
    constructor(code = 0, description = "") {
        this._code = code;
        this._description = description;
        this.headers = new Map();
    }
    [Symbol.iterator]() {
        return this.headers.entries();
    }
    size() {
        return this.headers.size;
    }
    equals(mh) {
        if (mh && this.headers.size === mh.headers.size &&
            this._code === mh._code) {
            for (const [k, v] of this.headers) {
                const a = mh.values(k);
                if (v.length !== a.length) {
                    return false;
                }
                const vv = [...v].sort();
                const aa = [...a].sort();
                for (let i = 0; i < vv.length; i++) {
                    if (vv[i] !== aa[i]) {
                        return false;
                    }
                }
            }
            return true;
        }
        return false;
    }
    static decode(a) {
        const mh = new MsgHdrsImpl();
        const s = encoders_1.TD.decode(a);
        const lines = s.split("\r\n");
        const h = lines[0];
        if (h !== HEADER) {
            // malformed headers could add extra space without adding a code or description
            let str = h.replace(HEADER, "").trim();
            if (str.length > 0) {
                mh._code = parseInt(str, 10);
                if (isNaN(mh._code)) {
                    mh._code = 0;
                }
                const scode = mh._code.toString();
                str = str.replace(scode, "");
                mh._description = str.trim();
            }
        }
        if (lines.length >= 1) {
            lines.slice(1).map((s) => {
                if (s) {
                    const idx = s.indexOf(":");
                    if (idx > -1) {
                        const k = s.slice(0, idx);
                        const v = s.slice(idx + 1).trim();
                        mh.append(k, v);
                    }
                }
            });
        }
        return mh;
    }
    toString() {
        if (this.headers.size === 0 && this._code === 0) {
            return "";
        }
        let s = HEADER;
        if (this._code > 0 && this._description !== "") {
            s += ` ${this._code} ${this._description}`;
        }
        for (const [k, v] of this.headers) {
            for (let i = 0; i < v.length; i++) {
                s = `${s}\r\n${k}: ${v[i]}`;
            }
        }
        return `${s}\r\n\r\n`;
    }
    encode() {
        return encoders_1.TE.encode(this.toString());
    }
    static validHeaderValue(k) {
        const inv = /[\r\n]/;
        if (inv.test(k)) {
            throw errors_1.InvalidArgumentError.format("header", "values cannot contain \\r or \\n");
        }
        return k.trim();
    }
    keys() {
        const keys = [];
        for (const sk of this.headers.keys()) {
            keys.push(sk);
        }
        return keys;
    }
    findKeys(k, match = core_1.Match.Exact) {
        const keys = this.keys();
        switch (match) {
            case core_1.Match.Exact:
                return keys.filter((v) => {
                    return v === k;
                });
            case core_1.Match.CanonicalMIME:
                k = canonicalMIMEHeaderKey(k);
                return keys.filter((v) => {
                    return v === k;
                });
            default: {
                const lci = k.toLowerCase();
                return keys.filter((v) => {
                    return lci === v.toLowerCase();
                });
            }
        }
    }
    get(k, match = core_1.Match.Exact) {
        const keys = this.findKeys(k, match);
        if (keys.length) {
            const v = this.headers.get(keys[0]);
            if (v) {
                return Array.isArray(v) ? v[0] : v;
            }
        }
        return "";
    }
    last(k, match = core_1.Match.Exact) {
        const keys = this.findKeys(k, match);
        if (keys.length) {
            const v = this.headers.get(keys[0]);
            if (v) {
                return Array.isArray(v) ? v[v.length - 1] : v;
            }
        }
        return "";
    }
    has(k, match = core_1.Match.Exact) {
        return this.findKeys(k, match).length > 0;
    }
    set(k, v, match = core_1.Match.Exact) {
        this.delete(k, match);
        this.append(k, v, match);
    }
    append(k, v, match = core_1.Match.Exact) {
        // validate the key
        const ck = canonicalMIMEHeaderKey(k);
        if (match === core_1.Match.CanonicalMIME) {
            k = ck;
        }
        // if we get non-sensical ignores/etc, we should try
        // to do the right thing and use the first key that matches
        const keys = this.findKeys(k, match);
        k = keys.length > 0 ? keys[0] : k;
        const value = MsgHdrsImpl.validHeaderValue(v);
        let a = this.headers.get(k);
        if (!a) {
            a = [];
            this.headers.set(k, a);
        }
        a.push(value);
    }
    values(k, match = core_1.Match.Exact) {
        const buf = [];
        const keys = this.findKeys(k, match);
        keys.forEach((v) => {
            const values = this.headers.get(v);
            if (values) {
                buf.push(...values);
            }
        });
        return buf;
    }
    delete(k, match = core_1.Match.Exact) {
        const keys = this.findKeys(k, match);
        keys.forEach((v) => {
            this.headers.delete(v);
        });
    }
    get hasError() {
        return this._code >= 300;
    }
    get status() {
        return `${this._code} ${this._description}`.trim();
    }
    toRecord() {
        const data = {};
        this.keys().forEach((v) => {
            data[v] = this.values(v);
        });
        return data;
    }
    get code() {
        return this._code;
    }
    get description() {
        return this._description;
    }
    static fromRecord(r) {
        const h = new MsgHdrsImpl();
        for (const k in r) {
            h.headers.set(k, r[k]);
        }
        return h;
    }
}
exports.MsgHdrsImpl = MsgHdrsImpl;
//# sourceMappingURL=headers.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/heartbeats.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/heartbeats.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2020-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Heartbeat = void 0;
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
class Heartbeat {
    ph;
    interval;
    maxOut;
    timer;
    pendings;
    constructor(ph, interval, maxOut) {
        this.ph = ph;
        this.interval = interval;
        this.maxOut = maxOut;
        this.pendings = [];
    }
    // api to start the heartbeats, since this can be
    // spuriously called from dial, ensure we don't
    // leak timers
    start() {
        this.cancel();
        this._schedule();
    }
    // api for canceling the heartbeats, if stale is
    // true it will initiate a client disconnect
    cancel(stale) {
        if (this.timer) {
            clearTimeout(this.timer);
            this.timer = undefined;
        }
        this._reset();
        if (stale) {
            this.ph.disconnect();
        }
    }
    _schedule() {
        // @ts-ignore: node is not a number - we treat this opaquely
        this.timer = setTimeout(() => {
            this.ph.dispatchStatus({ type: "ping", pendingPings: this.pendings.length + 1 });
            if (this.pendings.length === this.maxOut) {
                this.cancel(true);
                return;
            }
            const ping = (0, util_1.deferred)();
            this.ph.flush(ping)
                .then(() => {
                this._reset();
            })
                .catch(() => {
                // we disconnected - pongs were rejected
                this.cancel();
            });
            this.pendings.push(ping);
            this._schedule();
        }, this.interval);
    }
    _reset() {
        // clear pendings after resolving them
        this.pendings = this.pendings.filter((p) => {
            const d = p;
            d.resolve();
            return false;
        });
    }
}
exports.Heartbeat = Heartbeat;
//# sourceMappingURL=heartbeats.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

/*
 * Copyright 2022 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdleHeartbeatMonitor = void 0;
class IdleHeartbeatMonitor {
    interval;
    maxOut;
    cancelAfter;
    timer;
    autoCancelTimer;
    last;
    missed;
    count;
    callback;
    /**
     * Constructor
     * @param interval in millis to check
     * @param cb a callback to report when heartbeats are missed
     * @param opts monitor options @see IdleHeartbeatOptions
     */
    constructor(interval, cb, opts = { maxOut: 2 }) {
        this.interval = interval;
        this.maxOut = opts?.maxOut || 2;
        this.cancelAfter = opts?.cancelAfter || 0;
        this.last = Date.now();
        this.missed = 0;
        this.count = 0;
        this.callback = cb;
        this._schedule();
    }
    /**
     * cancel monitoring
     */
    cancel() {
        if (this.autoCancelTimer) {
            clearTimeout(this.autoCancelTimer);
        }
        if (this.timer) {
            clearInterval(this.timer);
        }
        this.timer = 0;
        this.autoCancelTimer = 0;
        this.missed = 0;
    }
    /**
     * work signals that there was work performed
     */
    work() {
        this.last = Date.now();
        this.missed = 0;
    }
    /**
     * internal api to change the interval, cancelAfter and maxOut
     * @param interval
     * @param cancelAfter
     * @param maxOut
     */
    _change(interval, cancelAfter = 0, maxOut = 2) {
        this.interval = interval;
        this.maxOut = maxOut;
        this.cancelAfter = cancelAfter;
        this.restart();
    }
    /**
     * cancels and restarts the monitoring
     */
    restart() {
        this.cancel();
        this._schedule();
    }
    /**
     * internal api called to start monitoring
     */
    _schedule() {
        if (this.cancelAfter > 0) {
            // @ts-ignore: in node is not a number - we treat this opaquely
            this.autoCancelTimer = setTimeout(() => {
                this.cancel();
            }, this.cancelAfter);
        }
        // @ts-ignore: in node is not a number - we treat this opaquely
        this.timer = setInterval(() => {
            this.count++;
            if ((Date.now() - this.last) > this.interval) {
                this.missed++;
            }
            if (this.missed >= this.maxOut) {
                try {
                    if (this.callback(this.missed) === true) {
                        this.cancel();
                    }
                }
                catch (err) {
                    console.log(err);
                }
            }
        }, this.interval);
    }
}
exports.IdleHeartbeatMonitor = IdleHeartbeatMonitor;
//# sourceMappingURL=idleheartbeat_monitor.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/internal_mod.js":
/*!*************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/internal_mod.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright 2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TD = exports.Metric = exports.Bench = exports.writeAll = exports.readAll = exports.MAX_SIZE = exports.DenoBuffer = exports.State = exports.Parser = exports.Kind = exports.QueuedIteratorImpl = exports.usernamePasswordAuthenticator = exports.tokenAuthenticator = exports.nkeyAuthenticator = exports.jwtAuthenticator = exports.credsAuthenticator = exports.RequestOne = exports.parseOptions = exports.hasWsProtocol = exports.defaultOptions = exports.DEFAULT_MAX_RECONNECT_ATTEMPTS = exports.checkUnsupportedOption = exports.checkOptions = exports.buildAuthenticator = exports.DataBuffer = exports.MuxSubscription = exports.Heartbeat = exports.MsgHdrsImpl = exports.headers = exports.canonicalMIMEHeaderKey = exports.timeout = exports.SimpleMutex = exports.render = exports.nanos = exports.millis = exports.extend = exports.delay = exports.deferred = exports.deadline = exports.collect = exports.backoff = exports.ProtocolHandler = exports.INFO = exports.Connect = exports.setTransportFactory = exports.getResolveFn = exports.MsgImpl = exports.nuid = exports.Nuid = exports.NatsConnectionImpl = void 0;
exports.UserAuthenticationExpiredError = exports.TimeoutError = exports.RequestError = exports.ProtocolError = exports.PermissionViolationError = exports.NoRespondersError = exports.InvalidSubjectError = exports.InvalidOperationError = exports.InvalidArgumentError = exports.errors = exports.DrainingConnectionError = exports.ConnectionError = exports.ClosedConnectionError = exports.AuthorizationError = exports.wsUrlParseFn = exports.wsconnect = exports.Servers = exports.isIPV4OrHostname = exports.IdleHeartbeatMonitor = exports.Subscriptions = exports.SubscriptionImpl = exports.syncIterator = exports.Match = exports.createInbox = exports.protoLen = exports.extractProtocolMessage = exports.Empty = exports.parseSemVer = exports.Features = exports.Feature = exports.compare = exports.parseIP = exports.isIP = exports.ipV4 = exports.TE = void 0;
var nats_1 = __webpack_require__(/*! ./nats */ "./node_modules/@nats-io/nats-core/lib/nats.js");
Object.defineProperty(exports, "NatsConnectionImpl", ({ enumerable: true, get: function () { return nats_1.NatsConnectionImpl; } }));
var nuid_1 = __webpack_require__(/*! ./nuid */ "./node_modules/@nats-io/nats-core/lib/nuid.js");
Object.defineProperty(exports, "Nuid", ({ enumerable: true, get: function () { return nuid_1.Nuid; } }));
Object.defineProperty(exports, "nuid", ({ enumerable: true, get: function () { return nuid_1.nuid; } }));
var msg_1 = __webpack_require__(/*! ./msg */ "./node_modules/@nats-io/nats-core/lib/msg.js");
Object.defineProperty(exports, "MsgImpl", ({ enumerable: true, get: function () { return msg_1.MsgImpl; } }));
var transport_1 = __webpack_require__(/*! ./transport */ "./node_modules/@nats-io/nats-core/lib/transport.js");
Object.defineProperty(exports, "getResolveFn", ({ enumerable: true, get: function () { return transport_1.getResolveFn; } }));
Object.defineProperty(exports, "setTransportFactory", ({ enumerable: true, get: function () { return transport_1.setTransportFactory; } }));
var protocol_1 = __webpack_require__(/*! ./protocol */ "./node_modules/@nats-io/nats-core/lib/protocol.js");
Object.defineProperty(exports, "Connect", ({ enumerable: true, get: function () { return protocol_1.Connect; } }));
Object.defineProperty(exports, "INFO", ({ enumerable: true, get: function () { return protocol_1.INFO; } }));
Object.defineProperty(exports, "ProtocolHandler", ({ enumerable: true, get: function () { return protocol_1.ProtocolHandler; } }));
var util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
Object.defineProperty(exports, "backoff", ({ enumerable: true, get: function () { return util_1.backoff; } }));
Object.defineProperty(exports, "collect", ({ enumerable: true, get: function () { return util_1.collect; } }));
Object.defineProperty(exports, "deadline", ({ enumerable: true, get: function () { return util_1.deadline; } }));
Object.defineProperty(exports, "deferred", ({ enumerable: true, get: function () { return util_1.deferred; } }));
Object.defineProperty(exports, "delay", ({ enumerable: true, get: function () { return util_1.delay; } }));
Object.defineProperty(exports, "extend", ({ enumerable: true, get: function () { return util_1.extend; } }));
Object.defineProperty(exports, "millis", ({ enumerable: true, get: function () { return util_1.millis; } }));
Object.defineProperty(exports, "nanos", ({ enumerable: true, get: function () { return util_1.nanos; } }));
Object.defineProperty(exports, "render", ({ enumerable: true, get: function () { return util_1.render; } }));
Object.defineProperty(exports, "SimpleMutex", ({ enumerable: true, get: function () { return util_1.SimpleMutex; } }));
Object.defineProperty(exports, "timeout", ({ enumerable: true, get: function () { return util_1.timeout; } }));
var headers_1 = __webpack_require__(/*! ./headers */ "./node_modules/@nats-io/nats-core/lib/headers.js");
Object.defineProperty(exports, "canonicalMIMEHeaderKey", ({ enumerable: true, get: function () { return headers_1.canonicalMIMEHeaderKey; } }));
Object.defineProperty(exports, "headers", ({ enumerable: true, get: function () { return headers_1.headers; } }));
Object.defineProperty(exports, "MsgHdrsImpl", ({ enumerable: true, get: function () { return headers_1.MsgHdrsImpl; } }));
var heartbeats_1 = __webpack_require__(/*! ./heartbeats */ "./node_modules/@nats-io/nats-core/lib/heartbeats.js");
Object.defineProperty(exports, "Heartbeat", ({ enumerable: true, get: function () { return heartbeats_1.Heartbeat; } }));
var muxsubscription_1 = __webpack_require__(/*! ./muxsubscription */ "./node_modules/@nats-io/nats-core/lib/muxsubscription.js");
Object.defineProperty(exports, "MuxSubscription", ({ enumerable: true, get: function () { return muxsubscription_1.MuxSubscription; } }));
var databuffer_1 = __webpack_require__(/*! ./databuffer */ "./node_modules/@nats-io/nats-core/lib/databuffer.js");
Object.defineProperty(exports, "DataBuffer", ({ enumerable: true, get: function () { return databuffer_1.DataBuffer; } }));
var options_1 = __webpack_require__(/*! ./options */ "./node_modules/@nats-io/nats-core/lib/options.js");
Object.defineProperty(exports, "buildAuthenticator", ({ enumerable: true, get: function () { return options_1.buildAuthenticator; } }));
Object.defineProperty(exports, "checkOptions", ({ enumerable: true, get: function () { return options_1.checkOptions; } }));
Object.defineProperty(exports, "checkUnsupportedOption", ({ enumerable: true, get: function () { return options_1.checkUnsupportedOption; } }));
Object.defineProperty(exports, "DEFAULT_MAX_RECONNECT_ATTEMPTS", ({ enumerable: true, get: function () { return options_1.DEFAULT_MAX_RECONNECT_ATTEMPTS; } }));
Object.defineProperty(exports, "defaultOptions", ({ enumerable: true, get: function () { return options_1.defaultOptions; } }));
Object.defineProperty(exports, "hasWsProtocol", ({ enumerable: true, get: function () { return options_1.hasWsProtocol; } }));
Object.defineProperty(exports, "parseOptions", ({ enumerable: true, get: function () { return options_1.parseOptions; } }));
var request_1 = __webpack_require__(/*! ./request */ "./node_modules/@nats-io/nats-core/lib/request.js");
Object.defineProperty(exports, "RequestOne", ({ enumerable: true, get: function () { return request_1.RequestOne; } }));
var authenticator_1 = __webpack_require__(/*! ./authenticator */ "./node_modules/@nats-io/nats-core/lib/authenticator.js");
Object.defineProperty(exports, "credsAuthenticator", ({ enumerable: true, get: function () { return authenticator_1.credsAuthenticator; } }));
Object.defineProperty(exports, "jwtAuthenticator", ({ enumerable: true, get: function () { return authenticator_1.jwtAuthenticator; } }));
Object.defineProperty(exports, "nkeyAuthenticator", ({ enumerable: true, get: function () { return authenticator_1.nkeyAuthenticator; } }));
Object.defineProperty(exports, "tokenAuthenticator", ({ enumerable: true, get: function () { return authenticator_1.tokenAuthenticator; } }));
Object.defineProperty(exports, "usernamePasswordAuthenticator", ({ enumerable: true, get: function () { return authenticator_1.usernamePasswordAuthenticator; } }));
__exportStar(__webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nats-core/lib/nkeys.js"), exports);
var queued_iterator_1 = __webpack_require__(/*! ./queued_iterator */ "./node_modules/@nats-io/nats-core/lib/queued_iterator.js");
Object.defineProperty(exports, "QueuedIteratorImpl", ({ enumerable: true, get: function () { return queued_iterator_1.QueuedIteratorImpl; } }));
var parser_1 = __webpack_require__(/*! ./parser */ "./node_modules/@nats-io/nats-core/lib/parser.js");
Object.defineProperty(exports, "Kind", ({ enumerable: true, get: function () { return parser_1.Kind; } }));
Object.defineProperty(exports, "Parser", ({ enumerable: true, get: function () { return parser_1.Parser; } }));
Object.defineProperty(exports, "State", ({ enumerable: true, get: function () { return parser_1.State; } }));
var denobuffer_1 = __webpack_require__(/*! ./denobuffer */ "./node_modules/@nats-io/nats-core/lib/denobuffer.js");
Object.defineProperty(exports, "DenoBuffer", ({ enumerable: true, get: function () { return denobuffer_1.DenoBuffer; } }));
Object.defineProperty(exports, "MAX_SIZE", ({ enumerable: true, get: function () { return denobuffer_1.MAX_SIZE; } }));
Object.defineProperty(exports, "readAll", ({ enumerable: true, get: function () { return denobuffer_1.readAll; } }));
Object.defineProperty(exports, "writeAll", ({ enumerable: true, get: function () { return denobuffer_1.writeAll; } }));
var bench_1 = __webpack_require__(/*! ./bench */ "./node_modules/@nats-io/nats-core/lib/bench.js");
Object.defineProperty(exports, "Bench", ({ enumerable: true, get: function () { return bench_1.Bench; } }));
Object.defineProperty(exports, "Metric", ({ enumerable: true, get: function () { return bench_1.Metric; } }));
var encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
Object.defineProperty(exports, "TD", ({ enumerable: true, get: function () { return encoders_1.TD; } }));
Object.defineProperty(exports, "TE", ({ enumerable: true, get: function () { return encoders_1.TE; } }));
var ipparser_1 = __webpack_require__(/*! ./ipparser */ "./node_modules/@nats-io/nats-core/lib/ipparser.js");
Object.defineProperty(exports, "ipV4", ({ enumerable: true, get: function () { return ipparser_1.ipV4; } }));
Object.defineProperty(exports, "isIP", ({ enumerable: true, get: function () { return ipparser_1.isIP; } }));
Object.defineProperty(exports, "parseIP", ({ enumerable: true, get: function () { return ipparser_1.parseIP; } }));
var semver_1 = __webpack_require__(/*! ./semver */ "./node_modules/@nats-io/nats-core/lib/semver.js");
Object.defineProperty(exports, "compare", ({ enumerable: true, get: function () { return semver_1.compare; } }));
Object.defineProperty(exports, "Feature", ({ enumerable: true, get: function () { return semver_1.Feature; } }));
Object.defineProperty(exports, "Features", ({ enumerable: true, get: function () { return semver_1.Features; } }));
Object.defineProperty(exports, "parseSemVer", ({ enumerable: true, get: function () { return semver_1.parseSemVer; } }));
var types_1 = __webpack_require__(/*! ./types */ "./node_modules/@nats-io/nats-core/lib/types.js");
Object.defineProperty(exports, "Empty", ({ enumerable: true, get: function () { return types_1.Empty; } }));
var transport_2 = __webpack_require__(/*! ./transport */ "./node_modules/@nats-io/nats-core/lib/transport.js");
Object.defineProperty(exports, "extractProtocolMessage", ({ enumerable: true, get: function () { return transport_2.extractProtocolMessage; } }));
Object.defineProperty(exports, "protoLen", ({ enumerable: true, get: function () { return transport_2.protoLen; } }));
var core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
Object.defineProperty(exports, "createInbox", ({ enumerable: true, get: function () { return core_1.createInbox; } }));
Object.defineProperty(exports, "Match", ({ enumerable: true, get: function () { return core_1.Match; } }));
Object.defineProperty(exports, "syncIterator", ({ enumerable: true, get: function () { return core_1.syncIterator; } }));
var protocol_2 = __webpack_require__(/*! ./protocol */ "./node_modules/@nats-io/nats-core/lib/protocol.js");
Object.defineProperty(exports, "SubscriptionImpl", ({ enumerable: true, get: function () { return protocol_2.SubscriptionImpl; } }));
Object.defineProperty(exports, "Subscriptions", ({ enumerable: true, get: function () { return protocol_2.Subscriptions; } }));
var idleheartbeat_monitor_1 = __webpack_require__(/*! ./idleheartbeat_monitor */ "./node_modules/@nats-io/nats-core/lib/idleheartbeat_monitor.js");
Object.defineProperty(exports, "IdleHeartbeatMonitor", ({ enumerable: true, get: function () { return idleheartbeat_monitor_1.IdleHeartbeatMonitor; } }));
var servers_1 = __webpack_require__(/*! ./servers */ "./node_modules/@nats-io/nats-core/lib/servers.js");
Object.defineProperty(exports, "isIPV4OrHostname", ({ enumerable: true, get: function () { return servers_1.isIPV4OrHostname; } }));
Object.defineProperty(exports, "Servers", ({ enumerable: true, get: function () { return servers_1.Servers; } }));
var ws_transport_1 = __webpack_require__(/*! ./ws_transport */ "./node_modules/@nats-io/nats-core/lib/ws_transport.js");
Object.defineProperty(exports, "wsconnect", ({ enumerable: true, get: function () { return ws_transport_1.wsconnect; } }));
Object.defineProperty(exports, "wsUrlParseFn", ({ enumerable: true, get: function () { return ws_transport_1.wsUrlParseFn; } }));
var errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
Object.defineProperty(exports, "AuthorizationError", ({ enumerable: true, get: function () { return errors_1.AuthorizationError; } }));
Object.defineProperty(exports, "ClosedConnectionError", ({ enumerable: true, get: function () { return errors_1.ClosedConnectionError; } }));
Object.defineProperty(exports, "ConnectionError", ({ enumerable: true, get: function () { return errors_1.ConnectionError; } }));
Object.defineProperty(exports, "DrainingConnectionError", ({ enumerable: true, get: function () { return errors_1.DrainingConnectionError; } }));
Object.defineProperty(exports, "errors", ({ enumerable: true, get: function () { return errors_1.errors; } }));
Object.defineProperty(exports, "InvalidArgumentError", ({ enumerable: true, get: function () { return errors_1.InvalidArgumentError; } }));
Object.defineProperty(exports, "InvalidOperationError", ({ enumerable: true, get: function () { return errors_1.InvalidOperationError; } }));
Object.defineProperty(exports, "InvalidSubjectError", ({ enumerable: true, get: function () { return errors_1.InvalidSubjectError; } }));
Object.defineProperty(exports, "NoRespondersError", ({ enumerable: true, get: function () { return errors_1.NoRespondersError; } }));
Object.defineProperty(exports, "PermissionViolationError", ({ enumerable: true, get: function () { return errors_1.PermissionViolationError; } }));
Object.defineProperty(exports, "ProtocolError", ({ enumerable: true, get: function () { return errors_1.ProtocolError; } }));
Object.defineProperty(exports, "RequestError", ({ enumerable: true, get: function () { return errors_1.RequestError; } }));
Object.defineProperty(exports, "TimeoutError", ({ enumerable: true, get: function () { return errors_1.TimeoutError; } }));
Object.defineProperty(exports, "UserAuthenticationExpiredError", ({ enumerable: true, get: function () { return errors_1.UserAuthenticationExpiredError; } }));
//# sourceMappingURL=internal_mod.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/ipparser.js":
/*!*********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/ipparser.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2020-2021 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ipV4 = ipV4;
exports.isIP = isIP;
exports.parseIP = parseIP;
// JavaScript port of go net/ip/ParseIP
// https://github.com/golang/go/blob/master/src/net/ip.go
// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
const IPv4LEN = 4;
const IPv6LEN = 16;
const ASCII0 = 48;
const ASCII9 = 57;
const ASCIIA = 65;
const ASCIIF = 70;
const ASCIIa = 97;
const ASCIIf = 102;
const big = 0xFFFFFF;
function ipV4(a, b, c, d) {
    const ip = new Uint8Array(IPv6LEN);
    const prefix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff];
    prefix.forEach((v, idx) => {
        ip[idx] = v;
    });
    ip[12] = a;
    ip[13] = b;
    ip[14] = c;
    ip[15] = d;
    return ip;
}
function isIP(h) {
    return parseIP(h) !== undefined;
}
function parseIP(h) {
    for (let i = 0; i < h.length; i++) {
        switch (h[i]) {
            case ".":
                return parseIPv4(h);
            case ":":
                return parseIPv6(h);
        }
    }
    return;
}
function parseIPv4(s) {
    const ip = new Uint8Array(IPv4LEN);
    for (let i = 0; i < IPv4LEN; i++) {
        if (s.length === 0) {
            return undefined;
        }
        if (i > 0) {
            if (s[0] !== ".") {
                return undefined;
            }
            s = s.substring(1);
        }
        const { n, c, ok } = dtoi(s);
        if (!ok || n > 0xFF) {
            return undefined;
        }
        s = s.substring(c);
        ip[i] = n;
    }
    return ipV4(ip[0], ip[1], ip[2], ip[3]);
}
function parseIPv6(s) {
    const ip = new Uint8Array(IPv6LEN);
    let ellipsis = -1;
    if (s.length >= 2 && s[0] === ":" && s[1] === ":") {
        ellipsis = 0;
        s = s.substring(2);
        if (s.length === 0) {
            return ip;
        }
    }
    let i = 0;
    while (i < IPv6LEN) {
        const { n, c, ok } = xtoi(s);
        if (!ok || n > 0xFFFF) {
            return undefined;
        }
        if (c < s.length && s[c] === ".") {
            if (ellipsis < 0 && i != IPv6LEN - IPv4LEN) {
                return undefined;
            }
            if (i + IPv4LEN > IPv6LEN) {
                return undefined;
            }
            const ip4 = parseIPv4(s);
            if (ip4 === undefined) {
                return undefined;
            }
            ip[i] = ip4[12];
            ip[i + 1] = ip4[13];
            ip[i + 2] = ip4[14];
            ip[i + 3] = ip4[15];
            s = "";
            i += IPv4LEN;
            break;
        }
        ip[i] = n >> 8;
        ip[i + 1] = n;
        i += 2;
        s = s.substring(c);
        if (s.length === 0) {
            break;
        }
        if (s[0] !== ":" || s.length == 1) {
            return undefined;
        }
        s = s.substring(1);
        if (s[0] === ":") {
            if (ellipsis >= 0) {
                return undefined;
            }
            ellipsis = i;
            s = s.substring(1);
            if (s.length === 0) {
                break;
            }
        }
    }
    if (s.length !== 0) {
        return undefined;
    }
    if (i < IPv6LEN) {
        if (ellipsis < 0) {
            return undefined;
        }
        const n = IPv6LEN - i;
        for (let j = i - 1; j >= ellipsis; j--) {
            ip[j + n] = ip[j];
        }
        for (let j = ellipsis + n - 1; j >= ellipsis; j--) {
            ip[j] = 0;
        }
    }
    else if (ellipsis >= 0) {
        return undefined;
    }
    return ip;
}
function dtoi(s) {
    let i = 0;
    let n = 0;
    for (i = 0; i < s.length && ASCII0 <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCII9; i++) {
        n = n * 10 + (s.charCodeAt(i) - ASCII0);
        if (n >= big) {
            return { n: big, c: i, ok: false };
        }
    }
    if (i === 0) {
        return { n: 0, c: 0, ok: false };
    }
    return { n: n, c: i, ok: true };
}
function xtoi(s) {
    let n = 0;
    let i = 0;
    for (i = 0; i < s.length; i++) {
        if (ASCII0 <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCII9) {
            n *= 16;
            n += s.charCodeAt(i) - ASCII0;
        }
        else if (ASCIIa <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCIIf) {
            n *= 16;
            n += (s.charCodeAt(i) - ASCIIa) + 10;
        }
        else if (ASCIIA <= s.charCodeAt(i) && s.charCodeAt(i) <= ASCIIF) {
            n *= 16;
            n += (s.charCodeAt(i) - ASCIIA) + 10;
        }
        else {
            break;
        }
        if (n >= big) {
            return { n: 0, c: i, ok: false };
        }
    }
    if (i === 0) {
        return { n: 0, c: i, ok: false };
    }
    return { n: n, c: i, ok: true };
}
//# sourceMappingURL=ipparser.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/mod.js":
/*!****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/mod.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wsconnect = exports.usernamePasswordAuthenticator = exports.UserAuthenticationExpiredError = exports.tokenAuthenticator = exports.TimeoutError = exports.syncIterator = exports.RequestError = exports.ProtocolError = exports.PermissionViolationError = exports.nuid = exports.Nuid = exports.NoRespondersError = exports.nkeys = exports.nkeyAuthenticator = exports.nanos = exports.MsgHdrsImpl = exports.millis = exports.Metric = exports.Match = exports.jwtAuthenticator = exports.InvalidSubjectError = exports.InvalidOperationError = exports.InvalidArgumentError = exports.headers = exports.hasWsProtocol = exports.errors = exports.Empty = exports.DrainingConnectionError = exports.delay = exports.deferred = exports.deadline = exports.credsAuthenticator = exports.createInbox = exports.ConnectionError = exports.ClosedConnectionError = exports.canonicalMIMEHeaderKey = exports.buildAuthenticator = exports.Bench = exports.backoff = exports.AuthorizationError = void 0;
var internal_mod_1 = __webpack_require__(/*! ./internal_mod */ "./node_modules/@nats-io/nats-core/lib/internal_mod.js");
Object.defineProperty(exports, "AuthorizationError", ({ enumerable: true, get: function () { return internal_mod_1.AuthorizationError; } }));
Object.defineProperty(exports, "backoff", ({ enumerable: true, get: function () { return internal_mod_1.backoff; } }));
Object.defineProperty(exports, "Bench", ({ enumerable: true, get: function () { return internal_mod_1.Bench; } }));
Object.defineProperty(exports, "buildAuthenticator", ({ enumerable: true, get: function () { return internal_mod_1.buildAuthenticator; } }));
Object.defineProperty(exports, "canonicalMIMEHeaderKey", ({ enumerable: true, get: function () { return internal_mod_1.canonicalMIMEHeaderKey; } }));
Object.defineProperty(exports, "ClosedConnectionError", ({ enumerable: true, get: function () { return internal_mod_1.ClosedConnectionError; } }));
Object.defineProperty(exports, "ConnectionError", ({ enumerable: true, get: function () { return internal_mod_1.ConnectionError; } }));
Object.defineProperty(exports, "createInbox", ({ enumerable: true, get: function () { return internal_mod_1.createInbox; } }));
Object.defineProperty(exports, "credsAuthenticator", ({ enumerable: true, get: function () { return internal_mod_1.credsAuthenticator; } }));
Object.defineProperty(exports, "deadline", ({ enumerable: true, get: function () { return internal_mod_1.deadline; } }));
Object.defineProperty(exports, "deferred", ({ enumerable: true, get: function () { return internal_mod_1.deferred; } }));
Object.defineProperty(exports, "delay", ({ enumerable: true, get: function () { return internal_mod_1.delay; } }));
Object.defineProperty(exports, "DrainingConnectionError", ({ enumerable: true, get: function () { return internal_mod_1.DrainingConnectionError; } }));
Object.defineProperty(exports, "Empty", ({ enumerable: true, get: function () { return internal_mod_1.Empty; } }));
Object.defineProperty(exports, "errors", ({ enumerable: true, get: function () { return internal_mod_1.errors; } }));
Object.defineProperty(exports, "hasWsProtocol", ({ enumerable: true, get: function () { return internal_mod_1.hasWsProtocol; } }));
Object.defineProperty(exports, "headers", ({ enumerable: true, get: function () { return internal_mod_1.headers; } }));
Object.defineProperty(exports, "InvalidArgumentError", ({ enumerable: true, get: function () { return internal_mod_1.InvalidArgumentError; } }));
Object.defineProperty(exports, "InvalidOperationError", ({ enumerable: true, get: function () { return internal_mod_1.InvalidOperationError; } }));
Object.defineProperty(exports, "InvalidSubjectError", ({ enumerable: true, get: function () { return internal_mod_1.InvalidSubjectError; } }));
Object.defineProperty(exports, "jwtAuthenticator", ({ enumerable: true, get: function () { return internal_mod_1.jwtAuthenticator; } }));
Object.defineProperty(exports, "Match", ({ enumerable: true, get: function () { return internal_mod_1.Match; } }));
Object.defineProperty(exports, "Metric", ({ enumerable: true, get: function () { return internal_mod_1.Metric; } }));
Object.defineProperty(exports, "millis", ({ enumerable: true, get: function () { return internal_mod_1.millis; } }));
Object.defineProperty(exports, "MsgHdrsImpl", ({ enumerable: true, get: function () { return internal_mod_1.MsgHdrsImpl; } }));
Object.defineProperty(exports, "nanos", ({ enumerable: true, get: function () { return internal_mod_1.nanos; } }));
Object.defineProperty(exports, "nkeyAuthenticator", ({ enumerable: true, get: function () { return internal_mod_1.nkeyAuthenticator; } }));
Object.defineProperty(exports, "nkeys", ({ enumerable: true, get: function () { return internal_mod_1.nkeys; } }));
Object.defineProperty(exports, "NoRespondersError", ({ enumerable: true, get: function () { return internal_mod_1.NoRespondersError; } }));
Object.defineProperty(exports, "Nuid", ({ enumerable: true, get: function () { return internal_mod_1.Nuid; } }));
Object.defineProperty(exports, "nuid", ({ enumerable: true, get: function () { return internal_mod_1.nuid; } }));
Object.defineProperty(exports, "PermissionViolationError", ({ enumerable: true, get: function () { return internal_mod_1.PermissionViolationError; } }));
Object.defineProperty(exports, "ProtocolError", ({ enumerable: true, get: function () { return internal_mod_1.ProtocolError; } }));
Object.defineProperty(exports, "RequestError", ({ enumerable: true, get: function () { return internal_mod_1.RequestError; } }));
Object.defineProperty(exports, "syncIterator", ({ enumerable: true, get: function () { return internal_mod_1.syncIterator; } }));
Object.defineProperty(exports, "TimeoutError", ({ enumerable: true, get: function () { return internal_mod_1.TimeoutError; } }));
Object.defineProperty(exports, "tokenAuthenticator", ({ enumerable: true, get: function () { return internal_mod_1.tokenAuthenticator; } }));
Object.defineProperty(exports, "UserAuthenticationExpiredError", ({ enumerable: true, get: function () { return internal_mod_1.UserAuthenticationExpiredError; } }));
Object.defineProperty(exports, "usernamePasswordAuthenticator", ({ enumerable: true, get: function () { return internal_mod_1.usernamePasswordAuthenticator; } }));
Object.defineProperty(exports, "wsconnect", ({ enumerable: true, get: function () { return internal_mod_1.wsconnect; } }));
//# sourceMappingURL=mod.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/msg.js":
/*!****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/msg.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MsgImpl = void 0;
/*
 * Copyright 2020-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const headers_1 = __webpack_require__(/*! ./headers */ "./node_modules/@nats-io/nats-core/lib/headers.js");
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
class MsgImpl {
    _headers;
    _msg;
    _rdata;
    _reply;
    _subject;
    publisher;
    constructor(msg, data, publisher) {
        this._msg = msg;
        this._rdata = data;
        this.publisher = publisher;
    }
    get subject() {
        if (this._subject) {
            return this._subject;
        }
        this._subject = encoders_1.TD.decode(this._msg.subject);
        return this._subject;
    }
    get reply() {
        if (this._reply) {
            return this._reply;
        }
        this._reply = encoders_1.TD.decode(this._msg.reply);
        return this._reply;
    }
    get sid() {
        return this._msg.sid;
    }
    get headers() {
        if (this._msg.hdr > -1 && !this._headers) {
            const buf = this._rdata.subarray(0, this._msg.hdr);
            this._headers = headers_1.MsgHdrsImpl.decode(buf);
        }
        return this._headers;
    }
    get data() {
        if (!this._rdata) {
            return new Uint8Array(0);
        }
        return this._msg.hdr > -1
            ? this._rdata.subarray(this._msg.hdr)
            : this._rdata;
    }
    // eslint-ignore-next-line @typescript-eslint/no-explicit-any
    respond(data = encoders_1.Empty, opts) {
        if (this.reply) {
            this.publisher.publish(this.reply, data, opts);
            return true;
        }
        return false;
    }
    size() {
        const subj = this._msg.subject.length;
        const reply = this._msg.reply?.length || 0;
        const payloadAndHeaders = this._msg.size === -1 ? 0 : this._msg.size;
        return subj + reply + payloadAndHeaders;
    }
    json(reviver) {
        return JSON.parse(this.string(), reviver);
    }
    string() {
        return encoders_1.TD.decode(this.data);
    }
    requestInfo() {
        const v = this.headers?.get("Nats-Request-Info");
        if (v) {
            return JSON.parse(v, function (key, value) {
                if ((key === "start" || key === "stop") && value !== "") {
                    return new Date(Date.parse(value));
                }
                return value;
            });
        }
        return null;
    }
}
exports.MsgImpl = MsgImpl;
//# sourceMappingURL=msg.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/muxsubscription.js":
/*!****************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/muxsubscription.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MuxSubscription = void 0;
const core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
class MuxSubscription {
    baseInbox;
    reqs;
    constructor() {
        this.reqs = new Map();
    }
    size() {
        return this.reqs.size;
    }
    init(prefix) {
        this.baseInbox = `${(0, core_1.createInbox)(prefix)}.`;
        return this.baseInbox;
    }
    add(r) {
        if (!isNaN(r.received)) {
            r.received = 0;
        }
        this.reqs.set(r.token, r);
    }
    get(token) {
        return this.reqs.get(token);
    }
    cancel(r) {
        this.reqs.delete(r.token);
    }
    getToken(m) {
        const s = m.subject || "";
        if (s.indexOf(this.baseInbox) === 0) {
            return s.substring(this.baseInbox.length);
        }
        return null;
    }
    all() {
        return Array.from(this.reqs.values());
    }
    handleError(isMuxPermissionError, err) {
        if (isMuxPermissionError) {
            // one or more requests queued but mux cannot process them
            this.all().forEach((r) => {
                r.resolver(err, {});
            });
            return true;
        }
        if (err.operation === "publish") {
            const req = this.all().find((s) => {
                return s.requestSubject === err.subject;
            });
            if (req) {
                req.resolver(err, {});
                return true;
            }
        }
        return false;
    }
    dispatcher() {
        return (err, m) => {
            const token = this.getToken(m);
            if (token) {
                const r = this.get(token);
                if (r) {
                    if (err === null) {
                        err = (m?.data?.length === 0 && m.headers?.code === 503)
                            ? new errors_1.NoRespondersError(r.requestSubject)
                            : null;
                    }
                    r.resolver(err, m);
                }
            }
        };
    }
    close() {
        const err = new errors_1.RequestError("connection closed");
        this.reqs.forEach((req) => {
            req.resolver(err, {});
        });
    }
}
exports.MuxSubscription = MuxSubscription;
//# sourceMappingURL=muxsubscription.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/nats.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/nats.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2018-2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NatsConnectionImpl = void 0;
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const protocol_1 = __webpack_require__(/*! ./protocol */ "./node_modules/@nats-io/nats-core/lib/protocol.js");
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
const semver_1 = __webpack_require__(/*! ./semver */ "./node_modules/@nats-io/nats-core/lib/semver.js");
const options_1 = __webpack_require__(/*! ./options */ "./node_modules/@nats-io/nats-core/lib/options.js");
const queued_iterator_1 = __webpack_require__(/*! ./queued_iterator */ "./node_modules/@nats-io/nats-core/lib/queued_iterator.js");
const request_1 = __webpack_require__(/*! ./request */ "./node_modules/@nats-io/nats-core/lib/request.js");
const core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
class NatsConnectionImpl {
    options;
    protocol;
    draining;
    constructor(opts) {
        this.draining = false;
        this.options = (0, options_1.parseOptions)(opts);
    }
    static connect(opts = {}) {
        return new Promise((resolve, reject) => {
            const nc = new NatsConnectionImpl(opts);
            protocol_1.ProtocolHandler.connect(nc.options, nc)
                .then((ph) => {
                nc.protocol = ph;
                resolve(nc);
            })
                .catch((err) => {
                reject(err);
            });
        });
    }
    closed() {
        return this.protocol.closed;
    }
    async close() {
        await this.protocol.close();
    }
    _check(subject, sub, pub) {
        if (this.isClosed()) {
            throw new errors_1.errors.ClosedConnectionError();
        }
        if (sub && this.isDraining()) {
            throw new errors_1.errors.DrainingConnectionError();
        }
        if (pub && this.protocol.noMorePublishing) {
            throw new errors_1.errors.DrainingConnectionError();
        }
        subject = subject || "";
        if (subject.length === 0) {
            throw new errors_1.errors.InvalidSubjectError(subject);
        }
    }
    publish(subject, data, options) {
        this._check(subject, false, true);
        if (options?.reply) {
            this._check(options.reply, false, true);
        }
        this.protocol.publish(subject, data, options);
    }
    publishMessage(msg) {
        return this.publish(msg.subject, msg.data, {
            reply: msg.reply,
            headers: msg.headers,
        });
    }
    respondMessage(msg) {
        if (msg.reply) {
            this.publish(msg.reply, msg.data, {
                reply: msg.reply,
                headers: msg.headers,
            });
            return true;
        }
        return false;
    }
    subscribe(subject, opts = {}) {
        this._check(subject, true, false);
        const sub = new protocol_1.SubscriptionImpl(this.protocol, subject, opts);
        if (typeof opts.callback !== "function" && typeof opts.slow === "number") {
            sub.setSlowNotificationFn(opts.slow, (pending) => {
                this.protocol.dispatchStatus({
                    type: "slowConsumer",
                    sub,
                    pending,
                });
            });
        }
        this.protocol.subscribe(sub);
        return sub;
    }
    _resub(s, subject, max) {
        this._check(subject, true, false);
        const si = s;
        // FIXME: need way of understanding a callbacks processed
        //   count without it, we cannot really do much - ie
        //   for rejected messages, the count would be lower, etc.
        //   To handle cases were for example KV is building a map
        //   the consumer would say how many messages we need to do
        //   a proper build before we can handle updates.
        si.max = max; // this might clear it
        if (max) {
            // we cannot auto-unsub, because we don't know the
            // number of messages we processed vs received
            // allow the auto-unsub on processMsg to work if they
            // we were called with a new max
            si.max = max + si.received;
        }
        this.protocol.resub(si, subject);
    }
    // possibilities are:
    // stop on error or any non-100 status
    // AND:
    // - wait for timer
    // - wait for n messages or timer
    // - wait for unknown messages, done when empty or reset timer expires (with possible alt wait)
    // - wait for unknown messages, done when an empty payload is received or timer expires (with possible alt wait)
    requestMany(subject, data = encoders_1.Empty, opts = { maxWait: 1000, maxMessages: -1 }) {
        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);
        try {
            this._check(subject, true, true);
        }
        catch (err) {
            return Promise.reject(err);
        }
        opts.strategy = opts.strategy || "timer";
        opts.maxWait = opts.maxWait || 1000;
        if (opts.maxWait < 1) {
            return Promise.reject(errors_1.InvalidArgumentError.format("timeout", "must be greater than 0"));
        }
        // the iterator for user results
        const qi = new queued_iterator_1.QueuedIteratorImpl();
        function stop(err) {
            qi.push(() => {
                qi.stop(err);
            });
        }
        // callback for the subscription or the mux handler
        // simply pushes errors and messages into the iterator
        function callback(err, msg) {
            if (err || msg === null) {
                stop(err === null ? undefined : err);
            }
            else {
                qi.push(msg);
            }
        }
        if (opts.noMux) {
            // we setup a subscription and manage it
            const stack = asyncTraces ? new Error().stack : null;
            let max = typeof opts.maxMessages === "number" && opts.maxMessages > 0
                ? opts.maxMessages
                : -1;
            const sub = this.subscribe((0, core_1.createInbox)(this.options.inboxPrefix), {
                callback: (err, msg) => {
                    // we only expect runtime errors or a no responders
                    if (msg?.data?.length === 0 &&
                        msg?.headers?.status === "503") {
                        err = new errors_1.errors.NoRespondersError(subject);
                    }
                    // augment any error with the current stack to provide context
                    // for the error on the suer code
                    if (err) {
                        if (stack) {
                            err.stack += `\n\n${stack}`;
                        }
                        cancel(err);
                        return;
                    }
                    // push the message
                    callback(null, msg);
                    // see if the m request is completed
                    if (opts.strategy === "count") {
                        max--;
                        if (max === 0) {
                            cancel();
                        }
                    }
                    if (opts.strategy === "stall") {
                        clearTimers();
                        timer = setTimeout(() => {
                            cancel();
                        }, 300);
                    }
                    if (opts.strategy === "sentinel") {
                        if (msg && msg.data.length === 0) {
                            cancel();
                        }
                    }
                },
            });
            sub.requestSubject = subject;
            sub.closed
                .then(() => {
                stop();
            })
                .catch((err) => {
                qi.stop(err);
            });
            const cancel = (err) => {
                if (err) {
                    qi.push(() => {
                        throw err;
                    });
                }
                clearTimers();
                sub.drain()
                    .then(() => {
                    stop();
                })
                    .catch((_err) => {
                    stop();
                });
            };
            qi.iterClosed
                .then(() => {
                clearTimers();
                sub?.unsubscribe();
            })
                .catch((_err) => {
                clearTimers();
                sub?.unsubscribe();
            });
            try {
                this.publish(subject, data, { reply: sub.getSubject() });
            }
            catch (err) {
                cancel(err);
            }
            let timer = setTimeout(() => {
                cancel();
            }, opts.maxWait);
            const clearTimers = () => {
                if (timer) {
                    clearTimeout(timer);
                }
            };
        }
        else {
            // the ingestion is the RequestMany
            const rmo = opts;
            rmo.callback = callback;
            qi.iterClosed.then(() => {
                r.cancel();
            }).catch((err) => {
                r.cancel(err);
            });
            const r = new request_1.RequestMany(this.protocol.muxSubscriptions, subject, rmo);
            this.protocol.request(r);
            try {
                this.publish(subject, data, {
                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,
                    headers: opts.headers,
                });
            }
            catch (err) {
                r.cancel(err);
            }
        }
        return Promise.resolve(qi);
    }
    request(subject, data, opts = { timeout: 1000, noMux: false }) {
        try {
            this._check(subject, true, true);
        }
        catch (err) {
            return Promise.reject(err);
        }
        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);
        opts.timeout = opts.timeout || 1000;
        if (opts.timeout < 1) {
            return Promise.reject(errors_1.InvalidArgumentError.format("timeout", `must be greater than 0`));
        }
        if (!opts.noMux && opts.reply) {
            return Promise.reject(errors_1.InvalidArgumentError.format(["reply", "noMux"], "are mutually exclusive"));
        }
        if (opts.noMux) {
            const inbox = opts.reply
                ? opts.reply
                : (0, core_1.createInbox)(this.options.inboxPrefix);
            const d = (0, util_1.deferred)();
            const errCtx = asyncTraces ? new errors_1.errors.RequestError("") : null;
            const sub = this.subscribe(inbox, {
                max: 1,
                timeout: opts.timeout,
                callback: (err, msg) => {
                    // check for no responders status
                    if (msg && msg.data?.length === 0 && msg.headers?.code === 503) {
                        err = new errors_1.errors.NoRespondersError(subject);
                    }
                    if (err) {
                        // we have a proper stack on timeout
                        if (!(err instanceof errors_1.TimeoutError)) {
                            if (errCtx) {
                                errCtx.message = err.message;
                                errCtx.cause = err;
                                err = errCtx;
                            }
                            else {
                                err = new errors_1.errors.RequestError(err.message, { cause: err });
                            }
                        }
                        d.reject(err);
                        sub.unsubscribe();
                    }
                    else {
                        d.resolve(msg);
                    }
                },
            });
            sub.requestSubject = subject;
            this.protocol.publish(subject, data, {
                reply: inbox,
                headers: opts.headers,
            });
            return d;
        }
        else {
            const r = new request_1.RequestOne(this.protocol.muxSubscriptions, subject, opts, asyncTraces);
            this.protocol.request(r);
            try {
                this.publish(subject, data, {
                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,
                    headers: opts.headers,
                });
            }
            catch (err) {
                r.cancel(err);
            }
            const p = Promise.race([r.timer, r.deferred]);
            p.catch(() => {
                r.cancel();
            });
            return p;
        }
    }
    /** *
     * Flushes to the server. Promise resolves when round-trip completes.
     * @returns {Promise<void>}
     */
    flush() {
        if (this.isClosed()) {
            return Promise.reject(new errors_1.errors.ClosedConnectionError());
        }
        return this.protocol.flush();
    }
    drain() {
        if (this.isClosed()) {
            return Promise.reject(new errors_1.errors.ClosedConnectionError());
        }
        if (this.isDraining()) {
            return Promise.reject(new errors_1.errors.DrainingConnectionError());
        }
        this.draining = true;
        return this.protocol.drain();
    }
    isClosed() {
        return this.protocol.isClosed();
    }
    isDraining() {
        return this.draining;
    }
    getServer() {
        const srv = this.protocol.getServer();
        return srv ? srv.listen : "";
    }
    status() {
        const iter = new queued_iterator_1.QueuedIteratorImpl();
        iter.iterClosed.then(() => {
            const idx = this.protocol.listeners.indexOf(iter);
            if (idx > -1) {
                this.protocol.listeners.splice(idx, 1);
            }
        });
        this.protocol.listeners.push(iter);
        return iter;
    }
    get info() {
        return this.protocol.isClosed() ? undefined : this.protocol.info;
    }
    async context() {
        const r = await this.request(`$SYS.REQ.USER.INFO`);
        return r.json((key, value) => {
            if (key === "time") {
                return new Date(Date.parse(value));
            }
            return value;
        });
    }
    stats() {
        return {
            inBytes: this.protocol.inBytes,
            outBytes: this.protocol.outBytes,
            inMsgs: this.protocol.inMsgs,
            outMsgs: this.protocol.outMsgs,
        };
    }
    getServerVersion() {
        const info = this.info;
        return info ? (0, semver_1.parseSemVer)(info.version) : undefined;
    }
    async rtt() {
        if (this.isClosed()) {
            throw new errors_1.errors.ClosedConnectionError();
        }
        if (!this.protocol.connected) {
            throw new errors_1.errors.RequestError("connection disconnected");
        }
        const start = Date.now();
        await this.flush();
        return Date.now() - start;
    }
    get features() {
        return this.protocol.features;
    }
    reconnect() {
        if (this.isClosed()) {
            return Promise.reject(new errors_1.errors.ClosedConnectionError());
        }
        if (this.isDraining()) {
            return Promise.reject(new errors_1.errors.DrainingConnectionError());
        }
        return this.protocol.reconnect();
    }
}
exports.NatsConnectionImpl = NatsConnectionImpl;
//# sourceMappingURL=nats.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/nkeys.js":
/*!******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/nkeys.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nkeys = void 0;
exports.nkeys = __importStar(__webpack_require__(/*! @nats-io/nkeys */ "./node_modules/@nats-io/nkeys/lib/mod.js"));
//# sourceMappingURL=nkeys.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/nuid.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/nuid.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2016-2021 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nuid = exports.Nuid = void 0;
var nuid_1 = __webpack_require__(/*! @nats-io/nuid */ "./node_modules/@nats-io/nuid/lib/nuid.js");
Object.defineProperty(exports, "Nuid", ({ enumerable: true, get: function () { return nuid_1.Nuid; } }));
Object.defineProperty(exports, "nuid", ({ enumerable: true, get: function () { return nuid_1.nuid; } }));
//# sourceMappingURL=nuid.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/options.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/options.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2021-2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_RECONNECT_TIME_WAIT = exports.DEFAULT_MAX_PING_OUT = exports.DEFAULT_PING_INTERVAL = exports.DEFAULT_JITTER_TLS = exports.DEFAULT_JITTER = exports.DEFAULT_MAX_RECONNECT_ATTEMPTS = void 0;
exports.defaultOptions = defaultOptions;
exports.hasWsProtocol = hasWsProtocol;
exports.buildAuthenticator = buildAuthenticator;
exports.parseOptions = parseOptions;
exports.checkOptions = checkOptions;
exports.checkUnsupportedOption = checkUnsupportedOption;
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const transport_1 = __webpack_require__(/*! ./transport */ "./node_modules/@nats-io/nats-core/lib/transport.js");
const core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
const authenticator_1 = __webpack_require__(/*! ./authenticator */ "./node_modules/@nats-io/nats-core/lib/authenticator.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
exports.DEFAULT_MAX_RECONNECT_ATTEMPTS = 10;
exports.DEFAULT_JITTER = 100;
exports.DEFAULT_JITTER_TLS = 1000;
// Ping interval
exports.DEFAULT_PING_INTERVAL = 2 * 60 * 1000; // 2 minutes
exports.DEFAULT_MAX_PING_OUT = 2;
// DISCONNECT Parameters, 2 sec wait, 10 tries
exports.DEFAULT_RECONNECT_TIME_WAIT = 2 * 1000;
function defaultOptions() {
    return {
        maxPingOut: exports.DEFAULT_MAX_PING_OUT,
        maxReconnectAttempts: exports.DEFAULT_MAX_RECONNECT_ATTEMPTS,
        noRandomize: false,
        pedantic: false,
        pingInterval: exports.DEFAULT_PING_INTERVAL,
        reconnect: true,
        reconnectJitter: exports.DEFAULT_JITTER,
        reconnectJitterTLS: exports.DEFAULT_JITTER_TLS,
        reconnectTimeWait: exports.DEFAULT_RECONNECT_TIME_WAIT,
        tls: undefined,
        verbose: false,
        waitOnFirstConnect: false,
        ignoreAuthErrorAbort: false,
    };
}
function hasWsProtocol(opts) {
    if (opts) {
        let { servers } = opts;
        if (typeof servers === "string") {
            servers = [servers];
        }
        if (servers) {
            for (let i = 0; i < servers.length; i++) {
                const s = servers[i].toLowerCase();
                if (s.startsWith("ws://") || s.startsWith("wss://")) {
                    return true;
                }
            }
        }
    }
    return false;
}
function buildAuthenticator(opts) {
    const buf = [];
    // jwtAuthenticator is created by the user, since it
    // will require possibly reading files which
    // some of the clients are simply unable to do
    if (typeof opts.authenticator === "function") {
        buf.push(opts.authenticator);
    }
    if (Array.isArray(opts.authenticator)) {
        buf.push(...opts.authenticator);
    }
    if (opts.token) {
        buf.push((0, authenticator_1.tokenAuthenticator)(opts.token));
    }
    if (opts.user) {
        buf.push((0, authenticator_1.usernamePasswordAuthenticator)(opts.user, opts.pass));
    }
    return buf.length === 0 ? (0, authenticator_1.noAuthFn)() : (0, authenticator_1.multiAuthenticator)(buf);
}
function parseOptions(opts) {
    const dhp = `${core_1.DEFAULT_HOST}:${(0, transport_1.defaultPort)()}`;
    opts = opts || { servers: [dhp] };
    opts.servers = opts.servers || [];
    if (typeof opts.servers === "string") {
        opts.servers = [opts.servers];
    }
    if (opts.servers.length > 0 && opts.port) {
        throw errors_1.InvalidArgumentError.format(["servers", "port"], "are mutually exclusive");
    }
    if (opts.servers.length === 0 && opts.port) {
        opts.servers = [`${core_1.DEFAULT_HOST}:${opts.port}`];
    }
    if (opts.servers && opts.servers.length === 0) {
        opts.servers = [dhp];
    }
    const options = (0, util_1.extend)(defaultOptions(), opts);
    options.authenticator = buildAuthenticator(options);
    ["reconnectDelayHandler", "authenticator"].forEach((n) => {
        if (options[n] && typeof options[n] !== "function") {
            throw TypeError(`'${n}' must be a function`);
        }
    });
    if (!options.reconnectDelayHandler) {
        options.reconnectDelayHandler = () => {
            let extra = options.tls
                ? options.reconnectJitterTLS
                : options.reconnectJitter;
            if (extra) {
                extra++;
                extra = Math.floor(Math.random() * extra);
            }
            return options.reconnectTimeWait + extra;
        };
    }
    if (options.inboxPrefix) {
        (0, core_1.createInbox)(options.inboxPrefix);
    }
    // if not set - we set it
    if (options.resolve === undefined) {
        // set a default based on whether the client can resolve or not
        options.resolve = typeof (0, transport_1.getResolveFn)() === "function";
    }
    if (options.resolve) {
        if (typeof (0, transport_1.getResolveFn)() !== "function") {
            throw errors_1.InvalidArgumentError.format("resolve", "is not supported in the current runtime");
        }
    }
    return options;
}
function checkOptions(info, options) {
    const { proto, tls_required: tlsRequired, tls_available: tlsAvailable } = info;
    if ((proto === undefined || proto < 1) && options.noEcho) {
        throw new errors_1.errors.ConnectionError(`server does not support 'noEcho'`);
    }
    const tls = tlsRequired || tlsAvailable || false;
    if (options.tls && !tls) {
        throw new errors_1.errors.ConnectionError(`server does not support 'tls'`);
    }
}
function checkUnsupportedOption(prop, v) {
    if (v) {
        throw errors_1.InvalidArgumentError.format(prop, "is not supported");
    }
}
//# sourceMappingURL=options.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/parser.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/parser.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cc = exports.State = exports.Parser = exports.Kind = void 0;
exports.describe = describe;
// deno-lint-ignore-file no-undef
/*
 * Copyright 2020-2021 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const denobuffer_1 = __webpack_require__(/*! ./denobuffer */ "./node_modules/@nats-io/nats-core/lib/denobuffer.js");
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
exports.Kind = {
    OK: 0,
    ERR: 1,
    MSG: 2,
    INFO: 3,
    PING: 4,
    PONG: 5,
};
function describe(e) {
    let ks;
    let data = "";
    switch (e.kind) {
        case exports.Kind.MSG:
            ks = "MSG";
            break;
        case exports.Kind.OK:
            ks = "OK";
            break;
        case exports.Kind.ERR:
            ks = "ERR";
            data = encoders_1.TD.decode(e.data);
            break;
        case exports.Kind.PING:
            ks = "PING";
            break;
        case exports.Kind.PONG:
            ks = "PONG";
            break;
        case exports.Kind.INFO:
            ks = "INFO";
            data = encoders_1.TD.decode(e.data);
    }
    return `${ks}: ${data}`;
}
function newMsgArg() {
    const ma = {};
    ma.sid = -1;
    ma.hdr = -1;
    ma.size = -1;
    return ma;
}
const ASCII_0 = 48;
const ASCII_9 = 57;
// This is an almost verbatim port of the Go NATS parser
// https://github.com/nats-io/nats.go/blob/master/parser.go
class Parser {
    dispatcher;
    state;
    as;
    drop;
    hdr;
    ma;
    argBuf;
    msgBuf;
    constructor(dispatcher) {
        this.dispatcher = dispatcher;
        this.state = exports.State.OP_START;
        this.as = 0;
        this.drop = 0;
        this.hdr = 0;
    }
    parse(buf) {
        let i;
        for (i = 0; i < buf.length; i++) {
            const b = buf[i];
            switch (this.state) {
                case exports.State.OP_START:
                    switch (b) {
                        case exports.cc.M:
                        case exports.cc.m:
                            this.state = exports.State.OP_M;
                            this.hdr = -1;
                            this.ma = newMsgArg();
                            break;
                        case exports.cc.H:
                        case exports.cc.h:
                            this.state = exports.State.OP_H;
                            this.hdr = 0;
                            this.ma = newMsgArg();
                            break;
                        case exports.cc.P:
                        case exports.cc.p:
                            this.state = exports.State.OP_P;
                            break;
                        case exports.cc.PLUS:
                            this.state = exports.State.OP_PLUS;
                            break;
                        case exports.cc.MINUS:
                            this.state = exports.State.OP_MINUS;
                            break;
                        case exports.cc.I:
                        case exports.cc.i:
                            this.state = exports.State.OP_I;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_H:
                    switch (b) {
                        case exports.cc.M:
                        case exports.cc.m:
                            this.state = exports.State.OP_M;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_M:
                    switch (b) {
                        case exports.cc.S:
                        case exports.cc.s:
                            this.state = exports.State.OP_MS;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MS:
                    switch (b) {
                        case exports.cc.G:
                        case exports.cc.g:
                            this.state = exports.State.OP_MSG;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MSG:
                    switch (b) {
                        case exports.cc.SPACE:
                        case exports.cc.TAB:
                            this.state = exports.State.OP_MSG_SPC;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MSG_SPC:
                    switch (b) {
                        case exports.cc.SPACE:
                        case exports.cc.TAB:
                            continue;
                        default:
                            this.state = exports.State.MSG_ARG;
                            this.as = i;
                    }
                    break;
                case exports.State.MSG_ARG:
                    switch (b) {
                        case exports.cc.CR:
                            this.drop = 1;
                            break;
                        case exports.cc.NL: {
                            const arg = this.argBuf
                                ? this.argBuf.bytes()
                                : buf.subarray(this.as, i - this.drop);
                            this.processMsgArgs(arg);
                            this.drop = 0;
                            this.as = i + 1;
                            this.state = exports.State.MSG_PAYLOAD;
                            // jump ahead with the index. If this overruns
                            // what is left we fall out and process a split buffer.
                            i = this.as + this.ma.size - 1;
                            break;
                        }
                        default:
                            if (this.argBuf) {
                                this.argBuf.writeByte(b);
                            }
                    }
                    break;
                case exports.State.MSG_PAYLOAD:
                    if (this.msgBuf) {
                        if (this.msgBuf.length >= this.ma.size) {
                            const data = this.msgBuf.bytes({ copy: false });
                            this.dispatcher.push({ kind: exports.Kind.MSG, msg: this.ma, data: data });
                            this.argBuf = undefined;
                            this.msgBuf = undefined;
                            this.state = exports.State.MSG_END;
                        }
                        else {
                            let toCopy = this.ma.size - this.msgBuf.length;
                            const avail = buf.length - i;
                            if (avail < toCopy) {
                                toCopy = avail;
                            }
                            if (toCopy > 0) {
                                this.msgBuf.write(buf.subarray(i, i + toCopy));
                                i = (i + toCopy) - 1;
                            }
                            else {
                                this.msgBuf.writeByte(b);
                            }
                        }
                    }
                    else if (i - this.as >= this.ma.size) {
                        this.dispatcher.push({ kind: exports.Kind.MSG, msg: this.ma, data: buf.subarray(this.as, i) });
                        this.argBuf = undefined;
                        this.msgBuf = undefined;
                        this.state = exports.State.MSG_END;
                    }
                    break;
                case exports.State.MSG_END:
                    switch (b) {
                        case exports.cc.NL:
                            this.drop = 0;
                            this.as = i + 1;
                            this.state = exports.State.OP_START;
                            break;
                        default:
                            continue;
                    }
                    break;
                case exports.State.OP_PLUS:
                    switch (b) {
                        case exports.cc.O:
                        case exports.cc.o:
                            this.state = exports.State.OP_PLUS_O;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PLUS_O:
                    switch (b) {
                        case exports.cc.K:
                        case exports.cc.k:
                            this.state = exports.State.OP_PLUS_OK;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PLUS_OK:
                    switch (b) {
                        case exports.cc.NL:
                            this.dispatcher.push({ kind: exports.Kind.OK });
                            this.drop = 0;
                            this.state = exports.State.OP_START;
                            break;
                    }
                    break;
                case exports.State.OP_MINUS:
                    switch (b) {
                        case exports.cc.E:
                        case exports.cc.e:
                            this.state = exports.State.OP_MINUS_E;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MINUS_E:
                    switch (b) {
                        case exports.cc.R:
                        case exports.cc.r:
                            this.state = exports.State.OP_MINUS_ER;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MINUS_ER:
                    switch (b) {
                        case exports.cc.R:
                        case exports.cc.r:
                            this.state = exports.State.OP_MINUS_ERR;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MINUS_ERR:
                    switch (b) {
                        case exports.cc.SPACE:
                        case exports.cc.TAB:
                            this.state = exports.State.OP_MINUS_ERR_SPC;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_MINUS_ERR_SPC:
                    switch (b) {
                        case exports.cc.SPACE:
                        case exports.cc.TAB:
                            continue;
                        default:
                            this.state = exports.State.MINUS_ERR_ARG;
                            this.as = i;
                    }
                    break;
                case exports.State.MINUS_ERR_ARG:
                    switch (b) {
                        case exports.cc.CR:
                            this.drop = 1;
                            break;
                        case exports.cc.NL: {
                            let arg;
                            if (this.argBuf) {
                                arg = this.argBuf.bytes();
                                this.argBuf = undefined;
                            }
                            else {
                                arg = buf.subarray(this.as, i - this.drop);
                            }
                            this.dispatcher.push({ kind: exports.Kind.ERR, data: arg });
                            this.drop = 0;
                            this.as = i + 1;
                            this.state = exports.State.OP_START;
                            break;
                        }
                        default:
                            if (this.argBuf) {
                                this.argBuf.write(Uint8Array.of(b));
                            }
                    }
                    break;
                case exports.State.OP_P:
                    switch (b) {
                        case exports.cc.I:
                        case exports.cc.i:
                            this.state = exports.State.OP_PI;
                            break;
                        case exports.cc.O:
                        case exports.cc.o:
                            this.state = exports.State.OP_PO;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PO:
                    switch (b) {
                        case exports.cc.N:
                        case exports.cc.n:
                            this.state = exports.State.OP_PON;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PON:
                    switch (b) {
                        case exports.cc.G:
                        case exports.cc.g:
                            this.state = exports.State.OP_PONG;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PONG:
                    switch (b) {
                        case exports.cc.NL:
                            this.dispatcher.push({ kind: exports.Kind.PONG });
                            this.drop = 0;
                            this.state = exports.State.OP_START;
                            break;
                    }
                    break;
                case exports.State.OP_PI:
                    switch (b) {
                        case exports.cc.N:
                        case exports.cc.n:
                            this.state = exports.State.OP_PIN;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PIN:
                    switch (b) {
                        case exports.cc.G:
                        case exports.cc.g:
                            this.state = exports.State.OP_PING;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_PING:
                    switch (b) {
                        case exports.cc.NL:
                            this.dispatcher.push({ kind: exports.Kind.PING });
                            this.drop = 0;
                            this.state = exports.State.OP_START;
                            break;
                    }
                    break;
                case exports.State.OP_I:
                    switch (b) {
                        case exports.cc.N:
                        case exports.cc.n:
                            this.state = exports.State.OP_IN;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_IN:
                    switch (b) {
                        case exports.cc.F:
                        case exports.cc.f:
                            this.state = exports.State.OP_INF;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_INF:
                    switch (b) {
                        case exports.cc.O:
                        case exports.cc.o:
                            this.state = exports.State.OP_INFO;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_INFO:
                    switch (b) {
                        case exports.cc.SPACE:
                        case exports.cc.TAB:
                            this.state = exports.State.OP_INFO_SPC;
                            break;
                        default:
                            throw this.fail(buf.subarray(i));
                    }
                    break;
                case exports.State.OP_INFO_SPC:
                    switch (b) {
                        case exports.cc.SPACE:
                        case exports.cc.TAB:
                            continue;
                        default:
                            this.state = exports.State.INFO_ARG;
                            this.as = i;
                    }
                    break;
                case exports.State.INFO_ARG:
                    switch (b) {
                        case exports.cc.CR:
                            this.drop = 1;
                            break;
                        case exports.cc.NL: {
                            let arg;
                            if (this.argBuf) {
                                arg = this.argBuf.bytes();
                                this.argBuf = undefined;
                            }
                            else {
                                arg = buf.subarray(this.as, i - this.drop);
                            }
                            this.dispatcher.push({ kind: exports.Kind.INFO, data: arg });
                            this.drop = 0;
                            this.as = i + 1;
                            this.state = exports.State.OP_START;
                            break;
                        }
                        default:
                            if (this.argBuf) {
                                this.argBuf.writeByte(b);
                            }
                    }
                    break;
                default:
                    throw this.fail(buf.subarray(i));
            }
        }
        if ((this.state === exports.State.MSG_ARG || this.state === exports.State.MINUS_ERR_ARG ||
            this.state === exports.State.INFO_ARG) && !this.argBuf) {
            this.argBuf = new denobuffer_1.DenoBuffer(buf.subarray(this.as, i - this.drop));
        }
        if (this.state === exports.State.MSG_PAYLOAD && !this.msgBuf) {
            if (!this.argBuf) {
                this.cloneMsgArg();
            }
            this.msgBuf = new denobuffer_1.DenoBuffer(buf.subarray(this.as));
        }
    }
    cloneMsgArg() {
        const s = this.ma.subject.length;
        const r = this.ma.reply ? this.ma.reply.length : 0;
        const buf = new Uint8Array(s + r);
        buf.set(this.ma.subject);
        if (this.ma.reply) {
            buf.set(this.ma.reply, s);
        }
        this.argBuf = new denobuffer_1.DenoBuffer(buf);
        this.ma.subject = buf.subarray(0, s);
        if (this.ma.reply) {
            this.ma.reply = buf.subarray(s);
        }
    }
    processMsgArgs(arg) {
        if (this.hdr >= 0) {
            return this.processHeaderMsgArgs(arg);
        }
        const args = [];
        let start = -1;
        for (let i = 0; i < arg.length; i++) {
            const b = arg[i];
            switch (b) {
                case exports.cc.SPACE:
                case exports.cc.TAB:
                case exports.cc.CR:
                case exports.cc.NL:
                    if (start >= 0) {
                        args.push(arg.subarray(start, i));
                        start = -1;
                    }
                    break;
                default:
                    if (start < 0) {
                        start = i;
                    }
            }
        }
        if (start >= 0) {
            args.push(arg.subarray(start));
        }
        switch (args.length) {
            case 3:
                this.ma.subject = args[0];
                this.ma.sid = this.protoParseInt(args[1]);
                this.ma.reply = undefined;
                this.ma.size = this.protoParseInt(args[2]);
                break;
            case 4:
                this.ma.subject = args[0];
                this.ma.sid = this.protoParseInt(args[1]);
                this.ma.reply = args[2];
                this.ma.size = this.protoParseInt(args[3]);
                break;
            default:
                throw this.fail(arg, "processMsgArgs Parse Error");
        }
        if (this.ma.sid < 0) {
            throw this.fail(arg, "processMsgArgs Bad or Missing Sid Error");
        }
        if (this.ma.size < 0) {
            throw this.fail(arg, "processMsgArgs Bad or Missing Size Error");
        }
    }
    fail(data, label = "") {
        if (!label) {
            label = `parse error [${this.state}]`;
        }
        else {
            label = `${label} [${this.state}]`;
        }
        return new Error(`${label}: ${encoders_1.TD.decode(data)}`);
    }
    processHeaderMsgArgs(arg) {
        const args = [];
        let start = -1;
        for (let i = 0; i < arg.length; i++) {
            const b = arg[i];
            switch (b) {
                case exports.cc.SPACE:
                case exports.cc.TAB:
                case exports.cc.CR:
                case exports.cc.NL:
                    if (start >= 0) {
                        args.push(arg.subarray(start, i));
                        start = -1;
                    }
                    break;
                default:
                    if (start < 0) {
                        start = i;
                    }
            }
        }
        if (start >= 0) {
            args.push(arg.subarray(start));
        }
        switch (args.length) {
            case 4:
                this.ma.subject = args[0];
                this.ma.sid = this.protoParseInt(args[1]);
                this.ma.reply = undefined;
                this.ma.hdr = this.protoParseInt(args[2]);
                this.ma.size = this.protoParseInt(args[3]);
                break;
            case 5:
                this.ma.subject = args[0];
                this.ma.sid = this.protoParseInt(args[1]);
                this.ma.reply = args[2];
                this.ma.hdr = this.protoParseInt(args[3]);
                this.ma.size = this.protoParseInt(args[4]);
                break;
            default:
                throw this.fail(arg, "processHeaderMsgArgs Parse Error");
        }
        if (this.ma.sid < 0) {
            throw this.fail(arg, "processHeaderMsgArgs Bad or Missing Sid Error");
        }
        if (this.ma.hdr < 0 || this.ma.hdr > this.ma.size) {
            throw this.fail(arg, "processHeaderMsgArgs Bad or Missing Header Size Error");
        }
        if (this.ma.size < 0) {
            throw this.fail(arg, "processHeaderMsgArgs Bad or Missing Size Error");
        }
    }
    protoParseInt(a) {
        if (a.length === 0) {
            return -1;
        }
        let n = 0;
        for (let i = 0; i < a.length; i++) {
            if (a[i] < ASCII_0 || a[i] > ASCII_9) {
                return -1;
            }
            n = n * 10 + (a[i] - ASCII_0);
        }
        return n;
    }
}
exports.Parser = Parser;
exports.State = {
    OP_START: 0,
    OP_PLUS: 1,
    OP_PLUS_O: 2,
    OP_PLUS_OK: 3,
    OP_MINUS: 4,
    OP_MINUS_E: 5,
    OP_MINUS_ER: 6,
    OP_MINUS_ERR: 7,
    OP_MINUS_ERR_SPC: 8,
    MINUS_ERR_ARG: 9,
    OP_M: 10,
    OP_MS: 11,
    OP_MSG: 12,
    OP_MSG_SPC: 13,
    MSG_ARG: 14,
    MSG_PAYLOAD: 15,
    MSG_END: 16,
    OP_H: 17,
    OP_P: 18,
    OP_PI: 19,
    OP_PIN: 20,
    OP_PING: 21,
    OP_PO: 22,
    OP_PON: 23,
    OP_PONG: 24,
    OP_I: 25,
    OP_IN: 26,
    OP_INF: 27,
    OP_INFO: 28,
    OP_INFO_SPC: 29,
    INFO_ARG: 30,
};
exports.cc = {
    CR: "\r".charCodeAt(0),
    E: "E".charCodeAt(0),
    e: "e".charCodeAt(0),
    F: "F".charCodeAt(0),
    f: "f".charCodeAt(0),
    G: "G".charCodeAt(0),
    g: "g".charCodeAt(0),
    H: "H".charCodeAt(0),
    h: "h".charCodeAt(0),
    I: "I".charCodeAt(0),
    i: "i".charCodeAt(0),
    K: "K".charCodeAt(0),
    k: "k".charCodeAt(0),
    M: "M".charCodeAt(0),
    m: "m".charCodeAt(0),
    MINUS: "-".charCodeAt(0),
    N: "N".charCodeAt(0),
    n: "n".charCodeAt(0),
    NL: "\n".charCodeAt(0),
    O: "O".charCodeAt(0),
    o: "o".charCodeAt(0),
    P: "P".charCodeAt(0),
    p: "p".charCodeAt(0),
    PLUS: "+".charCodeAt(0),
    R: "R".charCodeAt(0),
    r: "r".charCodeAt(0),
    S: "S".charCodeAt(0),
    s: "s".charCodeAt(0),
    SPACE: " ".charCodeAt(0),
    TAB: "\t".charCodeAt(0),
};
//# sourceMappingURL=parser.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/protocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/protocol.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtocolHandler = exports.Subscriptions = exports.SubscriptionImpl = exports.Connect = exports.INFO = void 0;
/*
 * Copyright 2018-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
const transport_1 = __webpack_require__(/*! ./transport */ "./node_modules/@nats-io/nats-core/lib/transport.js");
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const databuffer_1 = __webpack_require__(/*! ./databuffer */ "./node_modules/@nats-io/nats-core/lib/databuffer.js");
const servers_1 = __webpack_require__(/*! ./servers */ "./node_modules/@nats-io/nats-core/lib/servers.js");
const queued_iterator_1 = __webpack_require__(/*! ./queued_iterator */ "./node_modules/@nats-io/nats-core/lib/queued_iterator.js");
const muxsubscription_1 = __webpack_require__(/*! ./muxsubscription */ "./node_modules/@nats-io/nats-core/lib/muxsubscription.js");
const heartbeats_1 = __webpack_require__(/*! ./heartbeats */ "./node_modules/@nats-io/nats-core/lib/heartbeats.js");
const parser_1 = __webpack_require__(/*! ./parser */ "./node_modules/@nats-io/nats-core/lib/parser.js");
const msg_1 = __webpack_require__(/*! ./msg */ "./node_modules/@nats-io/nats-core/lib/msg.js");
const semver_1 = __webpack_require__(/*! ./semver */ "./node_modules/@nats-io/nats-core/lib/semver.js");
const options_1 = __webpack_require__(/*! ./options */ "./node_modules/@nats-io/nats-core/lib/options.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
const FLUSH_THRESHOLD = 1024 * 32;
exports.INFO = /^INFO\s+([^\r\n]+)\r\n/i;
const PONG_CMD = (0, encoders_1.encode)("PONG\r\n");
const PING_CMD = (0, encoders_1.encode)("PING\r\n");
class Connect {
    echo;
    no_responders;
    protocol;
    verbose;
    pedantic;
    jwt;
    nkey;
    sig;
    user;
    pass;
    auth_token;
    tls_required;
    name;
    lang;
    version;
    headers;
    constructor(transport, opts, nonce) {
        this.protocol = 1;
        this.version = transport.version;
        this.lang = transport.lang;
        this.echo = opts.noEcho ? false : undefined;
        this.verbose = opts.verbose;
        this.pedantic = opts.pedantic;
        this.tls_required = opts.tls ? true : undefined;
        this.name = opts.name;
        const creds = (opts && typeof opts.authenticator === "function"
            ? opts.authenticator(nonce)
            : {}) || {};
        (0, util_1.extend)(this, creds);
    }
}
exports.Connect = Connect;
class SlowNotifier {
    slow;
    cb;
    notified;
    constructor(slow, cb) {
        this.slow = slow;
        this.cb = cb;
        this.notified = false;
    }
    maybeNotify(pending) {
        // if we are below the threshold reset the ability to notify
        if (pending <= this.slow) {
            this.notified = false;
        }
        else {
            if (!this.notified) {
                // crossed the threshold, notify and silence.
                this.cb(pending);
                this.notified = true;
            }
        }
    }
}
class SubscriptionImpl extends queued_iterator_1.QueuedIteratorImpl {
    sid;
    queue;
    draining;
    max;
    subject;
    drained;
    protocol;
    timer;
    info;
    cleanupFn;
    closed;
    requestSubject;
    slow;
    constructor(protocol, subject, opts = {}) {
        super();
        (0, util_1.extend)(this, opts);
        this.protocol = protocol;
        this.subject = subject;
        this.draining = false;
        this.noIterator = typeof opts.callback === "function";
        this.closed = (0, util_1.deferred)();
        const asyncTraces = !(protocol.options?.noAsyncTraces || false);
        if (opts.timeout) {
            this.timer = (0, util_1.timeout)(opts.timeout, asyncTraces);
            this.timer
                .then(() => {
                // timer was cancelled
                this.timer = undefined;
            })
                .catch((err) => {
                // timer fired
                this.stop(err);
                if (this.noIterator) {
                    this.callback(err, {});
                }
            });
        }
        if (!this.noIterator) {
            // cleanup - they used break or return from the iterator
            // make sure we clean up, if they didn't call unsub
            this.iterClosed.then((err) => {
                this.closed.resolve(err);
                this.unsubscribe();
            });
        }
    }
    setSlowNotificationFn(slow, fn) {
        this.slow = undefined;
        if (fn) {
            if (this.noIterator) {
                throw new Error("callbacks don't support slow notifications");
            }
            this.slow = new SlowNotifier(slow, fn);
        }
    }
    callback(err, msg) {
        this.cancelTimeout();
        err ? this.stop(err) : this.push(msg);
        if (!err && this.slow) {
            this.slow.maybeNotify(this.getPending());
        }
    }
    close(err) {
        if (!this.isClosed()) {
            this.cancelTimeout();
            const fn = () => {
                this.stop();
                if (this.cleanupFn) {
                    try {
                        this.cleanupFn(this, this.info);
                    }
                    catch (_err) {
                        // ignoring
                    }
                }
                this.closed.resolve(err);
            };
            if (this.noIterator) {
                fn();
            }
            else {
                this.push(fn);
            }
        }
    }
    unsubscribe(max) {
        this.protocol.unsubscribe(this, max);
    }
    cancelTimeout() {
        if (this.timer) {
            this.timer.cancel();
            this.timer = undefined;
        }
    }
    drain() {
        if (this.protocol.isClosed()) {
            return Promise.reject(new errors_1.errors.ClosedConnectionError());
        }
        if (this.isClosed()) {
            return Promise.reject(new errors_1.errors.InvalidOperationError("subscription is already closed"));
        }
        if (!this.drained) {
            this.draining = true;
            this.protocol.unsub(this);
            this.drained = this.protocol.flush((0, util_1.deferred)())
                .then(() => {
                this.protocol.subscriptions.cancel(this);
            })
                .catch(() => {
                this.protocol.subscriptions.cancel(this);
            });
        }
        return this.drained;
    }
    isDraining() {
        return this.draining;
    }
    isClosed() {
        return this.done;
    }
    getSubject() {
        return this.subject;
    }
    getMax() {
        return this.max;
    }
    getID() {
        return this.sid;
    }
}
exports.SubscriptionImpl = SubscriptionImpl;
class Subscriptions {
    mux;
    subs;
    sidCounter;
    constructor() {
        this.sidCounter = 0;
        this.mux = null;
        this.subs = new Map();
    }
    size() {
        return this.subs.size;
    }
    add(s) {
        this.sidCounter++;
        s.sid = this.sidCounter;
        this.subs.set(s.sid, s);
        return s;
    }
    setMux(s) {
        this.mux = s;
        return s;
    }
    getMux() {
        return this.mux;
    }
    get(sid) {
        return this.subs.get(sid);
    }
    resub(s) {
        this.sidCounter++;
        this.subs.delete(s.sid);
        s.sid = this.sidCounter;
        this.subs.set(s.sid, s);
        return s;
    }
    all() {
        return Array.from(this.subs.values());
    }
    cancel(s) {
        if (s) {
            s.close();
            this.subs.delete(s.sid);
        }
    }
    handleError(err) {
        const subs = this.all();
        let sub;
        if (err.operation === "subscription") {
            sub = subs.find((s) => {
                return s.subject === err.subject && s.queue === err.queue;
            });
        }
        else if (err.operation === "publish") {
            // we have a no mux subscription
            sub = subs.find((s) => {
                return s.requestSubject === err.subject;
            });
        }
        if (sub) {
            sub.callback(err, {});
            sub.close(err);
            this.subs.delete(sub.sid);
            return sub !== this.mux;
        }
        return false;
    }
    close() {
        this.subs.forEach((sub) => {
            sub.close();
        });
    }
}
exports.Subscriptions = Subscriptions;
class ProtocolHandler {
    connected;
    connectedOnce;
    infoReceived;
    info;
    muxSubscriptions;
    options;
    outbound;
    pongs;
    subscriptions;
    transport;
    noMorePublishing;
    connectError;
    publisher;
    _closed;
    closed;
    listeners;
    heartbeats;
    parser;
    outMsgs;
    inMsgs;
    outBytes;
    inBytes;
    pendingLimit;
    lastError;
    abortReconnect;
    whyClosed;
    servers;
    server;
    features;
    connectPromise;
    dialDelay;
    raceTimer;
    constructor(options, publisher) {
        this._closed = false;
        this.connected = false;
        this.connectedOnce = false;
        this.infoReceived = false;
        this.noMorePublishing = false;
        this.abortReconnect = false;
        this.listeners = [];
        this.pendingLimit = FLUSH_THRESHOLD;
        this.outMsgs = 0;
        this.inMsgs = 0;
        this.outBytes = 0;
        this.inBytes = 0;
        this.options = options;
        this.publisher = publisher;
        this.subscriptions = new Subscriptions();
        this.muxSubscriptions = new muxsubscription_1.MuxSubscription();
        this.outbound = new databuffer_1.DataBuffer();
        this.pongs = [];
        this.whyClosed = "";
        //@ts-ignore: options.pendingLimit is hidden
        this.pendingLimit = options.pendingLimit || this.pendingLimit;
        this.features = new semver_1.Features({ major: 0, minor: 0, micro: 0 });
        this.connectPromise = null;
        this.dialDelay = null;
        const servers = typeof options.servers === "string"
            ? [options.servers]
            : options.servers;
        this.servers = new servers_1.Servers(servers, {
            randomize: !options.noRandomize,
        });
        this.closed = (0, util_1.deferred)();
        this.parser = new parser_1.Parser(this);
        this.heartbeats = new heartbeats_1.Heartbeat(this, this.options.pingInterval || options_1.DEFAULT_PING_INTERVAL, this.options.maxPingOut || options_1.DEFAULT_MAX_PING_OUT);
    }
    resetOutbound() {
        this.outbound.reset();
        const pongs = this.pongs;
        this.pongs = [];
        // reject the pongs - the disconnect from here shouldn't have a trace
        // because that confuses API consumers
        const err = new errors_1.errors.RequestError("connection disconnected");
        err.stack = "";
        pongs.forEach((p) => {
            p.reject(err);
        });
        this.parser = new parser_1.Parser(this);
        this.infoReceived = false;
    }
    dispatchStatus(status) {
        this.listeners.forEach((q) => {
            q.push(status);
        });
    }
    prepare() {
        if (this.transport) {
            this.transport.discard();
        }
        this.info = undefined;
        this.resetOutbound();
        const pong = (0, util_1.deferred)();
        pong.catch(() => {
            // provide at least one catch - as pong rejection can happen before it is expected
        });
        this.pongs.unshift(pong);
        this.connectError = (err) => {
            pong.reject(err);
        };
        this.transport = (0, transport_1.newTransport)();
        this.transport.closed()
            .then(async (_err) => {
            this.connected = false;
            if (!this.isClosed()) {
                // if the transport gave an error use that, otherwise
                // we may have received a protocol error
                await this.disconnected(this.transport.closeError || this.lastError);
                return;
            }
        });
        return pong;
    }
    disconnect() {
        this.dispatchStatus({ type: "staleConnection" });
        this.transport.disconnect();
    }
    reconnect() {
        if (this.connected) {
            this.dispatchStatus({
                type: "forceReconnect",
            });
            this.transport.disconnect();
        }
        return Promise.resolve();
    }
    async disconnected(err) {
        this.dispatchStatus({
            type: "disconnect",
            server: this.servers.getCurrentServer().toString(),
        });
        if (this.options.reconnect) {
            await this.dialLoop()
                .then(() => {
                this.dispatchStatus({
                    type: "reconnect",
                    server: this.servers.getCurrentServer().toString(),
                });
                // if we are here we reconnected, but we have an authentication
                // that expired, we need to clean it up, otherwise we'll queue up
                // two of these, and the default for the client will be to
                // close, rather than attempt again - possibly they have an
                // authenticator that dynamically updates
                if (this.lastError instanceof errors_1.errors.UserAuthenticationExpiredError) {
                    this.lastError = undefined;
                }
            })
                .catch((err) => {
                this.close(err).catch();
            });
        }
        else {
            await this.close(err).catch();
        }
    }
    async dial(srv) {
        const pong = this.prepare();
        try {
            this.raceTimer = (0, util_1.timeout)(this.options.timeout || 20000);
            const cp = this.transport.connect(srv, this.options);
            await Promise.race([cp, this.raceTimer]);
            (async () => {
                try {
                    for await (const b of this.transport) {
                        this.parser.parse(b);
                    }
                }
                catch (err) {
                    console.log("reader closed", err);
                }
            })().then();
        }
        catch (err) {
            pong.reject(err);
        }
        try {
            await Promise.race([this.raceTimer, pong]);
            this.raceTimer?.cancel();
            this.connected = true;
            this.connectError = undefined;
            this.sendSubscriptions();
            this.connectedOnce = true;
            this.server.didConnect = true;
            this.server.reconnects = 0;
            this.flushPending();
            this.heartbeats.start();
        }
        catch (err) {
            this.raceTimer?.cancel();
            await this.transport.close(err);
            throw err;
        }
    }
    async _doDial(srv) {
        const { resolve } = this.options;
        const alts = await srv.resolve({
            fn: (0, transport_1.getResolveFn)(),
            debug: this.options.debug,
            randomize: !this.options.noRandomize,
            resolve,
        });
        let lastErr = null;
        for (const a of alts) {
            try {
                lastErr = null;
                this.dispatchStatus({ type: "reconnecting" });
                await this.dial(a);
                // if here we connected
                return;
            }
            catch (err) {
                lastErr = err;
            }
        }
        // if we are here, we failed, and we have no additional
        // alternatives for this server
        throw lastErr;
    }
    dialLoop() {
        if (this.connectPromise === null) {
            this.connectPromise = this.dodialLoop();
            this.connectPromise
                .then(() => { })
                .catch(() => { })
                .finally(() => {
                this.connectPromise = null;
            });
        }
        return this.connectPromise;
    }
    async dodialLoop() {
        let lastError;
        while (true) {
            if (this._closed) {
                // if we are disconnected, and close is called, the client
                // still tries to reconnect - to match the reconnect policy
                // in the case of close, want to stop.
                this.servers.clear();
            }
            const wait = this.options.reconnectDelayHandler
                ? this.options.reconnectDelayHandler()
                : options_1.DEFAULT_RECONNECT_TIME_WAIT;
            let maxWait = wait;
            const srv = this.selectServer();
            if (!srv || this.abortReconnect) {
                if (lastError) {
                    throw lastError;
                }
                else if (this.lastError) {
                    throw this.lastError;
                }
                else {
                    throw new errors_1.errors.ConnectionError("connection refused");
                }
            }
            const now = Date.now();
            if (srv.lastConnect === 0 || srv.lastConnect + wait <= now) {
                srv.lastConnect = Date.now();
                try {
                    await this._doDial(srv);
                    break;
                }
                catch (err) {
                    lastError = err;
                    if (!this.connectedOnce) {
                        if (this.options.waitOnFirstConnect) {
                            continue;
                        }
                        this.servers.removeCurrentServer();
                    }
                    srv.reconnects++;
                    const mra = this.options.maxReconnectAttempts || 0;
                    if (mra !== -1 && srv.reconnects >= mra) {
                        this.servers.removeCurrentServer();
                    }
                }
            }
            else {
                maxWait = Math.min(maxWait, srv.lastConnect + wait - now);
                this.dialDelay = (0, util_1.delay)(maxWait);
                await this.dialDelay;
            }
        }
    }
    static async connect(options, publisher) {
        const h = new ProtocolHandler(options, publisher);
        await h.dialLoop();
        return h;
    }
    static toError(s) {
        let err = errors_1.errors.PermissionViolationError.parse(s);
        if (err) {
            return err;
        }
        err = errors_1.errors.UserAuthenticationExpiredError.parse(s);
        if (err) {
            return err;
        }
        err = errors_1.errors.AuthorizationError.parse(s);
        if (err) {
            return err;
        }
        return new errors_1.errors.ProtocolError(s);
    }
    processMsg(msg, data) {
        this.inMsgs++;
        this.inBytes += data.length;
        if (!this.subscriptions.sidCounter) {
            return;
        }
        const sub = this.subscriptions.get(msg.sid);
        if (!sub) {
            return;
        }
        sub.received += 1;
        if (sub.callback) {
            sub.callback(null, new msg_1.MsgImpl(msg, data, this));
        }
        if (sub.max !== undefined && sub.received >= sub.max) {
            sub.unsubscribe();
        }
    }
    processError(m) {
        let s = (0, encoders_1.decode)(m);
        if (s.startsWith("'") && s.endsWith("'")) {
            s = s.slice(1, s.length - 1);
        }
        const err = ProtocolHandler.toError(s);
        switch (err.constructor) {
            case errors_1.errors.PermissionViolationError: {
                const pe = err;
                const mux = this.subscriptions.getMux();
                const isMuxPermission = mux ? pe.subject === mux.subject : false;
                this.subscriptions.handleError(pe);
                this.muxSubscriptions.handleError(isMuxPermission, pe);
                if (isMuxPermission) {
                    // remove the permission - enable it to be recreated
                    this.subscriptions.setMux(null);
                }
            }
        }
        this.dispatchStatus({ type: "error", error: err });
        this.handleError(err);
    }
    handleError(err) {
        if (err instanceof errors_1.errors.UserAuthenticationExpiredError ||
            err instanceof errors_1.errors.AuthorizationError) {
            this.handleAuthError(err);
        }
        if (!(err instanceof errors_1.errors.PermissionViolationError)) {
            this.lastError = err;
        }
    }
    handleAuthError(err) {
        if ((this.lastError instanceof errors_1.errors.UserAuthenticationExpiredError ||
            this.lastError instanceof errors_1.errors.AuthorizationError) &&
            this.options.ignoreAuthErrorAbort === false) {
            this.abortReconnect = true;
        }
        if (this.connectError) {
            this.connectError(err);
        }
        else {
            this.disconnect();
        }
    }
    processPing() {
        this.transport.send(PONG_CMD);
    }
    processPong() {
        const cb = this.pongs.shift();
        if (cb) {
            cb.resolve();
        }
    }
    processInfo(m) {
        const info = JSON.parse((0, encoders_1.decode)(m));
        this.info = info;
        const updates = this.options && this.options.ignoreClusterUpdates
            ? undefined
            : this.servers.update(info, this.transport.isEncrypted());
        if (!this.infoReceived) {
            this.features.update((0, semver_1.parseSemVer)(info.version));
            this.infoReceived = true;
            if (this.transport.isEncrypted()) {
                this.servers.updateTLSName();
            }
            // send connect
            const { version, lang } = this.transport;
            try {
                const c = new Connect({ version, lang }, this.options, info.nonce);
                if (info.headers) {
                    c.headers = true;
                    c.no_responders = true;
                }
                const cs = JSON.stringify(c);
                this.transport.send((0, encoders_1.encode)(`CONNECT ${cs}${transport_1.CR_LF}`));
                this.transport.send(PING_CMD);
            }
            catch (err) {
                // if we are dying here, this is likely some an authenticator blowing up
                this.close(err).catch();
            }
        }
        if (updates) {
            const { added, deleted } = updates;
            this.dispatchStatus({ type: "update", added, deleted });
        }
        const ldm = info.ldm !== undefined ? info.ldm : false;
        if (ldm) {
            this.dispatchStatus({
                type: "ldm",
                server: this.servers.getCurrentServer().toString(),
            });
        }
    }
    push(e) {
        switch (e.kind) {
            case parser_1.Kind.MSG: {
                const { msg, data } = e;
                this.processMsg(msg, data);
                break;
            }
            case parser_1.Kind.OK:
                break;
            case parser_1.Kind.ERR:
                this.processError(e.data);
                break;
            case parser_1.Kind.PING:
                this.processPing();
                break;
            case parser_1.Kind.PONG:
                this.processPong();
                break;
            case parser_1.Kind.INFO:
                this.processInfo(e.data);
                break;
        }
    }
    sendCommand(cmd, ...payloads) {
        const len = this.outbound.length();
        let buf;
        if (typeof cmd === "string") {
            buf = (0, encoders_1.encode)(cmd);
        }
        else {
            buf = cmd;
        }
        this.outbound.fill(buf, ...payloads);
        if (len === 0) {
            queueMicrotask(() => {
                this.flushPending();
            });
        }
        else if (this.outbound.size() >= this.pendingLimit) {
            // flush inline
            this.flushPending();
        }
    }
    publish(subject, payload = encoders_1.Empty, options) {
        let data;
        if (payload instanceof Uint8Array) {
            data = payload;
        }
        else if (typeof payload === "string") {
            data = encoders_1.TE.encode(payload);
        }
        else {
            throw new TypeError("payload types can be strings or Uint8Array");
        }
        let len = data.length;
        options = options || {};
        options.reply = options.reply || "";
        let headers = encoders_1.Empty;
        let hlen = 0;
        if (options.headers) {
            if (this.info && !this.info.headers) {
                errors_1.InvalidArgumentError.format("headers", "are not available on this server");
            }
            const hdrs = options.headers;
            headers = hdrs.encode();
            hlen = headers.length;
            len = data.length + hlen;
        }
        if (this.info && len > this.info.max_payload) {
            throw errors_1.InvalidArgumentError.format("payload", "max_payload size exceeded");
        }
        this.outBytes += len;
        this.outMsgs++;
        let proto;
        if (options.headers) {
            if (options.reply) {
                proto = `HPUB ${subject} ${options.reply} ${hlen} ${len}\r\n`;
            }
            else {
                proto = `HPUB ${subject} ${hlen} ${len}\r\n`;
            }
            this.sendCommand(proto, headers, data, transport_1.CRLF);
        }
        else {
            if (options.reply) {
                proto = `PUB ${subject} ${options.reply} ${len}\r\n`;
            }
            else {
                proto = `PUB ${subject} ${len}\r\n`;
            }
            this.sendCommand(proto, data, transport_1.CRLF);
        }
    }
    request(r) {
        this.initMux();
        this.muxSubscriptions.add(r);
        return r;
    }
    subscribe(s) {
        this.subscriptions.add(s);
        this._subunsub(s);
        return s;
    }
    _sub(s) {
        if (s.queue) {
            this.sendCommand(`SUB ${s.subject} ${s.queue} ${s.sid}\r\n`);
        }
        else {
            this.sendCommand(`SUB ${s.subject} ${s.sid}\r\n`);
        }
    }
    _subunsub(s) {
        this._sub(s);
        if (s.max) {
            this.unsubscribe(s, s.max);
        }
        return s;
    }
    unsubscribe(s, max) {
        this.unsub(s, max);
        if (s.max === undefined || s.received >= s.max) {
            this.subscriptions.cancel(s);
        }
    }
    unsub(s, max) {
        if (!s || this.isClosed()) {
            return;
        }
        if (max) {
            this.sendCommand(`UNSUB ${s.sid} ${max}\r\n`);
        }
        else {
            this.sendCommand(`UNSUB ${s.sid}\r\n`);
        }
        s.max = max;
    }
    resub(s, subject) {
        if (!s || this.isClosed()) {
            return;
        }
        this.unsub(s);
        s.subject = subject;
        this.subscriptions.resub(s);
        // we don't auto-unsub here because we don't
        // really know "processed"
        this._sub(s);
    }
    flush(p) {
        if (!p) {
            p = (0, util_1.deferred)();
        }
        this.pongs.push(p);
        this.outbound.fill(PING_CMD);
        this.flushPending();
        return p;
    }
    sendSubscriptions() {
        const cmds = [];
        this.subscriptions.all().forEach((s) => {
            const sub = s;
            if (sub.queue) {
                cmds.push(`SUB ${sub.subject} ${sub.queue} ${sub.sid}${transport_1.CR_LF}`);
            }
            else {
                cmds.push(`SUB ${sub.subject} ${sub.sid}${transport_1.CR_LF}`);
            }
        });
        if (cmds.length) {
            this.transport.send((0, encoders_1.encode)(cmds.join("")));
        }
    }
    async close(err) {
        if (this._closed) {
            return;
        }
        this.whyClosed = new Error("close trace").stack || "";
        this.heartbeats.cancel();
        if (this.connectError) {
            this.connectError(err);
            this.connectError = undefined;
        }
        this.muxSubscriptions.close();
        this.subscriptions.close();
        const proms = [];
        for (let i = 0; i < this.listeners.length; i++) {
            const qi = this.listeners[i];
            if (qi) {
                qi.stop();
                proms.push(qi.iterClosed);
            }
        }
        if (proms.length) {
            await Promise.all(proms);
        }
        this._closed = true;
        await this.transport.close(err);
        this.raceTimer?.cancel();
        this.dialDelay?.cancel();
        this.closed.resolve(err);
    }
    isClosed() {
        return this._closed;
    }
    async drain() {
        const subs = this.subscriptions.all();
        const promises = [];
        subs.forEach((sub) => {
            promises.push(sub.drain());
        });
        try {
            await Promise.allSettled(promises);
        }
        catch {
            // nothing we can do here
        }
        finally {
            this.noMorePublishing = true;
            await this.flush();
        }
        return this.close();
    }
    flushPending() {
        if (!this.infoReceived || !this.connected) {
            return;
        }
        if (this.outbound.size()) {
            const d = this.outbound.drain();
            this.transport.send(d);
        }
    }
    initMux() {
        const mux = this.subscriptions.getMux();
        if (!mux) {
            const inbox = this.muxSubscriptions.init(this.options.inboxPrefix);
            // dot is already part of mux
            const sub = new SubscriptionImpl(this, `${inbox}*`);
            sub.callback = this.muxSubscriptions.dispatcher();
            this.subscriptions.setMux(sub);
            this.subscribe(sub);
        }
    }
    selectServer() {
        const server = this.servers.selectServer();
        if (server === undefined) {
            return undefined;
        }
        // Place in client context.
        this.server = server;
        return this.server;
    }
    getServer() {
        return this.server;
    }
}
exports.ProtocolHandler = ProtocolHandler;
//# sourceMappingURL=protocol.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/queued_iterator.js":
/*!****************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/queued_iterator.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QueuedIteratorImpl = void 0;
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
class QueuedIteratorImpl {
    inflight;
    processed;
    // this is updated by the protocol
    received;
    noIterator;
    iterClosed;
    done;
    signal;
    yields;
    filtered;
    pendingFiltered;
    ctx;
    _data; //data is for use by extenders in any way they like
    err;
    time;
    profile;
    yielding;
    didBreak;
    constructor() {
        this.inflight = 0;
        this.filtered = 0;
        this.pendingFiltered = 0;
        this.processed = 0;
        this.received = 0;
        this.noIterator = false;
        this.done = false;
        this.signal = (0, util_1.deferred)();
        this.yields = [];
        this.iterClosed = (0, util_1.deferred)();
        this.time = 0;
        this.yielding = false;
        this.didBreak = false;
        this.profile = false;
    }
    [Symbol.asyncIterator]() {
        return this.iterate();
    }
    push(v) {
        if (this.done) {
            return;
        }
        // if they `break` from a `for await`, any signaling that is pushed via
        // a function is not handled this can prevent closed promises from
        // resolving downstream.
        if (this.didBreak) {
            if (typeof v === "function") {
                const cb = v;
                try {
                    cb();
                }
                catch (_) {
                    // ignored
                }
            }
            return;
        }
        if (typeof v === "function") {
            this.pendingFiltered++;
        }
        this.yields.push(v);
        this.signal.resolve();
    }
    async *iterate() {
        if (this.noIterator) {
            throw new errors_1.InvalidOperationError("iterator cannot be used when a callback is registered");
        }
        if (this.yielding) {
            throw new errors_1.InvalidOperationError("iterator is already yielding");
        }
        this.yielding = true;
        try {
            while (true) {
                if (this.yields.length === 0) {
                    await this.signal;
                }
                if (this.err) {
                    throw this.err;
                }
                const yields = this.yields;
                this.inflight = yields.length;
                this.yields = [];
                for (let i = 0; i < yields.length; i++) {
                    if (typeof yields[i] === "function") {
                        this.pendingFiltered--;
                        const fn = yields[i];
                        try {
                            fn();
                        }
                        catch (err) {
                            // failed on the invocation - fail the iterator
                            // so they know to fix the callback
                            throw err;
                        }
                        // fn could have also set an error
                        if (this.err) {
                            throw this.err;
                        }
                        continue;
                    }
                    this.processed++;
                    this.inflight--;
                    const start = this.profile ? Date.now() : 0;
                    yield yields[i];
                    this.time = this.profile ? Date.now() - start : 0;
                }
                // yielding could have paused and microtask
                // could have added messages. Prevent allocations
                // if possible
                if (this.done) {
                    break;
                }
                else if (this.yields.length === 0) {
                    yields.length = 0;
                    this.yields = yields;
                    this.signal = (0, util_1.deferred)();
                }
            }
        }
        finally {
            // the iterator used break/return
            this.didBreak = true;
            this.stop();
        }
    }
    stop(err) {
        if (this.done) {
            return;
        }
        this.err = err;
        this.done = true;
        this.signal.resolve();
        this.iterClosed.resolve(err);
    }
    getProcessed() {
        return this.noIterator ? this.received : this.processed;
    }
    getPending() {
        return this.yields.length + this.inflight - this.pendingFiltered;
    }
    getReceived() {
        return this.received - this.filtered;
    }
}
exports.QueuedIteratorImpl = QueuedIteratorImpl;
//# sourceMappingURL=queued_iterator.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/request.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/request.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RequestOne = exports.RequestMany = exports.BaseRequest = void 0;
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const nuid_1 = __webpack_require__(/*! ./nuid */ "./node_modules/@nats-io/nats-core/lib/nuid.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
class BaseRequest {
    token;
    received;
    ctx;
    requestSubject;
    mux;
    constructor(mux, requestSubject, asyncTraces = true) {
        this.mux = mux;
        this.requestSubject = requestSubject;
        this.received = 0;
        this.token = nuid_1.nuid.next();
        if (asyncTraces) {
            this.ctx = new errors_1.RequestError();
        }
    }
}
exports.BaseRequest = BaseRequest;
/**
 * Request expects multiple message response
 * the request ends when the timer expires,
 * an error arrives or an expected count of messages
 * arrives, end is signaled by a null message
 */
class RequestMany extends BaseRequest {
    callback;
    done;
    timer;
    max;
    opts;
    constructor(mux, requestSubject, opts = { maxWait: 1000 }) {
        super(mux, requestSubject);
        this.opts = opts;
        if (typeof this.opts.callback !== "function") {
            throw new TypeError("callback must be a function");
        }
        this.callback = this.opts.callback;
        this.max = typeof opts.maxMessages === "number" && opts.maxMessages > 0
            ? opts.maxMessages
            : -1;
        this.done = (0, util_1.deferred)();
        this.done.then(() => {
            this.callback(null, null);
        });
        // @ts-ignore: node is not a number
        this.timer = setTimeout(() => {
            this.cancel();
        }, opts.maxWait);
    }
    cancel(err) {
        if (err) {
            this.callback(err, null);
        }
        clearTimeout(this.timer);
        this.mux.cancel(this);
        this.done.resolve();
    }
    resolver(err, msg) {
        if (err) {
            if (this.ctx) {
                err.stack += `\n\n${this.ctx.stack}`;
            }
            this.cancel(err);
        }
        else {
            this.callback(null, msg);
            if (this.opts.strategy === "count") {
                this.max--;
                if (this.max === 0) {
                    this.cancel();
                }
            }
            if (this.opts.strategy === "stall") {
                clearTimeout(this.timer);
                // @ts-ignore: node is not a number
                this.timer = setTimeout(() => {
                    this.cancel();
                }, this.opts.stall || 300);
            }
            if (this.opts.strategy === "sentinel") {
                if (msg && msg.data.length === 0) {
                    this.cancel();
                }
            }
        }
    }
}
exports.RequestMany = RequestMany;
class RequestOne extends BaseRequest {
    deferred;
    timer;
    constructor(mux, requestSubject, opts = { timeout: 1000 }, asyncTraces = true) {
        super(mux, requestSubject, asyncTraces);
        // extend(this, opts);
        this.deferred = (0, util_1.deferred)();
        this.timer = (0, util_1.timeout)(opts.timeout, asyncTraces);
    }
    resolver(err, msg) {
        if (this.timer) {
            this.timer.cancel();
        }
        if (err) {
            // we have proper stack on timeout
            if (!(err instanceof errors_1.TimeoutError)) {
                if (this.ctx) {
                    this.ctx.message = err.message;
                    this.ctx.cause = err;
                    err = this.ctx;
                }
                else {
                    err = new errors_1.errors.RequestError(err.message, { cause: err });
                }
            }
            this.deferred.reject(err);
        }
        else {
            this.deferred.resolve(msg);
        }
        this.cancel();
    }
    cancel(err) {
        if (this.timer) {
            this.timer.cancel();
        }
        this.mux.cancel(this);
        this.deferred.reject(err ? err : new errors_1.RequestError("cancelled"));
    }
}
exports.RequestOne = RequestOne;
//# sourceMappingURL=request.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/semver.js":
/*!*******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/semver.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2022-2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Features = exports.Feature = void 0;
exports.parseSemVer = parseSemVer;
exports.compare = compare;
function parseSemVer(s = "") {
    const m = s.match(/(\d+).(\d+).(\d+)/);
    if (m) {
        return {
            major: parseInt(m[1]),
            minor: parseInt(m[2]),
            micro: parseInt(m[3]),
        };
    }
    throw new Error(`'${s}' is not a semver value`);
}
function compare(a, b) {
    if (a.major < b.major)
        return -1;
    if (a.major > b.major)
        return 1;
    if (a.minor < b.minor)
        return -1;
    if (a.minor > b.minor)
        return 1;
    if (a.micro < b.micro)
        return -1;
    if (a.micro > b.micro)
        return 1;
    return 0;
}
exports.Feature = {
    JS_KV: "js_kv",
    JS_OBJECTSTORE: "js_objectstore",
    JS_PULL_MAX_BYTES: "js_pull_max_bytes",
    JS_NEW_CONSUMER_CREATE_API: "js_new_consumer_create",
    JS_ALLOW_DIRECT: "js_allow_direct",
    JS_MULTIPLE_CONSUMER_FILTER: "js_multiple_consumer_filter",
    JS_SIMPLIFICATION: "js_simplification",
    JS_STREAM_CONSUMER_METADATA: "js_stream_consumer_metadata",
    JS_CONSUMER_FILTER_SUBJECTS: "js_consumer_filter_subjects",
    JS_STREAM_FIRST_SEQ: "js_stream_first_seq",
    JS_STREAM_SUBJECT_TRANSFORM: "js_stream_subject_transform",
    JS_STREAM_SOURCE_SUBJECT_TRANSFORM: "js_stream_source_subject_transform",
    JS_STREAM_COMPRESSION: "js_stream_compression",
    JS_DEFAULT_CONSUMER_LIMITS: "js_default_consumer_limits",
    JS_BATCH_DIRECT_GET: "js_batch_direct_get",
    JS_PRIORITY_GROUPS: "js_priority_groups",
};
class Features {
    server;
    features;
    disabled;
    constructor(v) {
        this.features = new Map();
        this.disabled = [];
        this.update(v);
    }
    /**
     * Removes all disabled entries
     */
    resetDisabled() {
        this.disabled.length = 0;
        this.update(this.server);
    }
    /**
     * Disables a particular feature.
     * @param f
     */
    disable(f) {
        this.disabled.push(f);
        this.update(this.server);
    }
    isDisabled(f) {
        return this.disabled.indexOf(f) !== -1;
    }
    update(v) {
        if (typeof v === "string") {
            v = parseSemVer(v);
        }
        this.server = v;
        this.set(exports.Feature.JS_KV, "2.6.2");
        this.set(exports.Feature.JS_OBJECTSTORE, "2.6.3");
        this.set(exports.Feature.JS_PULL_MAX_BYTES, "2.8.3");
        this.set(exports.Feature.JS_NEW_CONSUMER_CREATE_API, "2.9.0");
        this.set(exports.Feature.JS_ALLOW_DIRECT, "2.9.0");
        this.set(exports.Feature.JS_MULTIPLE_CONSUMER_FILTER, "2.10.0");
        this.set(exports.Feature.JS_SIMPLIFICATION, "2.9.4");
        this.set(exports.Feature.JS_STREAM_CONSUMER_METADATA, "2.10.0");
        this.set(exports.Feature.JS_CONSUMER_FILTER_SUBJECTS, "2.10.0");
        this.set(exports.Feature.JS_STREAM_FIRST_SEQ, "2.10.0");
        this.set(exports.Feature.JS_STREAM_SUBJECT_TRANSFORM, "2.10.0");
        this.set(exports.Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM, "2.10.0");
        this.set(exports.Feature.JS_STREAM_COMPRESSION, "2.10.0");
        this.set(exports.Feature.JS_DEFAULT_CONSUMER_LIMITS, "2.10.0");
        this.set(exports.Feature.JS_BATCH_DIRECT_GET, "2.11.0");
        this.set(exports.Feature.JS_PRIORITY_GROUPS, "2.11.0");
        this.disabled.forEach((f) => {
            this.features.delete(f);
        });
    }
    /**
     * Register a feature that requires a particular server version.
     * @param f
     * @param requires
     */
    set(f, requires) {
        this.features.set(f, {
            min: requires,
            ok: compare(this.server, parseSemVer(requires)) >= 0,
        });
    }
    /**
     * Returns whether the feature is available and the min server
     * version that supports it.
     * @param f
     */
    get(f) {
        return this.features.get(f) || { min: "unknown", ok: false };
    }
    /**
     * Returns true if the feature is supported
     * @param f
     */
    supports(f) {
        return this.get(f)?.ok || false;
    }
    /**
     * Returns true if the server is at least the specified version
     * @param v
     */
    require(v) {
        if (typeof v === "string") {
            v = parseSemVer(v);
        }
        return compare(this.server, v) >= 0;
    }
}
exports.Features = Features;
//# sourceMappingURL=semver.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/servers.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/servers.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Servers = exports.ServerImpl = void 0;
exports.isIPV4OrHostname = isIPV4OrHostname;
exports.hostPort = hostPort;
/*
 * Copyright 2018-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const transport_1 = __webpack_require__(/*! ./transport */ "./node_modules/@nats-io/nats-core/lib/transport.js");
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const ipparser_1 = __webpack_require__(/*! ./ipparser */ "./node_modules/@nats-io/nats-core/lib/ipparser.js");
const core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
function isIPV4OrHostname(hp) {
    // in the wild seeing IPv4s as IPv6s
    // ::ffff:35.234.43.228 which incorrectly get mapped to IPv4 unless
    // we add this test first
    if (hp.indexOf("[") !== -1 || hp.indexOf("::") !== -1) {
        return false;
    }
    if (hp.indexOf(".") !== -1) {
        return true;
    }
    // if we have a plain hostname or host:port
    if (hp.split(":").length <= 2) {
        return true;
    }
    return false;
}
function isIPV6(hp) {
    return !isIPV4OrHostname(hp);
}
function filterIpv6MappedToIpv4(hp) {
    const prefix = "::FFFF:";
    const idx = hp.toUpperCase().indexOf(prefix);
    if (idx !== -1 && hp.indexOf(".") !== -1) {
        // we have something like: ::FFFF:127.0.0.1 or [::FFFF:127.0.0.1]:4222
        let ip = hp.substring(idx + prefix.length);
        ip = ip.replace("[", "");
        return ip.replace("]", "");
    }
    return hp;
}
function hostPort(u) {
    u = u.trim();
    // remove any protocol that may have been provided
    if (u.match(/^(.*:\/\/)(.*)/m)) {
        u = u.replace(/^(.*:\/\/)(.*)/gm, "$2");
    }
    // in web environments, URL may not be a living standard
    // that means that protocols other than HTTP/S are not
    // parsable correctly.
    // the third complication is that we may have been given
    // an IPv6 or worse IPv6 mapping an Ipv4
    u = filterIpv6MappedToIpv4(u);
    // we only wrap cases where they gave us a plain ipv6
    // and we are not already bracketed
    if (isIPV6(u) && u.indexOf("[") === -1) {
        u = `[${u}]`;
    }
    // if we have ipv6, we expect port after ']:' otherwise after ':'
    const op = isIPV6(u) ? u.match(/(]:)(\d+)/) : u.match(/(:)(\d+)/);
    const port = op && op.length === 3 && op[1] && op[2]
        ? parseInt(op[2])
        : core_1.DEFAULT_PORT;
    // the next complication is that new URL() may
    // eat ports which match the protocol - so for example
    // port 80 may be eliminated - so we flip the protocol
    // so that it always yields a value
    const protocol = port === 80 ? "https" : "http";
    const url = new URL(`${protocol}://${u}`);
    url.port = `${port}`;
    let hostname = url.hostname;
    // if we are bracketed, we need to rip it out
    if (hostname.charAt(0) === "[") {
        hostname = hostname.substring(1, hostname.length - 1);
    }
    const listen = url.host;
    return { listen, hostname, port };
}
/**
 * @hidden
 */
class ServerImpl {
    src;
    listen;
    hostname;
    port;
    didConnect;
    reconnects;
    lastConnect;
    gossiped;
    tlsName;
    resolves;
    constructor(u, gossiped = false) {
        this.src = u;
        this.tlsName = "";
        const v = hostPort(u);
        this.listen = v.listen;
        this.hostname = v.hostname;
        this.port = v.port;
        this.didConnect = false;
        this.reconnects = 0;
        this.lastConnect = 0;
        this.gossiped = gossiped;
    }
    toString() {
        return this.listen;
    }
    async resolve(opts) {
        if (!opts.fn || opts.resolve === false) {
            // we cannot resolve - transport doesn't support it
            // or user opted out
            // don't add - to resolves or we get a circ reference
            return [this];
        }
        const buf = [];
        if ((0, ipparser_1.isIP)(this.hostname)) {
            // don't add - to resolves or we get a circ reference
            return [this];
        }
        else {
            // resolve the hostname to ips
            const ips = await opts.fn(this.hostname);
            if (opts.debug) {
                console.log(`resolve ${this.hostname} = ${ips.join(",")}`);
            }
            for (const ip of ips) {
                // letting URL handle the details of representing IPV6 ip with a port, etc
                // careful to make sure the protocol doesn't line with standard ports or they
                // get swallowed
                const proto = this.port === 80 ? "https" : "http";
                // ipv6 won't be bracketed here, because it came from resolve
                const url = new URL(`${proto}://${isIPV6(ip) ? "[" + ip + "]" : ip}`);
                url.port = `${this.port}`;
                const ss = new ServerImpl(url.host, false);
                ss.tlsName = this.hostname;
                buf.push(ss);
            }
        }
        if (opts.randomize) {
            (0, util_1.shuffle)(buf);
        }
        this.resolves = buf;
        return buf;
    }
}
exports.ServerImpl = ServerImpl;
/**
 * @hidden
 */
class Servers {
    firstSelect;
    servers;
    currentServer;
    tlsName;
    randomize;
    constructor(listens = [], opts = {}) {
        this.firstSelect = true;
        this.servers = [];
        this.tlsName = "";
        this.randomize = opts.randomize || false;
        const urlParseFn = (0, transport_1.getUrlParseFn)();
        if (listens) {
            listens.forEach((hp) => {
                hp = urlParseFn ? urlParseFn(hp) : hp;
                this.servers.push(new ServerImpl(hp));
            });
            if (this.randomize) {
                this.servers = (0, util_1.shuffle)(this.servers);
            }
        }
        if (this.servers.length === 0) {
            this.addServer(`${core_1.DEFAULT_HOST}:${(0, transport_1.defaultPort)()}`, false);
        }
        this.currentServer = this.servers[0];
    }
    clear() {
        this.servers.length = 0;
    }
    updateTLSName() {
        const cs = this.getCurrentServer();
        if (!(0, ipparser_1.isIP)(cs.hostname)) {
            this.tlsName = cs.hostname;
            this.servers.forEach((s) => {
                if (s.gossiped) {
                    s.tlsName = this.tlsName;
                }
            });
        }
    }
    getCurrentServer() {
        return this.currentServer;
    }
    addServer(u, implicit = false) {
        const urlParseFn = (0, transport_1.getUrlParseFn)();
        u = urlParseFn ? urlParseFn(u) : u;
        const s = new ServerImpl(u, implicit);
        if ((0, ipparser_1.isIP)(s.hostname)) {
            s.tlsName = this.tlsName;
        }
        this.servers.push(s);
    }
    selectServer() {
        // allow using select without breaking the order of the servers
        if (this.firstSelect) {
            this.firstSelect = false;
            return this.currentServer;
        }
        const t = this.servers.shift();
        if (t) {
            this.servers.push(t);
            this.currentServer = t;
        }
        return t;
    }
    removeCurrentServer() {
        this.removeServer(this.currentServer);
    }
    removeServer(server) {
        if (server) {
            const index = this.servers.indexOf(server);
            this.servers.splice(index, 1);
        }
    }
    length() {
        return this.servers.length;
    }
    next() {
        return this.servers.length ? this.servers[0] : undefined;
    }
    getServers() {
        return this.servers;
    }
    update(info, encrypted) {
        const added = [];
        let deleted = [];
        const urlParseFn = (0, transport_1.getUrlParseFn)();
        const discovered = new Map();
        if (info.connect_urls && info.connect_urls.length > 0) {
            info.connect_urls.forEach((hp) => {
                hp = urlParseFn ? urlParseFn(hp, encrypted) : hp;
                const s = new ServerImpl(hp, true);
                discovered.set(hp, s);
            });
        }
        // remove gossiped servers that are no longer reported
        const toDelete = [];
        this.servers.forEach((s, index) => {
            const u = s.listen;
            if (s.gossiped && this.currentServer.listen !== u &&
                discovered.get(u) === undefined) {
                // server was removed
                toDelete.push(index);
            }
            // remove this entry from reported
            discovered.delete(u);
        });
        // perform the deletion
        toDelete.reverse();
        toDelete.forEach((index) => {
            const removed = this.servers.splice(index, 1);
            deleted = deleted.concat(removed[0].listen);
        });
        // remaining servers are new
        discovered.forEach((v, k) => {
            this.servers.push(v);
            added.push(k);
        });
        return { added, deleted };
    }
}
exports.Servers = Servers;
//# sourceMappingURL=servers.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/transport.js":
/*!**********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/transport.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LF = exports.CR = exports.CRLF = exports.CR_LF_LEN = exports.CR_LF = void 0;
exports.setTransportFactory = setTransportFactory;
exports.defaultPort = defaultPort;
exports.getUrlParseFn = getUrlParseFn;
exports.newTransport = newTransport;
exports.getResolveFn = getResolveFn;
exports.protoLen = protoLen;
exports.extractProtocolMessage = extractProtocolMessage;
/*
 * Copyright 2020-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
const core_1 = __webpack_require__(/*! ./core */ "./node_modules/@nats-io/nats-core/lib/core.js");
const databuffer_1 = __webpack_require__(/*! ./databuffer */ "./node_modules/@nats-io/nats-core/lib/databuffer.js");
let transportConfig;
function setTransportFactory(config) {
    transportConfig = config;
}
function defaultPort() {
    return transportConfig !== undefined &&
        transportConfig.defaultPort !== undefined
        ? transportConfig.defaultPort
        : core_1.DEFAULT_PORT;
}
function getUrlParseFn() {
    return transportConfig !== undefined && transportConfig.urlParseFn
        ? transportConfig.urlParseFn
        : undefined;
}
function newTransport() {
    if (!transportConfig || typeof transportConfig.factory !== "function") {
        throw new Error("transport fn is not set");
    }
    return transportConfig.factory();
}
function getResolveFn() {
    return transportConfig !== undefined && transportConfig.dnsResolveFn
        ? transportConfig.dnsResolveFn
        : undefined;
}
exports.CR_LF = "\r\n";
exports.CR_LF_LEN = exports.CR_LF.length;
exports.CRLF = databuffer_1.DataBuffer.fromAscii(exports.CR_LF);
exports.CR = new Uint8Array(exports.CRLF)[0]; // 13
exports.LF = new Uint8Array(exports.CRLF)[1]; // 10
function protoLen(ba) {
    for (let i = 0; i < ba.length; i++) {
        const n = i + 1;
        if (ba.byteLength > n && ba[i] === exports.CR && ba[n] === exports.LF) {
            return n + 1;
        }
    }
    return 0;
}
function extractProtocolMessage(a) {
    // protocol messages are ascii, so Uint8Array
    const len = protoLen(a);
    if (len > 0) {
        const ba = new Uint8Array(a);
        const out = ba.slice(0, len);
        return encoders_1.TD.decode(out);
    }
    return "";
}
//# sourceMappingURL=transport.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/types.js":
/*!******************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/types.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Empty = void 0;
var encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
Object.defineProperty(exports, "Empty", ({ enumerable: true, get: function () { return encoders_1.Empty; } }));
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/util.js":
/*!*****************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/util.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SimpleMutex = exports.Perf = void 0;
exports.extend = extend;
exports.render = render;
exports.timeout = timeout;
exports.delay = delay;
exports.deadline = deadline;
exports.deferred = deferred;
exports.debugDeferred = debugDeferred;
exports.shuffle = shuffle;
exports.collect = collect;
exports.jitter = jitter;
exports.backoff = backoff;
exports.nanos = nanos;
exports.millis = millis;
/*
 * Copyright 2018-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// deno-lint-ignore-file no-explicit-any
const encoders_1 = __webpack_require__(/*! ./encoders */ "./node_modules/@nats-io/nats-core/lib/encoders.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
function extend(a, ...b) {
    for (let i = 0; i < b.length; i++) {
        const o = b[i];
        Object.keys(o).forEach(function (k) {
            a[k] = o[k];
        });
    }
    return a;
}
function render(frame) {
    const cr = "␍";
    const lf = "␊";
    return encoders_1.TD.decode(frame)
        .replace(/\n/g, lf)
        .replace(/\r/g, cr);
}
function timeout(ms, asyncTraces = true) {
    // by generating the stack here to help identify what timed out
    const err = asyncTraces ? new errors_1.TimeoutError() : null;
    let methods;
    let timer;
    const p = new Promise((_resolve, reject) => {
        const cancel = () => {
            if (timer) {
                clearTimeout(timer);
            }
        };
        methods = { cancel };
        // @ts-ignore: node is not a number
        timer = setTimeout(() => {
            if (err === null) {
                reject(new errors_1.TimeoutError());
            }
            else {
                reject(err);
            }
        }, ms);
    });
    // noinspection JSUnusedAssignment
    return Object.assign(p, methods);
}
function delay(ms = 0) {
    let methods;
    const p = new Promise((resolve) => {
        const timer = setTimeout(() => {
            resolve();
        }, ms);
        const cancel = () => {
            if (timer) {
                clearTimeout(timer);
                resolve();
            }
        };
        methods = { cancel };
    });
    return Object.assign(p, methods);
}
async function deadline(p, millis = 1000) {
    const d = deferred();
    const timer = setTimeout(() => {
        d.reject(new errors_1.TimeoutError());
    }, millis);
    try {
        return await Promise.race([p, d]);
    }
    finally {
        clearTimeout(timer);
    }
}
/**
 * Returns a Promise that has a resolve/reject methods that can
 * be used to resolve and defer the Deferred.
 */
function deferred() {
    let methods = {};
    const p = new Promise((resolve, reject) => {
        methods = { resolve, reject };
    });
    return Object.assign(p, methods);
}
function debugDeferred() {
    let methods = {};
    const p = new Promise((resolve, reject) => {
        methods = {
            resolve: (v) => {
                console.trace("resolve", v);
                resolve(v);
            },
            reject: (err) => {
                console.trace("reject");
                reject(err);
            },
        };
    });
    return Object.assign(p, methods);
}
function shuffle(a) {
    for (let i = a.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [a[i], a[j]] = [a[j], a[i]];
    }
    return a;
}
async function collect(iter) {
    const buf = [];
    for await (const v of iter) {
        buf.push(v);
    }
    return buf;
}
class Perf {
    timers;
    measures;
    constructor() {
        this.timers = new Map();
        this.measures = new Map();
    }
    mark(key) {
        this.timers.set(key, performance.now());
    }
    measure(key, startKey, endKey) {
        const s = this.timers.get(startKey);
        if (s === undefined) {
            throw new Error(`${startKey} is not defined`);
        }
        const e = this.timers.get(endKey);
        if (e === undefined) {
            throw new Error(`${endKey} is not defined`);
        }
        this.measures.set(key, e - s);
    }
    getEntries() {
        const values = [];
        this.measures.forEach((v, k) => {
            values.push({ name: k, duration: v });
        });
        return values;
    }
}
exports.Perf = Perf;
class SimpleMutex {
    max;
    current;
    waiting;
    /**
     * @param max number of concurrent operations
     */
    constructor(max = 1) {
        this.max = max;
        this.current = 0;
        this.waiting = [];
    }
    /**
     * Returns a promise that resolves when the mutex is acquired
     */
    lock() {
        // increment the count
        this.current++;
        // if we have runners, resolve it
        if (this.current <= this.max) {
            return Promise.resolve();
        }
        // otherwise defer it
        const d = deferred();
        this.waiting.push(d);
        return d;
    }
    /**
     * Release an acquired mutex - must be called
     */
    unlock() {
        // decrement the count
        this.current--;
        // if we have deferred, resolve one
        const d = this.waiting.pop();
        d?.resolve();
    }
}
exports.SimpleMutex = SimpleMutex;
/**
 * Returns a new number between  .5*n and 1.5*n.
 * If the n is 0, returns 0.
 * @param n
 */
function jitter(n) {
    if (n === 0) {
        return 0;
    }
    return Math.floor(n / 2 + Math.random() * n);
}
/**
 * Returns a Backoff with the specified interval policy set.
 * @param policy
 */
function backoff(policy = [0, 250, 250, 500, 500, 3000, 5000]) {
    if (!Array.isArray(policy)) {
        policy = [0, 250, 250, 500, 500, 3000, 5000];
    }
    const max = policy.length - 1;
    return {
        backoff(attempt) {
            return jitter(attempt > max ? policy[max] : policy[attempt]);
        },
    };
}
/**
 * Converts the specified millis into Nanos
 * @param millis
 */
function nanos(millis) {
    return millis * 1000000;
}
/**
 * Convert the specified Nanos into millis
 * @param ns
 */
function millis(ns) {
    return Math.floor(ns / 1000000);
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/version.js":
/*!********************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/version.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = void 0;
// This file is generated - do not edit
exports.version = "3.0.0";
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nats-core/lib/ws_transport.js":
/*!*************************************************************!*\
  !*** ./node_modules/@nats-io/nats-core/lib/ws_transport.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

/*
 * Copyright 2020-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WsTransport = void 0;
exports.wsUrlParseFn = wsUrlParseFn;
exports.wsconnect = wsconnect;
const util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nats-core/lib/util.js");
const transport_1 = __webpack_require__(/*! ./transport */ "./node_modules/@nats-io/nats-core/lib/transport.js");
const options_1 = __webpack_require__(/*! ./options */ "./node_modules/@nats-io/nats-core/lib/options.js");
const databuffer_1 = __webpack_require__(/*! ./databuffer */ "./node_modules/@nats-io/nats-core/lib/databuffer.js");
const protocol_1 = __webpack_require__(/*! ./protocol */ "./node_modules/@nats-io/nats-core/lib/protocol.js");
const nats_1 = __webpack_require__(/*! ./nats */ "./node_modules/@nats-io/nats-core/lib/nats.js");
const version_1 = __webpack_require__(/*! ./version */ "./node_modules/@nats-io/nats-core/lib/version.js");
const errors_1 = __webpack_require__(/*! ./errors */ "./node_modules/@nats-io/nats-core/lib/errors.js");
const VERSION = version_1.version;
const LANG = "nats.ws";
class WsTransport {
    version;
    lang;
    closeError;
    connected;
    done;
    // @ts-ignore: expecting global WebSocket
    socket;
    options;
    socketClosed;
    encrypted;
    peeked;
    yields;
    signal;
    closedNotification;
    constructor() {
        this.version = VERSION;
        this.lang = LANG;
        this.connected = false;
        this.done = false;
        this.socketClosed = false;
        this.encrypted = false;
        this.peeked = false;
        this.yields = [];
        this.signal = (0, util_1.deferred)();
        this.closedNotification = (0, util_1.deferred)();
    }
    async connect(server, options) {
        const connected = false;
        const ok = (0, util_1.deferred)();
        this.options = options;
        const u = server.src;
        if (options.wsFactory) {
            const { socket, encrypted } = await options.wsFactory(server.src, options);
            this.socket = socket;
            this.encrypted = encrypted;
        }
        else {
            this.encrypted = u.indexOf("wss://") === 0;
            this.socket = new WebSocket(u);
        }
        this.socket.binaryType = "arraybuffer";
        this.socket.onopen = () => {
            if (this.done) {
                this._closed(new Error("aborted"));
            }
            // we don't do anything here...
        };
        this.socket.onmessage = (me) => {
            if (this.done) {
                return;
            }
            this.yields.push(new Uint8Array(me.data));
            if (this.peeked) {
                this.signal.resolve();
                return;
            }
            const t = databuffer_1.DataBuffer.concat(...this.yields);
            const pm = (0, transport_1.extractProtocolMessage)(t);
            if (pm !== "") {
                const m = protocol_1.INFO.exec(pm);
                if (!m) {
                    if (options.debug) {
                        console.error("!!!", (0, util_1.render)(t));
                    }
                    ok.reject(new Error("unexpected response from server"));
                    return;
                }
                try {
                    const info = JSON.parse(m[1]);
                    (0, options_1.checkOptions)(info, this.options);
                    this.peeked = true;
                    this.connected = true;
                    this.signal.resolve();
                    ok.resolve();
                }
                catch (err) {
                    ok.reject(err);
                    return;
                }
            }
        };
        // @ts-ignore: CloseEvent is provided in browsers
        this.socket.onclose = (evt) => {
            let reason;
            if (!evt.wasClean && evt.reason !== "") {
                reason = new Error(evt.reason);
            }
            this._closed(reason);
            this._cleanup();
        };
        // @ts-ignore: signature can be any
        this.socket.onerror = (e) => {
            if (this.done) {
                return;
            }
            const evt = e;
            const err = new errors_1.errors.ConnectionError(evt.message);
            if (!connected) {
                ok.reject(err);
            }
            else {
                this._closed(err);
            }
            this._cleanup();
        };
        return ok;
    }
    _cleanup() {
        if (this.socketClosed === false) {
            // node seems to not emit closed if there's an error
            // all other runtimes do.
            this.socketClosed = true;
            this.socket.onopen = null;
            this.socket.onmessage = null;
            this.socket.onerror = null;
            this.socket.onclose = null;
            this.closedNotification.resolve(this.closeError);
        }
    }
    disconnect() {
        this._closed(undefined, true);
    }
    async _closed(err, _internal = true) {
        if (this.done) {
            try {
                this.socket.close();
            }
            catch (_) {
                // nothing
            }
            return;
        }
        this.closeError = err;
        if (!err) {
            while (!this.socketClosed && this.socket.bufferedAmount > 0) {
                await (0, util_1.delay)(100);
            }
        }
        this.done = true;
        try {
            this.socket.close();
        }
        catch (_) {
            // ignore this
        }
        return this.closedNotification;
    }
    get isClosed() {
        return this.done;
    }
    [Symbol.asyncIterator]() {
        return this.iterate();
    }
    async *iterate() {
        while (true) {
            if (this.done) {
                return;
            }
            if (this.yields.length === 0) {
                await this.signal;
            }
            const yields = this.yields;
            this.yields = [];
            for (let i = 0; i < yields.length; i++) {
                if (this.options.debug) {
                    console.info(`> ${(0, util_1.render)(yields[i])}`);
                }
                yield yields[i];
            }
            // yielding could have paused and microtask
            // could have added messages. Prevent allocations
            // if possible
            if (this.done) {
                break;
            }
            else if (this.yields.length === 0) {
                yields.length = 0;
                this.yields = yields;
                this.signal = (0, util_1.deferred)();
            }
        }
    }
    isEncrypted() {
        return this.connected && this.encrypted;
    }
    send(frame) {
        if (this.done) {
            return;
        }
        try {
            this.socket.send(frame.buffer);
            if (this.options.debug) {
                console.info(`< ${(0, util_1.render)(frame)}`);
            }
            return;
        }
        catch (err) {
            // we ignore write errors because client will
            // fail on a read or when the heartbeat timer
            // detects a stale connection
            if (this.options.debug) {
                console.error(`!!! ${(0, util_1.render)(frame)}: ${err}`);
            }
        }
    }
    close(err) {
        return this._closed(err, false);
    }
    closed() {
        return this.closedNotification;
    }
    // this is to allow a force discard on a connection
    // if the connection fails during the handshake protocol.
    // Firefox for example, will keep connections going,
    // so eventually if it succeeds, the client will have
    // an additional transport running. With this
    discard() {
        this.socket?.close();
    }
}
exports.WsTransport = WsTransport;
function wsUrlParseFn(u, encrypted) {
    const ut = /^(.*:\/\/)(.*)/;
    if (!ut.test(u)) {
        // if we have no hint to encrypted and no protocol, assume encrypted
        // else we fix the url from the update to match
        if (typeof encrypted === "boolean") {
            u = `${encrypted === true ? "https" : "http"}://${u}`;
        }
        else {
            u = `https://${u}`;
        }
    }
    let url = new URL(u);
    const srcProto = url.protocol.toLowerCase();
    if (srcProto === "ws:") {
        encrypted = false;
    }
    if (srcProto === "wss:") {
        encrypted = true;
    }
    if (srcProto !== "https:" && srcProto !== "http") {
        u = u.replace(/^(.*:\/\/)(.*)/gm, "$2");
        url = new URL(`http://${u}`);
    }
    let protocol;
    let port;
    const host = url.hostname;
    const path = url.pathname;
    const search = url.search || "";
    switch (srcProto) {
        case "http:":
        case "ws:":
        case "nats:":
            port = url.port || "80";
            protocol = "ws:";
            break;
        case "https:":
        case "wss:":
        case "tls:":
            port = url.port || "443";
            protocol = "wss:";
            break;
        default:
            port = url.port || encrypted === true ? "443" : "80";
            protocol = encrypted === true ? "wss:" : "ws:";
            break;
    }
    return `${protocol}//${host}:${port}${path}${search}`;
}
function wsconnect(opts = {}) {
    (0, transport_1.setTransportFactory)({
        defaultPort: 443,
        urlParseFn: wsUrlParseFn,
        factory: () => {
            if (opts.tls) {
                throw errors_1.InvalidArgumentError.format("tls", "is not configurable on w3c websocket connections");
            }
            return new WsTransport();
        },
    });
    return nats_1.NatsConnectionImpl.connect(opts);
}
//# sourceMappingURL=ws_transport.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/base32.js":
/*!***************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/base32.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2018-2021 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base32 = void 0;
// Fork of https://github.com/LinusU/base32-encode
// and https://github.com/LinusU/base32-decode to support returning
// buffers without padding.
/**
 * @ignore
 */
const b32Alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
/**
 * @ignore
 */
class base32 {
    static encode(src) {
        let bits = 0;
        let value = 0;
        const a = new Uint8Array(src);
        const buf = new Uint8Array(src.byteLength * 2);
        let j = 0;
        for (let i = 0; i < a.byteLength; i++) {
            value = (value << 8) | a[i];
            bits += 8;
            while (bits >= 5) {
                const index = (value >>> (bits - 5)) & 31;
                buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);
                bits -= 5;
            }
        }
        if (bits > 0) {
            const index = (value << (5 - bits)) & 31;
            buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);
        }
        return buf.slice(0, j);
    }
    static decode(src) {
        let bits = 0;
        let byte = 0;
        let j = 0;
        const a = new Uint8Array(src);
        const out = new Uint8Array(a.byteLength * 5 / 8 | 0);
        for (let i = 0; i < a.byteLength; i++) {
            const v = String.fromCharCode(a[i]);
            const vv = b32Alphabet.indexOf(v);
            if (vv === -1) {
                throw new Error("Illegal Base32 character: " + a[i]);
            }
            byte = (byte << 5) | vv;
            bits += 5;
            if (bits >= 8) {
                out[j++] = (byte >>> (bits - 8)) & 255;
                bits -= 8;
            }
        }
        return out.slice(0, j);
    }
}
exports.base32 = base32;
//# sourceMappingURL=base32.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/codec.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/codec.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*
 * Copyright 2018-2020 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Codec = void 0;
const crc16_1 = __webpack_require__(/*! ./crc16 */ "./node_modules/@nats-io/nkeys/lib/crc16.js");
const nkeys_1 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nkeys/lib/nkeys.js");
const base32_1 = __webpack_require__(/*! ./base32 */ "./node_modules/@nats-io/nkeys/lib/base32.js");
/**
 * @ignore
 */
class Codec {
    static encode(prefix, src) {
        if (!src || !(src instanceof Uint8Array)) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.SerializationError);
        }
        if (!nkeys_1.Prefixes.isValidPrefix(prefix)) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);
        }
        return Codec._encode(false, prefix, src);
    }
    static encodeSeed(role, src) {
        if (!src) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ApiError);
        }
        if (!nkeys_1.Prefixes.isValidPublicPrefix(role)) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);
        }
        if (src.byteLength !== 32) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidSeedLen);
        }
        return Codec._encode(true, role, src);
    }
    static decode(expected, src) {
        if (!nkeys_1.Prefixes.isValidPrefix(expected)) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);
        }
        const raw = Codec._decode(src);
        if (raw[0] !== expected) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);
        }
        return raw.slice(1);
    }
    static decodeSeed(src) {
        const raw = Codec._decode(src);
        const prefix = Codec._decodePrefix(raw);
        if (prefix[0] != nkeys_1.Prefix.Seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidSeed);
        }
        if (!nkeys_1.Prefixes.isValidPublicPrefix(prefix[1])) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPrefixByte);
        }
        return ({ buf: raw.slice(2), prefix: prefix[1] });
    }
    // unsafe encode no prefix/role validation
    static _encode(seed, role, payload) {
        // offsets for this token
        const payloadOffset = seed ? 2 : 1;
        const payloadLen = payload.byteLength;
        const checkLen = 2;
        const cap = payloadOffset + payloadLen + checkLen;
        const checkOffset = payloadOffset + payloadLen;
        const raw = new Uint8Array(cap);
        // make the prefixes human readable when encoded
        if (seed) {
            const encodedPrefix = Codec._encodePrefix(nkeys_1.Prefix.Seed, role);
            raw.set(encodedPrefix);
        }
        else {
            raw[0] = role;
        }
        raw.set(payload, payloadOffset);
        //calculate the checksum write it LE
        const checksum = crc16_1.crc16.checksum(raw.slice(0, checkOffset));
        const dv = new DataView(raw.buffer);
        dv.setUint16(checkOffset, checksum, true);
        return base32_1.base32.encode(raw);
    }
    // unsafe decode - no prefix/role validation
    static _decode(src) {
        if (src.byteLength < 4) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncoding);
        }
        let raw;
        try {
            raw = base32_1.base32.decode(src);
        }
        catch (ex) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncoding, { cause: ex });
        }
        const checkOffset = raw.byteLength - 2;
        const dv = new DataView(raw.buffer);
        const checksum = dv.getUint16(checkOffset, true);
        const payload = raw.slice(0, checkOffset);
        if (!crc16_1.crc16.validate(payload, checksum)) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidChecksum);
        }
        return payload;
    }
    static _encodePrefix(kind, role) {
        // In order to make this human printable for both bytes, we need to do a little
        // bit manipulation to setup for base32 encoding which takes 5 bits at a time.
        const b1 = kind | (role >> 5);
        const b2 = (role & 31) << 3; // 31 = 00011111
        return new Uint8Array([b1, b2]);
    }
    static _decodePrefix(raw) {
        // Need to do the reverse from the printable representation to
        // get back to internal representation.
        const b1 = raw[0] & 248; // 248 = 11111000
        const b2 = (raw[0] & 7) << 5 | ((raw[1] & 248) >> 3); // 7 = 00000111
        return new Uint8Array([b1, b2]);
    }
}
exports.Codec = Codec;
//# sourceMappingURL=codec.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/crc16.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/crc16.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2018-2020 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.crc16 = void 0;
// An implementation of crc16 according to CCITT standards for XMODEM.
/**
 * @ignore
 */
const crc16tab = new Uint16Array([
    0x0000,
    0x1021,
    0x2042,
    0x3063,
    0x4084,
    0x50a5,
    0x60c6,
    0x70e7,
    0x8108,
    0x9129,
    0xa14a,
    0xb16b,
    0xc18c,
    0xd1ad,
    0xe1ce,
    0xf1ef,
    0x1231,
    0x0210,
    0x3273,
    0x2252,
    0x52b5,
    0x4294,
    0x72f7,
    0x62d6,
    0x9339,
    0x8318,
    0xb37b,
    0xa35a,
    0xd3bd,
    0xc39c,
    0xf3ff,
    0xe3de,
    0x2462,
    0x3443,
    0x0420,
    0x1401,
    0x64e6,
    0x74c7,
    0x44a4,
    0x5485,
    0xa56a,
    0xb54b,
    0x8528,
    0x9509,
    0xe5ee,
    0xf5cf,
    0xc5ac,
    0xd58d,
    0x3653,
    0x2672,
    0x1611,
    0x0630,
    0x76d7,
    0x66f6,
    0x5695,
    0x46b4,
    0xb75b,
    0xa77a,
    0x9719,
    0x8738,
    0xf7df,
    0xe7fe,
    0xd79d,
    0xc7bc,
    0x48c4,
    0x58e5,
    0x6886,
    0x78a7,
    0x0840,
    0x1861,
    0x2802,
    0x3823,
    0xc9cc,
    0xd9ed,
    0xe98e,
    0xf9af,
    0x8948,
    0x9969,
    0xa90a,
    0xb92b,
    0x5af5,
    0x4ad4,
    0x7ab7,
    0x6a96,
    0x1a71,
    0x0a50,
    0x3a33,
    0x2a12,
    0xdbfd,
    0xcbdc,
    0xfbbf,
    0xeb9e,
    0x9b79,
    0x8b58,
    0xbb3b,
    0xab1a,
    0x6ca6,
    0x7c87,
    0x4ce4,
    0x5cc5,
    0x2c22,
    0x3c03,
    0x0c60,
    0x1c41,
    0xedae,
    0xfd8f,
    0xcdec,
    0xddcd,
    0xad2a,
    0xbd0b,
    0x8d68,
    0x9d49,
    0x7e97,
    0x6eb6,
    0x5ed5,
    0x4ef4,
    0x3e13,
    0x2e32,
    0x1e51,
    0x0e70,
    0xff9f,
    0xefbe,
    0xdfdd,
    0xcffc,
    0xbf1b,
    0xaf3a,
    0x9f59,
    0x8f78,
    0x9188,
    0x81a9,
    0xb1ca,
    0xa1eb,
    0xd10c,
    0xc12d,
    0xf14e,
    0xe16f,
    0x1080,
    0x00a1,
    0x30c2,
    0x20e3,
    0x5004,
    0x4025,
    0x7046,
    0x6067,
    0x83b9,
    0x9398,
    0xa3fb,
    0xb3da,
    0xc33d,
    0xd31c,
    0xe37f,
    0xf35e,
    0x02b1,
    0x1290,
    0x22f3,
    0x32d2,
    0x4235,
    0x5214,
    0x6277,
    0x7256,
    0xb5ea,
    0xa5cb,
    0x95a8,
    0x8589,
    0xf56e,
    0xe54f,
    0xd52c,
    0xc50d,
    0x34e2,
    0x24c3,
    0x14a0,
    0x0481,
    0x7466,
    0x6447,
    0x5424,
    0x4405,
    0xa7db,
    0xb7fa,
    0x8799,
    0x97b8,
    0xe75f,
    0xf77e,
    0xc71d,
    0xd73c,
    0x26d3,
    0x36f2,
    0x0691,
    0x16b0,
    0x6657,
    0x7676,
    0x4615,
    0x5634,
    0xd94c,
    0xc96d,
    0xf90e,
    0xe92f,
    0x99c8,
    0x89e9,
    0xb98a,
    0xa9ab,
    0x5844,
    0x4865,
    0x7806,
    0x6827,
    0x18c0,
    0x08e1,
    0x3882,
    0x28a3,
    0xcb7d,
    0xdb5c,
    0xeb3f,
    0xfb1e,
    0x8bf9,
    0x9bd8,
    0xabbb,
    0xbb9a,
    0x4a75,
    0x5a54,
    0x6a37,
    0x7a16,
    0x0af1,
    0x1ad0,
    0x2ab3,
    0x3a92,
    0xfd2e,
    0xed0f,
    0xdd6c,
    0xcd4d,
    0xbdaa,
    0xad8b,
    0x9de8,
    0x8dc9,
    0x7c26,
    0x6c07,
    0x5c64,
    0x4c45,
    0x3ca2,
    0x2c83,
    0x1ce0,
    0x0cc1,
    0xef1f,
    0xff3e,
    0xcf5d,
    0xdf7c,
    0xaf9b,
    0xbfba,
    0x8fd9,
    0x9ff8,
    0x6e17,
    0x7e36,
    0x4e55,
    0x5e74,
    0x2e93,
    0x3eb2,
    0x0ed1,
    0x1ef0,
]);
/**
 * @ignore
 */
class crc16 {
    // crc16 returns the crc for the data provided.
    static checksum(data) {
        let crc = 0;
        for (let i = 0; i < data.byteLength; i++) {
            const b = data[i];
            crc = ((crc << 8) & 0xffff) ^ crc16tab[((crc >> 8) ^ b) & 0x00FF];
        }
        return crc;
    }
    // validate will check the calculated crc16 checksum for data against the expected.
    static validate(data, expected) {
        const ba = crc16.checksum(data);
        return ba == expected;
    }
}
exports.crc16 = crc16;
//# sourceMappingURL=crc16.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/curve.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/curve.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright 2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CurveKP = exports.curveNonceLen = exports.curveKeyLen = void 0;
const nkeys_1 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nkeys/lib/nkeys.js");
const nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ "./node_modules/@nats-io/nkeys/lib/nacl.js"));
const codec_1 = __webpack_require__(/*! ./codec */ "./node_modules/@nats-io/nkeys/lib/codec.js");
const nkeys_2 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nkeys/lib/nkeys.js");
const base32_1 = __webpack_require__(/*! ./base32 */ "./node_modules/@nats-io/nkeys/lib/base32.js");
const crc16_1 = __webpack_require__(/*! ./crc16 */ "./node_modules/@nats-io/nkeys/lib/crc16.js");
exports.curveKeyLen = 32;
const curveDecodeLen = 35;
exports.curveNonceLen = 24;
// "xkv1" in bytes
const XKeyVersionV1 = [120, 107, 118, 49];
class CurveKP {
    seed;
    constructor(seed) {
        this.seed = seed;
    }
    clear() {
        if (!this.seed) {
            return;
        }
        this.seed.fill(0);
        this.seed = undefined;
    }
    getPrivateKey() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        return codec_1.Codec.encode(nkeys_2.Prefix.Private, this.seed);
    }
    getPublicKey() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const pub = nacl_1.default.scalarMult.base(this.seed);
        const buf = codec_1.Codec.encode(nkeys_2.Prefix.Curve, pub);
        return new TextDecoder().decode(buf);
    }
    getSeed() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        return codec_1.Codec.encodeSeed(nkeys_2.Prefix.Curve, this.seed);
    }
    sign() {
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidCurveOperation);
    }
    verify() {
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidCurveOperation);
    }
    decodePubCurveKey(src) {
        try {
            const raw = base32_1.base32.decode(new TextEncoder().encode(src));
            if (raw.byteLength !== curveDecodeLen) {
                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidCurveKey);
            }
            if (raw[0] !== nkeys_2.Prefix.Curve) {
                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidPublicKey);
            }
            const checkOffset = raw.byteLength - 2;
            const dv = new DataView(raw.buffer);
            const checksum = dv.getUint16(checkOffset, true);
            const payload = raw.slice(0, checkOffset);
            if (!crc16_1.crc16.validate(payload, checksum)) {
                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidChecksum);
            }
            // remove the prefix byte
            return payload.slice(1);
        }
        catch (ex) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidRecipient, { cause: ex });
        }
    }
    seal(message, recipient, nonce) {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        if (!nonce) {
            nonce = nacl_1.default.randomBytes(exports.curveNonceLen);
        }
        const pub = this.decodePubCurveKey(recipient);
        // prefix a header to the nonce
        const out = new Uint8Array(XKeyVersionV1.length + exports.curveNonceLen);
        out.set(XKeyVersionV1, 0);
        out.set(nonce, XKeyVersionV1.length);
        // this is only the encoded payload
        const encrypted = nacl_1.default.box(message, nonce, pub, this.seed);
        // the full message is the header+nonce+encrypted
        const fullMessage = new Uint8Array(out.length + encrypted.length);
        fullMessage.set(out);
        fullMessage.set(encrypted, out.length);
        return fullMessage;
    }
    open(message, sender) {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        if (message.length <= exports.curveNonceLen + XKeyVersionV1.length) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncrypted);
        }
        for (let i = 0; i < XKeyVersionV1.length; i++) {
            if (message[i] !== XKeyVersionV1[i]) {
                throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidEncrypted);
            }
        }
        const pub = this.decodePubCurveKey(sender);
        // strip off the header
        message = message.slice(XKeyVersionV1.length);
        // extract the nonce
        const nonce = message.slice(0, exports.curveNonceLen);
        // stripe the nonce
        message = message.slice(exports.curveNonceLen);
        return nacl_1.default.box.open(message, nonce, pub, this.seed);
    }
}
exports.CurveKP = CurveKP;
//# sourceMappingURL=curve.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/kp.js":
/*!***********************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/kp.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright 2018-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KP = void 0;
const codec_1 = __webpack_require__(/*! ./codec */ "./node_modules/@nats-io/nkeys/lib/codec.js");
const nkeys_1 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nkeys/lib/nkeys.js");
const nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ "./node_modules/@nats-io/nkeys/lib/nacl.js"));
/**
 * @ignore
 */
class KP {
    seed;
    constructor(seed) {
        this.seed = seed;
    }
    getRawSeed() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const sd = codec_1.Codec.decodeSeed(this.seed);
        return sd.buf;
    }
    getSeed() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        return this.seed;
    }
    getPublicKey() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const sd = codec_1.Codec.decodeSeed(this.seed);
        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());
        const buf = codec_1.Codec.encode(sd.prefix, kp.publicKey);
        return new TextDecoder().decode(buf);
    }
    getPrivateKey() {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());
        return codec_1.Codec.encode(nkeys_1.Prefix.Private, kp.secretKey);
    }
    sign(input) {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());
        return nacl_1.default.sign.detached(input, kp.secretKey);
    }
    verify(input, sig) {
        if (!this.seed) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const kp = nacl_1.default.sign.keyPair.fromSeed(this.getRawSeed());
        return nacl_1.default.sign.detached.verify(input, sig, kp.publicKey);
    }
    clear() {
        if (!this.seed) {
            return;
        }
        this.seed.fill(0);
        this.seed = undefined;
    }
    seal(_, _recipient, _nonce) {
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);
    }
    open(_, _sender) {
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);
    }
}
exports.KP = KP;
//# sourceMappingURL=kp.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/mod.js":
/*!************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/mod.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = exports.encode = exports.decode = exports.Prefixes = exports.Prefix = exports.NKeysErrorCode = exports.NKeysError = exports.fromSeed = exports.fromPublic = exports.fromCurveSeed = exports.createUser = exports.createServer = exports.createPair = exports.createOperator = exports.createCurve = exports.createCluster = exports.createAccount = void 0;
var nkeys_1 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nkeys/lib/nkeys.js");
Object.defineProperty(exports, "createAccount", ({ enumerable: true, get: function () { return nkeys_1.createAccount; } }));
Object.defineProperty(exports, "createCluster", ({ enumerable: true, get: function () { return nkeys_1.createCluster; } }));
Object.defineProperty(exports, "createCurve", ({ enumerable: true, get: function () { return nkeys_1.createCurve; } }));
Object.defineProperty(exports, "createOperator", ({ enumerable: true, get: function () { return nkeys_1.createOperator; } }));
Object.defineProperty(exports, "createPair", ({ enumerable: true, get: function () { return nkeys_1.createPair; } }));
Object.defineProperty(exports, "createServer", ({ enumerable: true, get: function () { return nkeys_1.createServer; } }));
Object.defineProperty(exports, "createUser", ({ enumerable: true, get: function () { return nkeys_1.createUser; } }));
Object.defineProperty(exports, "fromCurveSeed", ({ enumerable: true, get: function () { return nkeys_1.fromCurveSeed; } }));
Object.defineProperty(exports, "fromPublic", ({ enumerable: true, get: function () { return nkeys_1.fromPublic; } }));
Object.defineProperty(exports, "fromSeed", ({ enumerable: true, get: function () { return nkeys_1.fromSeed; } }));
Object.defineProperty(exports, "NKeysError", ({ enumerable: true, get: function () { return nkeys_1.NKeysError; } }));
Object.defineProperty(exports, "NKeysErrorCode", ({ enumerable: true, get: function () { return nkeys_1.NKeysErrorCode; } }));
Object.defineProperty(exports, "Prefix", ({ enumerable: true, get: function () { return nkeys_1.Prefix; } }));
Object.defineProperty(exports, "Prefixes", ({ enumerable: true, get: function () { return nkeys_1.Prefixes; } }));
var util_1 = __webpack_require__(/*! ./util */ "./node_modules/@nats-io/nkeys/lib/util.js");
Object.defineProperty(exports, "decode", ({ enumerable: true, get: function () { return util_1.decode; } }));
Object.defineProperty(exports, "encode", ({ enumerable: true, get: function () { return util_1.encode; } }));
var version_1 = __webpack_require__(/*! ./version */ "./node_modules/@nats-io/nkeys/lib/version.js");
Object.defineProperty(exports, "version", ({ enumerable: true, get: function () { return version_1.version; } }));
//# sourceMappingURL=mod.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/nacl.js":
/*!*************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/nacl.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const tweetnacl_1 = __importDefault(__webpack_require__(/*! tweetnacl */ "./node_modules/tweetnacl/nacl-fast.js"));
exports["default"] = tweetnacl_1.default;
//# sourceMappingURL=nacl.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/nkeys.js":
/*!**************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/nkeys.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NKeysError = exports.NKeysErrorCode = exports.Prefixes = exports.Prefix = void 0;
exports.createPair = createPair;
exports.createOperator = createOperator;
exports.createAccount = createAccount;
exports.createUser = createUser;
exports.createCluster = createCluster;
exports.createServer = createServer;
exports.createCurve = createCurve;
exports.fromPublic = fromPublic;
exports.fromCurveSeed = fromCurveSeed;
exports.fromSeed = fromSeed;
/*
 * Copyright 2018-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const kp_1 = __webpack_require__(/*! ./kp */ "./node_modules/@nats-io/nkeys/lib/kp.js");
const public_1 = __webpack_require__(/*! ./public */ "./node_modules/@nats-io/nkeys/lib/public.js");
const codec_1 = __webpack_require__(/*! ./codec */ "./node_modules/@nats-io/nkeys/lib/codec.js");
const curve_1 = __webpack_require__(/*! ./curve */ "./node_modules/@nats-io/nkeys/lib/curve.js");
const nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ "./node_modules/@nats-io/nkeys/lib/nacl.js"));
/**
 * @ignore
 */
function createPair(prefix) {
    const len = prefix === Prefix.Curve ? curve_1.curveKeyLen : 32;
    const rawSeed = nacl_1.default.randomBytes(len);
    const str = codec_1.Codec.encodeSeed(prefix, new Uint8Array(rawSeed));
    return prefix === Prefix.Curve
        ? new curve_1.CurveKP(new Uint8Array(rawSeed))
        : new kp_1.KP(str);
}
/**
 * Creates a KeyPair with an operator prefix
 * @returns {KeyPair} Returns the created KeyPair.
 */
function createOperator() {
    return createPair(Prefix.Operator);
}
/**
 * Creates a KeyPair with an account prefix
 * @returns {KeyPair} Returns the created KeyPair.
 */
function createAccount() {
    return createPair(Prefix.Account);
}
/**
 * Creates a KeyPair with a user prefix
 * @returns {KeyPair} Returns the created KeyPair.
 */
function createUser() {
    return createPair(Prefix.User);
}
/**
 * @ignore
 */
function createCluster() {
    return createPair(Prefix.Cluster);
}
/**
 * @ignore
 */
function createServer() {
    return createPair(Prefix.Server);
}
/**
 * Generates and returns a KeyPair object using the Curve prefix.
 * Curve KeyPairs can seal/open (encrypt/decrypt) payloads.
 *
 * @return {KeyPair} The generated KeyPair object with Curve prefix.
 */
function createCurve() {
    return createPair(Prefix.Curve);
}
/**
 * Creates a KeyPair from a specified public key
 * @param {string} src of the public key in string format.
 * @returns {KeyPair} Returns the created KeyPair.
 * @see KeyPair#getPublicKey
 */
function fromPublic(src) {
    const ba = new TextEncoder().encode(src);
    const raw = codec_1.Codec._decode(ba);
    const prefix = Prefixes.parsePrefix(raw[0]);
    if (Prefixes.isValidPublicPrefix(prefix)) {
        return new public_1.PublicKey(ba);
    }
    throw new NKeysError(NKeysErrorCode.InvalidPublicKey);
}
/**
 * Creates a KeyPair from a Curve seed. Curve keys can encrypt and decrypt payloads.
 *
 * @param {Uint8Array} src - The seed representing the Curve key in encoded format.
 * @return {KeyPair} The resulting KeyPair generated from the Curve seed.
 * @throws {NKeysError} If the seed's prefix is not a Curve prefix or if the seed length is invalid.
 */
function fromCurveSeed(src) {
    const sd = codec_1.Codec.decodeSeed(src);
    if (sd.prefix !== Prefix.Curve) {
        throw new NKeysError(NKeysErrorCode.InvalidCurveSeed);
    }
    if (sd.buf.byteLength !== curve_1.curveKeyLen) {
        throw new NKeysError(NKeysErrorCode.InvalidSeedLen);
    }
    return new curve_1.CurveKP(sd.buf);
}
/**
 * Creates a KeyPair from a specified seed.
 * @param {Uint8Array} src of the seed key as Uint8Array
 * @returns {KeyPair} Returns the created KeyPair.
 * @see KeyPair#getSeed
 */
function fromSeed(src) {
    const sd = codec_1.Codec.decodeSeed(src);
    // if we are here it decoded properly
    if (sd.prefix === Prefix.Curve) {
        return fromCurveSeed(src);
    }
    return new kp_1.KP(src);
}
/**
 * @ignore
 */
var Prefix;
(function (Prefix) {
    Prefix[Prefix["Unknown"] = -1] = "Unknown";
    //Seed is the version byte used for encoded NATS Seeds
    Prefix[Prefix["Seed"] = 144] = "Seed";
    //PrefixBytePrivate is the version byte used for encoded NATS Private keys
    Prefix[Prefix["Private"] = 120] = "Private";
    //PrefixByteOperator is the version byte used for encoded NATS Operators
    Prefix[Prefix["Operator"] = 112] = "Operator";
    //PrefixByteServer is the version byte used for encoded NATS Servers
    Prefix[Prefix["Server"] = 104] = "Server";
    //PrefixByteCluster is the version byte used for encoded NATS Clusters
    Prefix[Prefix["Cluster"] = 16] = "Cluster";
    //PrefixByteAccount is the version byte used for encoded NATS Accounts
    Prefix[Prefix["Account"] = 0] = "Account";
    //PrefixByteUser is the version byte used for encoded NATS Users
    Prefix[Prefix["User"] = 160] = "User";
    Prefix[Prefix["Curve"] = 184] = "Curve";
})(Prefix || (exports.Prefix = Prefix = {}));
/**
 * @private
 */
class Prefixes {
    static isValidPublicPrefix(prefix) {
        return prefix == Prefix.Server ||
            prefix == Prefix.Operator ||
            prefix == Prefix.Cluster ||
            prefix == Prefix.Account ||
            prefix == Prefix.User ||
            prefix == Prefix.Curve;
    }
    static startsWithValidPrefix(s) {
        const c = s[0];
        return c == "S" || c == "P" || c == "O" || c == "N" || c == "C" ||
            c == "A" || c == "U" || c == "X";
    }
    static isValidPrefix(prefix) {
        const v = this.parsePrefix(prefix);
        return v !== Prefix.Unknown;
    }
    static parsePrefix(v) {
        switch (v) {
            case Prefix.Seed:
                return Prefix.Seed;
            case Prefix.Private:
                return Prefix.Private;
            case Prefix.Operator:
                return Prefix.Operator;
            case Prefix.Server:
                return Prefix.Server;
            case Prefix.Cluster:
                return Prefix.Cluster;
            case Prefix.Account:
                return Prefix.Account;
            case Prefix.User:
                return Prefix.User;
            case Prefix.Curve:
                return Prefix.Curve;
            default:
                return Prefix.Unknown;
        }
    }
}
exports.Prefixes = Prefixes;
/**
 * Possible error codes on exceptions thrown by the library.
 */
var NKeysErrorCode;
(function (NKeysErrorCode) {
    NKeysErrorCode["InvalidPrefixByte"] = "nkeys: invalid prefix byte";
    NKeysErrorCode["InvalidKey"] = "nkeys: invalid key";
    NKeysErrorCode["InvalidPublicKey"] = "nkeys: invalid public key";
    NKeysErrorCode["InvalidSeedLen"] = "nkeys: invalid seed length";
    NKeysErrorCode["InvalidSeed"] = "nkeys: invalid seed";
    NKeysErrorCode["InvalidCurveSeed"] = "nkeys: invalid curve seed";
    NKeysErrorCode["InvalidCurveKey"] = "nkeys: not a valid curve key";
    NKeysErrorCode["InvalidCurveOperation"] = "nkeys: curve key is not valid for sign/verify";
    NKeysErrorCode["InvalidNKeyOperation"] = "keys: only curve key can seal/open";
    NKeysErrorCode["InvalidEncoding"] = "nkeys: invalid encoded key";
    NKeysErrorCode["InvalidRecipient"] = "nkeys: not a valid recipient public curve key";
    NKeysErrorCode["InvalidEncrypted"] = "nkeys: encrypted input is not valid";
    NKeysErrorCode["CannotSign"] = "nkeys: cannot sign, no private key available";
    NKeysErrorCode["PublicKeyOnly"] = "nkeys: no seed or private key available";
    NKeysErrorCode["InvalidChecksum"] = "nkeys: invalid checksum";
    NKeysErrorCode["SerializationError"] = "nkeys: serialization error";
    NKeysErrorCode["ApiError"] = "nkeys: api error";
    NKeysErrorCode["ClearedPair"] = "nkeys: pair is cleared";
})(NKeysErrorCode || (exports.NKeysErrorCode = NKeysErrorCode = {}));
class NKeysError extends Error {
    code;
    constructor(code, options) {
        super(code, options);
        this.code = code;
    }
}
exports.NKeysError = NKeysError;
//# sourceMappingURL=nkeys.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/public.js":
/*!***************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/public.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright 2018-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PublicKey = void 0;
const codec_1 = __webpack_require__(/*! ./codec */ "./node_modules/@nats-io/nkeys/lib/codec.js");
const nkeys_1 = __webpack_require__(/*! ./nkeys */ "./node_modules/@nats-io/nkeys/lib/nkeys.js");
const nacl_1 = __importDefault(__webpack_require__(/*! ./nacl */ "./node_modules/@nats-io/nkeys/lib/nacl.js"));
/**
 * @ignore
 */
class PublicKey {
    publicKey;
    constructor(publicKey) {
        this.publicKey = publicKey;
    }
    getPublicKey() {
        if (!this.publicKey) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        return new TextDecoder().decode(this.publicKey);
    }
    getPrivateKey() {
        if (!this.publicKey) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);
    }
    getSeed() {
        if (!this.publicKey) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.PublicKeyOnly);
    }
    sign(_) {
        if (!this.publicKey) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.CannotSign);
    }
    verify(input, sig) {
        if (!this.publicKey) {
            throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.ClearedPair);
        }
        const buf = codec_1.Codec._decode(this.publicKey);
        return nacl_1.default.sign.detached.verify(input, sig, buf.slice(1));
    }
    clear() {
        if (!this.publicKey) {
            return;
        }
        this.publicKey.fill(0);
        this.publicKey = undefined;
    }
    seal(_, _recipient, _nonce) {
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);
    }
    open(_, _sender) {
        throw new nkeys_1.NKeysError(nkeys_1.NKeysErrorCode.InvalidNKeyOperation);
    }
}
exports.PublicKey = PublicKey;
//# sourceMappingURL=public.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/util.js":
/*!*************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/util.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encode = encode;
exports.decode = decode;
exports.dump = dump;
/*
 * Copyright 2018-2020 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Encode binary data to a base64 string
 * @param {Uint8Array} bytes to encode to base64
 */
function encode(bytes) {
    return btoa(String.fromCharCode(...bytes));
}
/**
 * Decode a base64 encoded string to a binary Uint8Array
 * @param {string} b64str encoded string
 */
function decode(b64str) {
    const bin = atob(b64str);
    const bytes = new Uint8Array(bin.length);
    for (let i = 0; i < bin.length; i++) {
        bytes[i] = bin.charCodeAt(i);
    }
    return bytes;
}
/**
 * @ignore
 */
function dump(buf, msg) {
    if (msg) {
        console.log(msg);
    }
    const a = [];
    for (let i = 0; i < buf.byteLength; i++) {
        if (i % 8 === 0) {
            a.push("\n");
        }
        let v = buf[i].toString(16);
        if (v.length === 1) {
            v = "0" + v;
        }
        a.push(v);
    }
    console.log(a.join("  "));
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nkeys/lib/version.js":
/*!****************************************************!*\
  !*** ./node_modules/@nats-io/nkeys/lib/version.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = void 0;
// this file is autogenerated - do not edit
exports.version = "2.0.3";
//# sourceMappingURL=version.js.map

/***/ }),

/***/ "./node_modules/@nats-io/nuid/lib/nuid.js":
/*!************************************************!*\
  !*** ./node_modules/@nats-io/nuid/lib/nuid.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/*
 * Copyright 2016-2024 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nuid = exports.Nuid = void 0;
const digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
const base = 36;
const preLen = 12;
const seqLen = 10;
const maxSeq = 3656158440062976; // base^seqLen == 36^10
const minInc = 33;
const maxInc = 333;
const totalLen = preLen + seqLen;
function _getRandomValues(a) {
    for (let i = 0; i < a.length; i++) {
        a[i] = Math.floor(Math.random() * 255);
    }
}
function fillRandom(a) {
    if (globalThis?.crypto?.getRandomValues) {
        globalThis.crypto.getRandomValues(a);
    }
    else {
        _getRandomValues(a);
    }
}
/**
 * Nuid is a class that generates unique identifiers.
 */
class Nuid {
    /**
     *   @hidden
     */
    buf;
    /**
     *   @hidden
     */
    seq;
    /**
     * @hidden
     */
    inc;
    /**
     * @hidden
     */
    inited;
    constructor() {
        this.buf = new Uint8Array(totalLen);
        this.inited = false;
    }
    /**
     * Initializes a nuid with a crypto random prefix,
     * and pseudo-random sequence and increment. This function
     * is only called if any api on a nuid is called.
     *
     * @ignore
     */
    init() {
        this.inited = true;
        this.setPre();
        this.initSeqAndInc();
        this.fillSeq();
    }
    /**
     * Initializes the pseudo random sequence number and the increment range.
     * @ignore
     */
    initSeqAndInc() {
        this.seq = Math.floor(Math.random() * maxSeq);
        this.inc = Math.floor(Math.random() * (maxInc - minInc) + minInc);
    }
    /**
     * Sets the prefix from crypto random bytes. Converts them to base36.
     *
     * @ignore
     */
    setPre() {
        const cbuf = new Uint8Array(preLen);
        fillRandom(cbuf);
        for (let i = 0; i < preLen; i++) {
            const di = cbuf[i] % base;
            this.buf[i] = digits.charCodeAt(di);
        }
    }
    /**
     * Fills the sequence part of the nuid as base36 from this.seq.
     * @ignore
     */
    fillSeq() {
        let n = this.seq;
        for (let i = totalLen - 1; i >= preLen; i--) {
            this.buf[i] = digits.charCodeAt(n % base);
            n = Math.floor(n / base);
        }
    }
    /**
     * Returns the next nuid.
     */
    next() {
        if (!this.inited) {
            this.init();
        }
        this.seq += this.inc;
        if (this.seq > maxSeq) {
            this.setPre();
            this.initSeqAndInc();
        }
        this.fillSeq();
        // @ts-ignore - Uint8Arrays can be an argument
        return String.fromCharCode.apply(String, this.buf);
    }
    /**
     * Resets the prefix and counter for the nuid. This is typically
     * called automatically from within next() if the current sequence
     * exceeds the resolution of the nuid.
     */
    reset() {
        this.init();
    }
}
exports.Nuid = Nuid;
/**
 * A nuid instance you can use by simply calling `next()` on it.
 */
exports.nuid = new Nuid();
//# sourceMappingURL=nuid.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/_assert.js":
/*!***********************************************!*\
  !*** ./node_modules/@noble/hashes/_assert.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/**
 * Internal assertion helpers.
 * @module
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.anumber = anumber;
exports.abytes = abytes;
exports.ahash = ahash;
exports.aexists = aexists;
exports.aoutput = aoutput;
/** Asserts something is positive integer. */
function anumber(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error('positive integer expected, got ' + n);
}
/** Is number an Uint8Array? Copied from utils for perf. */
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
/** Asserts something is Uint8Array. */
function abytes(b, ...lengths) {
    if (!isBytes(b))
        throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
/** Asserts something is hash */
function ahash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function')
        throw new Error('Hash should be wrapped by utils.wrapConstructor');
    anumber(h.outputLen);
    anumber(h.blockLen);
}
/** Asserts a hash instance has not been destroyed / finished */
function aexists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
/** Asserts output is properly-sized byte array */
function aoutput(out, instance) {
    abytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error('digestInto() expects output buffer of length at least ' + min);
    }
}
//# sourceMappingURL=_assert.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/_md.js":
/*!*******************************************!*\
  !*** ./node_modules/@noble/hashes/_md.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HashMD = void 0;
exports.setBigUint64 = setBigUint64;
exports.Chi = Chi;
exports.Maj = Maj;
/**
 * Internal Merkle-Damgard hash utils.
 * @module
 */
const _assert_js_1 = __webpack_require__(/*! ./_assert.js */ "./node_modules/@noble/hashes/_assert.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */
function setBigUint64(view, byteOffset, value, isLE) {
    if (typeof view.setBigUint64 === 'function')
        return view.setBigUint64(byteOffset, value, isLE);
    const _32n = BigInt(32);
    const _u32_max = BigInt(0xffffffff);
    const wh = Number((value >> _32n) & _u32_max);
    const wl = Number(value & _u32_max);
    const h = isLE ? 4 : 0;
    const l = isLE ? 0 : 4;
    view.setUint32(byteOffset + h, wh, isLE);
    view.setUint32(byteOffset + l, wl, isLE);
}
/** Choice: a ? b : c */
function Chi(a, b, c) {
    return (a & b) ^ (~a & c);
}
/** Majority function, true if any two inputs is true. */
function Maj(a, b, c) {
    return (a & b) ^ (a & c) ^ (b & c);
}
/**
 * Merkle-Damgard hash construction base class.
 * Could be used to create MD5, RIPEMD, SHA1, SHA2.
 */
class HashMD extends utils_js_1.Hash {
    constructor(blockLen, outputLen, padOffset, isLE) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.padOffset = padOffset;
        this.isLE = isLE;
        this.finished = false;
        this.length = 0;
        this.pos = 0;
        this.destroyed = false;
        this.buffer = new Uint8Array(blockLen);
        this.view = (0, utils_js_1.createView)(this.buffer);
    }
    update(data) {
        (0, _assert_js_1.aexists)(this);
        const { view, buffer, blockLen } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            // Fast path: we have at least one block in input, cast it to view and process
            if (take === blockLen) {
                const dataView = (0, utils_js_1.createView)(data);
                for (; blockLen <= len - pos; pos += blockLen)
                    this.process(dataView, pos);
                continue;
            }
            buffer.set(data.subarray(pos, pos + take), this.pos);
            this.pos += take;
            pos += take;
            if (this.pos === blockLen) {
                this.process(view, 0);
                this.pos = 0;
            }
        }
        this.length += data.length;
        this.roundClean();
        return this;
    }
    digestInto(out) {
        (0, _assert_js_1.aexists)(this);
        (0, _assert_js_1.aoutput)(out, this);
        this.finished = true;
        // Padding
        // We can avoid allocation of buffer for padding completely if it
        // was previously not allocated here. But it won't change performance.
        const { buffer, view, blockLen, isLE } = this;
        let { pos } = this;
        // append the bit '1' to the message
        buffer[pos++] = 0b10000000;
        this.buffer.subarray(pos).fill(0);
        // we have less than padOffset left in buffer, so we cannot put length in
        // current block, need process it and pad again
        if (this.padOffset > blockLen - pos) {
            this.process(view, 0);
            pos = 0;
        }
        // Pad until full block byte with zeros
        for (let i = pos; i < blockLen; i++)
            buffer[i] = 0;
        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that
        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.
        // So we just write lowest 64 bits of that value.
        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
        this.process(view, 0);
        const oview = (0, utils_js_1.createView)(out);
        const len = this.outputLen;
        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT
        if (len % 4)
            throw new Error('_sha2: outputLen should be aligned to 32bit');
        const outLen = len / 4;
        const state = this.get();
        if (outLen > state.length)
            throw new Error('_sha2: outputLen bigger than state');
        for (let i = 0; i < outLen; i++)
            oview.setUint32(4 * i, state[i], isLE);
    }
    digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
    }
    _cloneInto(to) {
        to || (to = new this.constructor());
        to.set(...this.get());
        const { blockLen, buffer, length, finished, destroyed, pos } = this;
        to.length = length;
        to.pos = pos;
        to.finished = finished;
        to.destroyed = destroyed;
        if (length % blockLen)
            to.buffer.set(buffer);
        return to;
    }
}
exports.HashMD = HashMD;
//# sourceMappingURL=_md.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/_u64.js":
/*!********************************************!*\
  !*** ./node_modules/@noble/hashes/_u64.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = void 0;
exports.fromBig = fromBig;
exports.split = split;
exports.add = add;
/**
 * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.
 * @todo re-check https://issues.chromium.org/issues/42212588
 * @module
 */
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
exports.toBig = toBig;
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
exports.shrSH = shrSH;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
exports.shrSL = shrSL;
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
exports.rotrSH = rotrSH;
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
exports.rotrSL = rotrSL;
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
exports.rotrBH = rotrBH;
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
exports.rotrBL = rotrBL;
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
exports.rotr32H = rotr32H;
const rotr32L = (h, _l) => h;
exports.rotr32L = rotr32L;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
exports.rotlSH = rotlSH;
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
exports.rotlSL = rotlSL;
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
exports.rotlBH = rotlBH;
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
exports.rotlBL = rotlBL;
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
exports.add3L = add3L;
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
exports.add3H = add3H;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
exports.add4L = add4L;
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
exports.add4H = add4H;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
exports.add5L = add5L;
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
exports.add5H = add5H;
// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
exports["default"] = u64;
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/crypto.js":
/*!**********************************************!*\
  !*** ./node_modules/@noble/hashes/crypto.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.crypto = void 0;
exports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/hmac.js":
/*!********************************************!*\
  !*** ./node_modules/@noble/hashes/hmac.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hmac = exports.HMAC = void 0;
/**
 * HMAC: RFC2104 message authentication code.
 * @module
 */
const _assert_js_1 = __webpack_require__(/*! ./_assert.js */ "./node_modules/@noble/hashes/_assert.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
class HMAC extends utils_js_1.Hash {
    constructor(hash, _key) {
        super();
        this.finished = false;
        this.destroyed = false;
        (0, _assert_js_1.ahash)(hash);
        const key = (0, utils_js_1.toBytes)(_key);
        this.iHash = hash.create();
        if (typeof this.iHash.update !== 'function')
            throw new Error('Expected instance of class which extends utils.Hash');
        this.blockLen = this.iHash.blockLen;
        this.outputLen = this.iHash.outputLen;
        const blockLen = this.blockLen;
        const pad = new Uint8Array(blockLen);
        // blockLen can be bigger than outputLen
        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36;
        this.iHash.update(pad);
        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone
        this.oHash = hash.create();
        // Undo internal XOR && apply outer XOR
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36 ^ 0x5c;
        this.oHash.update(pad);
        pad.fill(0);
    }
    update(buf) {
        (0, _assert_js_1.aexists)(this);
        this.iHash.update(buf);
        return this;
    }
    digestInto(out) {
        (0, _assert_js_1.aexists)(this);
        (0, _assert_js_1.abytes)(out, this.outputLen);
        this.finished = true;
        this.iHash.digestInto(out);
        this.oHash.update(out);
        this.oHash.digestInto(out);
        this.destroy();
    }
    digest() {
        const out = new Uint8Array(this.oHash.outputLen);
        this.digestInto(out);
        return out;
    }
    _cloneInto(to) {
        // Create new instance without calling constructor since key already in state and we don't know it.
        to || (to = Object.create(Object.getPrototypeOf(this), {}));
        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
        to = to;
        to.finished = finished;
        to.destroyed = destroyed;
        to.blockLen = blockLen;
        to.outputLen = outputLen;
        to.oHash = oHash._cloneInto(to.oHash);
        to.iHash = iHash._cloneInto(to.iHash);
        return to;
    }
    destroy() {
        this.destroyed = true;
        this.oHash.destroy();
        this.iHash.destroy();
    }
}
exports.HMAC = HMAC;
/**
 * HMAC: RFC2104 message authentication code.
 * @param hash - function that would be used e.g. sha256
 * @param key - message key
 * @param message - message data
 * @example
 * import { hmac } from '@noble/hashes/hmac';
 * import { sha256 } from '@noble/hashes/sha2';
 * const mac1 = hmac(sha256, 'key', 'message');
 */
const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();
exports.hmac = hmac;
exports.hmac.create = (hash, key) => new HMAC(hash, key);
//# sourceMappingURL=hmac.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/pbkdf2.js":
/*!**********************************************!*\
  !*** ./node_modules/@noble/hashes/pbkdf2.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pbkdf2 = pbkdf2;
exports.pbkdf2Async = pbkdf2Async;
/**
 * PBKDF (RFC 2898). Can be used to create a key from password and salt.
 * @module
 */
const _assert_js_1 = __webpack_require__(/*! ./_assert.js */ "./node_modules/@noble/hashes/_assert.js");
const hmac_js_1 = __webpack_require__(/*! ./hmac.js */ "./node_modules/@noble/hashes/hmac.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
// Common prologue and epilogue for sync/async functions
function pbkdf2Init(hash, _password, _salt, _opts) {
    (0, _assert_js_1.ahash)(hash);
    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);
    const { c, dkLen, asyncTick } = opts;
    (0, _assert_js_1.anumber)(c);
    (0, _assert_js_1.anumber)(dkLen);
    (0, _assert_js_1.anumber)(asyncTick);
    if (c < 1)
        throw new Error('PBKDF2: iterations (c) should be >= 1');
    const password = (0, utils_js_1.toBytes)(_password);
    const salt = (0, utils_js_1.toBytes)(_salt);
    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);
    const DK = new Uint8Array(dkLen);
    // U1 = PRF(Password, Salt + INT_32_BE(i))
    const PRF = hmac_js_1.hmac.create(hash, password);
    const PRFSalt = PRF._cloneInto().update(salt);
    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };
}
function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
    PRF.destroy();
    PRFSalt.destroy();
    if (prfW)
        prfW.destroy();
    u.fill(0);
    return DK;
}
/**
 * PBKDF2-HMAC: RFC 2898 key derivation function
 * @param hash - hash function that would be used e.g. sha256
 * @param password - password from which a derived key is generated
 * @param salt - cryptographic salt
 * @param opts - {c, dkLen} where c is work factor and dkLen is output message size
 * @example
 * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: 2 ** 18 });
 */
function pbkdf2(hash, password, salt, opts) {
    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0, utils_js_1.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + ⋯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        for (let ui = 1; ui < c; ui++) {
            // Uc = PRF(Password, Uc−1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        }
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
/**
 * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.
 * @example
 * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });
 */
async function pbkdf2Async(hash, password, salt, opts) {
    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0, utils_js_1.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + ⋯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, () => {
            // Uc = PRF(Password, Uc−1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        });
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
//# sourceMappingURL=pbkdf2.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/ripemd160.js":
/*!*************************************************!*\
  !*** ./node_modules/@noble/hashes/ripemd160.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ripemd160 = exports.RIPEMD160 = void 0;
/**
 * RIPEMD-160 legacy hash function.
 * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html
 * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf
 * @module
 */
const _md_js_1 = __webpack_require__(/*! ./_md.js */ "./node_modules/@noble/hashes/_md.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
const Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);
const Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));
const Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);
let idxL = [Id];
let idxR = [Pi];
for (let i = 0; i < 4; i++)
    for (let j of [idxL, idxR])
        j.push(j[i].map((k) => Rho[k]));
const shifts = /* @__PURE__ */ [
    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
].map((i) => new Uint8Array(i));
const shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));
const shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));
const Kl = /* @__PURE__ */ new Uint32Array([
    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,
]);
const Kr = /* @__PURE__ */ new Uint32Array([
    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,
]);
// It's called f() in spec.
function f(group, x, y, z) {
    if (group === 0)
        return x ^ y ^ z;
    else if (group === 1)
        return (x & y) | (~x & z);
    else if (group === 2)
        return (x | ~y) ^ z;
    else if (group === 3)
        return (x & z) | (y & ~z);
    else
        return x ^ (y | ~z);
}
// Temporary buffer, not used to store anything between runs
const R_BUF = /* @__PURE__ */ new Uint32Array(16);
class RIPEMD160 extends _md_js_1.HashMD {
    constructor() {
        super(64, 20, 8, true);
        this.h0 = 0x67452301 | 0;
        this.h1 = 0xefcdab89 | 0;
        this.h2 = 0x98badcfe | 0;
        this.h3 = 0x10325476 | 0;
        this.h4 = 0xc3d2e1f0 | 0;
    }
    get() {
        const { h0, h1, h2, h3, h4 } = this;
        return [h0, h1, h2, h3, h4];
    }
    set(h0, h1, h2, h3, h4) {
        this.h0 = h0 | 0;
        this.h1 = h1 | 0;
        this.h2 = h2 | 0;
        this.h3 = h3 | 0;
        this.h4 = h4 | 0;
    }
    process(view, offset) {
        for (let i = 0; i < 16; i++, offset += 4)
            R_BUF[i] = view.getUint32(offset, true);
        // prettier-ignore
        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;
        // Instead of iterating 0 to 80, we split it into 5 groups
        // And use the groups in constants, functions, etc. Much simpler
        for (let group = 0; group < 5; group++) {
            const rGroup = 4 - group;
            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore
            const rl = idxL[group], rr = idxR[group]; // prettier-ignore
            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore
            for (let i = 0; i < 16; i++) {
                const tl = ((0, utils_js_1.rotl)(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;
                al = el, el = dl, dl = (0, utils_js_1.rotl)(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore
            }
            // 2 loops are 10% faster
            for (let i = 0; i < 16; i++) {
                const tr = ((0, utils_js_1.rotl)(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;
                ar = er, er = dr, dr = (0, utils_js_1.rotl)(cr, 10) | 0, cr = br, br = tr; // prettier-ignore
            }
        }
        // Add the compressed chunk to the current hash value
        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);
    }
    roundClean() {
        R_BUF.fill(0);
    }
    destroy() {
        this.destroyed = true;
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0);
    }
}
exports.RIPEMD160 = RIPEMD160;
/** RIPEMD-160 - a legacy hash function from 1990s. */
exports.ripemd160 = (0, utils_js_1.wrapConstructor)(() => new RIPEMD160());
//# sourceMappingURL=ripemd160.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/sha256.js":
/*!**********************************************!*\
  !*** ./node_modules/@noble/hashes/sha256.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sha224 = exports.sha256 = exports.SHA256 = void 0;
/**
 * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.
 *
 * To break sha256 using birthday attack, attackers need to try 2^128 hashes.
 * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.
 *
 * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).
 * @module
 */
const _md_js_1 = __webpack_require__(/*! ./_md.js */ "./node_modules/@noble/hashes/_md.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */
// prettier-ignore
const SHA256_K = /* @__PURE__ */ new Uint32Array([
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]);
/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */
// prettier-ignore
const SHA256_IV = /* @__PURE__ */ new Uint32Array([
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
]);
/**
 * Temporary buffer, not used to store anything between runs.
 * Named this way because it matches specification.
 */
const SHA256_W = /* @__PURE__ */ new Uint32Array(64);
class SHA256 extends _md_js_1.HashMD {
    constructor() {
        super(64, 32, 8, false);
        // We cannot use array here since array allows indexing by variable
        // which means optimizer/compiler cannot use registers.
        this.A = SHA256_IV[0] | 0;
        this.B = SHA256_IV[1] | 0;
        this.C = SHA256_IV[2] | 0;
        this.D = SHA256_IV[3] | 0;
        this.E = SHA256_IV[4] | 0;
        this.F = SHA256_IV[5] | 0;
        this.G = SHA256_IV[6] | 0;
        this.H = SHA256_IV[7] | 0;
    }
    get() {
        const { A, B, C, D, E, F, G, H } = this;
        return [A, B, C, D, E, F, G, H];
    }
    // prettier-ignore
    set(A, B, C, D, E, F, G, H) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
        this.E = E | 0;
        this.F = F | 0;
        this.G = G | 0;
        this.H = H | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4)
            SHA256_W[i] = view.getUint32(offset, false);
        for (let i = 16; i < 64; i++) {
            const W15 = SHA256_W[i - 15];
            const W2 = SHA256_W[i - 2];
            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);
            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);
            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;
        }
        // Compression function main loop, 64 rounds
        let { A, B, C, D, E, F, G, H } = this;
        for (let i = 0; i < 64; i++) {
            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);
            const T1 = (H + sigma1 + (0, _md_js_1.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);
            const T2 = (sigma0 + (0, _md_js_1.Maj)(A, B, C)) | 0;
            H = G;
            G = F;
            F = E;
            E = (D + T1) | 0;
            D = C;
            C = B;
            B = A;
            A = (T1 + T2) | 0;
        }
        // Add the compressed chunk to the current hash value
        A = (A + this.A) | 0;
        B = (B + this.B) | 0;
        C = (C + this.C) | 0;
        D = (D + this.D) | 0;
        E = (E + this.E) | 0;
        F = (F + this.F) | 0;
        G = (G + this.G) | 0;
        H = (H + this.H) | 0;
        this.set(A, B, C, D, E, F, G, H);
    }
    roundClean() {
        SHA256_W.fill(0);
    }
    destroy() {
        this.set(0, 0, 0, 0, 0, 0, 0, 0);
        this.buffer.fill(0);
    }
}
exports.SHA256 = SHA256;
/**
 * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.
 */
class SHA224 extends SHA256 {
    constructor() {
        super();
        this.A = 0xc1059ed8 | 0;
        this.B = 0x367cd507 | 0;
        this.C = 0x3070dd17 | 0;
        this.D = 0xf70e5939 | 0;
        this.E = 0xffc00b31 | 0;
        this.F = 0x68581511 | 0;
        this.G = 0x64f98fa7 | 0;
        this.H = 0xbefa4fa4 | 0;
        this.outputLen = 28;
    }
}
/** SHA2-256 hash function */
exports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());
/** SHA2-224 hash function */
exports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());
//# sourceMappingURL=sha256.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/sha3.js":
/*!********************************************!*\
  !*** ./node_modules/@noble/hashes/sha3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = void 0;
exports.keccakP = keccakP;
/**
 * SHA3 (keccak) hash function, based on a new "Sponge function" design.
 * Different from older hashes, the internal state is bigger than output size.
 *
 * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),
 * [Website](https://keccak.team/keccak.html),
 * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).
 *
 * Check out `sha3-addons` module for cSHAKE, k12, and others.
 * @module
 */
const _assert_js_1 = __webpack_require__(/*! ./_assert.js */ "./node_modules/@noble/hashes/_assert.js");
const _u64_js_1 = __webpack_require__(/*! ./_u64.js */ "./node_modules/@noble/hashes/_u64.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
// Various per round constants calculations
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
const _7n = /* @__PURE__ */ BigInt(7);
const _256n = /* @__PURE__ */ BigInt(256);
const _0x71n = /* @__PURE__ */ BigInt(0x71);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));
/** `keccakf1600` internal function, additionally allows to adjust round count. */
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
/** Keccak sponge function. */
class Keccak extends utils_js_1.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        (0, _assert_js_1.anumber)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        // 0 < blockLen < 200
        if (0 >= this.blockLen || this.blockLen >= 200)
            throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0, utils_js_1.u32)(this.state);
    }
    keccak() {
        if (!utils_js_1.isLE)
            (0, utils_js_1.byteSwap32)(this.state32);
        keccakP(this.state32, this.rounds);
        if (!utils_js_1.isLE)
            (0, utils_js_1.byteSwap32)(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0, _assert_js_1.aexists)(this);
        const { blockLen, state } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0, _assert_js_1.aexists)(this, false);
        (0, _assert_js_1.abytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0, _assert_js_1.anumber)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0, _assert_js_1.aoutput)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
exports.Keccak = Keccak;
const gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
/** SHA3-224 hash function. */
exports.sha3_224 = gen(0x06, 144, 224 / 8);
/** SHA3-256 hash function. Different from keccak-256. */
exports.sha3_256 = gen(0x06, 136, 256 / 8);
/** SHA3-384 hash function. */
exports.sha3_384 = gen(0x06, 104, 384 / 8);
/** SHA3-512 hash function. */
exports.sha3_512 = gen(0x06, 72, 512 / 8);
/** keccak-224 hash function. */
exports.keccak_224 = gen(0x01, 144, 224 / 8);
/** keccak-256 hash function. Different from SHA3-256. */
exports.keccak_256 = gen(0x01, 136, 256 / 8);
/** keccak-384 hash function. */
exports.keccak_384 = gen(0x01, 104, 384 / 8);
/** keccak-512 hash function. */
exports.keccak_512 = gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
/** SHAKE128 XOF with 128-bit security. */
exports.shake128 = genShake(0x1f, 168, 128 / 8);
/** SHAKE256 XOF with 256-bit security. */
exports.shake256 = genShake(0x1f, 136, 256 / 8);
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/sha512.js":
/*!**********************************************!*\
  !*** ./node_modules/@noble/hashes/sha512.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA384 = exports.SHA512_256 = exports.SHA512_224 = exports.SHA512 = void 0;
/**
 * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.
 *
 * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and
 * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).
 * @module
 */
const _md_js_1 = __webpack_require__(/*! ./_md.js */ "./node_modules/@noble/hashes/_md.js");
const _u64_js_1 = __webpack_require__(/*! ./_u64.js */ "./node_modules/@noble/hashes/_u64.js");
const utils_js_1 = __webpack_require__(/*! ./utils.js */ "./node_modules/@noble/hashes/utils.js");
// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):
// prettier-ignore
const [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js_1.default.split([
    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',
    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',
    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',
    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',
    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',
    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',
    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',
    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',
    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',
    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',
    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',
    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',
    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',
    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',
    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',
    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',
    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',
    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',
    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',
    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'
].map(n => BigInt(n))))();
// Temporary buffer, not used to store anything between runs
const SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);
const SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);
class SHA512 extends _md_js_1.HashMD {
    constructor() {
        super(128, 64, 16, false);
        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.
        // Also looks cleaner and easier to verify with spec.
        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x6a09e667 | 0;
        this.Al = 0xf3bcc908 | 0;
        this.Bh = 0xbb67ae85 | 0;
        this.Bl = 0x84caa73b | 0;
        this.Ch = 0x3c6ef372 | 0;
        this.Cl = 0xfe94f82b | 0;
        this.Dh = 0xa54ff53a | 0;
        this.Dl = 0x5f1d36f1 | 0;
        this.Eh = 0x510e527f | 0;
        this.El = 0xade682d1 | 0;
        this.Fh = 0x9b05688c | 0;
        this.Fl = 0x2b3e6c1f | 0;
        this.Gh = 0x1f83d9ab | 0;
        this.Gl = 0xfb41bd6b | 0;
        this.Hh = 0x5be0cd19 | 0;
        this.Hl = 0x137e2179 | 0;
    }
    // prettier-ignore
    get() {
        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
    }
    // prettier-ignore
    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
        this.Ah = Ah | 0;
        this.Al = Al | 0;
        this.Bh = Bh | 0;
        this.Bl = Bl | 0;
        this.Ch = Ch | 0;
        this.Cl = Cl | 0;
        this.Dh = Dh | 0;
        this.Dl = Dl | 0;
        this.Eh = Eh | 0;
        this.El = El | 0;
        this.Fh = Fh | 0;
        this.Fl = Fl | 0;
        this.Gh = Gh | 0;
        this.Gl = Gl | 0;
        this.Hh = Hh | 0;
        this.Hl = Hl | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4) {
            SHA512_W_H[i] = view.getUint32(offset);
            SHA512_W_L[i] = view.getUint32((offset += 4));
        }
        for (let i = 16; i < 80; i++) {
            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)
            const W15h = SHA512_W_H[i - 15] | 0;
            const W15l = SHA512_W_L[i - 15] | 0;
            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);
            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);
            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)
            const W2h = SHA512_W_H[i - 2] | 0;
            const W2l = SHA512_W_L[i - 2] | 0;
            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);
            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);
            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];
            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
            SHA512_W_H[i] = SUMh | 0;
            SHA512_W_L[i] = SUMl | 0;
        }
        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        // Compression function main loop, 80 rounds
        for (let i = 0; i < 80; i++) {
            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)
            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);
            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);
            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const CHIh = (Eh & Fh) ^ (~Eh & Gh);
            const CHIl = (El & Fl) ^ (~El & Gl);
            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]
            // prettier-ignore
            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
            const T1l = T1ll | 0;
            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)
            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);
            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);
            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);
            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);
            Hh = Gh | 0;
            Hl = Gl | 0;
            Gh = Fh | 0;
            Gl = Fl | 0;
            Fh = Eh | 0;
            Fl = El | 0;
            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
            Dh = Ch | 0;
            Dl = Cl | 0;
            Ch = Bh | 0;
            Cl = Bl | 0;
            Bh = Ah | 0;
            Bl = Al | 0;
            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);
            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);
            Al = All | 0;
        }
        // Add the compressed chunk to the current hash value
        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
    }
    roundClean() {
        SHA512_W_H.fill(0);
        SHA512_W_L.fill(0);
    }
    destroy() {
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
}
exports.SHA512 = SHA512;
class SHA512_224 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x8c3d37c8 | 0;
        this.Al = 0x19544da2 | 0;
        this.Bh = 0x73e19966 | 0;
        this.Bl = 0x89dcd4d6 | 0;
        this.Ch = 0x1dfab7ae | 0;
        this.Cl = 0x32ff9c82 | 0;
        this.Dh = 0x679dd514 | 0;
        this.Dl = 0x582f9fcf | 0;
        this.Eh = 0x0f6d2b69 | 0;
        this.El = 0x7bd44da8 | 0;
        this.Fh = 0x77e36f73 | 0;
        this.Fl = 0x04c48942 | 0;
        this.Gh = 0x3f9d85a8 | 0;
        this.Gl = 0x6a1d36c8 | 0;
        this.Hh = 0x1112e6ad | 0;
        this.Hl = 0x91d692a1 | 0;
        this.outputLen = 28;
    }
}
exports.SHA512_224 = SHA512_224;
class SHA512_256 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x22312194 | 0;
        this.Al = 0xfc2bf72c | 0;
        this.Bh = 0x9f555fa3 | 0;
        this.Bl = 0xc84c64c2 | 0;
        this.Ch = 0x2393b86b | 0;
        this.Cl = 0x6f53b151 | 0;
        this.Dh = 0x96387719 | 0;
        this.Dl = 0x5940eabd | 0;
        this.Eh = 0x96283ee2 | 0;
        this.El = 0xa88effe3 | 0;
        this.Fh = 0xbe5e1e25 | 0;
        this.Fl = 0x53863992 | 0;
        this.Gh = 0x2b0199fc | 0;
        this.Gl = 0x2c85b8aa | 0;
        this.Hh = 0x0eb72ddc | 0;
        this.Hl = 0x81c52ca2 | 0;
        this.outputLen = 32;
    }
}
exports.SHA512_256 = SHA512_256;
class SHA384 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0xcbbb9d5d | 0;
        this.Al = 0xc1059ed8 | 0;
        this.Bh = 0x629a292a | 0;
        this.Bl = 0x367cd507 | 0;
        this.Ch = 0x9159015a | 0;
        this.Cl = 0x3070dd17 | 0;
        this.Dh = 0x152fecd8 | 0;
        this.Dl = 0xf70e5939 | 0;
        this.Eh = 0x67332667 | 0;
        this.El = 0xffc00b31 | 0;
        this.Fh = 0x8eb44a87 | 0;
        this.Fl = 0x68581511 | 0;
        this.Gh = 0xdb0c2e0d | 0;
        this.Gl = 0x64f98fa7 | 0;
        this.Hh = 0x47b5481d | 0;
        this.Hl = 0xbefa4fa4 | 0;
        this.outputLen = 48;
    }
}
exports.SHA384 = SHA384;
/** SHA2-512 hash function. */
exports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());
/** SHA2-512/224 "truncated" hash function, with improved resistance to length extension attacks. */
exports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());
/** SHA2-512/256 "truncated" hash function, with improved resistance to length extension attacks. */
exports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());
/** SHA2-384 hash function. */
exports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());
//# sourceMappingURL=sha512.js.map

/***/ }),

/***/ "./node_modules/@noble/hashes/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/@noble/hashes/utils.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/**
 * Utilities for hex, bytes, CSPRNG.
 * @module
 */
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Hash = exports.nextTick = exports.byteSwapIfBE = exports.isLE = void 0;
exports.isBytes = isBytes;
exports.u8 = u8;
exports.u32 = u32;
exports.createView = createView;
exports.rotr = rotr;
exports.rotl = rotl;
exports.byteSwap = byteSwap;
exports.byteSwap32 = byteSwap32;
exports.bytesToHex = bytesToHex;
exports.hexToBytes = hexToBytes;
exports.asyncLoop = asyncLoop;
exports.utf8ToBytes = utf8ToBytes;
exports.toBytes = toBytes;
exports.concatBytes = concatBytes;
exports.checkOpts = checkOpts;
exports.wrapConstructor = wrapConstructor;
exports.wrapConstructorWithOpts = wrapConstructorWithOpts;
exports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;
exports.randomBytes = randomBytes;
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.
const crypto_1 = __webpack_require__(/*! @noble/hashes/crypto */ "./node_modules/@noble/hashes/crypto.js");
const _assert_js_1 = __webpack_require__(/*! ./_assert.js */ "./node_modules/@noble/hashes/_assert.js");
// export { isBytes } from './_assert.js';
// We can't reuse isBytes from _assert, because somehow this causes huge perf issues
function isBytes(a) {
    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');
}
// Cast array to different type
function u8(arr) {
    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
}
function u32(arr) {
    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
}
// Cast array to view
function createView(arr) {
    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
}
/** The rotate right (circular right shift) operation for uint32 */
function rotr(word, shift) {
    return (word << (32 - shift)) | (word >>> shift);
}
/** The rotate left (circular left shift) operation for uint32 */
function rotl(word, shift) {
    return (word << shift) | ((word >>> (32 - shift)) >>> 0);
}
/** Is current platform little-endian? Most are. Big-Endian platform: IBM */
exports.isLE = (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();
// The byte swap operation for uint32
function byteSwap(word) {
    return (((word << 24) & 0xff000000) |
        ((word << 8) & 0xff0000) |
        ((word >>> 8) & 0xff00) |
        ((word >>> 24) & 0xff));
}
/** Conditionally byte swap if on a big-endian platform */
exports.byteSwapIfBE = exports.isLE
    ? (n) => n
    : (n) => byteSwap(n);
/** In place byte swap for Uint32Array */
function byteSwap32(arr) {
    for (let i = 0; i < arr.length; i++) {
        arr[i] = byteSwap(arr[i]);
    }
}
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * Convert byte array to hex string.
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    (0, _assert_js_1.abytes)(bytes);
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function asciiToBase16(ch) {
    if (ch >= asciis._0 && ch <= asciis._9)
        return ch - asciis._0; // '2' => 50-48
    if (ch >= asciis.A && ch <= asciis.F)
        return ch - (asciis.A - 10); // 'B' => 66-(65-10)
    if (ch >= asciis.a && ch <= asciis.f)
        return ch - (asciis.a - 10); // 'b' => 98-(97-10)
    return;
}
/**
 * Convert hex string to byte array.
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2)
        throw new Error('hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163
    }
    return array;
}
/**
 * There is no setImmediate in browser and setTimeout is slow.
 * Call of async fn will return Promise, which will be fullfiled only on
 * next scheduler queue processing step and this is exactly what we need.
 */
const nextTick = async () => { };
exports.nextTick = nextTick;
/** Returns control to thread each 'tick' ms to avoid blocking. */
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await (0, exports.nextTick)();
        ts += diff;
    }
}
/**
 * Convert JS string to byte array.
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error('utf8ToBytes expected string, got ' + typeof str);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    (0, _assert_js_1.abytes)(data);
    return data;
}
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    let sum = 0;
    for (let i = 0; i < arrays.length; i++) {
        const a = arrays[i];
        (0, _assert_js_1.abytes)(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
/** For runtime check if class implements interface */
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
exports.Hash = Hash;
function checkOpts(defaults, opts) {
    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')
        throw new Error('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
/** Wraps hash function, creating an interface on top of it */
function wrapConstructor(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
function wrapXOFConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */
function randomBytes(bytesLength = 32) {
    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {
        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    // Legacy Node.js compatibility
    if (crypto_1.crypto && typeof crypto_1.crypto.randomBytes === 'function') {
        return crypto_1.crypto.randomBytes(bytesLength);
    }
    throw new Error('crypto.getRandomValues must be defined');
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1.js":
/*!******************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var asn1 = exports;

asn1.bignum = __webpack_require__(/*! bn.js */ "./node_modules/asn1.js/node_modules/bn.js/lib/bn.js");

asn1.define = (__webpack_require__(/*! ./asn1/api */ "./node_modules/asn1.js/lib/asn1/api.js").define);
asn1.base = __webpack_require__(/*! ./asn1/base */ "./node_modules/asn1.js/lib/asn1/base/index.js");
asn1.constants = __webpack_require__(/*! ./asn1/constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");
asn1.decoders = __webpack_require__(/*! ./asn1/decoders */ "./node_modules/asn1.js/lib/asn1/decoders/index.js");
asn1.encoders = __webpack_require__(/*! ./asn1/encoders */ "./node_modules/asn1.js/lib/asn1/encoders/index.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/api.js":
/*!**********************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/api.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var asn1 = __webpack_require__(/*! ../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = (__webpack_require__(/*! vm */ "./node_modules/vm-browserify/index.js").runInThisContext)(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Reporter = (__webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").Reporter);
var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var base = exports;

base.Reporter = (__webpack_require__(/*! ./reporter */ "./node_modules/asn1.js/lib/asn1/base/reporter.js").Reporter);
base.DecoderBuffer = (__webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").DecoderBuffer);
base.EncoderBuffer = (__webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").EncoderBuffer);
base.Node = __webpack_require__(/*! ./node */ "./node_modules/asn1.js/lib/asn1/base/node.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/node.js":
/*!****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/node.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Reporter = (__webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").Reporter);
var EncoderBuffer = (__webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").EncoderBuffer);
var DecoderBuffer = (__webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").DecoderBuffer);
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/der.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var constants = __webpack_require__(/*! ../constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/constants/der.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var decoders = exports;

decoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");
decoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/decoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);

var DERDecoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var encoders = exports;

encoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");
encoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/encoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var DEREncoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};


/***/ }),

/***/ "./node_modules/asn1.js/node_modules/bn.js/lib/bn.js":
/*!***********************************************************!*\
  !*** ./node_modules/asn1.js/node_modules/bn.js/lib/bn.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?d546").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/assert/build/assert.js":
/*!*********************************************!*\
  !*** ./node_modules/assert/build/assert.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");
// Currently in sync with Node.js lib/assert.js
// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b

// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.



function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
var _require = __webpack_require__(/*! ./internal/errors */ "./node_modules/assert/build/internal/errors.js"),
  _require$codes = _require.codes,
  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,
  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,
  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
var AssertionError = __webpack_require__(/*! ./internal/assert/assertion_error */ "./node_modules/assert/build/internal/assert/assertion_error.js");
var _require2 = __webpack_require__(/*! util/ */ "./node_modules/util/util.js"),
  inspect = _require2.inspect;
var _require$types = (__webpack_require__(/*! util/ */ "./node_modules/util/util.js").types),
  isPromise = _require$types.isPromise,
  isRegExp = _require$types.isRegExp;
var objectAssign = __webpack_require__(/*! object.assign/polyfill */ "./node_modules/object.assign/polyfill.js")();
var objectIs = __webpack_require__(/*! object-is/polyfill */ "./node_modules/object-is/polyfill.js")();
var RegExpPrototypeTest = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js")('RegExp.prototype.test');
var errorCache = new Map();
var isDeepEqual;
var isDeepStrictEqual;
var parseExpressionAt;
var findNodeAround;
var decoder;
function lazyLoadComparison() {
  var comparison = __webpack_require__(/*! ./internal/util/comparisons */ "./node_modules/assert/build/internal/util/comparisons.js");
  isDeepEqual = comparison.isDeepEqual;
  isDeepStrictEqual = comparison.isDeepStrictEqual;
}

// Escape control characters but not \n and \t to keep the line breaks and
// indentation intact.
// eslint-disable-next-line no-control-regex
var escapeSequencesRegExp = /[\x00-\x08\x0b\x0c\x0e-\x1f]/g;
var meta = ["\\u0000", "\\u0001", "\\u0002", "\\u0003", "\\u0004", "\\u0005", "\\u0006", "\\u0007", '\\b', '', '', "\\u000b", '\\f', '', "\\u000e", "\\u000f", "\\u0010", "\\u0011", "\\u0012", "\\u0013", "\\u0014", "\\u0015", "\\u0016", "\\u0017", "\\u0018", "\\u0019", "\\u001a", "\\u001b", "\\u001c", "\\u001d", "\\u001e", "\\u001f"];
var escapeFn = function escapeFn(str) {
  return meta[str.charCodeAt(0)];
};
var warned = false;

// The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;
var NO_EXCEPTION_SENTINEL = {};

// All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided. All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function innerFail(obj) {
  if (obj.message instanceof Error) throw obj.message;
  throw new AssertionError(obj);
}
function fail(actual, expected, message, operator, stackStartFn) {
  var argsLen = arguments.length;
  var internalMessage;
  if (argsLen === 0) {
    internalMessage = 'Failed';
  } else if (argsLen === 1) {
    message = actual;
    actual = undefined;
  } else {
    if (warned === false) {
      warned = true;
      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);
      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');
    }
    if (argsLen === 2) operator = '!=';
  }
  if (message instanceof Error) throw message;
  var errArgs = {
    actual: actual,
    expected: expected,
    operator: operator === undefined ? 'fail' : operator,
    stackStartFn: stackStartFn || fail
  };
  if (message !== undefined) {
    errArgs.message = message;
  }
  var err = new AssertionError(errArgs);
  if (internalMessage) {
    err.message = internalMessage;
    err.generatedMessage = true;
  }
  throw err;
}
assert.fail = fail;

// The AssertionError is defined in internal/error.
assert.AssertionError = AssertionError;
function innerOk(fn, argLen, value, message) {
  if (!value) {
    var generatedMessage = false;
    if (argLen === 0) {
      generatedMessage = true;
      message = 'No value argument passed to `assert.ok()`';
    } else if (message instanceof Error) {
      throw message;
    }
    var err = new AssertionError({
      actual: value,
      expected: true,
      message: message,
      operator: '==',
      stackStartFn: fn
    });
    err.generatedMessage = generatedMessage;
    throw err;
  }
}

// Pure assertion tests whether a value is truthy, as determined
// by !!value.
function ok() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  innerOk.apply(void 0, [ok, args.length].concat(args));
}
assert.ok = ok;

// The equality assertion tests shallow, coercive equality with ==.
/* eslint-disable no-restricted-properties */
assert.equal = function equal(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  // eslint-disable-next-line eqeqeq
  if (actual != expected) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: '==',
      stackStartFn: equal
    });
  }
};

// The non-equality assertion tests for whether two objects are not
// equal with !=.
assert.notEqual = function notEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  // eslint-disable-next-line eqeqeq
  if (actual == expected) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: '!=',
      stackStartFn: notEqual
    });
  }
};

// The equivalence assertion tests a deep equality relation.
assert.deepEqual = function deepEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (!isDeepEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'deepEqual',
      stackStartFn: deepEqual
    });
  }
};

// The non-equivalence assertion tests for any deep inequality.
assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (isDeepEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'notDeepEqual',
      stackStartFn: notDeepEqual
    });
  }
};
/* eslint-enable */

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (!isDeepStrictEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'deepStrictEqual',
      stackStartFn: deepStrictEqual
    });
  }
};
assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (isDeepStrictEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'notDeepStrictEqual',
      stackStartFn: notDeepStrictEqual
    });
  }
}
assert.strictEqual = function strictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (!objectIs(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'strictEqual',
      stackStartFn: strictEqual
    });
  }
};
assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (objectIs(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'notStrictEqual',
      stackStartFn: notStrictEqual
    });
  }
};
var Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {
  var _this = this;
  _classCallCheck(this, Comparison);
  keys.forEach(function (key) {
    if (key in obj) {
      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {
        _this[key] = actual[key];
      } else {
        _this[key] = obj[key];
      }
    }
  });
});
function compareExceptionKey(actual, expected, key, message, keys, fn) {
  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {
    if (!message) {
      // Create placeholder objects to create a nice output.
      var a = new Comparison(actual, keys);
      var b = new Comparison(expected, keys, actual);
      var err = new AssertionError({
        actual: a,
        expected: b,
        operator: 'deepStrictEqual',
        stackStartFn: fn
      });
      err.actual = actual;
      err.expected = expected;
      err.operator = fn.name;
      throw err;
    }
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: fn.name,
      stackStartFn: fn
    });
  }
}
function expectedException(actual, expected, msg, fn) {
  if (typeof expected !== 'function') {
    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);
    // assert.doesNotThrow does not accept objects.
    if (arguments.length === 2) {
      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);
    }

    // Handle primitives properly.
    if (_typeof(actual) !== 'object' || actual === null) {
      var err = new AssertionError({
        actual: actual,
        expected: expected,
        message: msg,
        operator: 'deepStrictEqual',
        stackStartFn: fn
      });
      err.operator = fn.name;
      throw err;
    }
    var keys = Object.keys(expected);
    // Special handle errors to make sure the name and the message are compared
    // as well.
    if (expected instanceof Error) {
      keys.push('name', 'message');
    } else if (keys.length === 0) {
      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');
    }
    if (isDeepEqual === undefined) lazyLoadComparison();
    keys.forEach(function (key) {
      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {
        return;
      }
      compareExceptionKey(actual, expected, key, msg, keys, fn);
    });
    return true;
  }
  // Guard instanceof against arrow functions as they don't have a prototype.
  if (expected.prototype !== undefined && actual instanceof expected) {
    return true;
  }
  if (Error.isPrototypeOf(expected)) {
    return false;
  }
  return expected.call({}, actual) === true;
}
function getActual(fn) {
  if (typeof fn !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);
  }
  try {
    fn();
  } catch (e) {
    return e;
  }
  return NO_EXCEPTION_SENTINEL;
}
function checkIsPromise(obj) {
  // Accept native ES6 promises and promises that are implemented in a similar
  // way. Do not accept thenables that use a function as `obj` and that have no
  // `catch` handler.

  // TODO: thenables are checked up until they have the correct methods,
  // but according to documentation, the `then` method should receive
  // the `fulfill` and `reject` arguments as well or it may be never resolved.

  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';
}
function waitForActual(promiseFn) {
  return Promise.resolve().then(function () {
    var resultPromise;
    if (typeof promiseFn === 'function') {
      // Return a rejected promise if `promiseFn` throws synchronously.
      resultPromise = promiseFn();
      // Fail in case no promise is returned.
      if (!checkIsPromise(resultPromise)) {
        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);
      }
    } else if (checkIsPromise(promiseFn)) {
      resultPromise = promiseFn;
    } else {
      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);
    }
    return Promise.resolve().then(function () {
      return resultPromise;
    }).then(function () {
      return NO_EXCEPTION_SENTINEL;
    }).catch(function (e) {
      return e;
    });
  });
}
function expectsError(stackStartFn, actual, error, message) {
  if (typeof error === 'string') {
    if (arguments.length === 4) {
      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);
    }
    if (_typeof(actual) === 'object' && actual !== null) {
      if (actual.message === error) {
        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', "The error message \"".concat(actual.message, "\" is identical to the message."));
      }
    } else if (actual === error) {
      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', "The error \"".concat(actual, "\" is identical to the message."));
    }
    message = error;
    error = undefined;
  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);
  }
  if (actual === NO_EXCEPTION_SENTINEL) {
    var details = '';
    if (error && error.name) {
      details += " (".concat(error.name, ")");
    }
    details += message ? ": ".concat(message) : '.';
    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';
    innerFail({
      actual: undefined,
      expected: error,
      operator: stackStartFn.name,
      message: "Missing expected ".concat(fnType).concat(details),
      stackStartFn: stackStartFn
    });
  }
  if (error && !expectedException(actual, error, message, stackStartFn)) {
    throw actual;
  }
}
function expectsNoError(stackStartFn, actual, error, message) {
  if (actual === NO_EXCEPTION_SENTINEL) return;
  if (typeof error === 'string') {
    message = error;
    error = undefined;
  }
  if (!error || expectedException(actual, error)) {
    var details = message ? ": ".concat(message) : '.';
    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';
    innerFail({
      actual: actual,
      expected: error,
      operator: stackStartFn.name,
      message: "Got unwanted ".concat(fnType).concat(details, "\n") + "Actual message: \"".concat(actual && actual.message, "\""),
      stackStartFn: stackStartFn
    });
  }
  throw actual;
}
assert.throws = function throws(promiseFn) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }
  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));
};
assert.rejects = function rejects(promiseFn) {
  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }
  return waitForActual(promiseFn).then(function (result) {
    return expectsError.apply(void 0, [rejects, result].concat(args));
  });
};
assert.doesNotThrow = function doesNotThrow(fn) {
  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }
  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));
};
assert.doesNotReject = function doesNotReject(fn) {
  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
    args[_key5 - 1] = arguments[_key5];
  }
  return waitForActual(fn).then(function (result) {
    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));
  });
};
assert.ifError = function ifError(err) {
  if (err !== null && err !== undefined) {
    var message = 'ifError got unwanted exception: ';
    if (_typeof(err) === 'object' && typeof err.message === 'string') {
      if (err.message.length === 0 && err.constructor) {
        message += err.constructor.name;
      } else {
        message += err.message;
      }
    } else {
      message += inspect(err);
    }
    var newErr = new AssertionError({
      actual: err,
      expected: null,
      operator: 'ifError',
      message: message,
      stackStartFn: ifError
    });

    // Make sure we actually have a stack trace!
    var origStack = err.stack;
    if (typeof origStack === 'string') {
      // This will remove any duplicated frames from the error frames taken
      // from within `ifError` and add the original error frames to the newly
      // created ones.
      var tmp2 = origStack.split('\n');
      tmp2.shift();
      // Filter all frames existing in err.stack.
      var tmp1 = newErr.stack.split('\n');
      for (var i = 0; i < tmp2.length; i++) {
        // Find the first occurrence of the frame.
        var pos = tmp1.indexOf(tmp2[i]);
        if (pos !== -1) {
          // Only keep new frames.
          tmp1 = tmp1.slice(0, pos);
          break;
        }
      }
      newErr.stack = "".concat(tmp1.join('\n'), "\n").concat(tmp2.join('\n'));
    }
    throw newErr;
  }
};

// Currently in sync with Node.js lib/assert.js
// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb
function internalMatch(string, regexp, message, fn, fnName) {
  if (!isRegExp(regexp)) {
    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);
  }
  var match = fnName === 'match';
  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {
    if (message instanceof Error) {
      throw message;
    }
    var generatedMessage = !message;

    // 'The input was expected to not match the regular expression ' +
    message = message || (typeof string !== 'string' ? 'The "string" argument must be of type string. Received type ' + "".concat(_typeof(string), " (").concat(inspect(string), ")") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + "".concat(inspect(regexp), ". Input:\n\n").concat(inspect(string), "\n"));
    var err = new AssertionError({
      actual: string,
      expected: regexp,
      message: message,
      operator: fnName,
      stackStartFn: fn
    });
    err.generatedMessage = generatedMessage;
    throw err;
  }
}
assert.match = function match(string, regexp, message) {
  internalMatch(string, regexp, message, match, 'match');
};
assert.doesNotMatch = function doesNotMatch(string, regexp, message) {
  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');
};

// Expose a strict only variant of assert
function strict() {
  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }
  innerOk.apply(void 0, [strict, args.length].concat(args));
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

/***/ }),

/***/ "./node_modules/assert/build/internal/assert/assertion_error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/assert/build/internal/assert/assertion_error.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
// Currently in sync with Node.js lib/internal/assert/assertion_error.js
// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c



function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _require = __webpack_require__(/*! util/ */ "./node_modules/util/util.js"),
  inspect = _require.inspect;
var _require2 = __webpack_require__(/*! ../errors */ "./node_modules/assert/build/internal/errors.js"),
  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }
  return str.substring(this_len - search.length, this_len) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat
function repeat(str, count) {
  count = Math.floor(count);
  if (str.length == 0 || count == 0) return '';
  var maxCount = str.length * count;
  count = Math.floor(Math.log(count) / Math.log(2));
  while (count) {
    str += str;
    count--;
  }
  str += str.substring(0, maxCount - str.length);
  return str;
}
var blue = '';
var green = '';
var red = '';
var white = '';
var kReadableOperator = {
  deepStrictEqual: 'Expected values to be strictly deep-equal:',
  strictEqual: 'Expected values to be strictly equal:',
  strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
  deepEqual: 'Expected values to be loosely deep-equal:',
  equal: 'Expected values to be loosely equal:',
  notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
  notStrictEqual: 'Expected "actual" to be strictly unequal to:',
  notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
  notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
  notEqual: 'Expected "actual" to be loosely unequal to:',
  notIdentical: 'Values identical but not reference-equal:'
};

// Comparing short primitives should just show === / !== instead of using the
// diff.
var kMaxShortLength = 10;
function copyError(source) {
  var keys = Object.keys(source);
  var target = Object.create(Object.getPrototypeOf(source));
  keys.forEach(function (key) {
    target[key] = source[key];
  });
  Object.defineProperty(target, 'message', {
    value: source.message
  });
  return target;
}
function inspectValue(val) {
  // The util.inspect default values could be changed. This makes sure the
  // error messages contain the necessary information nevertheless.
  return inspect(val, {
    compact: false,
    customInspect: false,
    depth: 1000,
    maxArrayLength: Infinity,
    // Assert compares only enumerable properties (with a few exceptions).
    showHidden: false,
    // Having a long line as error is better than wrapping the line for
    // comparison for now.
    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we
    // have meta information about the inspected properties (i.e., know where
    // in what line the property starts and ends).
    breakLength: Infinity,
    // Assert does not detect proxies currently.
    showProxy: false,
    sorted: true,
    // Inspect getters as we also check them when comparing entries.
    getters: true
  });
}
function createErrDiff(actual, expected, operator) {
  var other = '';
  var res = '';
  var lastPos = 0;
  var end = '';
  var skipped = false;
  var actualInspected = inspectValue(actual);
  var actualLines = actualInspected.split('\n');
  var expectedLines = inspectValue(expected).split('\n');
  var i = 0;
  var indicator = '';

  // In case both values are objects explicitly mark them as not reference equal
  // for the `strictEqual` operator.
  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {
    operator = 'strictEqualObject';
  }

  // If "actual" and "expected" fit on a single line and they are not strictly
  // equal, check further special handling.
  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {
    var inputLength = actualLines[0].length + expectedLines[0].length;
    // If the character length of "actual" and "expected" together is less than
    // kMaxShortLength and if neither is an object and at least one of them is
    // not `zero`, use the strict equal comparison to visualize the output.
    if (inputLength <= kMaxShortLength) {
      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {
        // -0 === +0
        return "".concat(kReadableOperator[operator], "\n\n") + "".concat(actualLines[0], " !== ").concat(expectedLines[0], "\n");
      }
    } else if (operator !== 'strictEqualObject') {
      // If the stderr is a tty and the input length is lower than the current
      // columns per line, add a mismatch indicator below the output. If it is
      // not a tty, use a default value of 80 characters.
      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;
      if (inputLength < maxLength) {
        while (actualLines[0][i] === expectedLines[0][i]) {
          i++;
        }
        // Ignore the first characters.
        if (i > 2) {
          // Add position indicator for the first mismatch in case it is a
          // single line and the input length is less than the column length.
          indicator = "\n  ".concat(repeat(' ', i), "^");
          i = 0;
        }
      }
    }
  }

  // Remove all ending lines that match (this optimizes the output for
  // readability by reducing the number of total changed lines).
  var a = actualLines[actualLines.length - 1];
  var b = expectedLines[expectedLines.length - 1];
  while (a === b) {
    if (i++ < 2) {
      end = "\n  ".concat(a).concat(end);
    } else {
      other = a;
    }
    actualLines.pop();
    expectedLines.pop();
    if (actualLines.length === 0 || expectedLines.length === 0) break;
    a = actualLines[actualLines.length - 1];
    b = expectedLines[expectedLines.length - 1];
  }
  var maxLines = Math.max(actualLines.length, expectedLines.length);
  // Strict equal with identical objects that are not identical by reference.
  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })
  if (maxLines === 0) {
    // We have to get the result again. The lines were all removed before.
    var _actualLines = actualInspected.split('\n');

    // Only remove lines in case it makes sense to collapse those.
    // TODO: Accept env to always show the full error.
    if (_actualLines.length > 30) {
      _actualLines[26] = "".concat(blue, "...").concat(white);
      while (_actualLines.length > 27) {
        _actualLines.pop();
      }
    }
    return "".concat(kReadableOperator.notIdentical, "\n\n").concat(_actualLines.join('\n'), "\n");
  }
  if (i > 3) {
    end = "\n".concat(blue, "...").concat(white).concat(end);
    skipped = true;
  }
  if (other !== '') {
    end = "\n  ".concat(other).concat(end);
    other = '';
  }
  var printedLines = 0;
  var msg = kReadableOperator[operator] + "\n".concat(green, "+ actual").concat(white, " ").concat(red, "- expected").concat(white);
  var skippedMsg = " ".concat(blue, "...").concat(white, " Lines skipped");
  for (i = 0; i < maxLines; i++) {
    // Only extra expected lines exist
    var cur = i - lastPos;
    if (actualLines.length < i + 1) {
      // If the last diverging line is more than one line above and the
      // current line is at least line three, add some of the former lines and
      // also add dots to indicate skipped entries.
      if (cur > 1 && i > 2) {
        if (cur > 4) {
          res += "\n".concat(blue, "...").concat(white);
          skipped = true;
        } else if (cur > 3) {
          res += "\n  ".concat(expectedLines[i - 2]);
          printedLines++;
        }
        res += "\n  ".concat(expectedLines[i - 1]);
        printedLines++;
      }
      // Mark the current line as the last diverging one.
      lastPos = i;
      // Add the expected line to the cache.
      other += "\n".concat(red, "-").concat(white, " ").concat(expectedLines[i]);
      printedLines++;
      // Only extra actual lines exist
    } else if (expectedLines.length < i + 1) {
      // If the last diverging line is more than one line above and the
      // current line is at least line three, add some of the former lines and
      // also add dots to indicate skipped entries.
      if (cur > 1 && i > 2) {
        if (cur > 4) {
          res += "\n".concat(blue, "...").concat(white);
          skipped = true;
        } else if (cur > 3) {
          res += "\n  ".concat(actualLines[i - 2]);
          printedLines++;
        }
        res += "\n  ".concat(actualLines[i - 1]);
        printedLines++;
      }
      // Mark the current line as the last diverging one.
      lastPos = i;
      // Add the actual line to the result.
      res += "\n".concat(green, "+").concat(white, " ").concat(actualLines[i]);
      printedLines++;
      // Lines diverge
    } else {
      var expectedLine = expectedLines[i];
      var actualLine = actualLines[i];
      // If the lines diverge, specifically check for lines that only diverge by
      // a trailing comma. In that case it is actually identical and we should
      // mark it as such.
      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);
      // If the expected line has a trailing comma but is otherwise identical,
      // add a comma at the end of the actual line. Otherwise the output could
      // look weird as in:
      //
      //   [
      //     1         // No comma at the end!
      // +   2
      //   ]
      //
      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {
        divergingLines = false;
        actualLine += ',';
      }
      if (divergingLines) {
        // If the last diverging line is more than one line above and the
        // current line is at least line three, add some of the former lines and
        // also add dots to indicate skipped entries.
        if (cur > 1 && i > 2) {
          if (cur > 4) {
            res += "\n".concat(blue, "...").concat(white);
            skipped = true;
          } else if (cur > 3) {
            res += "\n  ".concat(actualLines[i - 2]);
            printedLines++;
          }
          res += "\n  ".concat(actualLines[i - 1]);
          printedLines++;
        }
        // Mark the current line as the last diverging one.
        lastPos = i;
        // Add the actual line to the result and cache the expected diverging
        // line so consecutive diverging lines show up as +++--- and not +-+-+-.
        res += "\n".concat(green, "+").concat(white, " ").concat(actualLine);
        other += "\n".concat(red, "-").concat(white, " ").concat(expectedLine);
        printedLines += 2;
        // Lines are identical
      } else {
        // Add all cached information to the result before adding other things
        // and reset the cache.
        res += other;
        other = '';
        // If the last diverging line is exactly one line above or if it is the
        // very first line, add the line to the result.
        if (cur === 1 || i === 0) {
          res += "\n  ".concat(actualLine);
          printedLines++;
        }
      }
    }
    // Inspected object to big (Show ~20 rows max)
    if (printedLines > 20 && i < maxLines - 2) {
      return "".concat(msg).concat(skippedMsg, "\n").concat(res, "\n").concat(blue, "...").concat(white).concat(other, "\n") + "".concat(blue, "...").concat(white);
    }
  }
  return "".concat(msg).concat(skipped ? skippedMsg : '', "\n").concat(res).concat(other).concat(end).concat(indicator);
}
var AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {
  _inherits(AssertionError, _Error);
  var _super = _createSuper(AssertionError);
  function AssertionError(options) {
    var _this;
    _classCallCheck(this, AssertionError);
    if (_typeof(options) !== 'object' || options === null) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    var message = options.message,
      operator = options.operator,
      stackStartFn = options.stackStartFn;
    var actual = options.actual,
      expected = options.expected;
    var limit = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    if (message != null) {
      _this = _super.call(this, String(message));
    } else {
      if (process.stderr && process.stderr.isTTY) {
        // Reset on each call to make sure we handle dynamically set environment
        // variables correct.
        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {
          blue = "\x1B[34m";
          green = "\x1B[32m";
          white = "\x1B[39m";
          red = "\x1B[31m";
        } else {
          blue = '';
          green = '';
          white = '';
          red = '';
        }
      }
      // Prevent the error stack from being visible by duplicating the error
      // in a very close way to the original in case both sides are actually
      // instances of Error.
      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {
        actual = copyError(actual);
        expected = copyError(expected);
      }
      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {
        _this = _super.call(this, createErrDiff(actual, expected, operator));
      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {
        // In case the objects are equal but the operator requires unequal, show
        // the first object and say A equals B
        var base = kReadableOperator[operator];
        var res = inspectValue(actual).split('\n');

        // In case "actual" is an object, it should not be reference equal.
        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {
          base = kReadableOperator.notStrictEqualObject;
        }

        // Only remove lines in case it makes sense to collapse those.
        // TODO: Accept env to always show the full error.
        if (res.length > 30) {
          res[26] = "".concat(blue, "...").concat(white);
          while (res.length > 27) {
            res.pop();
          }
        }

        // Only print a single input.
        if (res.length === 1) {
          _this = _super.call(this, "".concat(base, " ").concat(res[0]));
        } else {
          _this = _super.call(this, "".concat(base, "\n\n").concat(res.join('\n'), "\n"));
        }
      } else {
        var _res = inspectValue(actual);
        var other = '';
        var knownOperators = kReadableOperator[operator];
        if (operator === 'notDeepEqual' || operator === 'notEqual') {
          _res = "".concat(kReadableOperator[operator], "\n\n").concat(_res);
          if (_res.length > 1024) {
            _res = "".concat(_res.slice(0, 1021), "...");
          }
        } else {
          other = "".concat(inspectValue(expected));
          if (_res.length > 512) {
            _res = "".concat(_res.slice(0, 509), "...");
          }
          if (other.length > 512) {
            other = "".concat(other.slice(0, 509), "...");
          }
          if (operator === 'deepEqual' || operator === 'equal') {
            _res = "".concat(knownOperators, "\n\n").concat(_res, "\n\nshould equal\n\n");
          } else {
            other = " ".concat(operator, " ").concat(other);
          }
        }
        _this = _super.call(this, "".concat(_res).concat(other));
      }
    }
    Error.stackTraceLimit = limit;
    _this.generatedMessage = !message;
    Object.defineProperty(_assertThisInitialized(_this), 'name', {
      value: 'AssertionError [ERR_ASSERTION]',
      enumerable: false,
      writable: true,
      configurable: true
    });
    _this.code = 'ERR_ASSERTION';
    _this.actual = actual;
    _this.expected = expected;
    _this.operator = operator;
    if (Error.captureStackTrace) {
      // eslint-disable-next-line no-restricted-syntax
      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);
    }
    // Create error message including the error code in the name.
    _this.stack;
    // Reset the name.
    _this.name = 'AssertionError';
    return _possibleConstructorReturn(_this);
  }
  _createClass(AssertionError, [{
    key: "toString",
    value: function toString() {
      return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
    }
  }, {
    key: _inspect$custom,
    value: function value(recurseTimes, ctx) {
      // This limits the `actual` and `expected` property default inspection to
      // the minimum depth. Otherwise those values would be too verbose compared
      // to the actual error message which contains a combined view of these two
      // input values.
      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {
        customInspect: false,
        depth: 0
      }));
    }
  }]);
  return AssertionError;
}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);
module.exports = AssertionError;

/***/ }),

/***/ "./node_modules/assert/build/internal/errors.js":
/*!******************************************************!*\
  !*** ./node_modules/assert/build/internal/errors.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Currently in sync with Node.js lib/internal/errors.js
// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f

/* eslint node-core/documented-errors: "error" */
/* eslint node-core/alphabetize-errors: "error" */
/* eslint node-core/prefer-util-format-errors: "error" */



// The whole point behind this internal module is to allow Node.js to no
// longer be forced to treat every error message change as a semver-major
// change. The NodeError classes here all expose a `code` property whose
// value statically and permanently identifies the error. While the error
// message may change, the code should not.
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var codes = {};

// Lazy loaded
var assert;
var util;
function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }
  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }
  var NodeError = /*#__PURE__*/function (_Base) {
    _inherits(NodeError, _Base);
    var _super = _createSuper(NodeError);
    function NodeError(arg1, arg2, arg3) {
      var _this;
      _classCallCheck(this, NodeError);
      _this = _super.call(this, getMessage(arg1, arg2, arg3));
      _this.code = code;
      return _this;
    }
    return _createClass(NodeError);
  }(Base);
  codes[code] = NodeError;
}

// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });
    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }
  return str.substring(this_len - search.length, this_len) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }
  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}
createErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The "%s" argument is ambiguous. %s', TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  if (assert === undefined) assert = __webpack_require__(/*! ../assert */ "./node_modules/assert/build/assert.js");
  assert(typeof name === 'string', "'name' must be a string");

  // determiner: 'must be' or 'must not be'
  var determiner;
  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }
  var msg;
  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  // TODO(BridgeAR): Improve the output by showing `null` and similar.
  msg += ". Received type ".concat(_typeof(actual));
  return msg;
}, TypeError);
createErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {
  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';
  if (util === undefined) util = __webpack_require__(/*! util/ */ "./node_modules/util/util.js");
  var inspected = util.inspect(value);
  if (inspected.length > 128) {
    inspected = "".concat(inspected.slice(0, 128), "...");
  }
  return "The argument '".concat(name, "' ").concat(reason, ". Received ").concat(inspected);
}, TypeError, RangeError);
createErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {
  var type;
  if (value && value.constructor && value.constructor.name) {
    type = "instance of ".concat(value.constructor.name);
  } else {
    type = "type ".concat(_typeof(value));
  }
  return "Expected ".concat(input, " to be returned from the \"").concat(name, "\"") + " function but got ".concat(type, ".");
}, TypeError);
createErrorType('ERR_MISSING_ARGS', function () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (assert === undefined) assert = __webpack_require__(/*! ../assert */ "./node_modules/assert/build/assert.js");
  assert(args.length > 0, 'At least one arg needs to be specified');
  var msg = 'The ';
  var len = args.length;
  args = args.map(function (a) {
    return "\"".concat(a, "\"");
  });
  switch (len) {
    case 1:
      msg += "".concat(args[0], " argument");
      break;
    case 2:
      msg += "".concat(args[0], " and ").concat(args[1], " arguments");
      break;
    default:
      msg += args.slice(0, len - 1).join(', ');
      msg += ", and ".concat(args[len - 1], " arguments");
      break;
  }
  return "".concat(msg, " must be specified");
}, TypeError);
module.exports.codes = codes;

/***/ }),

/***/ "./node_modules/assert/build/internal/util/comparisons.js":
/*!****************************************************************!*\
  !*** ./node_modules/assert/build/internal/util/comparisons.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Currently in sync with Node.js lib/internal/util/comparisons.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9



function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var regexFlagsSupported = /a/g.flags !== undefined;
var arrayFromSet = function arrayFromSet(set) {
  var array = [];
  set.forEach(function (value) {
    return array.push(value);
  });
  return array;
};
var arrayFromMap = function arrayFromMap(map) {
  var array = [];
  map.forEach(function (value, key) {
    return array.push([key, value]);
  });
  return array;
};
var objectIs = Object.is ? Object.is : __webpack_require__(/*! object-is */ "./node_modules/object-is/index.js");
var objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {
  return [];
};
var numberIsNaN = Number.isNaN ? Number.isNaN : __webpack_require__(/*! is-nan */ "./node_modules/is-nan/index.js");
function uncurryThis(f) {
  return f.call.bind(f);
}
var hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);
var propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);
var objectToString = uncurryThis(Object.prototype.toString);
var _require$types = (__webpack_require__(/*! util/ */ "./node_modules/util/util.js").types),
  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,
  isArrayBufferView = _require$types.isArrayBufferView,
  isDate = _require$types.isDate,
  isMap = _require$types.isMap,
  isRegExp = _require$types.isRegExp,
  isSet = _require$types.isSet,
  isNativeError = _require$types.isNativeError,
  isBoxedPrimitive = _require$types.isBoxedPrimitive,
  isNumberObject = _require$types.isNumberObject,
  isStringObject = _require$types.isStringObject,
  isBooleanObject = _require$types.isBooleanObject,
  isBigIntObject = _require$types.isBigIntObject,
  isSymbolObject = _require$types.isSymbolObject,
  isFloat32Array = _require$types.isFloat32Array,
  isFloat64Array = _require$types.isFloat64Array;
function isNonIndex(key) {
  if (key.length === 0 || key.length > 10) return true;
  for (var i = 0; i < key.length; i++) {
    var code = key.charCodeAt(i);
    if (code < 48 || code > 57) return true;
  }
  // The maximum size for an array is 2 ** 32 -1.
  return key.length === 10 && key >= Math.pow(2, 32);
}
function getOwnNonIndexProperties(value) {
  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));
}

// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }
  var x = a.length;
  var y = b.length;
  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }
  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
var ONLY_ENUMERABLE = undefined;
var kStrict = true;
var kLoose = false;
var kNoIterator = 0;
var kIsArray = 1;
var kIsSet = 2;
var kIsMap = 3;

// Check if they have the same source and flags
function areSimilarRegExps(a, b) {
  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);
}
function areSimilarFloatArrays(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  for (var offset = 0; offset < a.byteLength; offset++) {
    if (a[offset] !== b[offset]) {
      return false;
    }
  }
  return true;
}
function areSimilarTypedArrays(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;
}
function areEqualArrayBuffers(buf1, buf2) {
  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;
}
function isEqualBoxedPrimitive(val1, val2) {
  if (isNumberObject(val1)) {
    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));
  }
  if (isStringObject(val1)) {
    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);
  }
  if (isBooleanObject(val1)) {
    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);
  }
  if (isBigIntObject(val1)) {
    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);
  }
  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);
}

// Notes: Type tags are historical [[Class]] properties that can be set by
// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS
// and retrieved using Object.prototype.toString.call(obj) in JS
// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring
// for a list of tags pre-defined in the spec.
// There are some unspecified tags in the wild too (e.g. typed array tags).
// Since tags can be altered, they only serve fast failures
//
// Typed arrays and buffers are checked by comparing the content in their
// underlying ArrayBuffer. This optimization requires that it's
// reasonable to interpret their underlying memory in the same way,
// which is checked by comparing their type tags.
// (e.g. a Uint8Array and a Uint16Array with the same memory content
// could still be different because they will be interpreted differently).
//
// For strict comparison, objects should have
// a) The same built-in type tags
// b) The same prototypes.

function innerDeepEqual(val1, val2, strict, memos) {
  // All identical values are equivalent, as determined by ===.
  if (val1 === val2) {
    if (val1 !== 0) return true;
    return strict ? objectIs(val1, val2) : true;
  }

  // Check more closely if val1 and val2 are equal.
  if (strict) {
    if (_typeof(val1) !== 'object') {
      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);
    }
    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {
      return false;
    }
    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {
      return false;
    }
  } else {
    if (val1 === null || _typeof(val1) !== 'object') {
      if (val2 === null || _typeof(val2) !== 'object') {
        // eslint-disable-next-line eqeqeq
        return val1 == val2;
      }
      return false;
    }
    if (val2 === null || _typeof(val2) !== 'object') {
      return false;
    }
  }
  var val1Tag = objectToString(val1);
  var val2Tag = objectToString(val2);
  if (val1Tag !== val2Tag) {
    return false;
  }
  if (Array.isArray(val1)) {
    // Check for sparse arrays and general fast path
    if (val1.length !== val2.length) {
      return false;
    }
    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);
    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);
    if (keys1.length !== keys2.length) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);
  }
  // [browserify] This triggers on certain types in IE (Map/Set) so we don't
  // wan't to early return out of the rest of the checks. However we can check
  // if the second value is one of these values and the first isn't.
  if (val1Tag === '[object Object]') {
    // return keyCheck(val1, val2, strict, memos, kNoIterator);
    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {
      return false;
    }
  }
  if (isDate(val1)) {
    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {
      return false;
    }
  } else if (isRegExp(val1)) {
    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {
      return false;
    }
  } else if (isNativeError(val1) || val1 instanceof Error) {
    // Do not compare the stack as it might differ even though the error itself
    // is otherwise identical.
    if (val1.message !== val2.message || val1.name !== val2.name) {
      return false;
    }
  } else if (isArrayBufferView(val1)) {
    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {
      if (!areSimilarFloatArrays(val1, val2)) {
        return false;
      }
    } else if (!areSimilarTypedArrays(val1, val2)) {
      return false;
    }
    // Buffer.compare returns true, so val1.length === val2.length. If they both
    // only contain numeric keys, we don't need to exam further than checking
    // the symbols.
    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);
    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);
    if (_keys.length !== _keys2.length) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);
  } else if (isSet(val1)) {
    if (!isSet(val2) || val1.size !== val2.size) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsSet);
  } else if (isMap(val1)) {
    if (!isMap(val2) || val1.size !== val2.size) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsMap);
  } else if (isAnyArrayBuffer(val1)) {
    if (!areEqualArrayBuffers(val1, val2)) {
      return false;
    }
  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {
    return false;
  }
  return keyCheck(val1, val2, strict, memos, kNoIterator);
}
function getEnumerables(val, keys) {
  return keys.filter(function (k) {
    return propertyIsEnumerable(val, k);
  });
}
function keyCheck(val1, val2, strict, memos, iterationType, aKeys) {
  // For all remaining Object pairs, including Array, objects and Maps,
  // equivalence is determined by having:
  // a) The same number of owned enumerable properties
  // b) The same set of keys/indexes (although not necessarily the same order)
  // c) Equivalent values for every corresponding key/index
  // d) For Sets and Maps, equal contents
  // Note: this accounts for both named and indexed properties on Arrays.
  if (arguments.length === 5) {
    aKeys = Object.keys(val1);
    var bKeys = Object.keys(val2);

    // The pair must have the same number of owned properties.
    if (aKeys.length !== bKeys.length) {
      return false;
    }
  }

  // Cheap key test
  var i = 0;
  for (; i < aKeys.length; i++) {
    if (!hasOwnProperty(val2, aKeys[i])) {
      return false;
    }
  }
  if (strict && arguments.length === 5) {
    var symbolKeysA = objectGetOwnPropertySymbols(val1);
    if (symbolKeysA.length !== 0) {
      var count = 0;
      for (i = 0; i < symbolKeysA.length; i++) {
        var key = symbolKeysA[i];
        if (propertyIsEnumerable(val1, key)) {
          if (!propertyIsEnumerable(val2, key)) {
            return false;
          }
          aKeys.push(key);
          count++;
        } else if (propertyIsEnumerable(val2, key)) {
          return false;
        }
      }
      var symbolKeysB = objectGetOwnPropertySymbols(val2);
      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {
        return false;
      }
    } else {
      var _symbolKeysB = objectGetOwnPropertySymbols(val2);
      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {
        return false;
      }
    }
  }
  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {
    return true;
  }

  // Use memos to handle cycles.
  if (memos === undefined) {
    memos = {
      val1: new Map(),
      val2: new Map(),
      position: 0
    };
  } else {
    // We prevent up to two map.has(x) calls by directly retrieving the value
    // and checking for undefined. The map can only contain numbers, so it is
    // safe to check for undefined only.
    var val2MemoA = memos.val1.get(val1);
    if (val2MemoA !== undefined) {
      var val2MemoB = memos.val2.get(val2);
      if (val2MemoB !== undefined) {
        return val2MemoA === val2MemoB;
      }
    }
    memos.position++;
  }
  memos.val1.set(val1, memos.position);
  memos.val2.set(val2, memos.position);
  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);
  memos.val1.delete(val1);
  memos.val2.delete(val2);
  return areEq;
}
function setHasEqualElement(set, val1, strict, memo) {
  // Go looking.
  var setValues = arrayFromSet(set);
  for (var i = 0; i < setValues.length; i++) {
    var val2 = setValues[i];
    if (innerDeepEqual(val1, val2, strict, memo)) {
      // Remove the matching element to make sure we do not check that again.
      set.delete(val2);
      return true;
    }
  }
  return false;
}

// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using
// Sadly it is not possible to detect corresponding values properly in case the
// type is a string, number, bigint or boolean. The reason is that those values
// can match lots of different string values (e.g., 1n == '+00001').
function findLooseMatchingPrimitives(prim) {
  switch (_typeof(prim)) {
    case 'undefined':
      return null;
    case 'object':
      // Only pass in null as object!
      return undefined;
    case 'symbol':
      return false;
    case 'string':
      prim = +prim;
    // Loose equal entries exist only if the string is possible to convert to
    // a regular number and not NaN.
    // Fall through
    case 'number':
      if (numberIsNaN(prim)) {
        return false;
      }
  }
  return true;
}
function setMightHaveLoosePrim(a, b, prim) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) return altValue;
  return b.has(altValue) && !a.has(altValue);
}
function mapMightHaveLoosePrim(a, b, prim, item, memo) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  }
  var curB = b.get(altValue);
  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {
    return false;
  }
  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);
}
function setEquiv(a, b, strict, memo) {
  // This is a lazily initiated Set of entries which have to be compared
  // pairwise.
  var set = null;
  var aValues = arrayFromSet(a);
  for (var i = 0; i < aValues.length; i++) {
    var val = aValues[i];
    // Note: Checking for the objects first improves the performance for object
    // heavy sets but it is a minor slow down for primitives. As they are fast
    // to check this improves the worst case scenario instead.
    if (_typeof(val) === 'object' && val !== null) {
      if (set === null) {
        set = new Set();
      }
      // If the specified value doesn't exist in the second set its an not null
      // object (or non strict only: a not matching primitive) we'll need to go
      // hunting for something thats deep-(strict-)equal to it. To make this
      // O(n log n) complexity we have to copy these values in a new set first.
      set.add(val);
    } else if (!b.has(val)) {
      if (strict) return false;

      // Fast path to detect missing string, symbol, undefined and null values.
      if (!setMightHaveLoosePrim(a, b, val)) {
        return false;
      }
      if (set === null) {
        set = new Set();
      }
      set.add(val);
    }
  }
  if (set !== null) {
    var bValues = arrayFromSet(b);
    for (var _i = 0; _i < bValues.length; _i++) {
      var _val = bValues[_i];
      // We have to check if a primitive value is already
      // matching and only if it's not, go hunting for it.
      if (_typeof(_val) === 'object' && _val !== null) {
        if (!setHasEqualElement(set, _val, strict, memo)) return false;
      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {
        return false;
      }
    }
    return set.size === 0;
  }
  return true;
}
function mapHasEqualEntry(set, map, key1, item1, strict, memo) {
  // To be able to handle cases like:
  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])
  // ... we need to consider *all* matching keys, not just the first we find.
  var setValues = arrayFromSet(set);
  for (var i = 0; i < setValues.length; i++) {
    var key2 = setValues[i];
    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {
      set.delete(key2);
      return true;
    }
  }
  return false;
}
function mapEquiv(a, b, strict, memo) {
  var set = null;
  var aEntries = arrayFromMap(a);
  for (var i = 0; i < aEntries.length; i++) {
    var _aEntries$i = _slicedToArray(aEntries[i], 2),
      key = _aEntries$i[0],
      item1 = _aEntries$i[1];
    if (_typeof(key) === 'object' && key !== null) {
      if (set === null) {
        set = new Set();
      }
      set.add(key);
    } else {
      // By directly retrieving the value we prevent another b.has(key) check in
      // almost all possible cases.
      var item2 = b.get(key);
      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {
        if (strict) return false;
        // Fast path to detect missing string, symbol, undefined and null
        // keys.
        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;
        if (set === null) {
          set = new Set();
        }
        set.add(key);
      }
    }
  }
  if (set !== null) {
    var bEntries = arrayFromMap(b);
    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {
      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),
        _key = _bEntries$_i[0],
        item = _bEntries$_i[1];
      if (_typeof(_key) === 'object' && _key !== null) {
        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;
      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {
        return false;
      }
    }
    return set.size === 0;
  }
  return true;
}
function objEquiv(a, b, strict, keys, memos, iterationType) {
  // Sets and maps don't have their entries accessible via normal object
  // properties.
  var i = 0;
  if (iterationType === kIsSet) {
    if (!setEquiv(a, b, strict, memos)) {
      return false;
    }
  } else if (iterationType === kIsMap) {
    if (!mapEquiv(a, b, strict, memos)) {
      return false;
    }
  } else if (iterationType === kIsArray) {
    for (; i < a.length; i++) {
      if (hasOwnProperty(a, i)) {
        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {
          return false;
        }
      } else if (hasOwnProperty(b, i)) {
        return false;
      } else {
        // Array is sparse.
        var keysA = Object.keys(a);
        for (; i < keysA.length; i++) {
          var key = keysA[i];
          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {
            return false;
          }
        }
        if (keysA.length !== Object.keys(b).length) {
          return false;
        }
        return true;
      }
    }
  }

  // The pair must have equivalent values for every corresponding key.
  // Possibly expensive deep test:
  for (i = 0; i < keys.length; i++) {
    var _key2 = keys[i];
    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {
      return false;
    }
  }
  return true;
}
function isDeepEqual(val1, val2) {
  return innerDeepEqual(val1, val2, kLoose);
}
function isDeepStrictEqual(val1, val2) {
  return innerDeepEqual(val1, val2, kStrict);
}
module.exports = {
  isDeepEqual: isDeepEqual,
  isDeepStrictEqual: isDeepStrictEqual
};

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/bech32/index.js":
/*!**************************************!*\
  !*** ./node_modules/bech32/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";

var ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'

// pre-compute lookup table
var ALPHABET_MAP = {}
for (var z = 0; z < ALPHABET.length; z++) {
  var x = ALPHABET.charAt(z)

  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')
  ALPHABET_MAP[x] = z
}

function polymodStep (pre) {
  var b = pre >> 25
  return ((pre & 0x1FFFFFF) << 5) ^
    (-((b >> 0) & 1) & 0x3b6a57b2) ^
    (-((b >> 1) & 1) & 0x26508e6d) ^
    (-((b >> 2) & 1) & 0x1ea119fa) ^
    (-((b >> 3) & 1) & 0x3d4233dd) ^
    (-((b >> 4) & 1) & 0x2a1462b3)
}

function prefixChk (prefix) {
  var chk = 1
  for (var i = 0; i < prefix.length; ++i) {
    var c = prefix.charCodeAt(i)
    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'

    chk = polymodStep(chk) ^ (c >> 5)
  }
  chk = polymodStep(chk)

  for (i = 0; i < prefix.length; ++i) {
    var v = prefix.charCodeAt(i)
    chk = polymodStep(chk) ^ (v & 0x1f)
  }
  return chk
}

function encode (prefix, words, LIMIT) {
  LIMIT = LIMIT || 90
  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')

  prefix = prefix.toLowerCase()

  // determine chk mod
  var chk = prefixChk(prefix)
  if (typeof chk === 'string') throw new Error(chk)

  var result = prefix + '1'
  for (var i = 0; i < words.length; ++i) {
    var x = words[i]
    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')

    chk = polymodStep(chk) ^ x
    result += ALPHABET.charAt(x)
  }

  for (i = 0; i < 6; ++i) {
    chk = polymodStep(chk)
  }
  chk ^= 1

  for (i = 0; i < 6; ++i) {
    var v = (chk >> ((5 - i) * 5)) & 0x1f
    result += ALPHABET.charAt(v)
  }

  return result
}

function __decode (str, LIMIT) {
  LIMIT = LIMIT || 90
  if (str.length < 8) return str + ' too short'
  if (str.length > LIMIT) return 'Exceeds length limit'

  // don't allow mixed case
  var lowered = str.toLowerCase()
  var uppered = str.toUpperCase()
  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str
  str = lowered

  var split = str.lastIndexOf('1')
  if (split === -1) return 'No separator character for ' + str
  if (split === 0) return 'Missing prefix for ' + str

  var prefix = str.slice(0, split)
  var wordChars = str.slice(split + 1)
  if (wordChars.length < 6) return 'Data too short'

  var chk = prefixChk(prefix)
  if (typeof chk === 'string') return chk

  var words = []
  for (var i = 0; i < wordChars.length; ++i) {
    var c = wordChars.charAt(i)
    var v = ALPHABET_MAP[c]
    if (v === undefined) return 'Unknown character ' + c
    chk = polymodStep(chk) ^ v

    // not in the checksum?
    if (i + 6 >= wordChars.length) continue
    words.push(v)
  }

  if (chk !== 1) return 'Invalid checksum for ' + str
  return { prefix: prefix, words: words }
}

function decodeUnsafe () {
  var res = __decode.apply(null, arguments)
  if (typeof res === 'object') return res
}

function decode (str) {
  var res = __decode.apply(null, arguments)
  if (typeof res === 'object') return res

  throw new Error(res)
}

function convert (data, inBits, outBits, pad) {
  var value = 0
  var bits = 0
  var maxV = (1 << outBits) - 1

  var result = []
  for (var i = 0; i < data.length; ++i) {
    value = (value << inBits) | data[i]
    bits += inBits

    while (bits >= outBits) {
      bits -= outBits
      result.push((value >> bits) & maxV)
    }
  }

  if (pad) {
    if (bits > 0) {
      result.push((value << (outBits - bits)) & maxV)
    }
  } else {
    if (bits >= inBits) return 'Excess padding'
    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'
  }

  return result
}

function toWordsUnsafe (bytes) {
  var res = convert(bytes, 8, 5, true)
  if (Array.isArray(res)) return res
}

function toWords (bytes) {
  var res = convert(bytes, 8, 5, true)
  if (Array.isArray(res)) return res

  throw new Error(res)
}

function fromWordsUnsafe (words) {
  var res = convert(words, 5, 8, false)
  if (Array.isArray(res)) return res
}

function fromWords (words) {
  var res = convert(words, 5, 8, false)
  if (Array.isArray(res)) return res

  throw new Error(res)
}

module.exports = {
  decodeUnsafe: decodeUnsafe,
  decode: decode,
  encode: encode,
  toWordsUnsafe: toWordsUnsafe,
  toWords: toWords,
  fromWordsUnsafe: fromWordsUnsafe,
  fromWords: fromWords
}


/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?8131").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(/*! crypto */ "?3fc0");
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),

/***/ "./node_modules/browserify-aes/aes.js":
/*!********************************************!*\
  !*** ./node_modules/browserify-aes/aes.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES


/***/ }),

/***/ "./node_modules/browserify-aes/authCipher.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/authCipher.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var GHASH = __webpack_require__(/*! ./ghash */ "./node_modules/browserify-aes/ghash.js")
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var incr32 = __webpack_require__(/*! ./incr32 */ "./node_modules/browserify-aes/incr32.js")

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-aes/browser.js":
/*!************************************************!*\
  !*** ./node_modules/browserify-aes/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var ciphers = __webpack_require__(/*! ./encrypter */ "./node_modules/browserify-aes/encrypter.js")
var deciphers = __webpack_require__(/*! ./decrypter */ "./node_modules/browserify-aes/decrypter.js")
var modes = __webpack_require__(/*! ./modes/list.json */ "./node_modules/browserify-aes/modes/list.json")

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-aes/decrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/decrypter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv


/***/ }),

/***/ "./node_modules/browserify-aes/encrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/encrypter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher


/***/ }),

/***/ "./node_modules/browserify-aes/ghash.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-aes/ghash.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH


/***/ }),

/***/ "./node_modules/browserify-aes/incr32.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-aes/incr32.js ***!
  \***********************************************/
/***/ ((module) => {

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cbc.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cbc.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb1.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb1.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb8.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb8.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ctr.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ctr.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var incr32 = __webpack_require__(/*! ../incr32 */ "./node_modules/browserify-aes/incr32.js")

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ecb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ecb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var modeModules = {
  ECB: __webpack_require__(/*! ./ecb */ "./node_modules/browserify-aes/modes/ecb.js"),
  CBC: __webpack_require__(/*! ./cbc */ "./node_modules/browserify-aes/modes/cbc.js"),
  CFB: __webpack_require__(/*! ./cfb */ "./node_modules/browserify-aes/modes/cfb.js"),
  CFB8: __webpack_require__(/*! ./cfb8 */ "./node_modules/browserify-aes/modes/cfb8.js"),
  CFB1: __webpack_require__(/*! ./cfb1 */ "./node_modules/browserify-aes/modes/cfb1.js"),
  OFB: __webpack_require__(/*! ./ofb */ "./node_modules/browserify-aes/modes/ofb.js"),
  CTR: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js"),
  GCM: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js")
}

var modes = __webpack_require__(/*! ./list.json */ "./node_modules/browserify-aes/modes/list.json")

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ofb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ofb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/streamCipher.js":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/streamCipher.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-cipher/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-cipher/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DES = __webpack_require__(/*! browserify-des */ "./node_modules/browserify-des/index.js")
var aes = __webpack_require__(/*! browserify-aes/browser */ "./node_modules/browserify-aes/browser.js")
var aesModes = __webpack_require__(/*! browserify-aes/modes */ "./node_modules/browserify-aes/modes/index.js")
var desModes = __webpack_require__(/*! browserify-des/modes */ "./node_modules/browserify-des/modes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-des/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var CipherBase = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var des = __webpack_require__(/*! des.js */ "./node_modules/des.js/lib/des.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}


/***/ }),

/***/ "./node_modules/browserify-des/modes.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/modes.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

exports["des-ecb"] = {
  key: 8,
  iv: 0
}
exports["des-cbc"] = exports.des = {
  key: 8,
  iv: 8
}
exports["des-ede3-cbc"] = exports.des3 = {
  key: 24,
  iv: 8
}
exports["des-ede3"] = {
  key: 24,
  iv: 0
}
exports["des-ede-cbc"] = {
  key: 16,
  iv: 8
}
exports["des-ede"] = {
  key: 16,
  iv: 0
}


/***/ }),

/***/ "./node_modules/browserify-rsa/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-rsa/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);

function getr(priv) {
	var len = priv.modulus.byteLength();
	var r;
	do {
		r = new BN(randomBytes(len));
	} while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));
	return r;
}

function blind(priv) {
	var r = getr(priv);
	var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();
	return { blinder: blinder, unblinder: r.invm(priv.modulus) };
}

function crt(msg, priv) {
	var blinds = blind(priv);
	var len = priv.modulus.byteLength();
	var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);
	var c1 = blinded.toRed(BN.mont(priv.prime1));
	var c2 = blinded.toRed(BN.mont(priv.prime2));
	var qinv = priv.coefficient;
	var p = priv.prime1;
	var q = priv.prime2;
	var m1 = c1.redPow(priv.exponent1).fromRed();
	var m2 = c2.redPow(priv.exponent2).fromRed();
	var h = m1.isub(m2).imul(qinv).umod(p).imul(q);
	return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);
}
crt.getr = getr;

module.exports = crt;


/***/ }),

/***/ "./node_modules/browserify-sign/algos.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-sign/algos.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = __webpack_require__(/*! ./browser/algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json");


/***/ }),

/***/ "./node_modules/browserify-sign/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
var stream = __webpack_require__(/*! readable-stream */ "./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var sign = __webpack_require__(/*! ./sign */ "./node_modules/browserify-sign/browser/sign.js");
var verify = __webpack_require__(/*! ./verify */ "./node_modules/browserify-sign/browser/verify.js");

var algorithms = __webpack_require__(/*! ./algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json");
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');
  algorithms[key.toLowerCase()] = algorithms[key];
});

function Sign(algorithm) {
  stream.Writable.call(this);

  var data = algorithms[algorithm];
  if (!data) { throw new Error('Unknown message digest'); }

  this._hashType = data.hash;
  this._hash = createHash(data.hash);
  this._tag = data.id;
  this._signType = data.sign;
}
inherits(Sign, stream.Writable);

Sign.prototype._write = function _write(data, _, done) {
  this._hash.update(data);
  done();
};

Sign.prototype.update = function update(data, enc) {
  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);

  return this;
};

Sign.prototype.sign = function signMethod(key, enc) {
  this.end();
  var hash = this._hash.digest();
  var sig = sign(hash, key, this._hashType, this._signType, this._tag);

  return enc ? sig.toString(enc) : sig;
};

function Verify(algorithm) {
  stream.Writable.call(this);

  var data = algorithms[algorithm];
  if (!data) { throw new Error('Unknown message digest'); }

  this._hash = createHash(data.hash);
  this._tag = data.id;
  this._signType = data.sign;
}
inherits(Verify, stream.Writable);

Verify.prototype._write = function _write(data, _, done) {
  this._hash.update(data);
  done();
};

Verify.prototype.update = function update(data, enc) {
  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);

  return this;
};

Verify.prototype.verify = function verifyMethod(key, sig, enc) {
  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;

  this.end();
  var hash = this._hash.digest();
  return verify(sigBuffer, hash, key, this._signType, this._tag);
};

function createSign(algorithm) {
  return new Sign(algorithm);
}

function createVerify(algorithm) {
  return new Verify(algorithm);
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
};


/***/ }),

/***/ "./node_modules/browserify-sign/browser/sign.js":
/*!******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/sign.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);
var createHmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js");
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js");
var EC = (__webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec);
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js");
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json");

var RSA_PKCS1_PADDING = 1;

function sign(hash, key, hashType, signType, tag) {
  var priv = parseKeys(key);
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }
    return ecSign(hash, priv);
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') { throw new Error('wrong private key type'); }
    return dsaSign(hash, priv, hashType);
  }
  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }
  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }

  hash = Buffer.concat([tag, hash]);
  var len = priv.modulus.byteLength();
  var pad = [0, 1];
  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }
  pad.push(0x00);
  var i = -1;
  while (++i < hash.length) { pad.push(hash[i]); }

  var out = crt(pad, priv);
  return out;
}

function ecSign(hash, priv) {
  var curveId = curves[priv.curve.join('.')];
  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }

  var curve = new EC(curveId);
  var key = curve.keyFromPrivate(priv.privateKey);
  var out = key.sign(hash);

  return Buffer.from(out.toDER());
}

function dsaSign(hash, priv, algo) {
  var x = priv.params.priv_key;
  var p = priv.params.p;
  var q = priv.params.q;
  var g = priv.params.g;
  var r = new BN(0);
  var k;
  var H = bits2int(hash, q).mod(q);
  var s = false;
  var kv = getKey(x, q, hash, algo);
  while (s === false) {
    k = makeKey(q, kv, algo);
    r = makeR(g, k, p, q);
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
    if (s.cmpn(0) === 0) {
      s = false;
      r = new BN(0);
    }
  }
  return toDER(r, s);
}

function toDER(r, s) {
  r = r.toArray();
  s = s.toArray();

  // Pad values
  if (r[0] & 0x80) { r = [0].concat(r); }
  if (s[0] & 0x80) { s = [0].concat(s); }

  var total = r.length + s.length + 4;
  var res = [
    0x30, total, 0x02, r.length
  ];
  res = res.concat(r, [0x02, s.length], s);
  return Buffer.from(res);
}

function getKey(x, q, hash, algo) {
  x = Buffer.from(x.toArray());
  if (x.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - x.length);
    x = Buffer.concat([zeros, x]);
  }
  var hlen = hash.length;
  var hbits = bits2octets(hash, q);
  var v = Buffer.alloc(hlen);
  v.fill(1);
  var k = Buffer.alloc(hlen);
  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();
  v = createHmac(algo, k).update(v).digest();
  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();
  v = createHmac(algo, k).update(v).digest();
  return { k: k, v: v };
}

function bits2int(obits, q) {
  var bits = new BN(obits);
  var shift = (obits.length << 3) - q.bitLength();
  if (shift > 0) { bits.ishrn(shift); }
  return bits;
}

function bits2octets(bits, q) {
  bits = bits2int(bits, q);
  bits = bits.mod(q);
  var out = Buffer.from(bits.toArray());
  if (out.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - out.length);
    out = Buffer.concat([zeros, out]);
  }
  return out;
}

function makeKey(q, kv, algo) {
  var t;
  var k;

  do {
    t = Buffer.alloc(0);

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest();
      t = Buffer.concat([t, kv.v]);
    }

    k = bits2int(t, q);
    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();
    kv.v = createHmac(algo, kv.k).update(kv.v).digest();
  } while (k.cmp(q) !== -1);

  return k;
}

function makeR(g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
}

module.exports = sign;
module.exports.getKey = getKey;
module.exports.makeKey = makeKey;


/***/ }),

/***/ "./node_modules/browserify-sign/browser/verify.js":
/*!********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/verify.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var EC = (__webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec);
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js");
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json");

function verify(sig, hash, key, signType, tag) {
  var pub = parseKeys(key);
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }
    return ecVerify(sig, hash, pub);
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') { throw new Error('wrong public key type'); }
    return dsaVerify(sig, hash, pub);
  }
  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }

  hash = Buffer.concat([tag, hash]);
  var len = pub.modulus.byteLength();
  var pad = [1];
  var padNum = 0;
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff);
    padNum += 1;
  }
  pad.push(0x00);
  var i = -1;
  while (++i < hash.length) {
    pad.push(hash[i]);
  }
  pad = Buffer.from(pad);
  var red = BN.mont(pub.modulus);
  sig = new BN(sig).toRed(red);

  sig = sig.redPow(new BN(pub.publicExponent));
  sig = Buffer.from(sig.fromRed().toArray());
  var out = padNum < 8 ? 1 : 0;
  len = Math.min(sig.length, pad.length);
  if (sig.length !== pad.length) { out = 1; }

  i = -1;
  while (++i < len) { out |= sig[i] ^ pad[i]; }
  return out === 0;
}

function ecVerify(sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')];
  if (!curveId) { throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.')); }

  var curve = new EC(curveId);
  var pubkey = pub.data.subjectPrivateKey.data;

  return curve.verify(hash, sig, pubkey);
}

function dsaVerify(sig, hash, pub) {
  var p = pub.data.p;
  var q = pub.data.q;
  var g = pub.data.g;
  var y = pub.data.pub_key;
  var unpacked = parseKeys.signature.decode(sig, 'der');
  var s = unpacked.s;
  var r = unpacked.r;
  checkValue(s, q);
  checkValue(r, q);
  var montp = BN.mont(p);
  var w = s.invm(q);
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q);
  return v.cmp(r) === 0;
}

function checkValue(b, q) {
  if (b.cmpn(0) <= 0) { throw new Error('invalid sig'); }
  if (b.cmp(q) >= 0) { throw new Error('invalid sig'); }
}

module.exports = verify;


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js");

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js");

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js");
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = (__webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter);

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/browserify-sign/node_modules/readable-stream/node_modules/safe-buffer/index.js").Buffer);
var OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ "?593c");
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/BufferList.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js");
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ "./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ "./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, { hasUnpiped: false });
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/browserify-sign/node_modules/readable-stream/node_modules/safe-buffer/index.js").Buffer);
var OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js");

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }

  // reuse the free corkReq.
  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/browserify-sign/node_modules/readable-stream/node_modules/safe-buffer/index.js").Buffer);
var util = __webpack_require__(/*! util */ "?cad2");

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        pna.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        pna.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        pna.nextTick(emitErrorNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        pna.nextTick(emitErrorNT, _this, err);
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \**********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/node_modules/safe-buffer/index.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/node_modules/safe-buffer/index.js ***!
  \*****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js");


/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/browserify-sign/node_modules/string_decoder/node_modules/safe-buffer/index.js").Buffer);
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/string_decoder/node_modules/safe-buffer/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/string_decoder/node_modules/safe-buffer/index.js ***!
  \****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/buffer-xor/index.js":
/*!******************************************!*\
  !*** ./node_modules/buffer-xor/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



const base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
const ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
const customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

const K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    const arr = new Uint8Array(1)
    const proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  const buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  const valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  const b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  const length = byteLength(string, encoding) | 0
  let buf = createBuffer(length)

  const actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  const length = array.length < 0 ? 0 : checked(array.length) | 0
  const buf = createBuffer(length)
  for (let i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    const copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  let buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    const len = checked(obj.length) | 0
    const buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  let x = a.length
  let y = b.length

  for (let i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  let i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  const buffer = Buffer.allocUnsafe(length)
  let pos = 0
  for (i = 0; i < list.length; ++i) {
    let buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)
        buf.copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  const len = string.length
  const mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  let loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  const i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  const len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (let i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  const len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (let i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  const len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (let i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  const length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  let str = ''
  const max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  let x = thisEnd - thisStart
  let y = end - start
  const len = Math.min(x, y)

  const thisCopy = this.slice(thisStart, thisEnd)
  const targetCopy = target.slice(start, end)

  for (let i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  let indexSize = 1
  let arrLength = arr.length
  let valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  let i
  if (dir) {
    let foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      let found = true
      for (let j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  const remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  const strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  let i
  for (i = 0; i < length; ++i) {
    const parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  const remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  const res = []

  let i = start
  while (i < end) {
    const firstByte = buf[i]
    let codePoint = null
    let bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      let secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
const MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  const len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  let res = ''
  let i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  const len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  let out = ''
  for (let i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  const bytes = buf.slice(start, end)
  let res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (let i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  const len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  const newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  let val = this[offset + --byteLength]
  let mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const lo = first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24

  const hi = this[++offset] +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24

  return BigInt(lo) + (BigInt(hi) << BigInt(32))
})

Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const hi = first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  const lo = this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last

  return (BigInt(hi) << BigInt(32)) + BigInt(lo)
})

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let i = byteLength
  let mul = 1
  let val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = this[offset + 4] +
    this[offset + 5] * 2 ** 8 +
    this[offset + 6] * 2 ** 16 +
    (last << 24) // Overflow

  return (BigInt(val) << BigInt(32)) +
    BigInt(first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24)
})

Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  return (BigInt(val) << BigInt(32)) +
    BigInt(this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last)
})

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let mul = 1
  let i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let i = byteLength - 1
  let mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function wrtBigUInt64LE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  return offset
}

function wrtBigUInt64BE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset + 7] = lo
  lo = lo >> 8
  buf[offset + 6] = lo
  lo = lo >> 8
  buf[offset + 5] = lo
  lo = lo >> 8
  buf[offset + 4] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset + 3] = hi
  hi = hi >> 8
  buf[offset + 2] = hi
  hi = hi >> 8
  buf[offset + 1] = hi
  hi = hi >> 8
  buf[offset] = hi
  return offset + 8
}

Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = 0
  let mul = 1
  let sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = byteLength - 1
  let mul = 1
  let sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  const len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      const code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  let i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    const bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    const len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// CUSTOM ERRORS
// =============

// Simplified versions from Node, changed for Buffer-only usage
const errors = {}
function E (sym, getMessage, Base) {
  errors[sym] = class NodeError extends Base {
    constructor () {
      super()

      Object.defineProperty(this, 'message', {
        value: getMessage.apply(this, arguments),
        writable: true,
        configurable: true
      })

      // Add the error code to the name to include it in the stack trace.
      this.name = `${this.name} [${sym}]`
      // Access the stack to generate the error message including the error code
      // from the name.
      this.stack // eslint-disable-line no-unused-expressions
      // Reset the name to the actual name.
      delete this.name
    }

    get code () {
      return sym
    }

    set code (value) {
      Object.defineProperty(this, 'code', {
        configurable: true,
        enumerable: true,
        value,
        writable: true
      })
    }

    toString () {
      return `${this.name} [${sym}]: ${this.message}`
    }
  }
}

E('ERR_BUFFER_OUT_OF_BOUNDS',
  function (name) {
    if (name) {
      return `${name} is outside of buffer bounds`
    }

    return 'Attempt to access memory outside buffer bounds'
  }, RangeError)
E('ERR_INVALID_ARG_TYPE',
  function (name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`
  }, TypeError)
E('ERR_OUT_OF_RANGE',
  function (str, range, input) {
    let msg = `The value of "${str}" is out of range.`
    let received = input
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input))
    } else if (typeof input === 'bigint') {
      received = String(input)
      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
        received = addNumericalSeparator(received)
      }
      received += 'n'
    }
    msg += ` It must be ${range}. Received ${received}`
    return msg
  }, RangeError)

function addNumericalSeparator (val) {
  let res = ''
  let i = val.length
  const start = val[0] === '-' ? 1 : 0
  for (; i >= start + 4; i -= 3) {
    res = `_${val.slice(i - 3, i)}${res}`
  }
  return `${val.slice(0, i)}${res}`
}

// CHECK FUNCTIONS
// ===============

function checkBounds (buf, offset, byteLength) {
  validateNumber(offset, 'offset')
  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {
    boundsError(offset, buf.length - (byteLength + 1))
  }
}

function checkIntBI (value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    const n = typeof min === 'bigint' ? 'n' : ''
    let range
    if (byteLength > 3) {
      if (min === 0 || min === BigInt(0)) {
        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`
      } else {
        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +
                `${(byteLength + 1) * 8 - 1}${n}`
      }
    } else {
      range = `>= ${min}${n} and <= ${max}${n}`
    }
    throw new errors.ERR_OUT_OF_RANGE('value', range, value)
  }
  checkBounds(buf, offset, byteLength)
}

function validateNumber (value, name) {
  if (typeof value !== 'number') {
    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)
  }
}

function boundsError (value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type)
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)
  }

  if (length < 0) {
    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()
  }

  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',
                                    `>= ${type ? 1 : 0} and <= ${length}`,
                                    value)
}

// HELPER FUNCTIONS
// ================

const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  let codePoint
  const length = string.length
  let leadSurrogate = null
  const bytes = []

  for (let i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  let c, hi, lo
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  let i
  for (i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
const hexSliceLookupTable = (function () {
  const alphabet = '0123456789abcdef'
  const table = new Array(256)
  for (let i = 0; i < 16; ++i) {
    const i16 = i * 16
    for (let j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

// Return not function with Error if BigInt not supported
function defineBigIntMethod (fn) {
  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn
}

function BufferBigIntNotDefined () {
  throw new Error('BigInt not supported')
}


/***/ }),

/***/ "./node_modules/call-bind-apply-helpers/actualApply.js":
/*!*************************************************************!*\
  !*** ./node_modules/call-bind-apply-helpers/actualApply.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

var $apply = __webpack_require__(/*! ./functionApply */ "./node_modules/call-bind-apply-helpers/functionApply.js");
var $call = __webpack_require__(/*! ./functionCall */ "./node_modules/call-bind-apply-helpers/functionCall.js");
var $reflectApply = __webpack_require__(/*! ./reflectApply */ "./node_modules/call-bind-apply-helpers/reflectApply.js");

/** @type {import('./actualApply')} */
module.exports = $reflectApply || bind.call($call, $apply);


/***/ }),

/***/ "./node_modules/call-bind-apply-helpers/applyBind.js":
/*!***********************************************************!*\
  !*** ./node_modules/call-bind-apply-helpers/applyBind.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var $apply = __webpack_require__(/*! ./functionApply */ "./node_modules/call-bind-apply-helpers/functionApply.js");
var actualApply = __webpack_require__(/*! ./actualApply */ "./node_modules/call-bind-apply-helpers/actualApply.js");

/** @type {import('./applyBind')} */
module.exports = function applyBind() {
	return actualApply(bind, $apply, arguments);
};


/***/ }),

/***/ "./node_modules/call-bind-apply-helpers/functionApply.js":
/*!***************************************************************!*\
  !*** ./node_modules/call-bind-apply-helpers/functionApply.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./functionApply')} */
module.exports = Function.prototype.apply;


/***/ }),

/***/ "./node_modules/call-bind-apply-helpers/functionCall.js":
/*!**************************************************************!*\
  !*** ./node_modules/call-bind-apply-helpers/functionCall.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./functionCall')} */
module.exports = Function.prototype.call;


/***/ }),

/***/ "./node_modules/call-bind-apply-helpers/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/call-bind-apply-helpers/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");

var $call = __webpack_require__(/*! ./functionCall */ "./node_modules/call-bind-apply-helpers/functionCall.js");
var $actualApply = __webpack_require__(/*! ./actualApply */ "./node_modules/call-bind-apply-helpers/actualApply.js");

/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */
module.exports = function callBindBasic(args) {
	if (args.length < 1 || typeof args[0] !== 'function') {
		throw new $TypeError('a function is required');
	}
	return $actualApply(bind, $call, args);
};


/***/ }),

/***/ "./node_modules/call-bind-apply-helpers/reflectApply.js":
/*!**************************************************************!*\
  !*** ./node_modules/call-bind-apply-helpers/reflectApply.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./reflectApply')} */
module.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;


/***/ }),

/***/ "./node_modules/call-bind/callBound.js":
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var callBind = __webpack_require__(/*! ./ */ "./node_modules/call-bind/index.js");

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};


/***/ }),

/***/ "./node_modules/call-bind/index.js":
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var setFunctionLength = __webpack_require__(/*! set-function-length */ "./node_modules/set-function-length/index.js");

var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");

var callBindBasic = __webpack_require__(/*! call-bind-apply-helpers */ "./node_modules/call-bind-apply-helpers/index.js");
var applyBind = __webpack_require__(/*! call-bind-apply-helpers/applyBind */ "./node_modules/call-bind-apply-helpers/applyBind.js");

module.exports = function callBind(originalFunction) {
	var func = callBindBasic(arguments);
	var adjustedLength = originalFunction.length - (arguments.length - 1);
	return setFunctionLength(
		func,
		1 + (adjustedLength > 0 ? adjustedLength : 0),
		true
	);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}


/***/ }),

/***/ "./node_modules/call-bound/index.js":
/*!******************************************!*\
  !*** ./node_modules/call-bound/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var callBindBasic = __webpack_require__(/*! call-bind-apply-helpers */ "./node_modules/call-bind-apply-helpers/index.js");

/** @type {(thisArg: string, searchString: string, position?: number) => number} */
var $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);

/** @type {import('.')} */
module.exports = function callBoundIntrinsic(name, allowMissing) {
	/* eslint no-extra-parens: 0 */

	var intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBindBasic(/** @type {const} */ ([intrinsic]));
	}
	return intrinsic;
};


/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);
var Transform = (__webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js").Transform);
var StringDecoder = (__webpack_require__(/*! string_decoder */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

function CipherBase(hashMode) {
	Transform.call(this);
	this.hashMode = typeof hashMode === 'string';
	if (this.hashMode) {
		this[hashMode] = this._finalOrDigest;
	} else {
		this['final'] = this._finalOrDigest;
	}
	if (this._final) {
		this.__final = this._final;
		this._final = null;
	}
	this._decoder = null;
	this._encoding = null;
}
inherits(CipherBase, Transform);

var useUint8Array = typeof Uint8Array !== 'undefined';
var useArrayBuffer = typeof ArrayBuffer !== 'undefined'
	&& typeof Uint8Array !== 'undefined'
	&& ArrayBuffer.isView
	&& (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);

function toBuffer(data, encoding) {
	/*
	 * No need to do anything for exact instance
	 * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed
	 */
	if (data instanceof Buffer) {
		return data;
	}

	// Convert strings to Buffer
	if (typeof data === 'string') {
		return Buffer.from(data, encoding);
	}

	/*
	 * Wrap any TypedArray instances and DataViews
	 * Makes sense only on engines with full TypedArray support -- let Buffer detect that
	 */
	if (useArrayBuffer && ArrayBuffer.isView(data)) {
		// Bug in Node.js <6.3.1, which treats this as out-of-bounds
		if (data.byteLength === 0) {
			return Buffer.alloc(0);
		}

		var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);
		/*
		 * Recheck result size, as offset/length doesn't work on Node.js <5.10
		 * We just go to Uint8Array case if this fails
		 */
		if (res.byteLength === data.byteLength) {
			return res;
		}
	}

	/*
	 * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over
	 * Doesn't make sense with other TypedArray instances
	 */
	if (useUint8Array && data instanceof Uint8Array) {
		return Buffer.from(data);
	}

	/*
	 * Old Buffer polyfill on an engine that doesn't have TypedArray support
	 * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed
	 * Convert to our current Buffer implementation
	 */
	if (
		Buffer.isBuffer(data)
			&& data.constructor
			&& typeof data.constructor.isBuffer === 'function'
			&& data.constructor.isBuffer(data)
	) {
		return Buffer.from(data);
	}

	throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');
}

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
	var bufferData = toBuffer(data, inputEnc); // asserts correct input type
	var outData = this._update(bufferData);
	if (this.hashMode) {
		return this;
	}

	if (outputEnc) {
		outData = this._toString(outData, outputEnc);
	}

	return outData;
};

CipherBase.prototype.setAutoPadding = function () {};
CipherBase.prototype.getAuthTag = function () {
	throw new Error('trying to get auth tag in unsupported state');
};

CipherBase.prototype.setAuthTag = function () {
	throw new Error('trying to set auth tag in unsupported state');
};

CipherBase.prototype.setAAD = function () {
	throw new Error('trying to set aad in unsupported state');
};

CipherBase.prototype._transform = function (data, _, next) {
	var err;
	try {
		if (this.hashMode) {
			this._update(data);
		} else {
			this.push(this._update(data));
		}
	} catch (e) {
		err = e;
	} finally {
		next(err);
	}
};
CipherBase.prototype._flush = function (done) {
	var err;
	try {
		this.push(this.__final());
	} catch (e) {
		err = e;
	}

	done(err);
};
CipherBase.prototype._finalOrDigest = function (outputEnc) {
	var outData = this.__final() || Buffer.alloc(0);
	if (outputEnc) {
		outData = this._toString(outData, outputEnc, true);
	}
	return outData;
};

CipherBase.prototype._toString = function (value, enc, fin) {
	if (!this._decoder) {
		this._decoder = new StringDecoder(enc);
		this._encoding = enc;
	}

	if (this._encoding !== enc) {
		throw new Error('can’t switch encodings');
	}

	var out = this._decoder.write(value);
	if (fin) {
		out += this._decoder.end();
	}

	return out;
};

module.exports = CipherBase;


/***/ }),

/***/ "./node_modules/console-browserify/index.js":
/*!**************************************************!*\
  !*** ./node_modules/console-browserify/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*global window, global*/
var util = __webpack_require__(/*! util */ "./node_modules/util/util.js")
var assert = __webpack_require__(/*! assert */ "./node_modules/assert/build/assert.js")
function now() { return new Date().getTime() }

var slice = Array.prototype.slice
var console
var times = {}

if (typeof __webpack_require__.g !== "undefined" && __webpack_require__.g.console) {
    console = __webpack_require__.g.console
} else if (typeof window !== "undefined" && window.console) {
    console = window.console
} else {
    console = {}
}

var functions = [
    [log, "log"],
    [info, "info"],
    [warn, "warn"],
    [error, "error"],
    [time, "time"],
    [timeEnd, "timeEnd"],
    [trace, "trace"],
    [dir, "dir"],
    [consoleAssert, "assert"]
]

for (var i = 0; i < functions.length; i++) {
    var tuple = functions[i]
    var f = tuple[0]
    var name = tuple[1]

    if (!console[name]) {
        console[name] = f
    }
}

module.exports = console

function log() {}

function info() {
    console.log.apply(console, arguments)
}

function warn() {
    console.log.apply(console, arguments)
}

function error() {
    console.warn.apply(console, arguments)
}

function time(label) {
    times[label] = now()
}

function timeEnd(label) {
    var time = times[label]
    if (!time) {
        throw new Error("No such label: " + label)
    }

    delete times[label]
    var duration = now() - time
    console.log(label + ": " + duration + "ms")
}

function trace() {
    var err = new Error()
    err.name = "Trace"
    err.message = util.format.apply(null, arguments)
    console.error(err.stack)
}

function dir(object) {
    console.log(util.inspect(object) + "\n")
}

function consoleAssert(expression) {
    if (!expression) {
        var arr = slice.call(arguments, 1)
        assert.ok(false, util.format.apply(null, arr))
    }
}


/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


/***/ }),

/***/ "./node_modules/cosmjs-types/binary.js":
/*!*********************************************!*\
  !*** ./node_modules/cosmjs-types/binary.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* eslint-disable */
/**
 * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7
 * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
 * and run the transpile command or yarn proto command to regenerate this bundle.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BinaryWriter = exports.BinaryReader = exports.WireType = void 0;
// Copyright (c) 2016, Daniel Wirtz  All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// * Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the
//   documentation and/or other materials provided with the distribution.
// * Neither the name of its author, nor the names of its contributors
//   may be used to endorse or promote products derived from this software
//   without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// ---
// Code generated by the command line utilities is owned by the owner
// of the input file used when generating it. This code is not
// standalone and requires a support library to be linked with it. This
// support library is itself covered by the above license.
const utf8_1 = __webpack_require__(/*! ./utf8 */ "./node_modules/cosmjs-types/utf8.js");
const varint_1 = __webpack_require__(/*! ./varint */ "./node_modules/cosmjs-types/varint.js");
var WireType;
(function (WireType) {
    WireType[WireType["Varint"] = 0] = "Varint";
    WireType[WireType["Fixed64"] = 1] = "Fixed64";
    WireType[WireType["Bytes"] = 2] = "Bytes";
    WireType[WireType["Fixed32"] = 5] = "Fixed32";
})(WireType || (exports.WireType = WireType = {}));
class BinaryReader {
    assertBounds() {
        if (this.pos > this.len)
            throw new RangeError("premature EOF");
    }
    constructor(buf) {
        this.buf = buf ? new Uint8Array(buf) : new Uint8Array(0);
        this.pos = 0;
        this.type = 0;
        this.len = this.buf.length;
    }
    tag() {
        const tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;
        if (fieldNo <= 0 || wireType < 0 || wireType > 5)
            throw new Error("illegal tag: field no " + fieldNo + " wire type " + wireType);
        return [fieldNo, wireType, tag];
    }
    skip(length) {
        if (typeof length === "number") {
            if (this.pos + length > this.len)
                throw indexOutOfRange(this, length);
            this.pos += length;
        }
        else {
            do {
                if (this.pos >= this.len)
                    throw indexOutOfRange(this);
            } while (this.buf[this.pos++] & 128);
        }
        return this;
    }
    skipType(wireType) {
        switch (wireType) {
            case WireType.Varint:
                this.skip();
                break;
            case WireType.Fixed64:
                this.skip(8);
                break;
            case WireType.Bytes:
                this.skip(this.uint32());
                break;
            case 3:
                while ((wireType = this.uint32() & 7) !== 4) {
                    this.skipType(wireType);
                }
                break;
            case WireType.Fixed32:
                this.skip(4);
                break;
            /* istanbul ignore next */
            default:
                throw Error("invalid wire type " + wireType + " at offset " + this.pos);
        }
        return this;
    }
    uint32() {
        return varint_1.varint32read.bind(this)();
    }
    int32() {
        return this.uint32() | 0;
    }
    sint32() {
        const num = this.uint32();
        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding
    }
    fixed32() {
        const val = (0, varint_1.readUInt32)(this.buf, this.pos);
        this.pos += 4;
        return val;
    }
    sfixed32() {
        const val = (0, varint_1.readInt32)(this.buf, this.pos);
        this.pos += 4;
        return val;
    }
    int64() {
        const [lo, hi] = varint_1.varint64read.bind(this)();
        return BigInt((0, varint_1.int64ToString)(lo, hi));
    }
    uint64() {
        const [lo, hi] = varint_1.varint64read.bind(this)();
        return BigInt((0, varint_1.uInt64ToString)(lo, hi));
    }
    sint64() {
        let [lo, hi] = varint_1.varint64read.bind(this)();
        // zig zag
        [lo, hi] = (0, varint_1.zzDecode)(lo, hi);
        return BigInt((0, varint_1.int64ToString)(lo, hi));
    }
    fixed64() {
        const lo = this.sfixed32();
        const hi = this.sfixed32();
        return BigInt((0, varint_1.uInt64ToString)(lo, hi));
    }
    sfixed64() {
        const lo = this.sfixed32();
        const hi = this.sfixed32();
        return BigInt((0, varint_1.int64ToString)(lo, hi));
    }
    float() {
        throw new Error("float not supported");
    }
    double() {
        throw new Error("double not supported");
    }
    bool() {
        const [lo, hi] = varint_1.varint64read.bind(this)();
        return lo !== 0 || hi !== 0;
    }
    bytes() {
        const len = this.uint32(), start = this.pos;
        this.pos += len;
        this.assertBounds();
        return this.buf.subarray(start, start + len);
    }
    string() {
        const bytes = this.bytes();
        return (0, utf8_1.utf8Read)(bytes, 0, bytes.length);
    }
}
exports.BinaryReader = BinaryReader;
class Op {
    constructor(fn, len, val) {
        this.fn = fn;
        this.len = len;
        this.val = val;
    }
    proceed(buf, pos) {
        if (this.fn) {
            this.fn(this.val, buf, pos);
        }
    }
}
class State {
    constructor(writer) {
        this.head = writer.head;
        this.tail = writer.tail;
        this.len = writer.len;
        this.next = writer.states;
    }
}
class BinaryWriter {
    constructor() {
        this.len = 0;
        // uint64 is the same with int64
        this.uint64 = BinaryWriter.prototype.int64;
        // sfixed64 is the same with fixed64
        this.sfixed64 = BinaryWriter.prototype.fixed64;
        // sfixed32 is the same with fixed32
        this.sfixed32 = BinaryWriter.prototype.fixed32;
        this.head = new Op(null, 0, 0);
        this.tail = this.head;
        this.states = null;
    }
    static create() {
        return new BinaryWriter();
    }
    static alloc(size) {
        if (typeof Uint8Array !== "undefined") {
            return pool((size) => new Uint8Array(size), Uint8Array.prototype.subarray)(size);
        }
        else {
            return new Array(size);
        }
    }
    _push(fn, len, val) {
        this.tail = this.tail.next = new Op(fn, len, val);
        this.len += len;
        return this;
    }
    finish() {
        let head = this.head.next, pos = 0;
        const buf = BinaryWriter.alloc(this.len);
        while (head) {
            head.proceed(buf, pos);
            pos += head.len;
            head = head.next;
        }
        return buf;
    }
    fork() {
        this.states = new State(this);
        this.head = this.tail = new Op(null, 0, 0);
        this.len = 0;
        return this;
    }
    reset() {
        if (this.states) {
            this.head = this.states.head;
            this.tail = this.states.tail;
            this.len = this.states.len;
            this.states = this.states.next;
        }
        else {
            this.head = this.tail = new Op(null, 0, 0);
            this.len = 0;
        }
        return this;
    }
    ldelim() {
        const head = this.head, tail = this.tail, len = this.len;
        this.reset().uint32(len);
        if (len) {
            this.tail.next = head.next; // skip noop
            this.tail = tail;
            this.len += len;
        }
        return this;
    }
    tag(fieldNo, type) {
        return this.uint32(((fieldNo << 3) | type) >>> 0);
    }
    uint32(value) {
        this.len += (this.tail = this.tail.next =
            new Op(varint_1.writeVarint32, (value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;
        return this;
    }
    int32(value) {
        return value < 0
            ? this._push(varint_1.writeVarint64, 10, (0, varint_1.int64FromString)(value.toString())) // 10 bytes per spec
            : this.uint32(value);
    }
    sint32(value) {
        return this.uint32(((value << 1) ^ (value >> 31)) >>> 0);
    }
    int64(value) {
        const { lo, hi } = (0, varint_1.int64FromString)(value.toString());
        return this._push(varint_1.writeVarint64, (0, varint_1.int64Length)(lo, hi), { lo, hi });
    }
    sint64(value) {
        let { lo, hi } = (0, varint_1.int64FromString)(value.toString());
        // zig zag
        [lo, hi] = (0, varint_1.zzEncode)(lo, hi);
        return this._push(varint_1.writeVarint64, (0, varint_1.int64Length)(lo, hi), { lo, hi });
    }
    fixed64(value) {
        const { lo, hi } = (0, varint_1.int64FromString)(value.toString());
        return this._push(varint_1.writeFixed32, 4, lo)._push(varint_1.writeFixed32, 4, hi);
    }
    bool(value) {
        return this._push(varint_1.writeByte, 1, value ? 1 : 0);
    }
    fixed32(value) {
        return this._push(varint_1.writeFixed32, 4, value >>> 0);
    }
    float(value) {
        throw new Error("float not supported" + value);
    }
    double(value) {
        throw new Error("double not supported" + value);
    }
    bytes(value) {
        const len = value.length >>> 0;
        if (!len)
            return this._push(varint_1.writeByte, 1, 0);
        return this.uint32(len)._push(writeBytes, len, value);
    }
    string(value) {
        const len = (0, utf8_1.utf8Length)(value);
        return len ? this.uint32(len)._push(utf8_1.utf8Write, len, value) : this._push(varint_1.writeByte, 1, 0);
    }
}
exports.BinaryWriter = BinaryWriter;
function writeBytes(val, buf, pos) {
    if (typeof Uint8Array !== "undefined") {
        buf.set(val, pos);
    }
    else {
        for (let i = 0; i < val.length; ++i)
            buf[pos + i] = val[i];
    }
}
function pool(alloc, slice, size) {
    const SIZE = size || 8192;
    const MAX = SIZE >>> 1;
    let slab = null;
    let offset = SIZE;
    return function pool_alloc(size) {
        if (size < 1 || size > MAX)
            return alloc(size);
        if (offset + size > SIZE) {
            slab = alloc(SIZE);
            offset = 0;
        }
        const buf = slice.call(slab, offset, (offset += size));
        if (offset & 7)
            // align to 32 bit
            offset = (offset | 7) + 1;
        return buf;
    };
}
function indexOutOfRange(reader, writeLength) {
    return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
}
//# sourceMappingURL=binary.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js":
/*!***************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Metadata = exports.DenomUnit = exports.Supply = exports.Output = exports.Input = exports.SendEnabled = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
const coin_1 = __webpack_require__(/*! ../../base/v1beta1/coin */ "./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js");
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.bank.v1beta1";
function createBaseParams() {
    return {
        sendEnabled: [],
        defaultSendEnabled: false,
    };
}
exports.Params = {
    typeUrl: "/cosmos.bank.v1beta1.Params",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.sendEnabled) {
            exports.SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.defaultSendEnabled === true) {
            writer.uint32(16).bool(message.defaultSendEnabled);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.sendEnabled.push(exports.SendEnabled.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.defaultSendEnabled = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseParams();
        if (Array.isArray(object?.sendEnabled))
            obj.sendEnabled = object.sendEnabled.map((e) => exports.SendEnabled.fromJSON(e));
        if ((0, helpers_1.isSet)(object.defaultSendEnabled))
            obj.defaultSendEnabled = Boolean(object.defaultSendEnabled);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.sendEnabled) {
            obj.sendEnabled = message.sendEnabled.map((e) => (e ? exports.SendEnabled.toJSON(e) : undefined));
        }
        else {
            obj.sendEnabled = [];
        }
        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseParams();
        message.sendEnabled = object.sendEnabled?.map((e) => exports.SendEnabled.fromPartial(e)) || [];
        message.defaultSendEnabled = object.defaultSendEnabled ?? false;
        return message;
    },
};
function createBaseSendEnabled() {
    return {
        denom: "",
        enabled: false,
    };
}
exports.SendEnabled = {
    typeUrl: "/cosmos.bank.v1beta1.SendEnabled",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.enabled === true) {
            writer.uint32(16).bool(message.enabled);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSendEnabled();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.enabled = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSendEnabled();
        if ((0, helpers_1.isSet)(object.denom))
            obj.denom = String(object.denom);
        if ((0, helpers_1.isSet)(object.enabled))
            obj.enabled = Boolean(object.enabled);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.enabled !== undefined && (obj.enabled = message.enabled);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSendEnabled();
        message.denom = object.denom ?? "";
        message.enabled = object.enabled ?? false;
        return message;
    },
};
function createBaseInput() {
    return {
        address: "",
        coins: [],
    };
}
exports.Input = {
    typeUrl: "/cosmos.bank.v1beta1.Input",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        for (const v of message.coins) {
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseInput();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.string();
                    break;
                case 2:
                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseInput();
        if ((0, helpers_1.isSet)(object.address))
            obj.address = String(object.address);
        if (Array.isArray(object?.coins))
            obj.coins = object.coins.map((e) => coin_1.Coin.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.address !== undefined && (obj.address = message.address);
        if (message.coins) {
            obj.coins = message.coins.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));
        }
        else {
            obj.coins = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseInput();
        message.address = object.address ?? "";
        message.coins = object.coins?.map((e) => coin_1.Coin.fromPartial(e)) || [];
        return message;
    },
};
function createBaseOutput() {
    return {
        address: "",
        coins: [],
    };
}
exports.Output = {
    typeUrl: "/cosmos.bank.v1beta1.Output",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        for (const v of message.coins) {
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseOutput();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.string();
                    break;
                case 2:
                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseOutput();
        if ((0, helpers_1.isSet)(object.address))
            obj.address = String(object.address);
        if (Array.isArray(object?.coins))
            obj.coins = object.coins.map((e) => coin_1.Coin.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.address !== undefined && (obj.address = message.address);
        if (message.coins) {
            obj.coins = message.coins.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));
        }
        else {
            obj.coins = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseOutput();
        message.address = object.address ?? "";
        message.coins = object.coins?.map((e) => coin_1.Coin.fromPartial(e)) || [];
        return message;
    },
};
function createBaseSupply() {
    return {
        total: [],
    };
}
exports.Supply = {
    typeUrl: "/cosmos.bank.v1beta1.Supply",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.total) {
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSupply();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.total.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSupply();
        if (Array.isArray(object?.total))
            obj.total = object.total.map((e) => coin_1.Coin.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.total) {
            obj.total = message.total.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));
        }
        else {
            obj.total = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSupply();
        message.total = object.total?.map((e) => coin_1.Coin.fromPartial(e)) || [];
        return message;
    },
};
function createBaseDenomUnit() {
    return {
        denom: "",
        exponent: 0,
        aliases: [],
    };
}
exports.DenomUnit = {
    typeUrl: "/cosmos.bank.v1beta1.DenomUnit",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.exponent !== 0) {
            writer.uint32(16).uint32(message.exponent);
        }
        for (const v of message.aliases) {
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDenomUnit();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.exponent = reader.uint32();
                    break;
                case 3:
                    message.aliases.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseDenomUnit();
        if ((0, helpers_1.isSet)(object.denom))
            obj.denom = String(object.denom);
        if ((0, helpers_1.isSet)(object.exponent))
            obj.exponent = Number(object.exponent);
        if (Array.isArray(object?.aliases))
            obj.aliases = object.aliases.map((e) => String(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.exponent !== undefined && (obj.exponent = Math.round(message.exponent));
        if (message.aliases) {
            obj.aliases = message.aliases.map((e) => e);
        }
        else {
            obj.aliases = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseDenomUnit();
        message.denom = object.denom ?? "";
        message.exponent = object.exponent ?? 0;
        message.aliases = object.aliases?.map((e) => e) || [];
        return message;
    },
};
function createBaseMetadata() {
    return {
        description: "",
        denomUnits: [],
        base: "",
        display: "",
        name: "",
        symbol: "",
        uri: "",
        uriHash: "",
    };
}
exports.Metadata = {
    typeUrl: "/cosmos.bank.v1beta1.Metadata",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.description !== "") {
            writer.uint32(10).string(message.description);
        }
        for (const v of message.denomUnits) {
            exports.DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.base !== "") {
            writer.uint32(26).string(message.base);
        }
        if (message.display !== "") {
            writer.uint32(34).string(message.display);
        }
        if (message.name !== "") {
            writer.uint32(42).string(message.name);
        }
        if (message.symbol !== "") {
            writer.uint32(50).string(message.symbol);
        }
        if (message.uri !== "") {
            writer.uint32(58).string(message.uri);
        }
        if (message.uriHash !== "") {
            writer.uint32(66).string(message.uriHash);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMetadata();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.description = reader.string();
                    break;
                case 2:
                    message.denomUnits.push(exports.DenomUnit.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.base = reader.string();
                    break;
                case 4:
                    message.display = reader.string();
                    break;
                case 5:
                    message.name = reader.string();
                    break;
                case 6:
                    message.symbol = reader.string();
                    break;
                case 7:
                    message.uri = reader.string();
                    break;
                case 8:
                    message.uriHash = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseMetadata();
        if ((0, helpers_1.isSet)(object.description))
            obj.description = String(object.description);
        if (Array.isArray(object?.denomUnits))
            obj.denomUnits = object.denomUnits.map((e) => exports.DenomUnit.fromJSON(e));
        if ((0, helpers_1.isSet)(object.base))
            obj.base = String(object.base);
        if ((0, helpers_1.isSet)(object.display))
            obj.display = String(object.display);
        if ((0, helpers_1.isSet)(object.name))
            obj.name = String(object.name);
        if ((0, helpers_1.isSet)(object.symbol))
            obj.symbol = String(object.symbol);
        if ((0, helpers_1.isSet)(object.uri))
            obj.uri = String(object.uri);
        if ((0, helpers_1.isSet)(object.uriHash))
            obj.uriHash = String(object.uriHash);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.description !== undefined && (obj.description = message.description);
        if (message.denomUnits) {
            obj.denomUnits = message.denomUnits.map((e) => (e ? exports.DenomUnit.toJSON(e) : undefined));
        }
        else {
            obj.denomUnits = [];
        }
        message.base !== undefined && (obj.base = message.base);
        message.display !== undefined && (obj.display = message.display);
        message.name !== undefined && (obj.name = message.name);
        message.symbol !== undefined && (obj.symbol = message.symbol);
        message.uri !== undefined && (obj.uri = message.uri);
        message.uriHash !== undefined && (obj.uriHash = message.uriHash);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMetadata();
        message.description = object.description ?? "";
        message.denomUnits = object.denomUnits?.map((e) => exports.DenomUnit.fromPartial(e)) || [];
        message.base = object.base ?? "";
        message.display = object.display ?? "";
        message.name = object.name ?? "";
        message.symbol = object.symbol ?? "";
        message.uri = object.uri ?? "";
        message.uriHash = object.uriHash ?? "";
        return message;
    },
};
//# sourceMappingURL=bank.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js":
/*!*************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MsgClientImpl = exports.MsgSetSendEnabledResponse = exports.MsgSetSendEnabled = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = exports.protobufPackage = void 0;
/* eslint-disable */
const coin_1 = __webpack_require__(/*! ../../base/v1beta1/coin */ "./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js");
const bank_1 = __webpack_require__(/*! ./bank */ "./node_modules/cosmjs-types/cosmos/bank/v1beta1/bank.js");
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.bank.v1beta1";
function createBaseMsgSend() {
    return {
        fromAddress: "",
        toAddress: "",
        amount: [],
    };
}
exports.MsgSend = {
    typeUrl: "/cosmos.bank.v1beta1.MsgSend",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.fromAddress !== "") {
            writer.uint32(10).string(message.fromAddress);
        }
        if (message.toAddress !== "") {
            writer.uint32(18).string(message.toAddress);
        }
        for (const v of message.amount) {
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSend();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.fromAddress = reader.string();
                    break;
                case 2:
                    message.toAddress = reader.string();
                    break;
                case 3:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseMsgSend();
        if ((0, helpers_1.isSet)(object.fromAddress))
            obj.fromAddress = String(object.fromAddress);
        if ((0, helpers_1.isSet)(object.toAddress))
            obj.toAddress = String(object.toAddress);
        if (Array.isArray(object?.amount))
            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);
        message.toAddress !== undefined && (obj.toAddress = message.toAddress);
        if (message.amount) {
            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgSend();
        message.fromAddress = object.fromAddress ?? "";
        message.toAddress = object.toAddress ?? "";
        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];
        return message;
    },
};
function createBaseMsgSendResponse() {
    return {};
}
exports.MsgSendResponse = {
    typeUrl: "/cosmos.bank.v1beta1.MsgSendResponse",
    encode(_, writer = binary_1.BinaryWriter.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSendResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        const obj = createBaseMsgSendResponse();
        return obj;
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgSendResponse();
        return message;
    },
};
function createBaseMsgMultiSend() {
    return {
        inputs: [],
        outputs: [],
    };
}
exports.MsgMultiSend = {
    typeUrl: "/cosmos.bank.v1beta1.MsgMultiSend",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.inputs) {
            bank_1.Input.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.outputs) {
            bank_1.Output.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSend();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.inputs.push(bank_1.Input.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.outputs.push(bank_1.Output.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseMsgMultiSend();
        if (Array.isArray(object?.inputs))
            obj.inputs = object.inputs.map((e) => bank_1.Input.fromJSON(e));
        if (Array.isArray(object?.outputs))
            obj.outputs = object.outputs.map((e) => bank_1.Output.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.inputs) {
            obj.inputs = message.inputs.map((e) => (e ? bank_1.Input.toJSON(e) : undefined));
        }
        else {
            obj.inputs = [];
        }
        if (message.outputs) {
            obj.outputs = message.outputs.map((e) => (e ? bank_1.Output.toJSON(e) : undefined));
        }
        else {
            obj.outputs = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgMultiSend();
        message.inputs = object.inputs?.map((e) => bank_1.Input.fromPartial(e)) || [];
        message.outputs = object.outputs?.map((e) => bank_1.Output.fromPartial(e)) || [];
        return message;
    },
};
function createBaseMsgMultiSendResponse() {
    return {};
}
exports.MsgMultiSendResponse = {
    typeUrl: "/cosmos.bank.v1beta1.MsgMultiSendResponse",
    encode(_, writer = binary_1.BinaryWriter.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSendResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        const obj = createBaseMsgMultiSendResponse();
        return obj;
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgMultiSendResponse();
        return message;
    },
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: bank_1.Params.fromPartial({}),
    };
}
exports.MsgUpdateParams = {
    typeUrl: "/cosmos.bank.v1beta1.MsgUpdateParams",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            bank_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.authority = reader.string();
                    break;
                case 2:
                    message.params = bank_1.Params.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseMsgUpdateParams();
        if ((0, helpers_1.isSet)(object.authority))
            obj.authority = String(object.authority);
        if ((0, helpers_1.isSet)(object.params))
            obj.params = bank_1.Params.fromJSON(object.params);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.authority !== undefined && (obj.authority = message.authority);
        message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgUpdateParams();
        message.authority = object.authority ?? "";
        if (object.params !== undefined && object.params !== null) {
            message.params = bank_1.Params.fromPartial(object.params);
        }
        return message;
    },
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    typeUrl: "/cosmos.bank.v1beta1.MsgUpdateParamsResponse",
    encode(_, writer = binary_1.BinaryWriter.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        const obj = createBaseMsgUpdateParamsResponse();
        return obj;
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    },
};
function createBaseMsgSetSendEnabled() {
    return {
        authority: "",
        sendEnabled: [],
        useDefaultFor: [],
    };
}
exports.MsgSetSendEnabled = {
    typeUrl: "/cosmos.bank.v1beta1.MsgSetSendEnabled",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        for (const v of message.sendEnabled) {
            bank_1.SendEnabled.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.useDefaultFor) {
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetSendEnabled();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.authority = reader.string();
                    break;
                case 2:
                    message.sendEnabled.push(bank_1.SendEnabled.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.useDefaultFor.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseMsgSetSendEnabled();
        if ((0, helpers_1.isSet)(object.authority))
            obj.authority = String(object.authority);
        if (Array.isArray(object?.sendEnabled))
            obj.sendEnabled = object.sendEnabled.map((e) => bank_1.SendEnabled.fromJSON(e));
        if (Array.isArray(object?.useDefaultFor))
            obj.useDefaultFor = object.useDefaultFor.map((e) => String(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.authority !== undefined && (obj.authority = message.authority);
        if (message.sendEnabled) {
            obj.sendEnabled = message.sendEnabled.map((e) => (e ? bank_1.SendEnabled.toJSON(e) : undefined));
        }
        else {
            obj.sendEnabled = [];
        }
        if (message.useDefaultFor) {
            obj.useDefaultFor = message.useDefaultFor.map((e) => e);
        }
        else {
            obj.useDefaultFor = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgSetSendEnabled();
        message.authority = object.authority ?? "";
        message.sendEnabled = object.sendEnabled?.map((e) => bank_1.SendEnabled.fromPartial(e)) || [];
        message.useDefaultFor = object.useDefaultFor?.map((e) => e) || [];
        return message;
    },
};
function createBaseMsgSetSendEnabledResponse() {
    return {};
}
exports.MsgSetSendEnabledResponse = {
    typeUrl: "/cosmos.bank.v1beta1.MsgSetSendEnabledResponse",
    encode(_, writer = binary_1.BinaryWriter.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetSendEnabledResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        const obj = createBaseMsgSetSendEnabledResponse();
        return obj;
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgSetSendEnabledResponse();
        return message;
    },
};
class MsgClientImpl {
    constructor(rpc) {
        this.rpc = rpc;
        this.Send = this.Send.bind(this);
        this.MultiSend = this.MultiSend.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
        this.SetSendEnabled = this.SetSendEnabled.bind(this);
    }
    Send(request) {
        const data = exports.MsgSend.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "Send", data);
        return promise.then((data) => exports.MsgSendResponse.decode(new binary_1.BinaryReader(data)));
    }
    MultiSend(request) {
        const data = exports.MsgMultiSend.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "MultiSend", data);
        return promise.then((data) => exports.MsgMultiSendResponse.decode(new binary_1.BinaryReader(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "UpdateParams", data);
        return promise.then((data) => exports.MsgUpdateParamsResponse.decode(new binary_1.BinaryReader(data)));
    }
    SetSendEnabled(request) {
        const data = exports.MsgSetSendEnabled.encode(request).finish();
        const promise = this.rpc.request("cosmos.bank.v1beta1.Msg", "SetSendEnabled", data);
        return promise.then((data) => exports.MsgSetSendEnabledResponse.decode(new binary_1.BinaryReader(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
//# sourceMappingURL=tx.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js":
/*!***************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DecProto = exports.IntProto = exports.DecCoin = exports.Coin = exports.protobufPackage = void 0;
/* eslint-disable */
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.base.v1beta1";
function createBaseCoin() {
    return {
        denom: "",
        amount: "",
    };
}
exports.Coin = {
    typeUrl: "/cosmos.base.v1beta1.Coin",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
            writer.uint32(18).string(message.amount);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCoin();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.amount = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseCoin();
        if ((0, helpers_1.isSet)(object.denom))
            obj.denom = String(object.denom);
        if ((0, helpers_1.isSet)(object.amount))
            obj.amount = String(object.amount);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.amount !== undefined && (obj.amount = message.amount);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseCoin();
        message.denom = object.denom ?? "";
        message.amount = object.amount ?? "";
        return message;
    },
};
function createBaseDecCoin() {
    return {
        denom: "",
        amount: "",
    };
}
exports.DecCoin = {
    typeUrl: "/cosmos.base.v1beta1.DecCoin",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
            writer.uint32(18).string(message.amount);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDecCoin();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.amount = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseDecCoin();
        if ((0, helpers_1.isSet)(object.denom))
            obj.denom = String(object.denom);
        if ((0, helpers_1.isSet)(object.amount))
            obj.amount = String(object.amount);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.amount !== undefined && (obj.amount = message.amount);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseDecCoin();
        message.denom = object.denom ?? "";
        message.amount = object.amount ?? "";
        return message;
    },
};
function createBaseIntProto() {
    return {
        int: "",
    };
}
exports.IntProto = {
    typeUrl: "/cosmos.base.v1beta1.IntProto",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.int !== "") {
            writer.uint32(10).string(message.int);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseIntProto();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.int = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseIntProto();
        if ((0, helpers_1.isSet)(object.int))
            obj.int = String(object.int);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.int !== undefined && (obj.int = message.int);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseIntProto();
        message.int = object.int ?? "";
        return message;
    },
};
function createBaseDecProto() {
    return {
        dec: "",
    };
}
exports.DecProto = {
    typeUrl: "/cosmos.base.v1beta1.DecProto",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.dec !== "") {
            writer.uint32(10).string(message.dec);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDecProto();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.dec = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseDecProto();
        if ((0, helpers_1.isSet)(object.dec))
            obj.dec = String(object.dec);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.dec !== undefined && (obj.dec = message.dec);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseDecProto();
        message.dec = object.dec ?? "";
        return message;
    },
};
//# sourceMappingURL=coin.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js":
/*!*****************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
/* eslint-disable */
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.crypto.ed25519";
function createBasePubKey() {
    return {
        key: new Uint8Array(),
    };
}
exports.PubKey = {
    typeUrl: "/cosmos.crypto.ed25519.PubKey",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBasePubKey();
        if ((0, helpers_1.isSet)(object.key))
            obj.key = (0, helpers_1.bytesFromBase64)(object.key);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.key !== undefined &&
            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBasePubKey();
        message.key = object.key ?? new Uint8Array();
        return message;
    },
};
function createBasePrivKey() {
    return {
        key: new Uint8Array(),
    };
}
exports.PrivKey = {
    typeUrl: "/cosmos.crypto.ed25519.PrivKey",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBasePrivKey();
        if ((0, helpers_1.isSet)(object.key))
            obj.key = (0, helpers_1.bytesFromBase64)(object.key);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.key !== undefined &&
            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBasePrivKey();
        message.key = object.key ?? new Uint8Array();
        return message;
    },
};
//# sourceMappingURL=keys.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js":
/*!******************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LegacyAminoPubKey = exports.protobufPackage = void 0;
/* eslint-disable */
const any_1 = __webpack_require__(/*! ../../../google/protobuf/any */ "./node_modules/cosmjs-types/google/protobuf/any.js");
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.crypto.multisig";
function createBaseLegacyAminoPubKey() {
    return {
        threshold: 0,
        publicKeys: [],
    };
}
exports.LegacyAminoPubKey = {
    typeUrl: "/cosmos.crypto.multisig.LegacyAminoPubKey",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.threshold !== 0) {
            writer.uint32(8).uint32(message.threshold);
        }
        for (const v of message.publicKeys) {
            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseLegacyAminoPubKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.threshold = reader.uint32();
                    break;
                case 2:
                    message.publicKeys.push(any_1.Any.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseLegacyAminoPubKey();
        if ((0, helpers_1.isSet)(object.threshold))
            obj.threshold = Number(object.threshold);
        if (Array.isArray(object?.publicKeys))
            obj.publicKeys = object.publicKeys.map((e) => any_1.Any.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.threshold !== undefined && (obj.threshold = Math.round(message.threshold));
        if (message.publicKeys) {
            obj.publicKeys = message.publicKeys.map((e) => (e ? any_1.Any.toJSON(e) : undefined));
        }
        else {
            obj.publicKeys = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseLegacyAminoPubKey();
        message.threshold = object.threshold ?? 0;
        message.publicKeys = object.publicKeys?.map((e) => any_1.Any.fromPartial(e)) || [];
        return message;
    },
};
//# sourceMappingURL=keys.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js":
/*!******************************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;
/* eslint-disable */
const binary_1 = __webpack_require__(/*! ../../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.crypto.multisig.v1beta1";
function createBaseMultiSignature() {
    return {
        signatures: [],
    };
}
exports.MultiSignature = {
    typeUrl: "/cosmos.crypto.multisig.v1beta1.MultiSignature",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.signatures) {
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMultiSignature();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.signatures.push(reader.bytes());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseMultiSignature();
        if (Array.isArray(object?.signatures))
            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.signatures) {
            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));
        }
        else {
            obj.signatures = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMultiSignature();
        message.signatures = object.signatures?.map((e) => e) || [];
        return message;
    },
};
function createBaseCompactBitArray() {
    return {
        extraBitsStored: 0,
        elems: new Uint8Array(),
    };
}
exports.CompactBitArray = {
    typeUrl: "/cosmos.crypto.multisig.v1beta1.CompactBitArray",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.extraBitsStored !== 0) {
            writer.uint32(8).uint32(message.extraBitsStored);
        }
        if (message.elems.length !== 0) {
            writer.uint32(18).bytes(message.elems);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCompactBitArray();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.extraBitsStored = reader.uint32();
                    break;
                case 2:
                    message.elems = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseCompactBitArray();
        if ((0, helpers_1.isSet)(object.extraBitsStored))
            obj.extraBitsStored = Number(object.extraBitsStored);
        if ((0, helpers_1.isSet)(object.elems))
            obj.elems = (0, helpers_1.bytesFromBase64)(object.elems);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.extraBitsStored !== undefined && (obj.extraBitsStored = Math.round(message.extraBitsStored));
        message.elems !== undefined &&
            (obj.elems = (0, helpers_1.base64FromBytes)(message.elems !== undefined ? message.elems : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseCompactBitArray();
        message.extraBitsStored = object.extraBitsStored ?? 0;
        message.elems = object.elems ?? new Uint8Array();
        return message;
    },
};
//# sourceMappingURL=multisig.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js":
/*!*******************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
/* eslint-disable */
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.crypto.secp256k1";
function createBasePubKey() {
    return {
        key: new Uint8Array(),
    };
}
exports.PubKey = {
    typeUrl: "/cosmos.crypto.secp256k1.PubKey",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBasePubKey();
        if ((0, helpers_1.isSet)(object.key))
            obj.key = (0, helpers_1.bytesFromBase64)(object.key);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.key !== undefined &&
            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBasePubKey();
        message.key = object.key ?? new Uint8Array();
        return message;
    },
};
function createBasePrivKey() {
    return {
        key: new Uint8Array(),
    };
}
exports.PrivKey = {
    typeUrl: "/cosmos.crypto.secp256k1.PrivKey",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBasePrivKey();
        if ((0, helpers_1.isSet)(object.key))
            obj.key = (0, helpers_1.bytesFromBase64)(object.key);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.key !== undefined &&
            (obj.key = (0, helpers_1.base64FromBytes)(message.key !== undefined ? message.key : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBasePrivKey();
        message.key = object.key ?? new Uint8Array();
        return message;
    },
};
//# sourceMappingURL=keys.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js":
/*!************************************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;
/* eslint-disable */
const multisig_1 = __webpack_require__(/*! ../../../crypto/multisig/v1beta1/multisig */ "./node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js");
const any_1 = __webpack_require__(/*! ../../../../google/protobuf/any */ "./node_modules/cosmjs-types/google/protobuf/any.js");
const binary_1 = __webpack_require__(/*! ../../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.tx.signing.v1beta1";
/**
 * SignMode represents a signing mode with its own security guarantees.
 *
 * This enum should be considered a registry of all known sign modes
 * in the Cosmos ecosystem. Apps are not expected to support all known
 * sign modes. Apps that would like to support custom  sign modes are
 * encouraged to open a small PR against this file to add a new case
 * to this SignMode enum describing their sign mode so that different
 * apps have a consistent version of this enum.
 */
var SignMode;
(function (SignMode) {
    /**
     * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
     * rejected.
     */
    SignMode[SignMode["SIGN_MODE_UNSPECIFIED"] = 0] = "SIGN_MODE_UNSPECIFIED";
    /**
     * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
     * verified with raw bytes from Tx.
     */
    SignMode[SignMode["SIGN_MODE_DIRECT"] = 1] = "SIGN_MODE_DIRECT";
    /**
     * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some
     * human-readable textual representation on top of the binary representation
     * from SIGN_MODE_DIRECT. It is currently not supported.
     */
    SignMode[SignMode["SIGN_MODE_TEXTUAL"] = 2] = "SIGN_MODE_TEXTUAL";
    /**
     * SIGN_MODE_DIRECT_AUX - SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
     * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
     * require signers signing over other signers' `signer_info`. It also allows
     * for adding Tips in transactions.
     *
     * Since: cosmos-sdk 0.46
     */
    SignMode[SignMode["SIGN_MODE_DIRECT_AUX"] = 3] = "SIGN_MODE_DIRECT_AUX";
    /**
     * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
     * Amino JSON and will be removed in the future.
     */
    SignMode[SignMode["SIGN_MODE_LEGACY_AMINO_JSON"] = 127] = "SIGN_MODE_LEGACY_AMINO_JSON";
    /**
     * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
     * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191
     *
     * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
     * but is not implemented on the SDK by default. To enable EIP-191, you need
     * to pass a custom `TxConfig` that has an implementation of
     * `SignModeHandler` for EIP-191. The SDK may decide to fully support
     * EIP-191 in the future.
     *
     * Since: cosmos-sdk 0.45.2
     */
    SignMode[SignMode["SIGN_MODE_EIP_191"] = 191] = "SIGN_MODE_EIP_191";
    SignMode[SignMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(SignMode || (exports.SignMode = SignMode = {}));
function signModeFromJSON(object) {
    switch (object) {
        case 0:
        case "SIGN_MODE_UNSPECIFIED":
            return SignMode.SIGN_MODE_UNSPECIFIED;
        case 1:
        case "SIGN_MODE_DIRECT":
            return SignMode.SIGN_MODE_DIRECT;
        case 2:
        case "SIGN_MODE_TEXTUAL":
            return SignMode.SIGN_MODE_TEXTUAL;
        case 3:
        case "SIGN_MODE_DIRECT_AUX":
            return SignMode.SIGN_MODE_DIRECT_AUX;
        case 127:
        case "SIGN_MODE_LEGACY_AMINO_JSON":
            return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        case 191:
        case "SIGN_MODE_EIP_191":
            return SignMode.SIGN_MODE_EIP_191;
        case -1:
        case "UNRECOGNIZED":
        default:
            return SignMode.UNRECOGNIZED;
    }
}
exports.signModeFromJSON = signModeFromJSON;
function signModeToJSON(object) {
    switch (object) {
        case SignMode.SIGN_MODE_UNSPECIFIED:
            return "SIGN_MODE_UNSPECIFIED";
        case SignMode.SIGN_MODE_DIRECT:
            return "SIGN_MODE_DIRECT";
        case SignMode.SIGN_MODE_TEXTUAL:
            return "SIGN_MODE_TEXTUAL";
        case SignMode.SIGN_MODE_DIRECT_AUX:
            return "SIGN_MODE_DIRECT_AUX";
        case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:
            return "SIGN_MODE_LEGACY_AMINO_JSON";
        case SignMode.SIGN_MODE_EIP_191:
            return "SIGN_MODE_EIP_191";
        case SignMode.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.signModeToJSON = signModeToJSON;
function createBaseSignatureDescriptors() {
    return {
        signatures: [],
    };
}
exports.SignatureDescriptors = {
    typeUrl: "/cosmos.tx.signing.v1beta1.SignatureDescriptors",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.signatures) {
            exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptors();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignatureDescriptors();
        if (Array.isArray(object?.signatures))
            obj.signatures = object.signatures.map((e) => exports.SignatureDescriptor.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.signatures) {
            obj.signatures = message.signatures.map((e) => (e ? exports.SignatureDescriptor.toJSON(e) : undefined));
        }
        else {
            obj.signatures = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignatureDescriptors();
        message.signatures = object.signatures?.map((e) => exports.SignatureDescriptor.fromPartial(e)) || [];
        return message;
    },
};
function createBaseSignatureDescriptor() {
    return {
        publicKey: undefined,
        data: undefined,
        sequence: BigInt(0),
    };
}
exports.SignatureDescriptor = {
    typeUrl: "/cosmos.tx.signing.v1beta1.SignatureDescriptor",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.publicKey !== undefined) {
            any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();
        }
        if (message.data !== undefined) {
            exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();
        }
        if (message.sequence !== BigInt(0)) {
            writer.uint32(24).uint64(message.sequence);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.publicKey = any_1.Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.sequence = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignatureDescriptor();
        if ((0, helpers_1.isSet)(object.publicKey))
            obj.publicKey = any_1.Any.fromJSON(object.publicKey);
        if ((0, helpers_1.isSet)(object.data))
            obj.data = exports.SignatureDescriptor_Data.fromJSON(object.data);
        if ((0, helpers_1.isSet)(object.sequence))
            obj.sequence = BigInt(object.sequence.toString());
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.publicKey !== undefined &&
            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);
        message.data !== undefined &&
            (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);
        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignatureDescriptor();
        if (object.publicKey !== undefined && object.publicKey !== null) {
            message.publicKey = any_1.Any.fromPartial(object.publicKey);
        }
        if (object.data !== undefined && object.data !== null) {
            message.data = exports.SignatureDescriptor_Data.fromPartial(object.data);
        }
        if (object.sequence !== undefined && object.sequence !== null) {
            message.sequence = BigInt(object.sequence.toString());
        }
        return message;
    },
};
function createBaseSignatureDescriptor_Data() {
    return {
        single: undefined,
        multi: undefined,
    };
}
exports.SignatureDescriptor_Data = {
    typeUrl: "/cosmos.tx.signing.v1beta1.Data",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.single !== undefined) {
            exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== undefined) {
            exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignatureDescriptor_Data();
        if ((0, helpers_1.isSet)(object.single))
            obj.single = exports.SignatureDescriptor_Data_Single.fromJSON(object.single);
        if ((0, helpers_1.isSet)(object.multi))
            obj.multi = exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.single !== undefined &&
            (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);
        message.multi !== undefined &&
            (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data();
        if (object.single !== undefined && object.single !== null) {
            message.single = exports.SignatureDescriptor_Data_Single.fromPartial(object.single);
        }
        if (object.multi !== undefined && object.multi !== null) {
            message.multi = exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi);
        }
        return message;
    },
};
function createBaseSignatureDescriptor_Data_Single() {
    return {
        mode: 0,
        signature: new Uint8Array(),
    };
}
exports.SignatureDescriptor_Data_Single = {
    typeUrl: "/cosmos.tx.signing.v1beta1.Single",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.mode !== 0) {
            writer.uint32(8).int32(message.mode);
        }
        if (message.signature.length !== 0) {
            writer.uint32(18).bytes(message.signature);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Single();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.mode = reader.int32();
                    break;
                case 2:
                    message.signature = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignatureDescriptor_Data_Single();
        if ((0, helpers_1.isSet)(object.mode))
            obj.mode = signModeFromJSON(object.mode);
        if ((0, helpers_1.isSet)(object.signature))
            obj.signature = (0, helpers_1.bytesFromBase64)(object.signature);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));
        message.signature !== undefined &&
            (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== undefined ? message.signature : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data_Single();
        message.mode = object.mode ?? 0;
        message.signature = object.signature ?? new Uint8Array();
        return message;
    },
};
function createBaseSignatureDescriptor_Data_Multi() {
    return {
        bitarray: undefined,
        signatures: [],
    };
}
exports.SignatureDescriptor_Data_Multi = {
    typeUrl: "/cosmos.tx.signing.v1beta1.Multi",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.bitarray !== undefined) {
            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.signatures) {
            exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Multi();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignatureDescriptor_Data_Multi();
        if ((0, helpers_1.isSet)(object.bitarray))
            obj.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);
        if (Array.isArray(object?.signatures))
            obj.signatures = object.signatures.map((e) => exports.SignatureDescriptor_Data.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.bitarray !== undefined &&
            (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);
        if (message.signatures) {
            obj.signatures = message.signatures.map((e) => (e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined));
        }
        else {
            obj.signatures = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignatureDescriptor_Data_Multi();
        if (object.bitarray !== undefined && object.bitarray !== null) {
            message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);
        }
        message.signatures = object.signatures?.map((e) => exports.SignatureDescriptor_Data.fromPartial(e)) || [];
        return message;
    },
};
//# sourceMappingURL=signing.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js":
/*!***********************************************************!*\
  !*** ./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuxSignerData = exports.Tip = exports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDocDirectAux = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;
/* eslint-disable */
const any_1 = __webpack_require__(/*! ../../../google/protobuf/any */ "./node_modules/cosmjs-types/google/protobuf/any.js");
const signing_1 = __webpack_require__(/*! ../signing/v1beta1/signing */ "./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js");
const multisig_1 = __webpack_require__(/*! ../../crypto/multisig/v1beta1/multisig */ "./node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js");
const coin_1 = __webpack_require__(/*! ../../base/v1beta1/coin */ "./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js");
const binary_1 = __webpack_require__(/*! ../../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "cosmos.tx.v1beta1";
function createBaseTx() {
    return {
        body: undefined,
        authInfo: undefined,
        signatures: [],
    };
}
exports.Tx = {
    typeUrl: "/cosmos.tx.v1beta1.Tx",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.body !== undefined) {
            exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();
        }
        if (message.authInfo !== undefined) {
            exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.signatures) {
            writer.uint32(26).bytes(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTx();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.body = exports.TxBody.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.signatures.push(reader.bytes());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseTx();
        if ((0, helpers_1.isSet)(object.body))
            obj.body = exports.TxBody.fromJSON(object.body);
        if ((0, helpers_1.isSet)(object.authInfo))
            obj.authInfo = exports.AuthInfo.fromJSON(object.authInfo);
        if (Array.isArray(object?.signatures))
            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);
        message.authInfo !== undefined &&
            (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);
        if (message.signatures) {
            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));
        }
        else {
            obj.signatures = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseTx();
        if (object.body !== undefined && object.body !== null) {
            message.body = exports.TxBody.fromPartial(object.body);
        }
        if (object.authInfo !== undefined && object.authInfo !== null) {
            message.authInfo = exports.AuthInfo.fromPartial(object.authInfo);
        }
        message.signatures = object.signatures?.map((e) => e) || [];
        return message;
    },
};
function createBaseTxRaw() {
    return {
        bodyBytes: new Uint8Array(),
        authInfoBytes: new Uint8Array(),
        signatures: [],
    };
}
exports.TxRaw = {
    typeUrl: "/cosmos.tx.v1beta1.TxRaw",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.bodyBytes.length !== 0) {
            writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
            writer.uint32(18).bytes(message.authInfoBytes);
        }
        for (const v of message.signatures) {
            writer.uint32(26).bytes(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTxRaw();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.bodyBytes = reader.bytes();
                    break;
                case 2:
                    message.authInfoBytes = reader.bytes();
                    break;
                case 3:
                    message.signatures.push(reader.bytes());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseTxRaw();
        if ((0, helpers_1.isSet)(object.bodyBytes))
            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);
        if ((0, helpers_1.isSet)(object.authInfoBytes))
            obj.authInfoBytes = (0, helpers_1.bytesFromBase64)(object.authInfoBytes);
        if (Array.isArray(object?.signatures))
            obj.signatures = object.signatures.map((e) => (0, helpers_1.bytesFromBase64)(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.bodyBytes !== undefined &&
            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== undefined &&
            (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));
        if (message.signatures) {
            obj.signatures = message.signatures.map((e) => (0, helpers_1.base64FromBytes)(e !== undefined ? e : new Uint8Array()));
        }
        else {
            obj.signatures = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseTxRaw();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();
        message.signatures = object.signatures?.map((e) => e) || [];
        return message;
    },
};
function createBaseSignDoc() {
    return {
        bodyBytes: new Uint8Array(),
        authInfoBytes: new Uint8Array(),
        chainId: "",
        accountNumber: BigInt(0),
    };
}
exports.SignDoc = {
    typeUrl: "/cosmos.tx.v1beta1.SignDoc",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.bodyBytes.length !== 0) {
            writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
            writer.uint32(18).bytes(message.authInfoBytes);
        }
        if (message.chainId !== "") {
            writer.uint32(26).string(message.chainId);
        }
        if (message.accountNumber !== BigInt(0)) {
            writer.uint32(32).uint64(message.accountNumber);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignDoc();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.bodyBytes = reader.bytes();
                    break;
                case 2:
                    message.authInfoBytes = reader.bytes();
                    break;
                case 3:
                    message.chainId = reader.string();
                    break;
                case 4:
                    message.accountNumber = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignDoc();
        if ((0, helpers_1.isSet)(object.bodyBytes))
            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);
        if ((0, helpers_1.isSet)(object.authInfoBytes))
            obj.authInfoBytes = (0, helpers_1.bytesFromBase64)(object.authInfoBytes);
        if ((0, helpers_1.isSet)(object.chainId))
            obj.chainId = String(object.chainId);
        if ((0, helpers_1.isSet)(object.accountNumber))
            obj.accountNumber = BigInt(object.accountNumber.toString());
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.bodyBytes !== undefined &&
            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== undefined &&
            (obj.authInfoBytes = (0, helpers_1.base64FromBytes)(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));
        message.chainId !== undefined && (obj.chainId = message.chainId);
        message.accountNumber !== undefined &&
            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignDoc();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();
        message.chainId = object.chainId ?? "";
        if (object.accountNumber !== undefined && object.accountNumber !== null) {
            message.accountNumber = BigInt(object.accountNumber.toString());
        }
        return message;
    },
};
function createBaseSignDocDirectAux() {
    return {
        bodyBytes: new Uint8Array(),
        publicKey: undefined,
        chainId: "",
        accountNumber: BigInt(0),
        sequence: BigInt(0),
        tip: undefined,
    };
}
exports.SignDocDirectAux = {
    typeUrl: "/cosmos.tx.v1beta1.SignDocDirectAux",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.bodyBytes.length !== 0) {
            writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.publicKey !== undefined) {
            any_1.Any.encode(message.publicKey, writer.uint32(18).fork()).ldelim();
        }
        if (message.chainId !== "") {
            writer.uint32(26).string(message.chainId);
        }
        if (message.accountNumber !== BigInt(0)) {
            writer.uint32(32).uint64(message.accountNumber);
        }
        if (message.sequence !== BigInt(0)) {
            writer.uint32(40).uint64(message.sequence);
        }
        if (message.tip !== undefined) {
            exports.Tip.encode(message.tip, writer.uint32(50).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignDocDirectAux();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.bodyBytes = reader.bytes();
                    break;
                case 2:
                    message.publicKey = any_1.Any.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.chainId = reader.string();
                    break;
                case 4:
                    message.accountNumber = reader.uint64();
                    break;
                case 5:
                    message.sequence = reader.uint64();
                    break;
                case 6:
                    message.tip = exports.Tip.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignDocDirectAux();
        if ((0, helpers_1.isSet)(object.bodyBytes))
            obj.bodyBytes = (0, helpers_1.bytesFromBase64)(object.bodyBytes);
        if ((0, helpers_1.isSet)(object.publicKey))
            obj.publicKey = any_1.Any.fromJSON(object.publicKey);
        if ((0, helpers_1.isSet)(object.chainId))
            obj.chainId = String(object.chainId);
        if ((0, helpers_1.isSet)(object.accountNumber))
            obj.accountNumber = BigInt(object.accountNumber.toString());
        if ((0, helpers_1.isSet)(object.sequence))
            obj.sequence = BigInt(object.sequence.toString());
        if ((0, helpers_1.isSet)(object.tip))
            obj.tip = exports.Tip.fromJSON(object.tip);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.bodyBytes !== undefined &&
            (obj.bodyBytes = (0, helpers_1.base64FromBytes)(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));
        message.publicKey !== undefined &&
            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);
        message.chainId !== undefined && (obj.chainId = message.chainId);
        message.accountNumber !== undefined &&
            (obj.accountNumber = (message.accountNumber || BigInt(0)).toString());
        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());
        message.tip !== undefined && (obj.tip = message.tip ? exports.Tip.toJSON(message.tip) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignDocDirectAux();
        message.bodyBytes = object.bodyBytes ?? new Uint8Array();
        if (object.publicKey !== undefined && object.publicKey !== null) {
            message.publicKey = any_1.Any.fromPartial(object.publicKey);
        }
        message.chainId = object.chainId ?? "";
        if (object.accountNumber !== undefined && object.accountNumber !== null) {
            message.accountNumber = BigInt(object.accountNumber.toString());
        }
        if (object.sequence !== undefined && object.sequence !== null) {
            message.sequence = BigInt(object.sequence.toString());
        }
        if (object.tip !== undefined && object.tip !== null) {
            message.tip = exports.Tip.fromPartial(object.tip);
        }
        return message;
    },
};
function createBaseTxBody() {
    return {
        messages: [],
        memo: "",
        timeoutHeight: BigInt(0),
        extensionOptions: [],
        nonCriticalExtensionOptions: [],
    };
}
exports.TxBody = {
    typeUrl: "/cosmos.tx.v1beta1.TxBody",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.messages) {
            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.memo !== "") {
            writer.uint32(18).string(message.memo);
        }
        if (message.timeoutHeight !== BigInt(0)) {
            writer.uint32(24).uint64(message.timeoutHeight);
        }
        for (const v of message.extensionOptions) {
            any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();
        }
        for (const v of message.nonCriticalExtensionOptions) {
            any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTxBody();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.memo = reader.string();
                    break;
                case 3:
                    message.timeoutHeight = reader.uint64();
                    break;
                case 1023:
                    message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));
                    break;
                case 2047:
                    message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseTxBody();
        if (Array.isArray(object?.messages))
            obj.messages = object.messages.map((e) => any_1.Any.fromJSON(e));
        if ((0, helpers_1.isSet)(object.memo))
            obj.memo = String(object.memo);
        if ((0, helpers_1.isSet)(object.timeoutHeight))
            obj.timeoutHeight = BigInt(object.timeoutHeight.toString());
        if (Array.isArray(object?.extensionOptions))
            obj.extensionOptions = object.extensionOptions.map((e) => any_1.Any.fromJSON(e));
        if (Array.isArray(object?.nonCriticalExtensionOptions))
            obj.nonCriticalExtensionOptions = object.nonCriticalExtensionOptions.map((e) => any_1.Any.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.messages) {
            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));
        }
        else {
            obj.messages = [];
        }
        message.memo !== undefined && (obj.memo = message.memo);
        message.timeoutHeight !== undefined &&
            (obj.timeoutHeight = (message.timeoutHeight || BigInt(0)).toString());
        if (message.extensionOptions) {
            obj.extensionOptions = message.extensionOptions.map((e) => (e ? any_1.Any.toJSON(e) : undefined));
        }
        else {
            obj.extensionOptions = [];
        }
        if (message.nonCriticalExtensionOptions) {
            obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map((e) => e ? any_1.Any.toJSON(e) : undefined);
        }
        else {
            obj.nonCriticalExtensionOptions = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseTxBody();
        message.messages = object.messages?.map((e) => any_1.Any.fromPartial(e)) || [];
        message.memo = object.memo ?? "";
        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {
            message.timeoutHeight = BigInt(object.timeoutHeight.toString());
        }
        message.extensionOptions = object.extensionOptions?.map((e) => any_1.Any.fromPartial(e)) || [];
        message.nonCriticalExtensionOptions =
            object.nonCriticalExtensionOptions?.map((e) => any_1.Any.fromPartial(e)) || [];
        return message;
    },
};
function createBaseAuthInfo() {
    return {
        signerInfos: [],
        fee: undefined,
        tip: undefined,
    };
}
exports.AuthInfo = {
    typeUrl: "/cosmos.tx.v1beta1.AuthInfo",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.signerInfos) {
            exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.fee !== undefined) {
            exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();
        }
        if (message.tip !== undefined) {
            exports.Tip.encode(message.tip, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAuthInfo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.fee = exports.Fee.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.tip = exports.Tip.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseAuthInfo();
        if (Array.isArray(object?.signerInfos))
            obj.signerInfos = object.signerInfos.map((e) => exports.SignerInfo.fromJSON(e));
        if ((0, helpers_1.isSet)(object.fee))
            obj.fee = exports.Fee.fromJSON(object.fee);
        if ((0, helpers_1.isSet)(object.tip))
            obj.tip = exports.Tip.fromJSON(object.tip);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.signerInfos) {
            obj.signerInfos = message.signerInfos.map((e) => (e ? exports.SignerInfo.toJSON(e) : undefined));
        }
        else {
            obj.signerInfos = [];
        }
        message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);
        message.tip !== undefined && (obj.tip = message.tip ? exports.Tip.toJSON(message.tip) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseAuthInfo();
        message.signerInfos = object.signerInfos?.map((e) => exports.SignerInfo.fromPartial(e)) || [];
        if (object.fee !== undefined && object.fee !== null) {
            message.fee = exports.Fee.fromPartial(object.fee);
        }
        if (object.tip !== undefined && object.tip !== null) {
            message.tip = exports.Tip.fromPartial(object.tip);
        }
        return message;
    },
};
function createBaseSignerInfo() {
    return {
        publicKey: undefined,
        modeInfo: undefined,
        sequence: BigInt(0),
    };
}
exports.SignerInfo = {
    typeUrl: "/cosmos.tx.v1beta1.SignerInfo",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.publicKey !== undefined) {
            any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();
        }
        if (message.modeInfo !== undefined) {
            exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();
        }
        if (message.sequence !== BigInt(0)) {
            writer.uint32(24).uint64(message.sequence);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignerInfo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.publicKey = any_1.Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.sequence = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseSignerInfo();
        if ((0, helpers_1.isSet)(object.publicKey))
            obj.publicKey = any_1.Any.fromJSON(object.publicKey);
        if ((0, helpers_1.isSet)(object.modeInfo))
            obj.modeInfo = exports.ModeInfo.fromJSON(object.modeInfo);
        if ((0, helpers_1.isSet)(object.sequence))
            obj.sequence = BigInt(object.sequence.toString());
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.publicKey !== undefined &&
            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);
        message.modeInfo !== undefined &&
            (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);
        message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseSignerInfo();
        if (object.publicKey !== undefined && object.publicKey !== null) {
            message.publicKey = any_1.Any.fromPartial(object.publicKey);
        }
        if (object.modeInfo !== undefined && object.modeInfo !== null) {
            message.modeInfo = exports.ModeInfo.fromPartial(object.modeInfo);
        }
        if (object.sequence !== undefined && object.sequence !== null) {
            message.sequence = BigInt(object.sequence.toString());
        }
        return message;
    },
};
function createBaseModeInfo() {
    return {
        single: undefined,
        multi: undefined,
    };
}
exports.ModeInfo = {
    typeUrl: "/cosmos.tx.v1beta1.ModeInfo",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.single !== undefined) {
            exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== undefined) {
            exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModeInfo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseModeInfo();
        if ((0, helpers_1.isSet)(object.single))
            obj.single = exports.ModeInfo_Single.fromJSON(object.single);
        if ((0, helpers_1.isSet)(object.multi))
            obj.multi = exports.ModeInfo_Multi.fromJSON(object.multi);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.single !== undefined &&
            (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);
        message.multi !== undefined &&
            (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseModeInfo();
        if (object.single !== undefined && object.single !== null) {
            message.single = exports.ModeInfo_Single.fromPartial(object.single);
        }
        if (object.multi !== undefined && object.multi !== null) {
            message.multi = exports.ModeInfo_Multi.fromPartial(object.multi);
        }
        return message;
    },
};
function createBaseModeInfo_Single() {
    return {
        mode: 0,
    };
}
exports.ModeInfo_Single = {
    typeUrl: "/cosmos.tx.v1beta1.Single",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.mode !== 0) {
            writer.uint32(8).int32(message.mode);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Single();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.mode = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseModeInfo_Single();
        if ((0, helpers_1.isSet)(object.mode))
            obj.mode = (0, signing_1.signModeFromJSON)(object.mode);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseModeInfo_Single();
        message.mode = object.mode ?? 0;
        return message;
    },
};
function createBaseModeInfo_Multi() {
    return {
        bitarray: undefined,
        modeInfos: [],
    };
}
exports.ModeInfo_Multi = {
    typeUrl: "/cosmos.tx.v1beta1.Multi",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.bitarray !== undefined) {
            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.modeInfos) {
            exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Multi();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseModeInfo_Multi();
        if ((0, helpers_1.isSet)(object.bitarray))
            obj.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);
        if (Array.isArray(object?.modeInfos))
            obj.modeInfos = object.modeInfos.map((e) => exports.ModeInfo.fromJSON(e));
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.bitarray !== undefined &&
            (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);
        if (message.modeInfos) {
            obj.modeInfos = message.modeInfos.map((e) => (e ? exports.ModeInfo.toJSON(e) : undefined));
        }
        else {
            obj.modeInfos = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseModeInfo_Multi();
        if (object.bitarray !== undefined && object.bitarray !== null) {
            message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);
        }
        message.modeInfos = object.modeInfos?.map((e) => exports.ModeInfo.fromPartial(e)) || [];
        return message;
    },
};
function createBaseFee() {
    return {
        amount: [],
        gasLimit: BigInt(0),
        payer: "",
        granter: "",
    };
}
exports.Fee = {
    typeUrl: "/cosmos.tx.v1beta1.Fee",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.amount) {
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.gasLimit !== BigInt(0)) {
            writer.uint32(16).uint64(message.gasLimit);
        }
        if (message.payer !== "") {
            writer.uint32(26).string(message.payer);
        }
        if (message.granter !== "") {
            writer.uint32(34).string(message.granter);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseFee();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.gasLimit = reader.uint64();
                    break;
                case 3:
                    message.payer = reader.string();
                    break;
                case 4:
                    message.granter = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseFee();
        if (Array.isArray(object?.amount))
            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));
        if ((0, helpers_1.isSet)(object.gasLimit))
            obj.gasLimit = BigInt(object.gasLimit.toString());
        if ((0, helpers_1.isSet)(object.payer))
            obj.payer = String(object.payer);
        if ((0, helpers_1.isSet)(object.granter))
            obj.granter = String(object.granter);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.amount) {
            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));
        }
        else {
            obj.amount = [];
        }
        message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || BigInt(0)).toString());
        message.payer !== undefined && (obj.payer = message.payer);
        message.granter !== undefined && (obj.granter = message.granter);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseFee();
        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];
        if (object.gasLimit !== undefined && object.gasLimit !== null) {
            message.gasLimit = BigInt(object.gasLimit.toString());
        }
        message.payer = object.payer ?? "";
        message.granter = object.granter ?? "";
        return message;
    },
};
function createBaseTip() {
    return {
        amount: [],
        tipper: "",
    };
}
exports.Tip = {
    typeUrl: "/cosmos.tx.v1beta1.Tip",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        for (const v of message.amount) {
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.tipper !== "") {
            writer.uint32(18).string(message.tipper);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTip();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.tipper = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseTip();
        if (Array.isArray(object?.amount))
            obj.amount = object.amount.map((e) => coin_1.Coin.fromJSON(e));
        if ((0, helpers_1.isSet)(object.tipper))
            obj.tipper = String(object.tipper);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        if (message.amount) {
            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));
        }
        else {
            obj.amount = [];
        }
        message.tipper !== undefined && (obj.tipper = message.tipper);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseTip();
        message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];
        message.tipper = object.tipper ?? "";
        return message;
    },
};
function createBaseAuxSignerData() {
    return {
        address: "",
        signDoc: undefined,
        mode: 0,
        sig: new Uint8Array(),
    };
}
exports.AuxSignerData = {
    typeUrl: "/cosmos.tx.v1beta1.AuxSignerData",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        if (message.signDoc !== undefined) {
            exports.SignDocDirectAux.encode(message.signDoc, writer.uint32(18).fork()).ldelim();
        }
        if (message.mode !== 0) {
            writer.uint32(24).int32(message.mode);
        }
        if (message.sig.length !== 0) {
            writer.uint32(34).bytes(message.sig);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAuxSignerData();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.string();
                    break;
                case 2:
                    message.signDoc = exports.SignDocDirectAux.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.mode = reader.int32();
                    break;
                case 4:
                    message.sig = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseAuxSignerData();
        if ((0, helpers_1.isSet)(object.address))
            obj.address = String(object.address);
        if ((0, helpers_1.isSet)(object.signDoc))
            obj.signDoc = exports.SignDocDirectAux.fromJSON(object.signDoc);
        if ((0, helpers_1.isSet)(object.mode))
            obj.mode = (0, signing_1.signModeFromJSON)(object.mode);
        if ((0, helpers_1.isSet)(object.sig))
            obj.sig = (0, helpers_1.bytesFromBase64)(object.sig);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.address !== undefined && (obj.address = message.address);
        message.signDoc !== undefined &&
            (obj.signDoc = message.signDoc ? exports.SignDocDirectAux.toJSON(message.signDoc) : undefined);
        message.mode !== undefined && (obj.mode = (0, signing_1.signModeToJSON)(message.mode));
        message.sig !== undefined &&
            (obj.sig = (0, helpers_1.base64FromBytes)(message.sig !== undefined ? message.sig : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseAuxSignerData();
        message.address = object.address ?? "";
        if (object.signDoc !== undefined && object.signDoc !== null) {
            message.signDoc = exports.SignDocDirectAux.fromPartial(object.signDoc);
        }
        message.mode = object.mode ?? 0;
        message.sig = object.sig ?? new Uint8Array();
        return message;
    },
};
//# sourceMappingURL=tx.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/google/protobuf/any.js":
/*!**********************************************************!*\
  !*** ./node_modules/cosmjs-types/google/protobuf/any.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Any = exports.protobufPackage = void 0;
/* eslint-disable */
const binary_1 = __webpack_require__(/*! ../../binary */ "./node_modules/cosmjs-types/binary.js");
const helpers_1 = __webpack_require__(/*! ../../helpers */ "./node_modules/cosmjs-types/helpers.js");
exports.protobufPackage = "google.protobuf";
function createBaseAny() {
    return {
        typeUrl: "",
        value: new Uint8Array(),
    };
}
exports.Any = {
    typeUrl: "/google.protobuf.Any",
    encode(message, writer = binary_1.BinaryWriter.create()) {
        if (message.typeUrl !== "") {
            writer.uint32(10).string(message.typeUrl);
        }
        if (message.value.length !== 0) {
            writer.uint32(18).bytes(message.value);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAny();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.typeUrl = reader.string();
                    break;
                case 2:
                    message.value = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const obj = createBaseAny();
        if ((0, helpers_1.isSet)(object.typeUrl))
            obj.typeUrl = String(object.typeUrl);
        if ((0, helpers_1.isSet)(object.value))
            obj.value = (0, helpers_1.bytesFromBase64)(object.value);
        return obj;
    },
    toJSON(message) {
        const obj = {};
        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);
        message.value !== undefined &&
            (obj.value = (0, helpers_1.base64FromBytes)(message.value !== undefined ? message.value : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseAny();
        message.typeUrl = object.typeUrl ?? "";
        message.value = object.value ?? new Uint8Array();
        return message;
    },
};
//# sourceMappingURL=any.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/helpers.js":
/*!**********************************************!*\
  !*** ./node_modules/cosmjs-types/helpers.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];

/* eslint-disable */
/**
 * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7
 * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
 * and run the transpile command or yarn proto command to regenerate this bundle.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromJsonTimestamp = exports.fromTimestamp = exports.toTimestamp = exports.setPaginationParams = exports.isObject = exports.isSet = exports.fromDuration = exports.toDuration = exports.omitDefault = exports.base64FromBytes = exports.bytesFromBase64 = void 0;
var globalThis = (() => {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof __webpack_require__.g !== "undefined")
        return __webpack_require__.g;
    throw "Unable to locate global object";
})();
const atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, "base64").toString("binary"));
function bytesFromBase64(b64) {
    const bin = atob(b64);
    const arr = new Uint8Array(bin.length);
    for (let i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
    }
    return arr;
}
exports.bytesFromBase64 = bytesFromBase64;
const btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, "binary").toString("base64"));
function base64FromBytes(arr) {
    const bin = [];
    arr.forEach((byte) => {
        bin.push(String.fromCharCode(byte));
    });
    return btoa(bin.join(""));
}
exports.base64FromBytes = base64FromBytes;
function omitDefault(input) {
    if (typeof input === "string") {
        return input === "" ? undefined : input;
    }
    if (typeof input === "number") {
        return input === 0 ? undefined : input;
    }
    if (typeof input === "bigint") {
        return input === BigInt(0) ? undefined : input;
    }
    throw new Error(`Got unsupported type ${typeof input}`);
}
exports.omitDefault = omitDefault;
function toDuration(duration) {
    return {
        seconds: BigInt(Math.floor(parseInt(duration) / 1000000000)),
        nanos: parseInt(duration) % 1000000000,
    };
}
exports.toDuration = toDuration;
function fromDuration(duration) {
    return (parseInt(duration.seconds.toString()) * 1000000000 + duration.nanos).toString();
}
exports.fromDuration = fromDuration;
function isSet(value) {
    return value !== null && value !== undefined;
}
exports.isSet = isSet;
function isObject(value) {
    return typeof value === "object" && value !== null;
}
exports.isObject = isObject;
const setPaginationParams = (options, pagination) => {
    if (!pagination) {
        return options;
    }
    if (typeof pagination?.countTotal !== "undefined") {
        options.params["pagination.count_total"] = pagination.countTotal;
    }
    if (typeof pagination?.key !== "undefined") {
        // String to Uint8Array
        // let uint8arr = new Uint8Array(Buffer.from(data,'base64'));
        // Uint8Array to String
        options.params["pagination.key"] = Buffer.from(pagination.key).toString("base64");
    }
    if (typeof pagination?.limit !== "undefined") {
        options.params["pagination.limit"] = pagination.limit.toString();
    }
    if (typeof pagination?.offset !== "undefined") {
        options.params["pagination.offset"] = pagination.offset.toString();
    }
    if (typeof pagination?.reverse !== "undefined") {
        options.params["pagination.reverse"] = pagination.reverse;
    }
    return options;
};
exports.setPaginationParams = setPaginationParams;
function toTimestamp(date) {
    const seconds = numberToLong(date.getTime() / 1000);
    const nanos = (date.getTime() % 1000) * 1000000;
    return {
        seconds,
        nanos,
    };
}
exports.toTimestamp = toTimestamp;
function fromTimestamp(t) {
    let millis = Number(t.seconds) * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
exports.fromTimestamp = fromTimestamp;
const timestampFromJSON = (object) => {
    return {
        seconds: isSet(object.seconds) ? BigInt(object.seconds.toString()) : BigInt(0),
        nanos: isSet(object.nanos) ? Number(object.nanos) : 0,
    };
};
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return toTimestamp(o);
    }
    else if (typeof o === "string") {
        return toTimestamp(new Date(o));
    }
    else {
        return timestampFromJSON(o);
    }
}
exports.fromJsonTimestamp = fromJsonTimestamp;
function numberToLong(number) {
    return BigInt(Math.trunc(number));
}
//# sourceMappingURL=helpers.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/utf8.js":
/*!*******************************************!*\
  !*** ./node_modules/cosmjs-types/utf8.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/* eslint-disable */
/**
 * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7
 * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
 * and run the transpile command or yarn proto command to regenerate this bundle.
 */
// Copyright (c) 2016, Daniel Wirtz  All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// * Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the
//   documentation and/or other materials provided with the distribution.
// * Neither the name of its author, nor the names of its contributors
//   may be used to endorse or promote products derived from this software
//   without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.utf8Write = exports.utf8Read = exports.utf8Length = void 0;
/**
 * Calculates the UTF8 byte length of a string.
 * @param {string} string String
 * @returns {number} Byte length
 */
function utf8Length(str) {
    let len = 0, c = 0;
    for (let i = 0; i < str.length; ++i) {
        c = str.charCodeAt(i);
        if (c < 128)
            len += 1;
        else if (c < 2048)
            len += 2;
        else if ((c & 0xfc00) === 0xd800 && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            ++i;
            len += 4;
        }
        else
            len += 3;
    }
    return len;
}
exports.utf8Length = utf8Length;
/**
 * Reads UTF8 bytes as a string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} String read
 */
function utf8Read(buffer, start, end) {
    const len = end - start;
    if (len < 1)
        return "";
    const chunk = [];
    let parts = [], i = 0, // char offset
    t; // temporary
    while (start < end) {
        t = buffer[start++];
        if (t < 128)
            chunk[i++] = t;
        else if (t > 191 && t < 224)
            chunk[i++] = ((t & 31) << 6) | (buffer[start++] & 63);
        else if (t > 239 && t < 365) {
            t =
                (((t & 7) << 18) |
                    ((buffer[start++] & 63) << 12) |
                    ((buffer[start++] & 63) << 6) |
                    (buffer[start++] & 63)) -
                    0x10000;
            chunk[i++] = 0xd800 + (t >> 10);
            chunk[i++] = 0xdc00 + (t & 1023);
        }
        else
            chunk[i++] = ((t & 15) << 12) | ((buffer[start++] & 63) << 6) | (buffer[start++] & 63);
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode(...chunk));
            i = 0;
        }
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode(...chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode(...chunk.slice(0, i));
}
exports.utf8Read = utf8Read;
/**
 * Writes a string as UTF8 bytes.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Bytes written
 */
function utf8Write(str, buffer, offset) {
    const start = offset;
    let c1, // character 1
    c2; // character 2
    for (let i = 0; i < str.length; ++i) {
        c1 = str.charCodeAt(i);
        if (c1 < 128) {
            buffer[offset++] = c1;
        }
        else if (c1 < 2048) {
            buffer[offset++] = (c1 >> 6) | 192;
            buffer[offset++] = (c1 & 63) | 128;
        }
        else if ((c1 & 0xfc00) === 0xd800 && ((c2 = str.charCodeAt(i + 1)) & 0xfc00) === 0xdc00) {
            c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);
            ++i;
            buffer[offset++] = (c1 >> 18) | 240;
            buffer[offset++] = ((c1 >> 12) & 63) | 128;
            buffer[offset++] = ((c1 >> 6) & 63) | 128;
            buffer[offset++] = (c1 & 63) | 128;
        }
        else {
            buffer[offset++] = (c1 >> 12) | 224;
            buffer[offset++] = ((c1 >> 6) & 63) | 128;
            buffer[offset++] = (c1 & 63) | 128;
        }
    }
    return offset - start;
}
exports.utf8Write = utf8Write;
//# sourceMappingURL=utf8.js.map

/***/ }),

/***/ "./node_modules/cosmjs-types/varint.js":
/*!*********************************************!*\
  !*** ./node_modules/cosmjs-types/varint.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* eslint-disable */
/**
 * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7
 * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
 * and run the transpile command or yarn proto command to regenerate this bundle.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.writeByte = exports.writeFixed32 = exports.int64Length = exports.writeVarint64 = exports.writeVarint32 = exports.readInt32 = exports.readUInt32 = exports.zzDecode = exports.zzEncode = exports.varint32read = exports.varint32write = exports.uInt64ToString = exports.int64ToString = exports.int64FromString = exports.varint64write = exports.varint64read = void 0;
// Copyright 2008 Google Inc.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
// * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
// * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Code generated by the Protocol Buffer compiler is owned by the owner
// of the input file used when generating it.  This code is not
// standalone and requires a support library to be linked with it.  This
// support library is itself covered by the above license.
/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */
/**
 * Read a 64 bit varint as two JS numbers.
 *
 * Returns tuple:
 * [0]: low bits
 * [1]: high bits
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175
 */
function varint64read() {
    let lowBits = 0;
    let highBits = 0;
    for (let shift = 0; shift < 28; shift += 7) {
        let b = this.buf[this.pos++];
        lowBits |= (b & 0x7f) << shift;
        if ((b & 0x80) == 0) {
            this.assertBounds();
            return [lowBits, highBits];
        }
    }
    let middleByte = this.buf[this.pos++];
    // last four bits of the first 32 bit number
    lowBits |= (middleByte & 0x0f) << 28;
    // 3 upper bits are part of the next 32 bit number
    highBits = (middleByte & 0x70) >> 4;
    if ((middleByte & 0x80) == 0) {
        this.assertBounds();
        return [lowBits, highBits];
    }
    for (let shift = 3; shift <= 31; shift += 7) {
        let b = this.buf[this.pos++];
        highBits |= (b & 0x7f) << shift;
        if ((b & 0x80) == 0) {
            this.assertBounds();
            return [lowBits, highBits];
        }
    }
    throw new Error("invalid varint");
}
exports.varint64read = varint64read;
/**
 * Write a 64 bit varint, given as two JS numbers, to the given bytes array.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344
 */
function varint64write(lo, hi, bytes) {
    for (let i = 0; i < 28; i = i + 7) {
        const shift = lo >>> i;
        const hasNext = !(shift >>> 7 == 0 && hi == 0);
        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;
        bytes.push(byte);
        if (!hasNext) {
            return;
        }
    }
    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);
    const hasMoreBits = !(hi >> 3 == 0);
    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);
    if (!hasMoreBits) {
        return;
    }
    for (let i = 3; i < 31; i = i + 7) {
        const shift = hi >>> i;
        const hasNext = !(shift >>> 7 == 0);
        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;
        bytes.push(byte);
        if (!hasNext) {
            return;
        }
    }
    bytes.push((hi >>> 31) & 0x01);
}
exports.varint64write = varint64write;
// constants for binary math
const TWO_PWR_32_DBL = 0x100000000;
/**
 * Parse decimal string of 64 bit integer value as two JS numbers.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10
 */
function int64FromString(dec) {
    // Check for minus sign.
    const minus = dec[0] === "-";
    if (minus) {
        dec = dec.slice(1);
    }
    // Work 6 decimal digits at a time, acting like we're converting base 1e6
    // digits to binary. This is safe to do with floating point math because
    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.
    const base = 1e6;
    let lowBits = 0;
    let highBits = 0;
    function add1e6digit(begin, end) {
        // Note: Number('') is 0.
        const digit1e6 = Number(dec.slice(begin, end));
        highBits *= base;
        lowBits = lowBits * base + digit1e6;
        // Carry bits from lowBits to
        if (lowBits >= TWO_PWR_32_DBL) {
            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);
            lowBits = lowBits % TWO_PWR_32_DBL;
        }
    }
    add1e6digit(-24, -18);
    add1e6digit(-18, -12);
    add1e6digit(-12, -6);
    add1e6digit(-6);
    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);
}
exports.int64FromString = int64FromString;
/**
 * Losslessly converts a 64-bit signed integer in 32:32 split representation
 * into a decimal string.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10
 */
function int64ToString(lo, hi) {
    let bits = newBits(lo, hi);
    // If we're treating the input as a signed value and the high bit is set, do
    // a manual two's complement conversion before the decimal conversion.
    const negative = bits.hi & 0x80000000;
    if (negative) {
        bits = negate(bits.lo, bits.hi);
    }
    const result = uInt64ToString(bits.lo, bits.hi);
    return negative ? "-" + result : result;
}
exports.int64ToString = int64ToString;
/**
 * Losslessly converts a 64-bit unsigned integer in 32:32 split representation
 * into a decimal string.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10
 */
function uInt64ToString(lo, hi) {
    ({ lo, hi } = toUnsigned(lo, hi));
    // Skip the expensive conversion if the number is small enough to use the
    // built-in conversions.
    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with
    // highBits <= 0x1FFFFF can be safely expressed with a double and retain
    // integer precision.
    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.
    if (hi <= 0x1fffff) {
        return String(TWO_PWR_32_DBL * hi + lo);
    }
    // What this code is doing is essentially converting the input number from
    // base-2 to base-1e7, which allows us to represent the 64-bit range with
    // only 3 (very large) digits. Those digits are then trivial to convert to
    // a base-10 string.
    // The magic numbers used here are -
    // 2^24 = 16777216 = (1,6777216) in base-1e7.
    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.
    // Split 32:32 representation into 16:24:24 representation so our
    // intermediate digits don't overflow.
    const low = lo & 0xffffff;
    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;
    const high = (hi >> 16) & 0xffff;
    // Assemble our three base-1e7 digits, ignoring carries. The maximum
    // value in a digit at this step is representable as a 48-bit integer, which
    // can be stored in a 64-bit floating point number.
    let digitA = low + mid * 6777216 + high * 6710656;
    let digitB = mid + high * 8147497;
    let digitC = high * 2;
    // Apply carries from A to B and from B to C.
    const base = 10000000;
    if (digitA >= base) {
        digitB += Math.floor(digitA / base);
        digitA %= base;
    }
    if (digitB >= base) {
        digitC += Math.floor(digitB / base);
        digitB %= base;
    }
    // If digitC is 0, then we should have returned in the trivial code path
    // at the top for non-safe integers. Given this, we can assume both digitB
    // and digitA need leading zeros.
    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) + decimalFrom1e7WithLeadingZeros(digitA);
}
exports.uInt64ToString = uInt64ToString;
function toUnsigned(lo, hi) {
    return { lo: lo >>> 0, hi: hi >>> 0 };
}
function newBits(lo, hi) {
    return { lo: lo | 0, hi: hi | 0 };
}
/**
 * Returns two's compliment negation of input.
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers
 */
function negate(lowBits, highBits) {
    highBits = ~highBits;
    if (lowBits) {
        lowBits = ~lowBits + 1;
    }
    else {
        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,
        // adding 1 to that, results in 0x100000000, which leaves
        // the low bits 0x0 and simply adds one to the high bits.
        highBits += 1;
    }
    return newBits(lowBits, highBits);
}
/**
 * Returns decimal representation of digit1e7 with leading zeros.
 */
const decimalFrom1e7WithLeadingZeros = (digit1e7) => {
    const partial = String(digit1e7);
    return "0000000".slice(partial.length) + partial;
};
/**
 * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144
 */
function varint32write(value, bytes) {
    if (value >= 0) {
        // write value as varint 32
        while (value > 0x7f) {
            bytes.push((value & 0x7f) | 0x80);
            value = value >>> 7;
        }
        bytes.push(value);
    }
    else {
        for (let i = 0; i < 9; i++) {
            bytes.push((value & 127) | 128);
            value = value >> 7;
        }
        bytes.push(1);
    }
}
exports.varint32write = varint32write;
/**
 * Read an unsigned 32 bit varint.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220
 */
function varint32read() {
    let b = this.buf[this.pos++];
    let result = b & 0x7f;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    b = this.buf[this.pos++];
    result |= (b & 0x7f) << 7;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    b = this.buf[this.pos++];
    result |= (b & 0x7f) << 14;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    b = this.buf[this.pos++];
    result |= (b & 0x7f) << 21;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    // Extract only last 4 bits
    b = this.buf[this.pos++];
    result |= (b & 0x0f) << 28;
    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)
        b = this.buf[this.pos++];
    if ((b & 0x80) != 0)
        throw new Error("invalid varint");
    this.assertBounds();
    // Result can have 32 bits, convert it to unsigned
    return result >>> 0;
}
exports.varint32read = varint32read;
/**
 * encode zig zag
 */
function zzEncode(lo, hi) {
    let mask = hi >> 31;
    hi = (((hi << 1) | (lo >>> 31)) ^ mask) >>> 0;
    lo = ((lo << 1) ^ mask) >>> 0;
    return [lo, hi];
}
exports.zzEncode = zzEncode;
/**
 * decode zig zag
 */
function zzDecode(lo, hi) {
    let mask = -(lo & 1);
    lo = (((lo >>> 1) | (hi << 31)) ^ mask) >>> 0;
    hi = ((hi >>> 1) ^ mask) >>> 0;
    return [lo, hi];
}
exports.zzDecode = zzDecode;
/**
 * unsigned int32 without moving pos.
 */
function readUInt32(buf, pos) {
    return (buf[pos] | (buf[pos + 1] << 8) | (buf[pos + 2] << 16)) + buf[pos + 3] * 0x1000000;
}
exports.readUInt32 = readUInt32;
/**
 * signed int32 without moving pos.
 */
function readInt32(buf, pos) {
    return (buf[pos] | (buf[pos + 1] << 8) | (buf[pos + 2] << 16)) + (buf[pos + 3] << 24);
}
exports.readInt32 = readInt32;
/**
 * writing varint32 to pos
 */
function writeVarint32(val, buf, pos) {
    while (val > 127) {
        buf[pos++] = (val & 127) | 128;
        val >>>= 7;
    }
    buf[pos] = val;
}
exports.writeVarint32 = writeVarint32;
/**
 * writing varint64 to pos
 */
function writeVarint64(val, buf, pos) {
    while (val.hi) {
        buf[pos++] = (val.lo & 127) | 128;
        val.lo = ((val.lo >>> 7) | (val.hi << 25)) >>> 0;
        val.hi >>>= 7;
    }
    while (val.lo > 127) {
        buf[pos++] = (val.lo & 127) | 128;
        val.lo = val.lo >>> 7;
    }
    buf[pos++] = val.lo;
}
exports.writeVarint64 = writeVarint64;
function int64Length(lo, hi) {
    let part0 = lo, part1 = ((lo >>> 28) | (hi << 4)) >>> 0, part2 = hi >>> 24;
    return part2 === 0
        ? part1 === 0
            ? part0 < 16384
                ? part0 < 128
                    ? 1
                    : 2
                : part0 < 2097152
                    ? 3
                    : 4
            : part1 < 16384
                ? part1 < 128
                    ? 5
                    : 6
                : part1 < 2097152
                    ? 7
                    : 8
        : part2 < 128
            ? 9
            : 10;
}
exports.int64Length = int64Length;
function writeFixed32(val, buf, pos) {
    buf[pos] = val & 255;
    buf[pos + 1] = (val >>> 8) & 255;
    buf[pos + 2] = (val >>> 16) & 255;
    buf[pos + 3] = val >>> 24;
}
exports.writeFixed32 = writeFixed32;
function writeByte(val, buf, pos) {
    buf[pos] = val & 255;
}
exports.writeByte = writeByte;
//# sourceMappingURL=varint.js.map

/***/ }),

/***/ "./node_modules/create-ecdh/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-ecdh/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];
var elliptic = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/create-ecdh/node_modules/bn.js/lib/bn.js")

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}


/***/ }),

/***/ "./node_modules/create-ecdh/node_modules/bn.js/lib/bn.js":
/*!***************************************************************!*\
  !*** ./node_modules/create-ecdh/node_modules/bn.js/lib/bn.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?4068").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/create-hash/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hash/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}


/***/ }),

/***/ "./node_modules/create-hash/md5.js":
/*!*****************************************!*\
  !*** ./node_modules/create-hash/md5.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}


/***/ }),

/***/ "./node_modules/create-hmac/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hmac/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Legacy = __webpack_require__(/*! ./legacy */ "./node_modules/create-hmac/legacy.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")

var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}


/***/ }),

/***/ "./node_modules/create-hmac/legacy.js":
/*!********************************************!*\
  !*** ./node_modules/create-hmac/legacy.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac


/***/ }),

/***/ "./node_modules/crypto-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-browserify/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


// eslint-disable-next-line no-multi-assign
exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");

// eslint-disable-next-line no-multi-assign
exports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");

// eslint-disable-next-line no-multi-assign
exports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js");

var algos = __webpack_require__(/*! browserify-sign/algos */ "./node_modules/browserify-sign/algos.js");
var algoKeys = Object.keys(algos);
var hashes = [
	'sha1',
	'sha224',
	'sha256',
	'sha384',
	'sha512',
	'md5',
	'rmd160'
].concat(algoKeys);

exports.getHashes = function () {
	return hashes;
};

var p = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js");
exports.pbkdf2 = p.pbkdf2;
exports.pbkdf2Sync = p.pbkdf2Sync;

var aes = __webpack_require__(/*! browserify-cipher */ "./node_modules/browserify-cipher/browser.js");

exports.Cipher = aes.Cipher;
exports.createCipher = aes.createCipher;
exports.Cipheriv = aes.Cipheriv;
exports.createCipheriv = aes.createCipheriv;
exports.Decipher = aes.Decipher;
exports.createDecipher = aes.createDecipher;
exports.Decipheriv = aes.Decipheriv;
exports.createDecipheriv = aes.createDecipheriv;
exports.getCiphers = aes.getCiphers;
exports.listCiphers = aes.listCiphers;

var dh = __webpack_require__(/*! diffie-hellman */ "./node_modules/diffie-hellman/browser.js");

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup;
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;
exports.getDiffieHellman = dh.getDiffieHellman;
exports.createDiffieHellman = dh.createDiffieHellman;
exports.DiffieHellman = dh.DiffieHellman;

var sign = __webpack_require__(/*! browserify-sign */ "./node_modules/browserify-sign/browser/index.js");

exports.createSign = sign.createSign;
exports.Sign = sign.Sign;
exports.createVerify = sign.createVerify;
exports.Verify = sign.Verify;

exports.createECDH = __webpack_require__(/*! create-ecdh */ "./node_modules/create-ecdh/browser.js");

var publicEncrypt = __webpack_require__(/*! public-encrypt */ "./node_modules/public-encrypt/browser.js");

exports.publicEncrypt = publicEncrypt.publicEncrypt;
exports.privateEncrypt = publicEncrypt.privateEncrypt;
exports.publicDecrypt = publicEncrypt.publicDecrypt;
exports.privateDecrypt = publicEncrypt.privateDecrypt;

// the least I can do is make error messages for the rest of the node.js/crypto api.
// [
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error('sorry, ' + name + ' is not implemented yet\nwe accept pull requests\nhttps://github.com/browserify/crypto-browserify');
//   };
// });

var rf = __webpack_require__(/*! randomfill */ "./node_modules/randomfill/browser.js");

exports.randomFill = rf.randomFill;
exports.randomFillSync = rf.randomFillSync;

exports.createCredentials = function () {
	throw new Error('sorry, createCredentials is not implemented yet\nwe accept pull requests\nhttps://github.com/browserify/crypto-browserify');
};

exports.constants = {
	DH_CHECK_P_NOT_SAFE_PRIME: 2,
	DH_CHECK_P_NOT_PRIME: 1,
	DH_UNABLE_TO_CHECK_GENERATOR: 4,
	DH_NOT_SUITABLE_GENERATOR: 8,
	NPN_ENABLED: 1,
	ALPN_ENABLED: 1,
	RSA_PKCS1_PADDING: 1,
	RSA_SSLV23_PADDING: 2,
	RSA_NO_PADDING: 3,
	RSA_PKCS1_OAEP_PADDING: 4,
	RSA_X931_PADDING: 5,
	RSA_PKCS1_PSS_PADDING: 6,
	POINT_CONVERSION_COMPRESSED: 2,
	POINT_CONVERSION_UNCOMPRESSED: 4,
	POINT_CONVERSION_HYBRID: 6
};


/***/ }),

/***/ "./node_modules/define-data-property/index.js":
/*!****************************************************!*\
  !*** ./node_modules/define-data-property/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");

var $SyntaxError = __webpack_require__(/*! es-errors/syntax */ "./node_modules/es-errors/syntax.js");
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");

var gopd = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

/** @type {import('.')} */
module.exports = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError('`obj` must be an object or a function`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError('`property` must be a string or a symbol`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError('`loose`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty) {
		$defineProperty(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};


/***/ }),

/***/ "./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var keys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = __webpack_require__(/*! define-data-property */ "./node_modules/define-data-property/index.js");

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var supportsDescriptors = __webpack_require__(/*! has-property-descriptors */ "./node_modules/has-property-descriptors/index.js")();

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),

/***/ "./node_modules/des.js/lib/des.js":
/*!****************************************!*\
  !*** ./node_modules/des.js/lib/des.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.utils = __webpack_require__(/*! ./des/utils */ "./node_modules/des.js/lib/des/utils.js");
exports.Cipher = __webpack_require__(/*! ./des/cipher */ "./node_modules/des.js/lib/des/cipher.js");
exports.DES = __webpack_require__(/*! ./des/des */ "./node_modules/des.js/lib/des/des.js");
exports.CBC = __webpack_require__(/*! ./des/cbc */ "./node_modules/des.js/lib/des/cbc.js");
exports.EDE = __webpack_require__(/*! ./des/ede */ "./node_modules/des.js/lib/des/ede.js");


/***/ }),

/***/ "./node_modules/des.js/lib/des/cbc.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/cbc.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/cipher.js":
/*!***********************************************!*\
  !*** ./node_modules/des.js/lib/des/cipher.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
  this.padding = options.padding !== false
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/des.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/des.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var utils = __webpack_require__(/*! ./utils */ "./node_modules/des.js/lib/des/utils.js");
var Cipher = __webpack_require__(/*! ./cipher */ "./node_modules/des.js/lib/des/cipher.js");

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  if (this.padding === false) {
    return false;
  }

  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  if (this.padding === false) {
    return buffer;
  }

  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/ede.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/ede.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var Cipher = __webpack_require__(/*! ./cipher */ "./node_modules/des.js/lib/des/cipher.js");
var DES = __webpack_require__(/*! ./des */ "./node_modules/des.js/lib/des/des.js");

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;


/***/ }),

/***/ "./node_modules/des.js/lib/des/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/des.js/lib/des/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};


/***/ }),

/***/ "./node_modules/diffie-hellman/browser.js":
/*!************************************************!*\
  !*** ./node_modules/diffie-hellman/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];
var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js")
var primes = __webpack_require__(/*! ./lib/primes.json */ "./node_modules/diffie-hellman/lib/primes.json")

var DH = __webpack_require__(/*! ./lib/dh */ "./node_modules/diffie-hellman/lib/dh.js")

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman


/***/ }),

/***/ "./node_modules/diffie-hellman/lib/dh.js":
/*!***********************************************!*\
  !*** ./node_modules/diffie-hellman/lib/dh.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];
var BN = __webpack_require__(/*! bn.js */ "./node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js");
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = __webpack_require__(/*! ./generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}


/***/ }),

/***/ "./node_modules/diffie-hellman/lib/generatePrime.js":
/*!**********************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/generatePrime.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js");
var TWENTYFOUR = new BN(24);
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}


/***/ }),

/***/ "./node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js":
/*!******************************************************************!*\
  !*** ./node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?e7e4").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/dunder-proto/get.js":
/*!******************************************!*\
  !*** ./node_modules/dunder-proto/get.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBind = __webpack_require__(/*! call-bind-apply-helpers */ "./node_modules/call-bind-apply-helpers/index.js");
var gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

var hasProtoAccessor;
try {
	// eslint-disable-next-line no-extra-parens, no-proto
	hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;
} catch (e) {
	if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
		throw e;
	}
}

// eslint-disable-next-line no-extra-parens
var desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));

var $Object = Object;
var $getPrototypeOf = $Object.getPrototypeOf;

/** @type {import('./get')} */
module.exports = desc && typeof desc.get === 'function'
	? callBind([desc.get])
	: typeof $getPrototypeOf === 'function'
		? /** @type {import('./get')} */ function getDunder(value) {
			// eslint-disable-next-line eqeqeq
			return $getPrototypeOf(value == null ? value : $Object(value));
		}
		: false;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic.js":
/*!***********************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var elliptic = exports;

elliptic.version = (__webpack_require__(/*! ../package.json */ "./node_modules/elliptic/package.json").version);
elliptic.utils = __webpack_require__(/*! ./elliptic/utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
elliptic.rand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");
elliptic.curve = __webpack_require__(/*! ./elliptic/curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
elliptic.curves = __webpack_require__(/*! ./elliptic/curves */ "./node_modules/elliptic/lib/elliptic/curves.js");

// Protocols
elliptic.ec = __webpack_require__(/*! ./elliptic/ec */ "./node_modules/elliptic/lib/elliptic/ec/index.js");
elliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ "./node_modules/elliptic/lib/elliptic/eddsa/index.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!*************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curve = exports;

curve.base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");
curve.short = __webpack_require__(/*! ./short */ "./node_modules/elliptic/lib/elliptic/curve/short.js");
curve.mont = __webpack_require__(/*! ./mont */ "./node_modules/elliptic/lib/elliptic/curve/mont.js");
curve.edwards = __webpack_require__(/*! ./edwards */ "./node_modules/elliptic/lib/elliptic/curve/edwards.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");

var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/short.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curves.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curves.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curves = exports;

var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var curve = __webpack_require__(/*! ./curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var utils = __webpack_require__(/*! ./utils */ "./node_modules/elliptic/lib/elliptic/utils.js");

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js");
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/index.js":
/*!********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var HmacDRBG = __webpack_require__(/*! hmac-drbg */ "./node_modules/hmac-drbg/lib/hmac-drbg.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var curves = __webpack_require__(/*! ../curves */ "./node_modules/elliptic/lib/elliptic/curves.js");
var rand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");
var assert = utils.assert;

var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/ec/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/ec/signature.js");

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {
  var byteLength;
  if (BN.isBN(msg) || typeof msg === 'number') {
    msg = new BN(msg, 16);
    byteLength = msg.byteLength();
  } else if (typeof msg === 'object') {
    // BN assumes an array-like input and asserts length
    byteLength = msg.length;
    msg = new BN(msg, 16);
  } else {
    // BN converts the value to string
    var str = msg.toString();
    // HEX encoding
    byteLength = (str.length + 1) >>> 1;
    msg = new BN(str, 16);
  }
  // Allow overriding
  if (typeof bitLength !== 'number') {
    bitLength = byteLength * 8;
  }
  var delta = bitLength - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {
    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',
      'Expected message to be an array-like, a hex string, or a BN instance');
    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer
    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);
  }

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(msg, false, options.msgBitLength);

  // Would fail further checks, but let's make the error message clear
  assert(!msg.isNeg(), 'Can not sign a negative message');

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Recheck nonce to be bijective to msg
  assert((new BN(nonce)).eq(msg), 'Can not sign message');

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc, options) {
  if (!options)
    options = {};

  msg = this._truncateToN(msg, false, options.msgBitLength);
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/key.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature, options) {
  return this.ec.verify(msg, signature, this, undefined, options);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");

var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  if(buf[p.place] === 0x00) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  if ((data[p.place] & 128) !== 0) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  if ((data[p.place] & 128) !== 0) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var curves = __webpack_require__(/*! ../curves */ "./node_modules/elliptic/lib/elliptic/curves.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/eddsa/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js");

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {
    return false;
  }
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!*********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!***************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = exports;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js");
var minAssert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  var i;
  for (i = 0; i < naf.length; i += 1) {
    naf[i] = 0;
  }

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),

/***/ "./node_modules/elliptic/node_modules/bn.js/lib/bn.js":
/*!************************************************************!*\
  !*** ./node_modules/elliptic/node_modules/bn.js/lib/bn.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?7bec").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/es-define-property/index.js":
/*!**************************************************!*\
  !*** ./node_modules/es-define-property/index.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


/** @type {import('.')} */
var $defineProperty = Object.defineProperty || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;


/***/ }),

/***/ "./node_modules/es-errors/eval.js":
/*!****************************************!*\
  !*** ./node_modules/es-errors/eval.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./eval')} */
module.exports = EvalError;


/***/ }),

/***/ "./node_modules/es-errors/index.js":
/*!*****************************************!*\
  !*** ./node_modules/es-errors/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('.')} */
module.exports = Error;


/***/ }),

/***/ "./node_modules/es-errors/range.js":
/*!*****************************************!*\
  !*** ./node_modules/es-errors/range.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./range')} */
module.exports = RangeError;


/***/ }),

/***/ "./node_modules/es-errors/ref.js":
/*!***************************************!*\
  !*** ./node_modules/es-errors/ref.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./ref')} */
module.exports = ReferenceError;


/***/ }),

/***/ "./node_modules/es-errors/syntax.js":
/*!******************************************!*\
  !*** ./node_modules/es-errors/syntax.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./syntax')} */
module.exports = SyntaxError;


/***/ }),

/***/ "./node_modules/es-errors/type.js":
/*!****************************************!*\
  !*** ./node_modules/es-errors/type.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./type')} */
module.exports = TypeError;


/***/ }),

/***/ "./node_modules/es-errors/uri.js":
/*!***************************************!*\
  !*** ./node_modules/es-errors/uri.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./uri')} */
module.exports = URIError;


/***/ }),

/***/ "./node_modules/es-object-atoms/index.js":
/*!***********************************************!*\
  !*** ./node_modules/es-object-atoms/index.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('.')} */
module.exports = Object;


/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


/***/ }),

/***/ "./node_modules/evp_bytestokey/index.js":
/*!**********************************************!*\
  !*** ./node_modules/evp_bytestokey/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey


/***/ }),

/***/ "./node_modules/for-each/index.js":
/*!****************************************!*\
  !*** ./node_modules/for-each/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isCallable = __webpack_require__(/*! is-callable */ "./node_modules/is-callable/index.js");

var toStr = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

/** @type {<This, A extends readonly unknown[]>(arr: A, iterator: (this: This | void, value: A[number], index: number, arr: A) => void, receiver: This | undefined) => void} */
var forEachArray = function forEachArray(array, iterator, receiver) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            if (receiver == null) {
                iterator(array[i], i, array);
            } else {
                iterator.call(receiver, array[i], i, array);
            }
        }
    }
};

/** @type {<This, S extends string>(string: S, iterator: (this: This | void, value: S[number], index: number, string: S) => void, receiver: This | undefined) => void} */
var forEachString = function forEachString(string, iterator, receiver) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        if (receiver == null) {
            iterator(string.charAt(i), i, string);
        } else {
            iterator.call(receiver, string.charAt(i), i, string);
        }
    }
};

/** @type {<This, O>(obj: O, iterator: (this: This | void, value: O[keyof O], index: keyof O, obj: O) => void, receiver: This | undefined) => void} */
var forEachObject = function forEachObject(object, iterator, receiver) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            if (receiver == null) {
                iterator(object[k], k, object);
            } else {
                iterator.call(receiver, object[k], k, object);
            }
        }
    }
};

/** @type {(x: unknown) => x is readonly unknown[]} */
function isArray(x) {
    return toStr.call(x) === '[object Array]';
}

/** @type {import('.')._internal} */
module.exports = function forEach(list, iterator, thisArg) {
    if (!isCallable(iterator)) {
        throw new TypeError('iterator must be a function');
    }

    var receiver;
    if (arguments.length >= 3) {
        receiver = thisArg;
    }

    if (isArray(list)) {
        forEachArray(list, iterator, receiver);
    } else if (typeof list === 'string') {
        forEachString(list, iterator, receiver);
    } else {
        forEachObject(list, iterator, receiver);
    }
};


/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");

module.exports = Function.prototype.bind || implementation;


/***/ }),

/***/ "./node_modules/get-intrinsic/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var undefined;

var $Object = __webpack_require__(/*! es-object-atoms */ "./node_modules/es-object-atoms/index.js");

var $Error = __webpack_require__(/*! es-errors */ "./node_modules/es-errors/index.js");
var $EvalError = __webpack_require__(/*! es-errors/eval */ "./node_modules/es-errors/eval.js");
var $RangeError = __webpack_require__(/*! es-errors/range */ "./node_modules/es-errors/range.js");
var $ReferenceError = __webpack_require__(/*! es-errors/ref */ "./node_modules/es-errors/ref.js");
var $SyntaxError = __webpack_require__(/*! es-errors/syntax */ "./node_modules/es-errors/syntax.js");
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");
var $URIError = __webpack_require__(/*! es-errors/uri */ "./node_modules/es-errors/uri.js");

var abs = __webpack_require__(/*! math-intrinsics/abs */ "./node_modules/math-intrinsics/abs.js");
var floor = __webpack_require__(/*! math-intrinsics/floor */ "./node_modules/math-intrinsics/floor.js");
var max = __webpack_require__(/*! math-intrinsics/max */ "./node_modules/math-intrinsics/max.js");
var min = __webpack_require__(/*! math-intrinsics/min */ "./node_modules/math-intrinsics/min.js");
var pow = __webpack_require__(/*! math-intrinsics/pow */ "./node_modules/math-intrinsics/pow.js");
var round = __webpack_require__(/*! math-intrinsics/round */ "./node_modules/math-intrinsics/round.js");
var sign = __webpack_require__(/*! math-intrinsics/sign */ "./node_modules/math-intrinsics/sign.js");

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");
var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(/*! has-symbols */ "./node_modules/has-symbols/index.js")();

var getProto = __webpack_require__(/*! get-proto */ "./node_modules/get-proto/index.js");
var $ObjectGPO = __webpack_require__(/*! get-proto/Object.getPrototypeOf */ "./node_modules/get-proto/Object.getPrototypeOf.js");
var $ReflectGPO = __webpack_require__(/*! get-proto/Reflect.getPrototypeOf */ "./node_modules/get-proto/Reflect.getPrototypeOf.js");

var $apply = __webpack_require__(/*! call-bind-apply-helpers/functionApply */ "./node_modules/call-bind-apply-helpers/functionApply.js");
var $call = __webpack_require__(/*! call-bind-apply-helpers/functionCall */ "./node_modules/call-bind-apply-helpers/functionCall.js");

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': $Object,
	'%Object.getOwnPropertyDescriptor%': $gOPD,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,

	'%Function.prototype.call%': $call,
	'%Function.prototype.apply%': $apply,
	'%Object.defineProperty%': $defineProperty,
	'%Object.getPrototypeOf%': $ObjectGPO,
	'%Math.abs%': abs,
	'%Math.floor%': floor,
	'%Math.max%': max,
	'%Math.min%': min,
	'%Math.pow%': pow,
	'%Math.round%': round,
	'%Math.sign%': sign,
	'%Reflect.getPrototypeOf%': $ReflectGPO
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var hasOwn = __webpack_require__(/*! hasown */ "./node_modules/hasown/index.js");
var $concat = bind.call($call, Array.prototype.concat);
var $spliceApply = bind.call($apply, Array.prototype.splice);
var $replace = bind.call($call, String.prototype.replace);
var $strSlice = bind.call($call, String.prototype.slice);
var $exec = bind.call($call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


/***/ }),

/***/ "./node_modules/get-proto/Object.getPrototypeOf.js":
/*!*********************************************************!*\
  !*** ./node_modules/get-proto/Object.getPrototypeOf.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $Object = __webpack_require__(/*! es-object-atoms */ "./node_modules/es-object-atoms/index.js");

/** @type {import('./Object.getPrototypeOf')} */
module.exports = $Object.getPrototypeOf || null;


/***/ }),

/***/ "./node_modules/get-proto/Reflect.getPrototypeOf.js":
/*!**********************************************************!*\
  !*** ./node_modules/get-proto/Reflect.getPrototypeOf.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./Reflect.getPrototypeOf')} */
module.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;


/***/ }),

/***/ "./node_modules/get-proto/index.js":
/*!*****************************************!*\
  !*** ./node_modules/get-proto/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var reflectGetProto = __webpack_require__(/*! ./Reflect.getPrototypeOf */ "./node_modules/get-proto/Reflect.getPrototypeOf.js");
var originalGetProto = __webpack_require__(/*! ./Object.getPrototypeOf */ "./node_modules/get-proto/Object.getPrototypeOf.js");

var getDunderProto = __webpack_require__(/*! dunder-proto/get */ "./node_modules/dunder-proto/get.js");

/** @type {import('.')} */
module.exports = reflectGetProto
	? function getProto(O) {
		// @ts-expect-error TS can't narrow inside a closure, for some reason
		return reflectGetProto(O);
	}
	: originalGetProto
		? function getProto(O) {
			if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
				throw new TypeError('getProto: not an object');
			}
			// @ts-expect-error TS can't narrow inside a closure, for some reason
			return originalGetProto(O);
		}
		: getDunderProto
			? function getProto(O) {
				// @ts-expect-error TS can't narrow inside a closure, for some reason
				return getDunderProto(O);
			}
			: null;


/***/ }),

/***/ "./node_modules/gopd/gOPD.js":
/*!***********************************!*\
  !*** ./node_modules/gopd/gOPD.js ***!
  \***********************************/
/***/ ((module) => {

"use strict";


/** @type {import('./gOPD')} */
module.exports = Object.getOwnPropertyDescriptor;


/***/ }),

/***/ "./node_modules/gopd/index.js":
/*!************************************!*\
  !*** ./node_modules/gopd/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/** @type {import('.')} */
var $gOPD = __webpack_require__(/*! ./gOPD */ "./node_modules/gopd/gOPD.js");

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;


/***/ }),

/***/ "./node_modules/has-property-descriptors/index.js":
/*!********************************************************!*\
  !*** ./node_modules/has-property-descriptors/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;


/***/ }),

/***/ "./node_modules/has-symbols/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = __webpack_require__(/*! ./shams */ "./node_modules/has-symbols/shams.js");

/** @type {import('.')} */
module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};


/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./shams')} */
/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	/** @type {{ [k in symbol]?: unknown }} */
	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		// eslint-disable-next-line no-extra-parens
		var descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};


/***/ }),

/***/ "./node_modules/has-tostringtag/shams.js":
/*!***********************************************!*\
  !*** ./node_modules/has-tostringtag/shams.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hasSymbols = __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js");

/** @type {import('.')} */
module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};


/***/ }),

/***/ "./node_modules/hash-base/index.js":
/*!*****************************************!*\
  !*** ./node_modules/hash-base/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var Transform = (__webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js").Transform)
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

var useUint8Array = typeof Uint8Array !== 'undefined'
var useArrayBuffer = typeof ArrayBuffer !== 'undefined' &&
  typeof Uint8Array !== 'undefined' &&
  ArrayBuffer.isView &&
  (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT)

function toBuffer (data, encoding) {
  // No need to do anything for exact instance
  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed
  if (data instanceof Buffer) return data

  // Convert strings to Buffer
  if (typeof data === 'string') return Buffer.from(data, encoding)

  /*
   * Wrap any TypedArray instances and DataViews
   * Makes sense only on engines with full TypedArray support -- let Buffer detect that
   */
  if (useArrayBuffer && ArrayBuffer.isView(data)) {
    if (data.byteLength === 0) return Buffer.alloc(0) // Bug in Node.js <6.3.1, which treats this as out-of-bounds
    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength)
    // Recheck result size, as offset/length doesn't work on Node.js <5.10
    // We just go to Uint8Array case if this fails
    if (res.byteLength === data.byteLength) return res
  }

  /*
   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over
   * Doesn't make sense with other TypedArray instances
   */
  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data)

  /*
   * Old Buffer polyfill on an engine that doesn't have TypedArray support
   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed
   * Convert to our current Buffer implementation
   */
  if (
    Buffer.isBuffer(data) &&
    data.constructor &&
    typeof data.constructor.isBuffer === 'function' &&
    data.constructor.isBuffer(data)
  ) {
    return Buffer.from(data)
  }

  throw new TypeError('The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')
}

HashBase.prototype.update = function (data, encoding) {
  if (this._finalized) throw new Error('Digest already called')

  data = toBuffer(data, encoding) // asserts correct input type

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase


/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var hash = exports;

hash.utils = __webpack_require__(/*! ./hash/utils */ "./node_modules/hash.js/lib/hash/utils.js");
hash.common = __webpack_require__(/*! ./hash/common */ "./node_modules/hash.js/lib/hash/common.js");
hash.sha = __webpack_require__(/*! ./hash/sha */ "./node_modules/hash.js/lib/hash/sha.js");
hash.ripemd = __webpack_require__(/*! ./hash/ripemd */ "./node_modules/hash.js/lib/hash/ripemd.js");
hash.hmac = __webpack_require__(/*! ./hash/hmac */ "./node_modules/hash.js/lib/hash/hmac.js");

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.sha1 = __webpack_require__(/*! ./sha/1 */ "./node_modules/hash.js/lib/hash/sha/1.js");
exports.sha224 = __webpack_require__(/*! ./sha/224 */ "./node_modules/hash.js/lib/hash/sha/224.js");
exports.sha256 = __webpack_require__(/*! ./sha/256 */ "./node_modules/hash.js/lib/hash/sha/256.js");
exports.sha384 = __webpack_require__(/*! ./sha/384 */ "./node_modules/hash.js/lib/hash/sha/384.js");
exports.sha512 = __webpack_require__(/*! ./sha/512 */ "./node_modules/hash.js/lib/hash/sha/512.js");


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var SHA256 = __webpack_require__(/*! ./256 */ "./node_modules/hash.js/lib/hash/sha/256.js");

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");

var SHA512 = __webpack_require__(/*! ./512 */ "./node_modules/hash.js/lib/hash/sha/512.js");

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ "./node_modules/hasown/index.js":
/*!**************************************!*\
  !*** ./node_modules/hasown/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);


/***/ }),

/***/ "./node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!*************************************************!*\
  !*** ./node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var utils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ "./node_modules/is-arguments/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-arguments/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();
var callBound = __webpack_require__(/*! call-bound */ "./node_modules/call-bound/index.js");

var $toString = callBound('Object.prototype.toString');

/** @type {import('.')} */
var isStandardArguments = function isArguments(value) {
	if (
		hasToStringTag
		&& value
		&& typeof value === 'object'
		&& Symbol.toStringTag in value
	) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

/** @type {import('.')} */
var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null
		&& typeof value === 'object'
		&& 'length' in value
		&& typeof value.length === 'number'
		&& value.length >= 0
		&& $toString(value) !== '[object Array]'
		&& 'callee' in value
		&& $toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

// @ts-expect-error TODO make this not error
isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

/** @type {import('.')} */
module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;


/***/ }),

/***/ "./node_modules/is-callable/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-callable/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};


/***/ }),

/***/ "./node_modules/is-generator-function/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/is-generator-function/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBound = __webpack_require__(/*! call-bound */ "./node_modules/call-bound/index.js");
var safeRegexTest = __webpack_require__(/*! safe-regex-test */ "./node_modules/safe-regex-test/index.js");
var isFnRegex = safeRegexTest(/^\s*(?:function)?\*/);
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();
var getProto = __webpack_require__(/*! get-proto */ "./node_modules/get-proto/index.js");

var toStr = callBound('Object.prototype.toString');
var fnToStr = callBound('Function.prototype.toString');

var getGeneratorFunc = function () { // eslint-disable-line consistent-return
	if (!hasToStringTag) {
		return false;
	}
	try {
		return Function('return function*() {}')();
	} catch (e) {
	}
};
/** @type {undefined | false | null | GeneratorFunctionConstructor} */
var GeneratorFunction;

/** @type {import('.')} */
module.exports = function isGeneratorFunction(fn) {
	if (typeof fn !== 'function') {
		return false;
	}
	if (isFnRegex(fnToStr(fn))) {
		return true;
	}
	if (!hasToStringTag) {
		var str = toStr(fn);
		return str === '[object GeneratorFunction]';
	}
	if (!getProto) {
		return false;
	}
	if (typeof GeneratorFunction === 'undefined') {
		var generatorFunc = getGeneratorFunc();
		GeneratorFunction = generatorFunc
			// eslint-disable-next-line no-extra-parens
			? /** @type {GeneratorFunctionConstructor} */ (getProto(generatorFunc))
			: false;
	}
	return getProto(fn) === GeneratorFunction;
};


/***/ }),

/***/ "./node_modules/is-nan/implementation.js":
/*!***********************************************!*\
  !*** ./node_modules/is-nan/implementation.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";


/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

module.exports = function isNaN(value) {
	return value !== value;
};


/***/ }),

/***/ "./node_modules/is-nan/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-nan/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");
var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/is-nan/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/is-nan/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/is-nan/shim.js");

var polyfill = callBind(getPolyfill(), Number);

/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),

/***/ "./node_modules/is-nan/polyfill.js":
/*!*****************************************!*\
  !*** ./node_modules/is-nan/polyfill.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/is-nan/implementation.js");

module.exports = function getPolyfill() {
	if (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {
		return Number.isNaN;
	}
	return implementation;
};


/***/ }),

/***/ "./node_modules/is-nan/shim.js":
/*!*************************************!*\
  !*** ./node_modules/is-nan/shim.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/is-nan/polyfill.js");

/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

module.exports = function shimNumberIsNaN() {
	var polyfill = getPolyfill();
	define(Number, { isNaN: polyfill }, {
		isNaN: function testIsNaN() {
			return Number.isNaN !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),

/***/ "./node_modules/is-regex/index.js":
/*!****************************************!*\
  !*** ./node_modules/is-regex/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBound = __webpack_require__(/*! call-bound */ "./node_modules/call-bound/index.js");
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();
var hasOwn = __webpack_require__(/*! hasown */ "./node_modules/hasown/index.js");
var gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

/** @type {import('.')} */
var fn;

if (hasToStringTag) {
	/** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */
	var $exec = callBound('RegExp.prototype.exec');
	/** @type {object} */
	var isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	/** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */
	var badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}

	/** @type {import('.')} */
	// @ts-expect-error TS can't figure out that the $exec call always throws
	// eslint-disable-next-line consistent-return
	fn = function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		// eslint-disable-next-line no-extra-parens
		var descriptor = /** @type {NonNullable<typeof gOPD>} */ (gOPD)(/** @type {{ lastIndex?: unknown }} */ (value), 'lastIndex');
		var hasLastIndexDataProperty = descriptor && hasOwn(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			// eslint-disable-next-line no-extra-parens
			$exec(value, /** @type {string} */ (/** @type {unknown} */ (badStringifier)));
		} catch (e) {
			return e === isRegexMarker;
		}
	};
} else {
	/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */
	var $toString = callBound('Object.prototype.toString');
	/** @const @type {'[object RegExp]'} */
	var regexClass = '[object RegExp]';

	/** @type {import('.')} */
	fn = function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};
}

module.exports = fn;


/***/ }),

/***/ "./node_modules/is-typed-array/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-typed-array/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var whichTypedArray = __webpack_require__(/*! which-typed-array */ "./node_modules/which-typed-array/index.js");

/** @type {import('.')} */
module.exports = function isTypedArray(value) {
	return !!whichTypedArray(value);
};


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/***/ ((module) => {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js":
/*!*************************************************************************!*\
  !*** ./node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __dirname = "/";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! ./node_modules/buffer/index.js */ "./node_modules/buffer/index.js")["Buffer"];
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(A){function I(A){"use strict";var I;void 0===(I=A)&&(I={});var g=I;"object"!=typeof g.sodium&&("object"==typeof __webpack_require__.g?g=__webpack_require__.g:"object"==typeof window&&(g=window));var C=I;return I.ready=new Promise((function(A,I){(B=C).onAbort=I,B.print=function(A){},B.printErr=function(A){},B.onRuntimeInitialized=function(){try{B._crypto_secretbox_keybytes(),A()}catch(A){I(A)}},B.useBackupModule=function(){return new Promise((function(A,I){(B={}).onAbort=I,B.onRuntimeInitialized=function(){Object.keys(C).forEach((function(A){"getRandomValue"!==A&&delete C[A]})),Object.keys(B).forEach((function(A){C[A]=B[A]})),A()};var g,B=void 0!==B?B:{},Q="object"==typeof window,i="function"==typeof importScripts,o="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,E=Object.assign({},B),a="";if(o){var _=__webpack_require__(/*! fs */ "?0b9d"),c=__webpack_require__(/*! path */ "?5b1a");a=__dirname+"/",g=A=>(A=Y(A)?new URL(A):c.normalize(A),_.readFileSync(A)),!B.thisProgram&&process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2), true&&(module.exports=B)}else(Q||i)&&(i?a=self.location.href:"undefined"!=typeof document&&document.currentScript&&(a=document.currentScript.src),a=a.startsWith("blob:")?"":a.substr(0,a.replace(/[?#].*/,"").lastIndexOf("/")+1),i&&(g=A=>{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}));B.print;var t,r=B.printErr||void 0;Object.assign(B,E),E=null,B.arguments&&B.arguments,B.thisProgram&&B.thisProgram,B.quit&&B.quit,B.wasmBinary&&(t=B.wasmBinary);var e,y={Memory:function(A){this.buffer=new ArrayBuffer(65536*A.initial)},Module:function(A){},Instance:function(A,I){this.exports=function(A){for(var I,g=new Uint8Array(123),C=25;C>=0;--C)g[48+C]=52+C,g[65+C]=C,g[97+C]=26+C;function B(A,I,C){for(var B,Q,i=0,o=I,E=C.length,a=I+(3*E>>2)-("="==C[E-2])-("="==C[E-1]);i<E;i+=4)B=g[C.charCodeAt(i+1)],Q=g[C.charCodeAt(i+2)],A[o++]=g[C.charCodeAt(i)]<<2|B>>4,o<a&&(A[o++]=B<<4|Q>>2),o<a&&(A[o++]=Q<<6|g[C.charCodeAt(i+3)])}function Q(){throw new Error("abort")}return g[43]=62,g[47]=63,function(A){var g=new ArrayBuffer(50331648),C=new Int8Array(g),i=(new Int16Array(g),new Int32Array(g)),o=new Uint8Array(g),E=(new Uint16Array(g),new Uint32Array(g)),a=(new Float32Array(g),new Float64Array(g),Math.imul),_=(Math.fround,Math.abs,Math.clz32),c=(Math.min,Math.max,Math.floor,Math.ceil,Math.trunc,Math.sqrt,A.a),t=c.a,r=c.b,e=c.c,y=c.d,s=103696,h=0,D=0,f=0;function p(A,I){var g,B,Q,i,E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0,BA=0,QA=0,iA=0,oA=0,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0,sA=0,hA=0,DA=0,fA=0,pA=0,wA=0,nA=0,kA=0,FA=0,SA=0,NA=0,GA=0,MA=0,KA=0;rA=o[I+40|0]|o[I+41|0]<<8|o[I+42|0]<<16|o[I+43|0]<<24,yA=a=o[I+44|0]|o[I+45|0]<<8|o[I+46|0]<<16|o[I+47|0]<<24,gA=o[I+104|0]|o[I+105|0]<<8|o[I+106|0]<<16|o[I+107|0]<<24,sA=a=o[I+108|0]|o[I+109|0]<<8|o[I+110|0]<<16|o[I+111|0]<<24,a=o[I+68|0]|o[I+69|0]<<8|o[I+70|0]<<16|o[I+71|0]<<24,j=o[I+64|0]|o[I+65|0]<<8|o[I+66|0]<<16|o[I+67|0]<<24,BA=a,NA=a=o[I+36|0]|o[I+37|0]<<8|o[I+38|0]<<16|o[I+39|0]<<24,N=a,EA=o[I+120|0]|o[I+121|0]<<8|o[I+122|0]<<16|o[I+123|0]<<24,pA=a=o[I+124|0]|o[I+125|0]<<8|o[I+126|0]<<16|o[I+127|0]<<24,Q=a=o[I+92|0]|o[I+93|0]<<8|o[I+94|0]<<16|o[I+95|0]<<24,g=o[I+88|0]|o[I+89|0]<<8|o[I+90|0]<<16|o[I+91|0]<<24,z=a,oA=o[I+80|0]|o[I+81|0]<<8|o[I+82|0]<<16|o[I+83|0]<<24,DA=a=o[I+84|0]|o[I+85|0]<<8|o[I+86|0]<<16|o[I+87|0]<<24,X=a,QA=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,a=(_A=o[A+52|0]|o[A+53|0]<<8|o[A+54|0]<<16|o[A+55|0]<<24)+N|0,P=(aA=o[A+48|0]|o[A+49|0]<<8|o[A+50|0]<<16|o[A+51|0]<<24)+(cA=o[I+32|0]|o[I+33|0]<<8|o[I+34|0]<<16|o[I+35|0]<<24)|0,a=(o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24)+(aA>>>0>P>>>0?a+1|0:a)|0,a=(QA=(_=P)>>>0>(P=P+QA|0)>>>0?a+1|0:a)+yA|0,iA=eA=P+rA|0,eA=a=eA>>>0<P>>>0?a+1|0:a,P=UI(P^(o[A+80|0]|o[A+81|0]<<8|o[A+82|0]<<16|o[A+83|0]<<24)^-79577749,QA^(o[A+84|0]|o[A+85|0]<<8|o[A+86|0]<<16|o[A+87|0]<<24)^528734635,32),kA=a=f,a=a+1013904242|0,QA=P,V=a=(P=P-23791573|0)>>>0<4271175723?a+1|0:a,_A=UI(P^aA,a^_A,40),a=(a=eA)+(eA=f)|0,aA=UI(QA^(h=aA=_A+iA|0),kA^(D=h>>>0<_A>>>0?a+1|0:a),48),a=V+(R=f)|0,k=a=(aA=P+(p=aA)|0)>>>0<P>>>0?a+1|0:a,aA=a=UI(_A^(n=aA),eA^a,1),V=P=f,eA=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,kA=a=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,tA=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,P=(_A=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24)+(QA=o[A+40|0]|o[A+41|0]<<8|o[A+42|0]<<16|o[A+43|0]<<24)|0,a=(GA=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24)+(KA=o[A+44|0]|o[A+45|0]<<8|o[A+46|0]<<16|o[A+47|0]<<24)|0,a=(o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24)+(P>>>0<QA>>>0?a+1|0:a)|0,a=kA+(iA=(_=P)>>>0>(P=P+tA|0)>>>0?a+1|0:a)|0,a=(tA=P+eA|0)>>>0<P>>>0?a+1|0:a,_=UI(P^(o[A+72|0]|o[A+73|0]<<8|o[A+74|0]<<16|o[A+75|0]<<24)^725511199,iA^(o[A+76|0]|o[A+77|0]<<8|o[A+78|0]<<16|o[A+79|0]<<24)^-1694144372,32),e=UI(QA^(c=_-2067093701|0),KA^(x=(J=P=f)-((_>>>0<2067093701)+1150833018|0)|0),40),a=(L=f)+a|0,a=(Y=(F=P=e+tA|0)>>>0<e>>>0?a+1|0:a)+V|0,a=(F>>>0>(P=F+aA|0)>>>0?a+1|0:a)+X|0,a=(QA=(t=P)>>>0>(P=P+oA|0)>>>0?a+1|0:a)+z|0,l=z=P+g|0,s=a=z>>>0<P>>>0?a+1|0:a,w=aA,wA=V,V=P,iA=QA,aA=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,P=a=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,KA=a=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,i=QA=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,X=a,a=(FA=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24)+(r=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24)|0,a=i+((z=o[A+32|0]|o[A+33|0]<<8|o[A+34|0]<<16|o[A+35|0]<<24)>>>0>(t=z+(QA=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24)|0)>>>0?a+1|0:a)|0,a=(tA=(X=t+X|0)>>>0<t>>>0?a+1|0:a)+P|0,fA=t=X+aA|0,t=a=t>>>0<X>>>0?a+1|0:a,y=z,z=UI(X^(o[A+64|0]|o[A+65|0]<<8|o[A+66|0]<<16|o[A+67|0]<<24)^-1377402159,tA^(o[A+68|0]|o[A+69|0]<<8|o[A+70|0]<<16|o[A+71|0]<<24)^1359893119,32),tA=a=f,a=a+1779033703|0,X=z,U=a=(z=z-205731576|0)>>>0<4089235720?a+1|0:a,r=UI(y^(S=z),a^r,40),a=(m=f)+t|0,y=UI(X^(t=z=r+fA|0),tA^(G=r>>>0>t>>>0?a+1|0:a),48),a=UI(y^V,(T=f)^iA,32),W=z=f,u=a,B=a=o[I+60|0]|o[I+61|0]<<8|o[I+62|0]<<16|o[I+63|0]<<24,tA=fA=o[I+56|0]|o[I+57|0]<<8|o[I+58|0]<<16|o[I+59|0]<<24,K=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,z=(iA=o[I+48|0]|o[I+49|0]<<8|o[I+50|0]<<16|o[I+51|0]<<24)+(X=o[A+56|0]|o[A+57|0]<<8|o[A+58|0]<<16|o[A+59|0]<<24)|0,a=(SA=o[I+52|0]|o[I+53|0]<<8|o[I+54|0]<<16|o[I+55|0]<<24)+(d=o[A+60|0]|o[A+61|0]<<8|o[A+62|0]<<16|o[A+63|0]<<24)|0,a=(o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24)+(z>>>0<X>>>0?a+1|0:a)|0,a=B+(V=(M=z)>>>0>(z=K+z|0)>>>0?a+1|0:a)|0,a=(K=z+tA|0)>>>0<z>>>0?a+1|0:a,V=UI(z^(o[A+88|0]|o[A+89|0]<<8|o[A+90|0]<<16|o[A+91|0]<<24)^327033209,V^(o[A+92|0]|o[A+93|0]<<8|o[A+94|0]<<16|o[A+95|0]<<24)^1541459225,32),X=UI(X^(tA=V+1595750129|0),(M=d)^(d=(b=z=f)-((V>>>0<2699217167)+1521486533|0)|0),40),a=(IA=f)+a|0,z=UI((K=z=X+K|0)^V,b^(M=K>>>0<X>>>0?a+1|0:a),48),a=d+($=f)|0,H=a=(z=tA+(d=z)|0)>>>0<tA>>>0?a+1|0:a,a=W+a|0,O=w^(V=u+(b=z)|0),w=a=V>>>0<b>>>0?a+1|0:a,tA=UI(O,a^wA,40),a=(wA=f)+s|0,z=UI(l=u^(s=z=tA+l|0),W^(u=s>>>0<tA>>>0?a+1|0:a),48),a=w+(CA=f)|0,W=a=(w=V+(l=z)|0)>>>0<V>>>0?a+1|0:a,z=(v=UI(w^tA,wA^a,1))+(V=o[I+72|0]|o[I+73|0]<<8|o[I+74|0]<<16|o[I+75|0]<<24)|0,a=(hA=f)+(wA=o[I+76|0]|o[I+77|0]<<8|o[I+78|0]<<16|o[I+79|0]<<24)|0,nA=z,q=z>>>0<V>>>0?a+1|0:a,Z=sA,z=o[I+96|0]|o[I+97|0]<<8|o[I+98|0]<<16|o[I+99|0]<<24,tA=a=o[I+100|0]|o[I+101|0]<<8|o[I+102|0]<<16|o[I+103|0]<<24,X=(a=h)+(h=UI(b^X,H^IA,1))|0,a=(b=f)+D|0,a=(h>>>0>X>>>0?a+1|0:a)+tA|0,a=(D=(D=X)>>>0>(X=z+X|0)>>>0?a+1|0:a)+Z|0,O=H=X+gA|0,H=a=H>>>0<X>>>0?a+1|0:a,F=UI(_^F,Y^J,48),Y=a=UI(F^X,(J=f)^D,32),a=U+T|0,a=(IA=X=f)+(S=(X=y+S|0)>>>0<y>>>0?a+1|0:a)|0,U=a=(D=X)>>>0>(y=D+Y|0)>>>0?a+1|0:a,h=UI(y^h,b^a,40),a=(T=f)+H|0,a=(b=h>>>0>(H=X=h+O|0)>>>0?a+1|0:a)+q|0,a=(_=H>>>0>(X=H+nA|0)>>>0?a+1|0:a)+pA|0,nA=q=X+EA|0,q=a=q>>>0<X>>>0?a+1|0:a,O=X,Z=_,X=o[I+116|0]|o[I+117|0]<<8|o[I+118|0]<<16|o[I+119|0]<<24,I=o[I+112|0]|o[I+113|0]<<8|o[I+114|0]<<16|o[I+115|0]<<24,r=UI(r^D,S^m,1),a=(m=f)+M|0,a=((_=r+K|0)>>>0<r>>>0?a+1|0:a)+X|0,a=(D=(S=_)>>>0>(_=I+_|0)>>>0?a+1|0:a)+pA|0,MA=S=_+EA|0,S=a=S>>>0<_>>>0?a+1|0:a,a=UI(_^p,D^R,32),AA=_=f,p=a,D=_,a=J+x|0,F=_=c+F|0,K=a=_>>>0<c>>>0?a+1|0:a,a=a+D|0,M=_=_+p|0,R=a=F>>>0>_>>>0?a+1|0:a,D=UI(_^r,m^a,40),a=(m=f)+S|0,p=UI((_=D+MA|0)^p,AA^(c=_>>>0<D>>>0?a+1|0:a),48),a=UI(p^O,(MA=f)^Z,32),AA=r=f,S=a,O=r,e=UI(e^F,K^L,1),a=G+(F=f)|0,a=((r=t)>>>0>(t=t+e|0)>>>0?a+1|0:a)+BA|0,a=(t=(r=t+j|0)>>>0<t>>>0?a+1|0:a)+wA|0,Z=G=r+V|0,G=a=G>>>0<r>>>0?a+1|0:a,K=e,r=UI(r^d,t^$,32),a=(d=f)+k|0,n=UI(K^(t=e=r+n|0),(k=r>>>0>t>>>0?a+1|0:a)^F,40),a=($=f)+G|0,F=e=n+Z|0,e=UI(r^e,d^(G=e>>>0<n>>>0?a+1|0:a),48),a=k+(E=f)|0,k=e,d=a=(e=t+e|0)>>>0<t>>>0?a+1|0:a,a=a+O|0,a=(K=e)>>>0>(e=e+S|0)>>>0?a+1|0:a,O=e,e^=v,v=a,r=UI(e,hA^a,40),a=(hA=f)+q|0,q=e=r+nA|0,a=Q+(Z=r>>>0>e>>>0?a+1|0:a)|0,nA=e=e+g|0,J=a=e>>>0<g>>>0?a+1|0:a,e=_,x=gA,L=sA,_=UI(Y^H,b^IA,48),a=U+(IA=f)|0,Y=_,U=a=(t=y+_|0)>>>0<y>>>0?a+1|0:a,_=UI(t^h,T^a,1),a=(y=f)+L|0,a=((h=_+x|0)>>>0<_>>>0?a+1|0:a)+c|0,a=SA+(e=(c=e+h|0)>>>0<h>>>0?a+1|0:a)|0,H=h=c+iA|0,h=a=h>>>0<iA>>>0?a+1|0:a,c=UI(c^k,e^E,32),a=W+(b=f)|0,k=c,w=a=(c=w+c|0)>>>0<w>>>0?a+1|0:a,e=UI(_^c,a^y,40),a=(a=h)+(h=f)|0,y=_=e+H|0,_=UI(_^k,b^(H=_>>>0<e>>>0?a+1|0:a),48),a=w+(T=f)|0,b=_,W=a=(w=c+_|0)>>>0<c>>>0?a+1|0:a,_=UI(e^w,h^a,1),a=(h=f)+J|0,a=B+(e=(c=_+nA|0)>>>0<_>>>0?a+1|0:a)|0,nA=k=c+fA|0,k=a=k>>>0<fA>>>0?a+1|0:a,J=_,x=h,a=R+MA|0,a=(_=p+M|0)>>>0<p>>>0?a+1|0:a,p=_,M=a,a=UI(_^D,m^a,1),D=h=f,_=a,a=G+X|0,a=((F=I+F|0)>>>0<I>>>0?a+1|0:a)+h|0,a=DA+(F=(h=_+F|0)>>>0<F>>>0?a+1|0:a)|0,R=G=h+oA|0,G=a=G>>>0<oA>>>0?a+1|0:a,h=UI(h^l,F^CA,32),a=U+(l=f)|0,F=h,U=a=(U=t)>>>0>(t=t+h|0)>>>0?a+1|0:a,h=UI(_^t,a^D,40),a=(m=f)+G|0,D=_=h+R|0,_=UI(G=_^F,l^(F=_>>>0<h>>>0?a+1|0:a),48),a=U+(CA=f)|0,U=_,G=_=t+_|0,l=a=_>>>0<t>>>0?a+1|0:a,R=c,L=e,_=UI(n^K,d^$,1),a=(t=f)+N|0,a=u+((c=_+cA|0)>>>0<_>>>0?a+1|0:a)|0,a=BA+(e=(c=c+s|0)>>>0<s>>>0?a+1|0:a)|0,u=s=c+j|0,s=a=s>>>0<c>>>0?a+1|0:a,n=_,_=(c=UI(c^Y,e^IA,32))+p|0,a=(p=f)+M|0,e=_,t=UI(_^n,(Y=_>>>0<c>>>0?a+1|0:a)^t,40),a=(IA=f)+s|0,s=_=t+u|0,K=UI(_^c,p^(u=_>>>0<t>>>0?a+1|0:a),48),c=UI(K^R,(a=L)^(L=f),32),a=(R=f)+l|0,p=_=c+G|0,n=UI(_^J,(M=_>>>0<c>>>0?a+1|0:a)^x,40),a=(J=f)+k|0,k=_=n+nA|0,_=UI(_^c,R^(d=_>>>0<n>>>0?a+1|0:a),48),a=M+($=f)|0,M=_,R=a=(c=p)>>>0>(p=p+_|0)>>>0?a+1|0:a,_=UI(p^n,J^a,1),a=pA+(nA=f)|0,J=_,MA=_=EA+_|0,n=a=_>>>0<EA>>>0?a+1|0:a,c=rA,_=UI(h^G,m^l,1),a=H+(h=f)|0,a=((G=y)>>>0>(y=_+y|0)>>>0?a+1|0:a)+yA|0,a=(G=(c=c+y|0)>>>0<y>>>0?a+1|0:a)+kA|0,x=y=c+eA|0,H=a=y>>>0<c>>>0?a+1|0:a,l=_,y=UI(S^q,Z^AA,48),a=UI(y^c,(m=f)^G,32),AA=_=f,S=a,c=_,a=Y+L|0,a=(_=e+K|0)>>>0<e>>>0?a+1|0:a,e=_,Y=a,a=a+c|0,G=_=_+S|0,K=a=e>>>0>_>>>0?a+1|0:a,c=UI(_^l,a^h,40),a=(a=H)+(H=f)|0,l=_=c+x|0,q=a=_>>>0<c>>>0?a+1|0:a,a=a+n|0,Z=a=(h=_+MA|0)>>>0<_>>>0?a+1|0:a,n=a,_=UI(t^e,Y^IA,1),a=P+(t=f)|0,a=F+((e=_+aA|0)>>>0<aA>>>0?a+1|0:a)|0,a=tA+(D=(e=e+D|0)>>>0<D>>>0?a+1|0:a)|0,x=F=e+z|0,F=a=F>>>0<z>>>0?a+1|0:a,Y=_,a=UI(e^b,D^T,32),L=_=f,e=a,D=_,a=m+v|0,b=_=y+O|0,v=a=_>>>0<y>>>0?a+1|0:a,a=a+D|0,a=(y=_+e|0)>>>0<_>>>0?a+1|0:a,_=y^Y,Y=a,D=UI(_,a^t,40),a=(T=f)+F|0,t=_=D+x|0,O=UI(_^e,L^(F=_>>>0<D>>>0?a+1|0:a),48),a=UI(O^h,(IA=f)^n,32),MA=_=f,x=a,n=_,_=UI(r^b,v^hA,1),a=u+(r=f)|0,a=FA+((e=_+s|0)>>>0<s>>>0?a+1|0:a)|0,a=(s=(e=e+QA|0)>>>0<QA>>>0?a+1|0:a)+GA|0,b=u=e+_A|0,u=a=u>>>0<e>>>0?a+1|0:a,e=UI(e^U,s^CA,32),a=W+(v=f)|0,U=e,s=r,r=a=(e=w+e|0)>>>0<w>>>0?a+1|0:a,s=UI(_^e,s^a,40),a=(CA=f)+u|0,w=_=s+b|0,_=UI(b=_^U,v^(U=_>>>0<s>>>0?a+1|0:a),48),a=r+(m=f)|0,r=_,u=_=e+_|0,b=a=_>>>0<e>>>0?a+1|0:a,a=a+n|0,W=a=(n=_+x|0)>>>0<_>>>0?a+1|0:a,e=UI(n^J,nA^a,40),a=Z+(v=f)|0,a=((_=e+h|0)>>>0<h>>>0?a+1|0:a)+sA|0,h=_,Z=_=_+gA|0,J=a=h>>>0>_>>>0?a+1|0:a,L=BA,h=UI(S^l,q^AA,48),a=(hA=f)+K|0,S=_=h+G|0,a=UI(_^c,(G=_>>>0<h>>>0?a+1|0:a)^H,1),H=c=f,_=a,a=F+Q|0,a=((t=t+g|0)>>>0<g>>>0?a+1|0:a)+c|0,a=(t=(c=_+t|0)>>>0<t>>>0?a+1|0:a)+L|0,K=F=c+j|0,F=a=F>>>0<c>>>0?a+1|0:a,c=UI(c^r,t^m,32),a=R+(l=f)|0,p=a=(r=c+p|0)>>>0<p>>>0?a+1|0:a,t=UI(_^r,a^H,40),a=(q=f)+F|0,F=_=t+K|0,c=UI(_^c,l^(H=_>>>0<t>>>0?a+1|0:a),48),a=p+(K=f)|0,l=a=(p=c+r|0)>>>0<r>>>0?a+1|0:a,_=UI(t^p,q^a,1),a=(q=f)+J|0,a=wA+((r=_+Z|0)>>>0<_>>>0?a+1|0:a)|0,a=(t=(r=r+V|0)>>>0<V>>>0?a+1|0:a)+N|0,nA=N=r+cA|0,N=a=N>>>0<r>>>0?a+1|0:a,R=_,L=r,m=t,r=rA,_=UI(s^u,b^CA,1),a=d+(s=f)|0,a=((t=k)>>>0>(k=_+k|0)>>>0?a+1|0:a)+yA|0,a=GA+(t=(r=r+k|0)>>>0<k>>>0?a+1|0:a)|0,d=k=r+_A|0,u=a=k>>>0<_A>>>0?a+1|0:a,k=_,t=a=UI(r^h,t^hA,32),a=Y+IA|0,a=(b=_=f)+(y=(_=y+O|0)>>>0<y>>>0?a+1|0:a)|0,Y=a=(h=_+t|0)>>>0<_>>>0?a+1|0:a,k=UI(h^k,a^s,40),a=(IA=f)+u|0,u=UI(d=(r=k+d|0)^t,b^(t=r>>>0<k>>>0?a+1|0:a),48),a=UI(u^L,(CA=f)^m,32),hA=s=f,d=a,b=s,_=UI(_^D,y^T,1),a=tA+(s=f)|0,a=U+((y=_+z|0)>>>0<z>>>0?a+1|0:a)|0,a=FA+(w=(y=y+w|0)>>>0<w>>>0?a+1|0:a)|0,L=D=y+QA|0,D=a=D>>>0<QA>>>0?a+1|0:a,U=_,O=s,y=UI(y^M,w^$,32),a=(M=f)+G|0,s=_=y+S|0,w=UI(_^U,(S=_>>>0<y>>>0?a+1|0:a)^O,40),a=(T=f)+D|0,U=_=w+L|0,_=UI(_^y,M^(G=_>>>0<w>>>0?a+1|0:a),48),a=S+(L=f)|0,D=_,S=_=s+_|0,M=a=_>>>0<s>>>0?a+1|0:a,a=a+b|0,b=_=_+d|0,y=q,q=a=S>>>0>_>>>0?a+1|0:a,y=UI(_^R,y^a,40),a=(a=N)+(N=f)|0,O=_=y+nA|0,R=a=_>>>0<y>>>0?a+1|0:a,s=t,_=UI(x^Z,J^MA,48),a=W+($=f)|0,W=_,t=(_=n+_|0)^e,e=a=_>>>0<n>>>0?a+1|0:a,t=UI(t,a^v,1),a=(v=f)+s|0,a=B+((r=t+r|0)>>>0<t>>>0?a+1|0:a)|0,a=(s=(r=r+fA|0)>>>0<fA>>>0?a+1|0:a)+P|0,Z=n=r+aA|0,n=a=n>>>0<r>>>0?a+1|0:a,r=UI(r^D,s^L,32),a=l+(J=f)|0,l=r,p=a=(s=p+r|0)>>>0<p>>>0?a+1|0:a,t=UI(t^s,v^a,40),a=(a=n)+(n=f)|0,D=r=t+Z|0,r=UI(x=r^l,J^(l=r>>>0<t>>>0?a+1|0:a),48),a=p+(nA=f)|0,v=r,Z=a=(p=s+r|0)>>>0<s>>>0?a+1|0:a,r=UI(t^p,n^a,1),a=(n=f)+R|0,a=Q+((t=r+O|0)>>>0<r>>>0?a+1|0:a)|0,a=X+(s=(t=t+g|0)>>>0<g>>>0?a+1|0:a)|0,MA=J=I+t|0,J=a=J>>>0<I>>>0?a+1|0:a,x=r,L=n,n=t,m=s,r=UI(w^S,M^T,1),a=(s=f)+H|0,a=DA+((t=r+F|0)>>>0<r>>>0?a+1|0:a)|0,a=(w=(t=t+oA|0)>>>0<oA>>>0?a+1|0:a)+X|0,H=F=I+t|0,F=a=F>>>0<t>>>0?a+1|0:a,S=r,t=a=UI(t^W,w^$,32),w=r=f,a=Y+CA|0,Y=a=(r=h+u|0)>>>0<h>>>0?a+1|0:a,a=a+w|0,a=(h=r)>>>0>(r=r+t|0)>>>0?a+1|0:a,u=r,r^=S,S=a,s=UI(r,a^s,40),a=(T=f)+F|0,w=UI(F=(r=s+H|0)^t,w^(t=r>>>0<s>>>0?a+1|0:a),48),a=UI(w^n,(a=m)^(m=f),32),$=n=f,F=a,H=e,e=c,a=UI(h^k,Y^IA,1),M=c=f,h=a,a=G+kA|0,a=((k=U+eA|0)>>>0<eA>>>0?a+1|0:a)+c|0,k=a=(c=h+k|0)>>>0<k>>>0?a+1|0:a,e=UI(c^e,a^K,32),a=(a=H)+(H=f)|0,h=UI((_=e+_|0)^h,M^(Y=_>>>0<e>>>0?a+1|0:a),40),a=k+(IA=f)|0,U=h,a=SA+((G=c)>>>0>(c=c+h|0)>>>0?a+1|0:a)|0,G=a=(h=c+iA|0)>>>0<iA>>>0?a+1|0:a,c=UI(e^h,H^a,48),a=Y+(CA=f)|0,K=_,e=c,Y=_=_+c|0,H=a=K>>>0>_>>>0?a+1|0:a,a=a+n|0,K=a=(n=_+F|0)>>>0<_>>>0?a+1|0:a,_=(k=UI(n^x,a^L,40))+MA|0,a=(MA=f)+J|0,M=_,W=_>>>0<k>>>0?a+1|0:a,_=UI(d^O,R^hA,48),a=(d=f)+q|0,b=c=_+b|0,x=N,N=a=c>>>0<_>>>0?a+1|0:a,a=UI(c^y,x^a,1),O=c=f,y=a,a=t+B|0,a=((r=r+fA|0)>>>0<fA>>>0?a+1|0:a)+c|0,a=wA+(r=(c=r+y|0)>>>0<r>>>0?a+1|0:a)|0,R=t=c+V|0,t=a=t>>>0<V>>>0?a+1|0:a,c=UI(c^e,r^CA,32),a=Z+(J=f)|0,q=c,c=(e=p+c|0)^y,y=a=e>>>0<p>>>0?a+1|0:a,r=UI(c,O^a,40),a=(a=t)+(t=f)|0,O=c=r+R|0,c=UI(p=c^q,J^(q=c>>>0<r>>>0?a+1|0:a),48),a=y+(CA=f)|0,Z=c,e=a=(c=e+c|0)>>>0<e>>>0?a+1|0:a,r=UI(c^r,t^a,1),a=(p=f)+W|0,a=pA+((t=r+M|0)>>>0<r>>>0?a+1|0:a)|0,a=(y=(t=t+EA|0)>>>0<EA>>>0?a+1|0:a)+BA|0,AA=R=t+j|0,R=a=R>>>0<t>>>0?a+1|0:a,J=r,x=t,L=y,r=UI(U^Y,H^IA,1),a=(H=f)+sA|0,a=l+(r>>>0>(t=r+gA|0)>>>0?a+1|0:a)|0,y=a=(t=t+D|0)>>>0<D>>>0?a+1|0:a,a=UI(_^t,a^d,32),d=_=f,D=a,a=S+m|0,a=(_=w+u|0)>>>0<w>>>0?a+1|0:a,w=_,Y=a,a=d+a|0,S=_=_+D|0,U=a=w>>>0>_>>>0?a+1|0:a,_=UI(_^r,H^a,40),a=y+(m=f)|0,u=_,a=tA+((_=t+_|0)>>>0<t>>>0?a+1|0:a)|0,a=(_=_+z|0)>>>0<z>>>0?a+1|0:a,H=_,_^=D,D=a,y=UI(_,d^a,48),a=UI(y^x,(a=L)^(L=f),32),IA=_=f,d=a,l=_,_=UI(s^w,Y^T,1),a=kA+(t=f)|0,a=G+((r=_+eA|0)>>>0<eA>>>0?a+1|0:a)|0,a=(s=(r=r+h|0)>>>0<h>>>0?a+1|0:a)+P|0,G=w=r+aA|0,w=a=w>>>0<r>>>0?a+1|0:a,h=_,Y=t,_=(r=UI(r^v,s^nA,32))+b|0,a=(b=f)+N|0,t=_,s=UI(s=_^h,(h=_>>>0<r>>>0?a+1|0:a)^Y,40),a=(T=f)+w|0,w=_=s+G|0,r=UI(_^r,b^(N=_>>>0<s>>>0?a+1|0:a),48),a=h+(Y=f)|0,G=_=r+t|0,b=a=_>>>0<t>>>0?a+1|0:a,a=a+l|0,l=a=(h=_+d|0)>>>0<_>>>0?a+1|0:a,t=UI(h^J,a^p,40),a=(v=f)+R|0,R=_=t+AA|0,J=a=_>>>0<t>>>0?a+1|0:a,_=c,p=e,e=r,c=UI(F^M,W^$,48),a=K+(AA=f)|0,F=c,n=a=(r=n+c|0)>>>0<n>>>0?a+1|0:a,a=UI(r^k,MA^a,1),K=c=f,k=a,a=D+NA|0,a=((D=H+cA|0)>>>0<cA>>>0?a+1|0:a)+c|0,D=a=(c=D+k|0)>>>0<D>>>0?a+1|0:a,e=UI(c^e,a^Y,32),a=(H=f)+p|0,k=UI((_=e+_|0)^k,K^(p=_>>>0<e>>>0?a+1|0:a),40),a=D+(M=f)|0,a=FA+((D=c)>>>0>(c=c+k|0)>>>0?a+1|0:a)|0,Y=a=(D=c+QA|0)>>>0<QA>>>0?a+1|0:a,c=UI(e^D,H^a,48),a=p+($=f)|0,H=c,K=a=(p=_+c|0)>>>0<_>>>0?a+1|0:a,_=UI(p^k,M^a,1),a=(k=f)+J|0,a=DA+((c=_+R|0)>>>0<_>>>0?a+1|0:a)|0,a=pA+(e=(c=c+oA|0)>>>0<oA>>>0?a+1|0:a)|0,hA=M=c+EA|0,M=a=M>>>0<EA>>>0?a+1|0:a,W=_,x=c,_=UI(s^G,b^T,1),a=(s=f)+q|0,a=GA+((c=_+O|0)>>>0<_>>>0?a+1|0:a)|0,a=SA+(G=(c=c+_A|0)>>>0<_A>>>0?a+1|0:a)|0,O=b=c+iA|0,b=a=b>>>0<iA>>>0?a+1|0:a,q=_,a=UI(c^F,G^AA,32),AA=_=f,c=a,a=U+L|0,S=_=y+S|0,F=a=_>>>0<y>>>0?a+1|0:a,a=AA+a|0,U=a=(y=_+c|0)>>>0<_>>>0?a+1|0:a,s=UI(y^q,a^s,40),a=(L=f)+b|0,G=_=s+O|0,q=UI(_^c,AA^(b=_>>>0<s>>>0?a+1|0:a),48),a=UI(q^x,(AA=f)^e,32),T=_=f,O=a,e=_,c=rA,_=UI(S^u,F^m,1),a=N+(F=f)|0,a=((S=w)>>>0>(w=_+w|0)>>>0?a+1|0:a)+yA|0,a=DA+(w=(c=c+w|0)>>>0<w>>>0?a+1|0:a)|0,S=N=c+oA|0,N=a=N>>>0<oA>>>0?a+1|0:a,c=UI(c^Z,w^CA,32),a=n+(u=f)|0,n=c,a=(c=r+c|0)>>>0<r>>>0?a+1|0:a,r=F,F=a,r=UI(_^c,r^a,40),a=(m=f)+N|0,w=_=r+S|0,_=UI(_^n,u^(N=_>>>0<r>>>0?a+1|0:a),48),a=F+(x=f)|0,F=_,S=_=c+_|0,u=a=_>>>0<c>>>0?a+1|0:a,a=a+e|0,a=(n=_+O|0)>>>0<_>>>0?a+1|0:a,_=n^W,W=a,k=UI(_,a^k,40),a=(CA=f)+M|0,M=_=k+hA|0,Z=_>>>0<k>>>0?a+1|0:a,_=UI(d^R,J^IA,48),a=l+(IA=f)|0,d=_,a=(_=h+_|0)>>>0<h>>>0?a+1|0:a,h=_,l=a,a=UI(_^t,a^v,1),v=_=f,e=a,a=b+wA|0,a=((c=G+V|0)>>>0<V>>>0?a+1|0:a)+_|0,a=FA+(c=(_=c+e|0)>>>0<c>>>0?a+1|0:a)|0,G=t=_+QA|0,t=a=t>>>0<QA>>>0?a+1|0:a,_=UI(_^F,c^x,32),a=K+(b=f)|0,F=_,p=a=(c=p+_|0)>>>0<p>>>0?a+1|0:a,e=UI(c^e,v^a,40),a=(v=f)+t|0,G=_=e+G|0,_=UI(t=_^F,b^(F=_>>>0<e>>>0?a+1|0:a),48),a=p+(hA=f)|0,p=_,K=a=(t=c+_|0)>>>0<c>>>0?a+1|0:a,_=UI(t^e,v^a,1),a=(b=f)+Z|0,a=kA+((c=_+M|0)>>>0<_>>>0?a+1|0:a)|0,a=(e=(c=c+eA|0)>>>0<eA>>>0?a+1|0:a)+sA|0,nA=v=c+gA|0,v=a=v>>>0<c>>>0?a+1|0:a,R=_,J=c,x=e,_=UI(r^S,m^u,1),a=GA+(e=f)|0,a=Y+((c=_+_A|0)>>>0<_A>>>0?a+1|0:a)|0,a=NA+(r=(c=c+D|0)>>>0<D>>>0?a+1|0:a)|0,u=D=c+cA|0,D=a=D>>>0<cA>>>0?a+1|0:a,Y=_,S=e,a=UI(c^d,r^IA,32),d=_=f,r=a,c=_,a=U+AA|0,a=(_=y+q|0)>>>0<y>>>0?a+1|0:a,y=_,U=a,a=a+c|0,a=(e=_+r|0)>>>0<_>>>0?a+1|0:a,_=e^Y,Y=a,_=UI(_,a^S,40),a=(a=D)+(D=f)|0,S=c=_+u|0,u=a=c>>>0<_>>>0?a+1|0:a,d=UI(c^r,d^a,48),a=UI(d^J,(a=x)^(x=f),32),m=c=f,q=a,c=UI(y^s,U^L,1),a=(y=f)+yA|0,a=N+((r=c+rA|0)>>>0<c>>>0?a+1|0:a)|0,a=B+(s=(r=r+w|0)>>>0<w>>>0?a+1|0:a)|0,L=w=r+fA|0,w=a=w>>>0<fA>>>0?a+1|0:a,N=c,U=y,r=UI(r^H,s^$,32),a=(H=f)+l|0,y=c=r+h|0,c=(s=UI(c^N,(h=c>>>0<r>>>0?a+1|0:a)^U,40))+L|0,a=(L=f)+w|0,N=c,c=UI(c^r,H^(U=c>>>0<s>>>0?a+1|0:a),48),a=h+(AA=f)|0,H=c,l=c=y+c|0,J=a=c>>>0<y>>>0?a+1|0:a,a=m+a|0,a=(r=c+q|0)>>>0<c>>>0?a+1|0:a,c=b,b=a,y=UI(r^R,c^a,40),a=(IA=f)+v|0,w=c=y+nA|0,a=UI(c^q,m^(v=c>>>0<y>>>0?a+1|0:a),48),m=c=f,q=a,c=_,a=Y+x|0,Y=_=e+d|0,d=a=_>>>0<e>>>0?a+1|0:a,a=UI(_^c,a^D,1),e=c=f,_=a,a=U+Q|0,a=((h=N+g|0)>>>0<g>>>0?a+1|0:a)+c|0,a=tA+(h=(c=_+h|0)>>>0<h>>>0?a+1|0:a)|0,x=D=c+z|0,D=a=D>>>0<z>>>0?a+1|0:a,N=_,U=e,_=UI(M^O,Z^T,48),a=W+(T=f)|0,M=_,a=(_=n+_|0)>>>0<n>>>0?a+1|0:a,n=_,c=UI(c^p,h^hA,32),W=a,a=a+(O=f)|0,e=_=c+_|0,h=UI(_^N,(p=_>>>0<c>>>0?a+1|0:a)^U,40),a=(Z=f)+D|0,D=_=h+x|0,_=UI(_^c,O^(N=_>>>0<h>>>0?a+1|0:a),48),a=p+($=f)|0,U=_,O=a=(p=e+_|0)>>>0<e>>>0?a+1|0:a,_=UI(h^p,Z^a,1),a=FA+(x=f)|0,Z=_,hA=_=QA+_|0,e=a=_>>>0<QA>>>0?a+1|0:a,_=UI(k^n,W^CA,1),a=(h=f)+u|0,a=SA+((c=_+S|0)>>>0<_>>>0?a+1|0:a)|0,a=BA+(n=(c=c+iA|0)>>>0<iA>>>0?a+1|0:a)|0,W=k=c+j|0,k=a=k>>>0<j>>>0?a+1|0:a,S=h,c=UI(c^H,n^AA,32),a=K+(AA=f)|0,u=c,a=(h=t+c|0)>>>0<t>>>0?a+1|0:a,t=S,S=a,n=UI(_^h,t^a,40),a=(CA=f)+k|0,H=_=n+W|0,a=(K=_>>>0<n>>>0?a+1|0:a)+e|0,k=a=(e=_+hA|0)>>>0<_>>>0?a+1|0:a,W=a=UI(e^q,a^m,32),R=_=f,_=UI(s^l,J^L,1),a=(t=f)+F|0,a=X+((c=_+G|0)>>>0<_>>>0?a+1|0:a)|0,a=(s=(c=I+c|0)>>>0<I>>>0?a+1|0:a)+P|0,J=F=c+aA|0,F=a=F>>>0<c>>>0?a+1|0:a,G=_,l=t,c=UI(c^M,s^T,32),a=(M=f)+d|0,t=_=c+Y|0,_=(s=UI(_^G,(Y=_>>>0<c>>>0?a+1|0:a)^l,40))+J|0,a=(J=f)+F|0,F=_,_=UI(_^c,M^(G=_>>>0<s>>>0?a+1|0:a),48),a=Y+(T=f)|0,Y=_,M=a=(_=t+_|0)>>>0<t>>>0?a+1|0:a,a=a+R|0,d=a=(t=_)>>>0>(_=_+W|0)>>>0?a+1|0:a,c=UI(_^Z,x^a,40),a=k+(x=f)|0,l=c,a=Q+((c=e+c|0)>>>0<e>>>0?a+1|0:a)|0,Z=c=c+g|0,e=c^W,W=a=c>>>0<g>>>0?a+1|0:a,c=UI(e,R^a,48),a=d+(R=f)|0,d=a=(k=_+c|0)>>>0<_>>>0?a+1|0:a,_=a=UI(k^l,x^a,1),l=e=f,e=UI(t^s,M^J,1),a=N+(s=f)|0,a=SA+((t=e+D|0)>>>0<D>>>0?a+1|0:a)|0,a=DA+(D=(t=t+iA|0)>>>0<iA>>>0?a+1|0:a)|0,x=N=t+oA|0,N=a=N>>>0<oA>>>0?a+1|0:a,M=e,J=s,a=b+m|0,a=(e=r+q|0)>>>0<r>>>0?a+1|0:a,b=e,u=UI(H^u,K^AA,48),s=UI(t^u,D^(AA=f),32),H=a,a=a+(hA=f)|0,D=e=s+e|0,e=UI(e^M,(K=e>>>0<s>>>0?a+1|0:a)^J,40),a=(M=f)+N|0,J=a=(r=e+x|0)>>>0<e>>>0?a+1|0:a,a=a+l|0,a=B+((q=r)>>>0>(r=_+r|0)>>>0?a+1|0:a)|0,a=(t=(r=r+fA|0)>>>0<fA>>>0?a+1|0:a)+yA|0,nA=N=r+rA|0,x=a=N>>>0<r>>>0?a+1|0:a,L=_,m=r,a=UI(y^b,H^IA,1),y=r=f,_=a,a=G+GA|0,a=((N=F+_A|0)>>>0<_A>>>0?a+1|0:a)+r|0,a=tA+(N=(r=_+N|0)>>>0<N>>>0?a+1|0:a)|0,H=F=r+z|0,F=a=F>>>0<z>>>0?a+1|0:a,G=_,a=UI(r^U,N^$,32),b=_=f,r=a,N=_,a=S+AA|0,S=_=h+u|0,U=a=_>>>0<h>>>0?a+1|0:a,a=a+N|0,a=(h=_+r|0)>>>0<_>>>0?a+1|0:a,_=h^G;G=a,N=UI(_,a^y,40),a=(AA=f)+F|0,u=UI(F=(_=N+H|0)^r,b^(r=_>>>0<N>>>0?a+1|0:a),48),a=UI(a=u^m,(m=f)^t,32),IA=t=f,H=a,F=t,t=UI(n^S,U^CA,1),a=BA+(n=f)|0,a=v+((y=t+j|0)>>>0<j>>>0?a+1|0:a)|0,a=kA+(w=(y=y+w|0)>>>0<w>>>0?a+1|0:a)|0,U=S=y+eA|0,S=a=S>>>0<eA>>>0?a+1|0:a,y=UI(y^Y,w^T,32),a=O+(b=f)|0,Y=y,p=a=(y=p+y|0)>>>0<p>>>0?a+1|0:a,w=UI(t^y,a^n,40),a=(T=f)+S|0,n=t=w+U|0,t=UI(S=t^Y,b^(Y=t>>>0<w>>>0?a+1|0:a),48),a=p+($=f)|0,S=t,U=t=y+t|0,b=a=t>>>0<y>>>0?a+1|0:a,a=a+F|0,a=(y=t+H|0)>>>0<t>>>0?a+1|0:a,t=l,l=a,p=UI(y^L,t^a,40),a=(v=f)+x|0,F=t=p+nA|0,t=UI(x=t^H,IA^(H=t>>>0<p>>>0?a+1|0:a),48),a=l+(IA=f)|0,l=t,y=a=(t=y+t|0)>>>0<y>>>0?a+1|0:a,v=a=UI(t^p,v^a,1),CA=a,O=p=f,p=r,r=e,e=UI(s^q,J^hA,48),a=K+(hA=f)|0,K=e,a=(e=D+e|0)>>>0<D>>>0?a+1|0:a,D=_,_=r^e,r=a,_=UI(_,a^M,1),a=(M=f)+p|0,a=NA+(_>>>0>(s=D+_|0)>>>0?a+1|0:a)|0,a=sA+(D=(s=s+cA|0)>>>0<cA>>>0?a+1|0:a)|0,q=p=s+gA|0,p=a=p>>>0<gA>>>0?a+1|0:a,s=UI(s^S,D^$,32),a=d+(J=f)|0,S=a=(D=s+k|0)>>>0<k>>>0?a+1|0:a,k=UI(_^D,M^a,40),a=($=f)+p|0,M=_=k+q|0,s=UI(_^s,J^(d=_>>>0<k>>>0?a+1|0:a),48),a=S+(q=f)|0,J=_=s+D|0,S=_,x=a=_>>>0<D>>>0?a+1|0:a,D=e,p=r,a=G+m|0,a=(_=h+u|0)>>>0<h>>>0?a+1|0:a,h=_,_^=N,N=a,a=UI(_,AA^a,1),L=_=f,G=a,r=a,a=Y+P|0,a=((e=n+aA|0)>>>0<aA>>>0?a+1|0:a)+_|0,n=a=(_=e)>>>0>(e=r+e|0)>>>0?a+1|0:a,r=UI(c^e,a^R,32),a=(a=p)+(p=f)|0,u=_=r+D|0,c=UI(c=_^G,L^(G=_>>>0<r>>>0?a+1|0:a),40),a=n+(R=f)|0,a=wA+((_=c+e|0)>>>0<e>>>0?a+1|0:a)|0,L=a=(D=_+V|0)>>>0<V>>>0?a+1|0:a,p=UI(r^D,p^a,48),nA=a=f,_=UI(w^U,b^T,1),a=(r=f)+W|0,a=pA+((e=_+Z|0)>>>0<_>>>0?a+1|0:a)|0,a=X+(w=(e=e+EA|0)>>>0<EA>>>0?a+1|0:a)|0,W=n=I+e|0,U=a=n>>>0<I>>>0?a+1|0:a,b=_,n=UI(e^K,w^hA,32),a=(T=f)+N|0,N=_=n+h|0,e=UI(_^b,(K=_>>>0<n>>>0?a+1|0:a)^r,40),a=(a=U)+(U=f)|0,b=_=e+W|0,W=a=_>>>0<e>>>0?a+1|0:a,r=a,a=X+O|0,a=((w=I+v|0)>>>0<I>>>0?a+1|0:a)+r|0,Y=a=(r=_+w|0)>>>0<w>>>0?a+1|0:a,_=UI(r^p,nA^a,32),a=(v=f)+x|0,h=UI((w=_+S|0)^CA,(a=w>>>0<_>>>0?a+1|0:a)^O,40),O=a,a=sA+(S=f)|0,a=Y+((Z=h+gA|0)>>>0<gA>>>0?a+1|0:a)|0,a=(Y=r+Z|0)>>>0<r>>>0?a+1|0:a,r=v,v=a,r=UI(_^Y,r^a,48),a=(a=O)+(O=f)|0,_=h^(w=r+w|0),h=a=w>>>0<r>>>0?a+1|0:a,Z=a=UI(_,a^S,1),CA=a,m=_=f,S=t,AA=y,t=e,e=UI(n^b,W^T,48),a=K+(b=f)|0,n=_=e+N|0,N=a=_>>>0<N>>>0?a+1|0:a,t=UI(_^t,a^U,1),a=(W=f)+NA|0,a=L+((_=t+cA|0)>>>0<t>>>0?a+1|0:a)|0,D=a=(y=_+D|0)>>>0<D>>>0?a+1|0:a,_=UI(y^s,a^q,32),a=(U=f)+AA|0,S=s=_+S|0,K=a=s>>>0<_>>>0?a+1|0:a,t=UI(t^s,a^W,40),a=DA+(hA=f)|0,W=t,a=D+((t=oA+t|0)>>>0<oA>>>0?a+1|0:a)|0,y=a=(t=t+y|0)>>>0<y>>>0?a+1|0:a,s=UI(_^t,a^U,48),a=(a=K)+(K=f)|0,q=_=s+S|0,U=_,L=a=_>>>0<s>>>0?a+1|0:a,a=G+nA|0,S=(_=p+u|0)^c,c=a=_>>>0<p>>>0?a+1|0:a,a=UI(S,a^R,1),R=D=f,S=a,a=d+tA|0,a=((p=M+z|0)>>>0<z>>>0?a+1|0:a)+D|0,G=a=(G=p)>>>0>(p=p+S|0)>>>0?a+1|0:a,u=D=UI(p^l,IA^a,32),M=a=f,a=a+N|0,d=D=D+n|0,l=a=u>>>0>D>>>0?a+1|0:a,D=UI(D^S,R^a,40),a=yA+(R=f)|0,a=G+((n=D+rA|0)>>>0<rA>>>0?a+1|0:a)|0,n=a=(S=p)>>>0>(p=p+n|0)>>>0?a+1|0:a,S=UI(p^u,a^M,48),IA=a=f,N=a,k=UI(k^J,x^$,1),G=a=f,u=e,a=a+P|0,a=H+((e=k+aA|0)>>>0<aA>>>0?a+1|0:a)|0,a=(e=e+F|0)>>>0<F>>>0?a+1|0:a,F=e^u,u=a,F=UI(F,a^b,32),a=($=f)+c|0,H=_=F+_|0,c=UI(_^k,(c=G)^(G=_>>>0<F>>>0?a+1|0:a),40),a=pA+(M=f)|0,a=u+((_=c+EA|0)>>>0<EA>>>0?a+1|0:a)|0,u=_=_+e|0,b=a=_>>>0<e>>>0?a+1|0:a,e=a,a=m+SA|0,a=((k=Z+iA|0)>>>0<iA>>>0?a+1|0:a)+e|0,Z=a=(e=_+k|0)>>>0<k>>>0?a+1|0:a,_=UI(e^S,a^N,32),a=(J=f)+L|0,N=UI((k=_+U|0)^CA,(a=k>>>0<_>>>0?a+1|0:a)^m,40),x=U=f,m=a,a=U+kA|0,a=Z+((U=N+eA|0)>>>0<eA>>>0?a+1|0:a)|0,Z=a=(U=e+U|0)>>>0<e>>>0?a+1|0:a,e=UI(_^U,a^J,48),a=(J=f)+m|0,_=(k=e+k|0)^N,N=a=k>>>0<e>>>0?a+1|0:a,x=a=UI(_,a^x,1),m=_=f,AA=w,T=s,s=c,c=UI(F^u,b^$,48),a=(F=f)+G|0,G=_=c+H|0,u=a=_>>>0<c>>>0?a+1|0:a,s=UI(_^s,a^M,1),a=(M=f)+FA|0,a=((_=s+QA|0)>>>0<s>>>0?a+1|0:a)+n|0,p=a=(w=_+p|0)>>>0<_>>>0?a+1|0:a,_=UI(w^T,a^K,32),a=(n=f)+h|0,H=h=_+AA|0,K=a=h>>>0<_>>>0?a+1|0:a,s=UI(s^h,a^M,40),a=B+(T=f)|0,M=s,a=p+((s=fA+s|0)>>>0<fA>>>0?a+1|0:a)|0,b=a=(h=s+w|0)>>>0<w>>>0?a+1|0:a,s=UI(_^h,a^n,48),a=(a=K)+(K=f)|0,H=_=s+H|0,AA=a=_>>>0<s>>>0?a+1|0:a,p=r,w=t,a=l+IA|0,r=a=(_=S+d|0)>>>0<S>>>0?a+1|0:a,t=UI(_^D,a^R,1),a=(D=f)+BA|0,a=((n=t+j|0)>>>0<t>>>0?a+1|0:a)+y|0,y=UI(p^(w=w+n|0),(a=w>>>0<n>>>0?a+1|0:a)^O,32),n=a,S=t,a=(p=f)+u|0,a=(t=y+G|0)>>>0<y>>>0?a+1|0:a,G=t,t^=S,S=a,t=UI(t,a^D,40),a=Q+(u=f)|0,a=((D=t+g|0)>>>0<g>>>0?a+1|0:a)+n|0,d=a=(n=D)>>>0>(D=D+w|0)>>>0?a+1|0:a,p=UI(y^D,a^p,48),IA=a=f,w=a,y=UI(q^W,L^hA,1),l=a=f,W=r,a=a+wA|0,a=v+((r=y+V|0)>>>0<V>>>0?a+1|0:a)|0,n=F,F=a=(r=r+Y|0)>>>0<Y>>>0?a+1|0:a,n=UI(c^r,n^a,32),a=($=f)+W|0,Y=_=n+_|0,c=UI(_^y,(c=l)^(l=_>>>0<n>>>0?a+1|0:a),40),a=GA+(W=f)|0,a=F+((_=c+_A|0)>>>0<_A>>>0?a+1|0:a)|0,v=_=_+r|0,q=a=_>>>0<r>>>0?a+1|0:a,r=a,a=m+tA|0,a=((y=z+x|0)>>>0<z>>>0?a+1|0:a)+r|0,F=a=(r=_+y|0)>>>0<y>>>0?a+1|0:a,_=UI(r^p,a^w,32),a=(O=f)+AA|0,w=UI((y=_+H|0)^x,(a=y>>>0<_>>>0?a+1|0:a)^m,40),x=a,a=P+(R=f)|0,a=F+((L=w+aA|0)>>>0<aA>>>0?a+1|0:a)|0,a=(F=r+L|0)>>>0<r>>>0?a+1|0:a,r=O,O=a,r=UI(_^F,r^a,48),a=(a=x)+(x=f)|0,_=(y=r+y|0)^w,w=a=y>>>0<r>>>0?a+1|0:a,R=a=UI(_,a^R,1),L=_=f,m=s,s=c,c=UI(n^v,q^$,48),a=(a=l)+(l=f)|0,Y=_=c+Y|0,n=W,W=a=_>>>0<c>>>0?a+1|0:a,s=UI(_^s,n^a,1),a=(v=f)+kA|0,a=d+((_=s+eA|0)>>>0<s>>>0?a+1|0:a)|0,n=D,D=_+D|0,_=K,K=a=n>>>0>D>>>0?a+1|0:a,_=UI(D^m,_^a,32),a=(a=N)+(N=f)|0,d=a=(n=_+k|0)>>>0<_>>>0?a+1|0:a,k=n,s=UI(s^n,a^v,40),a=wA+($=f)|0,v=s,a=K+((s=V+s|0)>>>0<V>>>0?a+1|0:a)|0,K=a=(n=s+D|0)>>>0<D>>>0?a+1|0:a,s=UI(_^n,a^N,48),a=(a=d)+(d=f)|0,q=_=s+k|0,m=a=_>>>0<s>>>0?a+1|0:a,k=e,a=S+IA|0,e=a=(_=p+G|0)>>>0<p>>>0?a+1|0:a,t=UI(_^t,a^u,1),a=sA+(p=f)|0,a=b+((D=t+gA|0)>>>0<gA>>>0?a+1|0:a)|0,S=(D=h+D|0)^k,k=a=D>>>0<h>>>0?a+1|0:a,h=UI(S,a^J,32),N=a=f,S=t,a=a+W|0,a=(t=h+Y|0)>>>0<h>>>0?a+1|0:a,G=t,t^=S,S=a,t=UI(t,a^p,40),a=Q+(u=f)|0,a=k+((p=t+g|0)>>>0<g>>>0?a+1|0:a)|0,b=a=(p=D+p|0)>>>0<D>>>0?a+1|0:a,k=UI(h^p,a^N,48),IA=a=f,D=a,h=UI(M^H,T^AA,1),Y=a=f,H=e,a=a+B|0,a=Z+((e=h+fA|0)>>>0<fA>>>0?a+1|0:a)|0,U=a=(e=e+U|0)>>>0<U>>>0?a+1|0:a,N=UI(c^e,a^l,32),a=(CA=f)+H|0,H=_=N+_|0,c=UI(_^h,(M=_>>>0<N>>>0?a+1|0:a)^Y,40),a=X+(l=f)|0,a=U+((_=I+c|0)>>>0<I>>>0?a+1|0:a)|0,U=_=_+e|0,W=a=_>>>0<e>>>0?a+1|0:a,e=a,a=L+pA|0,a=((h=R+EA|0)>>>0<EA>>>0?a+1|0:a)+e|0,Y=a=(e=_+h|0)>>>0<h>>>0?a+1|0:a,_=UI(e^k,a^D,32),a=(Z=f)+m|0,D=UI((h=_+q|0)^R,(a=h>>>0<_>>>0?a+1|0:a)^L,40),J=a,a=NA+(R=f)|0,a=Y+((L=D+cA|0)>>>0<cA>>>0?a+1|0:a)|0,a=(Y=e+L|0)>>>0<e>>>0?a+1|0:a,e=Z,Z=a,e=UI(_^Y,e^a,48),a=(a=J)+(J=f)|0,_=(h=e+h|0)^D,D=a=h>>>0<e>>>0?a+1|0:a,R=a=UI(_,a^R,1),hA=a,L=_=f,AA=y,T=s,y=c,c=UI(N^U,W^CA,48),a=(N=f)+M|0,U=_=c+H|0,H=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^l,1),a=(l=f)+yA|0,a=b+((_=y+rA|0)>>>0<y>>>0?a+1|0:a)|0,p=a=(s=_+p|0)>>>0<p>>>0?a+1|0:a,_=UI(s^T,a^d,32),a=(M=f)+w|0,d=a=(w=_+AA|0)>>>0<_>>>0?a+1|0:a,y=UI(y^w,a^l,40),a=FA+(CA=f)|0,b=y,a=p+((y=QA+y|0)>>>0<QA>>>0?a+1|0:a)|0,p=y+s|0,y=M,M=a=p>>>0<s>>>0?a+1|0:a,y=UI(_^p,y^a,48),a=(a=d)+(d=f)|0,l=_=y+w|0,W=a=_>>>0<y>>>0?a+1|0:a,s=r,a=S+IA|0,r=a=(_=k+G|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^u,1),a=(k=f)+GA|0,a=K+((w=t+_A|0)>>>0<t>>>0?a+1|0:a)|0,s=UI(s^(w=w+n|0),(a=w>>>0<n>>>0?a+1|0:a)^x,32),S=n=f,n=a,G=t,a=S+H|0,a=(t=s+U|0)>>>0<s>>>0?a+1|0:a,U=t,t^=G,G=a,t=UI(t,a^k,40),a=DA+(u=f)|0,a=((k=t+oA|0)>>>0<oA>>>0?a+1|0:a)+n|0,K=S,S=a=(n=w+k|0)>>>0<k>>>0?a+1|0:a,k=UI(s^n,K^a,48),IA=a=f,w=a,s=UI(q^v,m^$,1),H=a=f,K=r,a=a+BA|0,a=O+((r=s+j|0)>>>0<j>>>0?a+1|0:a)|0,F=a=(r=r+F|0)>>>0<F>>>0?a+1|0:a,N=UI(c^r,a^N,32),a=($=f)+K|0,K=_=N+_|0,c=UI(_^s,(c=H)^(H=_>>>0<N>>>0?a+1|0:a),40),a=SA+(v=f)|0,a=F+((_=c+iA|0)>>>0<iA>>>0?a+1|0:a)|0,q=_=_+r|0,O=a=_>>>0<r>>>0?a+1|0:a,r=a,a=L+Q|0,a=((s=R+g|0)>>>0<g>>>0?a+1|0:a)+r|0,F=a=(r=_+s|0)>>>0<s>>>0?a+1|0:a,_=UI(r^k,a^w,32),a=(R=f)+W|0,w=UI((s=_+l|0)^hA,(a=s>>>0<_>>>0?a+1|0:a)^L,40),L=a,a=kA+(x=f)|0,a=F+((m=w+eA|0)>>>0<eA>>>0?a+1|0:a)|0,a=(F=r+m|0)>>>0<r>>>0?a+1|0:a,r=R,R=a,r=UI(_^F,r^a,48),a=(a=L)+(L=f)|0,_=(s=r+s|0)^w,w=a=s>>>0<r>>>0?a+1|0:a,x=a=UI(_,a^x,1),m=_=f,AA=h,T=y,y=c,c=UI(N^q,O^$,48),a=(N=f)+H|0,H=_=c+K|0,K=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^v,1),a=(v=f)+FA|0,a=S+((_=y+QA|0)>>>0<y>>>0?a+1|0:a)|0,n=a=(h=_+n|0)>>>0<n>>>0?a+1|0:a,_=UI(h^T,a^d,32),a=(S=f)+D|0,d=a=(D=_+AA|0)>>>0<_>>>0?a+1|0:a,y=UI(y^D,a^v,40),a=BA+($=f)|0,v=y,a=n+((y=j+y|0)>>>0<j>>>0?a+1|0:a)|0,n=y+h|0,y=S,S=a=n>>>0<h>>>0?a+1|0:a,y=UI(_^n,y^a,48),a=(a=d)+(d=f)|0,q=_=y+D|0,O=a=_>>>0<y>>>0?a+1|0:a,h=e,a=G+IA|0,e=a=(_=k+U|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^u,1),a=SA+(k=f)|0,a=M+((D=t+iA|0)>>>0<iA>>>0?a+1|0:a)|0,p=a=(D=D+p|0)>>>0<p>>>0?a+1|0:a,h=UI(h^D,a^J,32),U=a=f,G=t,a=a+K|0,a=(t=h+H|0)>>>0<h>>>0?a+1|0:a,u=t,t^=G,G=a,t=UI(t,a^k,40),a=pA+(H=f)|0,a=p+((k=t+EA|0)>>>0<EA>>>0?a+1|0:a)|0,a=(p=D+k|0)>>>0<D>>>0?a+1|0:a,D=U,U=a,k=UI(h^p,D^a,48),IA=a=f,D=a,h=UI(b^l,W^CA,1),K=a=f,M=e,a=a+X|0,a=Z+((e=I+h|0)>>>0<I>>>0?a+1|0:a)|0,Y=a=(e=e+Y|0)>>>0<Y>>>0?a+1|0:a,N=UI(c^e,a^N,32),a=(CA=f)+M|0,M=_=N+_|0,c=UI(_^h,(c=K)^(K=_>>>0<N>>>0?a+1|0:a),40),a=wA+(b=f)|0,a=Y+((_=c+V|0)>>>0<V>>>0?a+1|0:a)|0,l=_=_+e|0,W=a=_>>>0<e>>>0?a+1|0:a,e=a,a=m+sA|0,a=((h=x+gA|0)>>>0<gA>>>0?a+1|0:a)+e|0,Y=a=(e=_+h|0)>>>0<h>>>0?a+1|0:a,_=UI(e^k,a^D,32),a=(Z=f)+O|0,D=UI((h=_+q|0)^x,(a=h>>>0<_>>>0?a+1|0:a)^m,40),x=a,a=B+(J=f)|0,a=Y+((m=D+fA|0)>>>0<fA>>>0?a+1|0:a)|0,a=(Y=e+m|0)>>>0<e>>>0?a+1|0:a,e=Z,Z=a,e=UI(_^Y,e^a,48),a=(a=x)+(x=f)|0,_=(h=e+h|0)^D,D=a=h>>>0<e>>>0?a+1|0:a,J=a=UI(_,a^J,1),m=_=f,AA=s,T=y,y=c,c=UI(N^l,W^CA,48),a=(N=f)+K|0,K=_=c+M|0,M=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^b,1),a=(b=f)+tA|0,a=U+((_=y+z|0)>>>0<y>>>0?a+1|0:a)|0,p=a=(s=_+p|0)>>>0<p>>>0?a+1|0:a,_=UI(s^T,a^d,32),a=(U=f)+w|0,d=a=(w=_+AA|0)>>>0<_>>>0?a+1|0:a,y=UI(y^w,a^b,40),a=GA+(CA=f)|0,b=y,a=p+((y=_A+y|0)>>>0<_A>>>0?a+1|0:a)|0,p=y+s|0,y=U,U=a=p>>>0<s>>>0?a+1|0:a,y=UI(_^p,y^a,48),a=(a=d)+(d=f)|0,l=_=y+w|0,W=a=_>>>0<y>>>0?a+1|0:a,s=r,a=G+IA|0,r=a=(_=k+u|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^H,1),a=(k=f)+DA|0,a=S+((w=t+oA|0)>>>0<t>>>0?a+1|0:a)|0,n=a=(w=w+n|0)>>>0<n>>>0?a+1|0:a,s=UI(s^w,a^L,32),S=a=f,G=t,a=a+M|0,a=(t=s+K|0)>>>0<s>>>0?a+1|0:a,u=t,t^=G,G=a,t=UI(t,a^k,40),a=yA+(H=f)|0,a=n+((k=t+rA|0)>>>0<rA>>>0?a+1|0:a)|0,K=S,S=a=(n=w+k|0)>>>0<w>>>0?a+1|0:a,k=UI(s^n,K^a,48),IA=a=f,w=a,s=UI(q^v,O^$,1),K=a=f,M=r,a=a+P|0,a=R+((r=s+aA|0)>>>0<aA>>>0?a+1|0:a)|0,F=a=(r=r+F|0)>>>0<F>>>0?a+1|0:a,N=UI(c^r,a^N,32),a=($=f)+M|0,M=_=N+_|0,c=UI(_^s,(c=K)^(K=_>>>0<N>>>0?a+1|0:a),40),a=NA+(v=f)|0,a=F+((_=c+cA|0)>>>0<cA>>>0?a+1|0:a)|0,q=_=_+r|0,O=a=_>>>0<r>>>0?a+1|0:a,r=a,a=m+B|0,a=((s=J+fA|0)>>>0<fA>>>0?a+1|0:a)+r|0,F=a=(r=_+s|0)>>>0<s>>>0?a+1|0:a,_=UI(r^k,a^w,32),a=(R=f)+W|0,w=UI((s=_+l|0)^J,(a=s>>>0<_>>>0?a+1|0:a)^m,40),L=a,a=SA+(J=f)|0,a=F+((m=w+iA|0)>>>0<iA>>>0?a+1|0:a)|0,a=(F=r+m|0)>>>0<r>>>0?a+1|0:a,r=R,R=a,r=UI(_^F,r^a,48),a=(a=L)+(L=f)|0,_=(s=r+s|0)^w,w=a=s>>>0<r>>>0?a+1|0:a,J=a=UI(_,a^J,1),m=_=f,AA=h,T=y,y=c,c=UI(N^q,O^$,48),a=(N=f)+K|0,K=_=c+M|0,M=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^v,1),a=(v=f)+P|0,a=S+((_=y+aA|0)>>>0<y>>>0?a+1|0:a)|0,n=a=(h=_+n|0)>>>0<n>>>0?a+1|0:a,_=UI(h^T,a^d,32),a=(S=f)+D|0,d=a=(D=_+AA|0)>>>0<_>>>0?a+1|0:a,y=UI(y^D,a^v,40),a=yA+($=f)|0,v=y,a=n+((y=rA+y|0)>>>0<rA>>>0?a+1|0:a)|0,n=y+h|0,y=S,S=a=n>>>0<h>>>0?a+1|0:a,y=UI(_^n,y^a,48),a=(a=d)+(d=f)|0,q=_=y+D|0,O=a=_>>>0<y>>>0?a+1|0:a,h=e,a=G+IA|0,e=a=(_=k+u|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^H,1),a=DA+(k=f)|0,a=U+((D=t+oA|0)>>>0<oA>>>0?a+1|0:a)|0,p=a=(D=D+p|0)>>>0<p>>>0?a+1|0:a,h=UI(h^D,a^x,32),U=a=f,G=t,a=a+M|0,a=(t=h+K|0)>>>0<h>>>0?a+1|0:a,u=t,t^=G,G=a,t=UI(t,a^k,40),a=GA+(H=f)|0,a=p+((k=t+_A|0)>>>0<_A>>>0?a+1|0:a)|0,a=(p=D+k|0)>>>0<D>>>0?a+1|0:a,D=U,U=a,k=UI(h^p,D^a,48),IA=a=f,D=a,h=UI(b^l,W^CA,1),K=a=f,M=e,a=a+BA|0,a=Z+((e=h+j|0)>>>0<j>>>0?a+1|0:a)|0,Y=a=(e=e+Y|0)>>>0<Y>>>0?a+1|0:a,N=UI(c^e,a^N,32),a=(CA=f)+M|0,M=_=N+_|0,c=UI(_^h,(c=K)^(K=_>>>0<N>>>0?a+1|0:a),40),a=NA+(b=f)|0,a=Y+((_=c+cA|0)>>>0<cA>>>0?a+1|0:a)|0,l=_=_+e|0,W=a=_>>>0<e>>>0?a+1|0:a,e=a,a=m+wA|0,a=((h=J+V|0)>>>0<V>>>0?a+1|0:a)+e|0,Y=a=(e=_+h|0)>>>0<h>>>0?a+1|0:a,_=UI(e^k,a^D,32),a=(Z=f)+O|0,D=UI((h=_+q|0)^J,(a=h>>>0<_>>>0?a+1|0:a)^m,40),x=a,a=X+(J=f)|0,a=Y+((m=I+D|0)>>>0<I>>>0?a+1|0:a)|0,a=(Y=e+m|0)>>>0<e>>>0?a+1|0:a,e=Z,Z=a,e=UI(_^Y,e^a,48),a=(a=x)+(x=f)|0,_=(h=e+h|0)^D,D=a=h>>>0<e>>>0?a+1|0:a,J=a=UI(_,a^J,1),m=_=f,AA=s,T=y,y=c,c=UI(N^l,W^CA,48),a=(N=f)+K|0,K=_=c+M|0,M=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^b,1),a=(b=f)+pA|0,a=U+((_=y+EA|0)>>>0<y>>>0?a+1|0:a)|0,p=a=(s=_+p|0)>>>0<p>>>0?a+1|0:a,_=UI(s^T,a^d,32),a=(U=f)+w|0,d=a=(w=_+AA|0)>>>0<_>>>0?a+1|0:a,y=UI(y^w,a^b,40),a=Q+(CA=f)|0,b=y,a=p+((y=g+y|0)>>>0<g>>>0?a+1|0:a)|0,p=y+s|0,y=U,U=a=p>>>0<s>>>0?a+1|0:a,y=UI(_^p,y^a,48),a=(a=d)+(d=f)|0,l=_=y+w|0,W=a=_>>>0<y>>>0?a+1|0:a,s=r,a=G+IA|0,r=a=(_=k+u|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^H,1),a=(k=f)+sA|0,a=S+((w=t+gA|0)>>>0<t>>>0?a+1|0:a)|0,n=a=(w=w+n|0)>>>0<n>>>0?a+1|0:a,s=UI(s^w,a^L,32),S=a=f,G=t,a=a+M|0,a=(t=s+K|0)>>>0<s>>>0?a+1|0:a,u=t,t^=G,G=a,t=UI(t,a^k,40),a=FA+(H=f)|0,a=n+((k=t+QA|0)>>>0<QA>>>0?a+1|0:a)|0,K=S,S=a=(n=w+k|0)>>>0<w>>>0?a+1|0:a,k=UI(s^n,K^a,48),IA=a=f,w=a,s=UI(q^v,O^$,1),K=a=f,M=r,a=a+kA|0,a=R+((r=s+eA|0)>>>0<eA>>>0?a+1|0:a)|0,F=a=(r=r+F|0)>>>0<F>>>0?a+1|0:a,N=UI(c^r,a^N,32),a=($=f)+M|0,M=_=N+_|0,c=UI(_^s,(c=K)^(K=_>>>0<N>>>0?a+1|0:a),40),a=tA+(v=f)|0,a=F+((_=c+z|0)>>>0<z>>>0?a+1|0:a)|0,q=_=_+r|0,O=a=_>>>0<r>>>0?a+1|0:a,r=a,a=m+NA|0,a=((s=J+cA|0)>>>0<cA>>>0?a+1|0:a)+r|0,F=a=(r=_+s|0)>>>0<s>>>0?a+1|0:a,_=UI(r^k,a^w,32),a=(R=f)+W|0,w=UI((s=_+l|0)^J,(a=s>>>0<_>>>0?a+1|0:a)^m,40),L=a,a=yA+(J=f)|0,a=F+((m=w+rA|0)>>>0<rA>>>0?a+1|0:a)|0,a=(F=r+m|0)>>>0<r>>>0?a+1|0:a,r=R,R=a,r=UI(_^F,r^a,48),a=(a=L)+(L=f)|0,_=(s=r+s|0)^w,w=a=s>>>0<r>>>0?a+1|0:a,J=a=UI(_,a^J,1),m=_=f,AA=h,T=y,y=c,c=UI(N^q,O^$,48),a=(N=f)+K|0,K=_=c+M|0,M=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^v,1),a=(v=f)+SA|0,a=S+((_=y+iA|0)>>>0<y>>>0?a+1|0:a)|0,n=a=(h=_+n|0)>>>0<n>>>0?a+1|0:a,_=UI(h^T,a^d,32),a=(S=f)+D|0,d=a=(D=_+AA|0)>>>0<_>>>0?a+1|0:a,y=UI(y^D,a^v,40),a=B+($=f)|0,v=y,a=n+((y=fA+y|0)>>>0<fA>>>0?a+1|0:a)|0,n=y+h|0,y=S,S=a=n>>>0<h>>>0?a+1|0:a,y=UI(_^n,y^a,48),a=(a=d)+(d=f)|0,q=_=y+D|0,O=a=_>>>0<y>>>0?a+1|0:a,h=e,a=G+IA|0,e=a=(_=k+u|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^H,1),a=FA+(k=f)|0,a=U+((D=t+QA|0)>>>0<QA>>>0?a+1|0:a)|0,p=a=(D=D+p|0)>>>0<p>>>0?a+1|0:a,h=UI(h^D,a^x,32),U=a=f,G=t,a=a+M|0,a=(t=h+K|0)>>>0<h>>>0?a+1|0:a,u=t,t^=G,G=a,t=UI(t,a^k,40),a=P+(H=f)|0,a=p+((k=t+aA|0)>>>0<aA>>>0?a+1|0:a)|0,a=(p=D+k|0)>>>0<D>>>0?a+1|0:a,D=U,U=a,k=UI(h^p,D^a,48),IA=a=f,D=a,h=UI(b^l,W^CA,1),K=a=f,M=e,a=a+GA|0,a=Z+((e=h+_A|0)>>>0<_A>>>0?a+1|0:a)|0,Y=a=(e=e+Y|0)>>>0<Y>>>0?a+1|0:a,N=UI(c^e,a^N,32),a=(CA=f)+M|0,M=_=N+_|0,c=UI(_^h,(c=K)^(K=_>>>0<N>>>0?a+1|0:a),40),a=kA+(b=f)|0,a=Y+((_=c+eA|0)>>>0<eA>>>0?a+1|0:a)|0,l=_=_+e|0,W=a=_>>>0<e>>>0?a+1|0:a,e=a,a=m+DA|0,a=((h=J+oA|0)>>>0<oA>>>0?a+1|0:a)+e|0,Y=a=(e=_+h|0)>>>0<h>>>0?a+1|0:a,_=UI(e^k,a^D,32),a=(Z=f)+O|0,D=UI((h=_+q|0)^J,(a=h>>>0<_>>>0?a+1|0:a)^m,40),x=a,a=Q+(J=f)|0,a=Y+((m=D+g|0)>>>0<g>>>0?a+1|0:a)|0,a=(Y=e+m|0)>>>0<e>>>0?a+1|0:a,e=Z,Z=a,e=UI(_^Y,e^a,48),a=(a=x)+(x=f)|0,_=(h=e+h|0)^D,D=a=h>>>0<e>>>0?a+1|0:a,J=a=UI(_,a^J,1),m=_=f,AA=s,T=y,y=c,c=UI(N^l,W^CA,48),a=(N=f)+K|0,K=_=c+M|0,M=a=_>>>0<c>>>0?a+1|0:a,y=UI(_^y,a^b,1),a=(l=f)+BA|0,a=U+((_=y+j|0)>>>0<y>>>0?a+1|0:a)|0,p=a=(s=_+p|0)>>>0<p>>>0?a+1|0:a,_=UI(s^T,a^d,32),a=(U=f)+w|0,d=w=_+AA|0,b=a=w>>>0<_>>>0?a+1|0:a,y=UI(y^w,a^l,40),a=wA+(AA=f)|0,l=y,a=p+((y=V+y|0)>>>0<V>>>0?a+1|0:a)|0,w=y+s|0,y=U,U=a=w>>>0<s>>>0?a+1|0:a,y=UI(_^w,y^a,48),a=(a=b)+(b=f)|0,d=_=y+d|0,W=a=_>>>0<y>>>0?a+1|0:a,s=r,a=G+IA|0,r=a=(_=k+u|0)>>>0<k>>>0?a+1|0:a,t=UI(_^t,a^H,1),a=(k=f)+X|0,a=S+((p=I+t|0)>>>0<t>>>0?a+1|0:a)|0,n=a=(p=p+n|0)>>>0<n>>>0?a+1|0:a,S=s=UI(s^p,a^L,32),G=a=f,u=t,a=a+M|0,a=(t=s+K|0)>>>0<s>>>0?a+1|0:a,H=t,t^=u,u=a,t=UI(t,a^k,40),a=pA+(K=f)|0,a=n+((s=t+EA|0)>>>0<EA>>>0?a+1|0:a)|0,M=(s=s+p|0)^S,S=a=s>>>0<p>>>0?a+1|0:a,p=UI(M,a^G,48),L=a=f,k=a,G=n=UI(q^v,O^$,1),M=a=f,v=r,a=a+tA|0,a=R+((r=n+z|0)>>>0<z>>>0?a+1|0:a)|0,a=(r=r+F|0)>>>0<F>>>0?a+1|0:a,F=N,N=a,n=UI(c^r,F^a,32),a=(T=f)+v|0,F=_=n+_|0,c=UI(c=_^G,(G=_>>>0<n>>>0?a+1|0:a)^M,40),a=sA+(M=f)|0,a=N+((_=c+gA|0)>>>0<gA>>>0?a+1|0:a)|0,N=_=_+r|0,v=a=_>>>0<r>>>0?a+1|0:a,r=a,a=m+wA|0,a=((R=V)>>>0>(V=J+V|0)>>>0?a+1|0:a)+r|0,wA=a=(_=_+V|0)>>>0<V>>>0?a+1|0:a,V=UI(_^p,a^k,32),a=(q=f)+W|0,k=UI((r=d+V|0)^J,(a=r>>>0<V>>>0?a+1|0:a)^m,40),R=a,a=pA+(O=f)|0,a=wA+((J=EA)>>>0>(EA=k+EA|0)>>>0?a+1|0:a)|0,a=(EA=_+EA|0)>>>0<_>>>0?a+1|0:a,_=V^EA,V=a,pA=UI(_,a^q,48);a=(wA=f)+R|0,r=a=(_=r+pA|0)>>>0<pA>>>0?a+1|0:a,a=UI(_^k,a^O,1),k=f,q=a,O=h,h=gA,R=sA,sA=UI(n^N,v^T,48),a=(n=f)+G|0,G=h,F=a=(gA=F+sA|0)>>>0<sA>>>0?a+1|0:a,h=UI(c^(N=gA),a^M,1),a=(M=f)+R|0,a=S+(h>>>0>(gA=G+h|0)>>>0?a+1|0:a)|0,c=a=(gA=s+gA|0)>>>0<s>>>0?a+1|0:a,y=UI(y^gA,a^b,32),a=(a=D)+(D=f)|0,S=s=y+O|0,G=a=s>>>0<y>>>0?a+1|0:a,s=UI(s^h,a^M,40),a=(M=f)+SA|0,a=(s>>>0>(iA=s+iA|0)>>>0?a+1|0:a)+c|0,c=a=(c=iA)>>>0>(iA=gA+iA|0)>>>0?a+1|0:a,y=UI(y^iA,a^D,48),a=(h=f)+G|0,D=gA=y+S|0,SA=a=gA>>>0<y>>>0?a+1|0:a,S=I,G=X,a=u+L|0,gA=a=(I=p+H|0)>>>0<p>>>0?a+1|0:a,X=UI(I^t,a^K,1),a=(p=f)+G|0,a=U+((t=S+X|0)>>>0<X>>>0?a+1|0:a)|0,e=UI((t=t+w|0)^e,(a=t>>>0<w>>>0?a+1|0:a)^x,32),S=a,U=oA,oA=X,a=(w=f)+F|0,F=p,p=a=(X=e+N|0)>>>0<e>>>0?a+1|0:a,oA=UI(X^oA,F^a,40),a=(N=f)+DA|0,a=((DA=U+oA|0)>>>0<oA>>>0?a+1|0:a)+S|0,S=DA,t=e^(DA=t+DA|0),e=a=S>>>0>DA>>>0?a+1|0:a,a=UI(t,a^w,48),u=t=f,w=a,F=j,S=BA,j=UI(d^l,W^AA,1),G=a=f,a=a+NA|0,a=Z+((j=(U=j)+cA|0)>>>0<cA>>>0?a+1|0:a)|0,cA=a=(j=Y+j|0)>>>0<Y>>>0?a+1|0:a,BA=UI(j^sA,a^n,32),a=(Y=f)+gA|0,gA=I=BA+I|0,sA=UI(I^U,(n=I>>>0<BA>>>0?a+1|0:a)^G,40),a=(a=S)+(S=f)|0,a=cA+((I=sA+F|0)>>>0<sA>>>0?a+1|0:a)|0,cA=I=I+j|0,NA=a=I>>>0<j>>>0?a+1|0:a,j=a,a=k+FA|0,a=((U=QA)>>>0>(QA=q+QA|0)>>>0?a+1|0:a)+j|0,FA=a=(j=I+QA|0)>>>0<QA>>>0?a+1|0:a,QA=UI(w^j,a^t,32),a=(U=f)+SA|0,t=I=QA+D|0,I=UI(I^q,(F=k)^(k=I>>>0<QA>>>0?a+1|0:a),40),a=GA+(G=f)|0,GA=I,a=FA+((I=_A+I|0)>>>0<_A>>>0?a+1|0:a)|0,a=(I=I+j|0)>>>0<j>>>0?a+1|0:a,FA=I,H=(o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24)^I,F=a,K=a^(o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24),j=UI(BA^cA,Y^NA,48),a=(cA=f)+n|0,n=I=j+gA|0,NA=a=I>>>0<j>>>0?a+1|0:a,BA=rA,a=p+u|0,rA=a=(I=w+X|0)>>>0<X>>>0?a+1|0:a,oA=UI(I^oA,a^N,1),a=(w=f)+yA|0,a=((BA=oA+BA|0)>>>0<oA>>>0?a+1|0:a)+c|0,BA=a=(yA=BA+iA|0)>>>0<BA>>>0?a+1|0:a,gA=UI(yA^pA,a^wA,32),a=(X=f)+NA|0,iA=a=(_A=gA+n|0)>>>0<gA>>>0?a+1|0:a,pA=gA,gA=UI(oA^_A,a^w,40),a=(c=f)+kA|0,a=(gA>>>0>(oA=gA+eA|0)>>>0?a+1|0:a)+BA|0,p=X,X=a=(yA=oA+yA|0)>>>0<oA>>>0?a+1|0:a,oA=UI(pA^(eA=yA),p^a,48),a=(w=f)+iA|0,a=(BA=oA+_A|0)>>>0<oA>>>0?a+1|0:a,_A=BA,BA^=H,C[A+8|0]=BA,C[A+9|0]=BA>>>8,C[A+10|0]=BA>>>16,C[A+11|0]=BA>>>24,iA=a,a^=K,C[A+12|0]=a,C[A+13|0]=a>>>8,C[A+14|0]=a>>>16,C[A+15|0]=a>>>24,yA=I,BA=rA,I=j,j=UI(s^D,M^SA,1),a=(kA=f)+Q|0,a=(j>>>0>(rA=j+g|0)>>>0?a+1|0:a)+V|0,EA=a=(D=rA)>>>0>(rA=EA+rA|0)>>>0?a+1|0:a,I=UI(I^rA,a^cA,32),a=(a=BA)+(BA=f)|0,cA=a=(yA=I+yA|0)>>>0<I>>>0?a+1|0:a,pA=I,yA=UI(j^(V=yA),a^kA,40),a=(s=f)+B|0,a=EA+((I=yA+fA|0)>>>0<yA>>>0?a+1|0:a)|0,a=(I=I+rA|0)>>>0<rA>>>0?a+1|0:a,EA=I,I^=pA,pA=a,rA=UI(I,a^BA,48),a=(D=f)+cA|0,V=I=rA+V|0,cA=I>>>0<rA>>>0?a+1|0:a,sA=I=UI(n^sA,S^NA,1),kA=a=f,a=a+P|0,a=e+((I=I+aA|0)>>>0<aA>>>0?a+1|0:a)|0,P=a=(j=I+DA|0)>>>0<DA>>>0?a+1|0:a,I=(BA=UI(y^j,a^h,32))+_|0,a=(_=f)+r|0,DA=I,I=(aA=UI(e=I^sA,(sA=I>>>0<BA>>>0?a+1|0:a)^kA,40))+z|0,a=(z=f)+tA|0,a=P+(I>>>0<aA>>>0?a+1|0:a)|0,a=(P=I+j|0)>>>0<j>>>0?a+1|0:a,j=P^KA^V,C[0|(I=A)]=j,C[I+1|0]=j>>>8,C[I+2|0]=j>>>16,C[I+3|0]=j>>>24,j=a^i^cA,C[I+4|0]=j,C[I+5|0]=j>>>8,C[I+6|0]=j>>>16,C[I+7|0]=j>>>24,j=(BA=UI(P^BA,a^_,48))+DA|0,a=(DA=f)+sA|0,a=(sA=j>>>0<BA>>>0?a+1|0:a)^(o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24)^pA,P=(o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24)^EA^j,C[I+16|0]=P,C[I+17|0]=P>>>8,C[I+18|0]=P>>>16,C[I+19|0]=P>>>24,C[I+20|0]=a,C[I+21|0]=a>>>8,C[I+22|0]=a>>>16,C[I+23|0]=a>>>24,I=UI(QA^FA,F^U,48),P=f,EA=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24,a=(o[A+32|0]|o[A+33|0]<<8|o[A+34|0]<<16|o[A+35|0]<<24)^UI(gA^_A,c^iA,1)^I,C[A+32|0]=a,C[A+33|0]=a>>>8,C[A+34|0]=a>>>16,C[A+35|0]=a>>>24,a=f^EA^P,C[A+36|0]=a,C[A+37|0]=a>>>8,C[A+38|0]=a>>>16,C[A+39|0]=a>>>24,a=k+P|0,a=(EA=I+t|0)>>>0<I>>>0?a+1|0:a,gA=(o[(I=A)+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24)^X^a,P=(o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24)^eA^EA,C[I+24|0]=P,C[I+25|0]=P>>>8,C[I+26|0]=P>>>16,C[I+27|0]=P>>>24,C[I+28|0]=gA,C[I+29|0]=gA>>>8,C[I+30|0]=gA>>>16,C[I+31|0]=gA>>>24,gA=o[I+44|0]|o[I+45|0]<<8|o[I+46|0]<<16|o[I+47|0]<<24,I=rA^(o[I+40|0]|o[I+41|0]<<8|o[I+42|0]<<16|o[I+43|0]<<24)^UI(j^aA,z^sA,1),C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,I=D^f^gA,C[A+44|0]=I,C[A+45|0]=I>>>8,C[A+46|0]=I>>>16,C[A+47|0]=I>>>24,j=o[A+60|0]|o[A+61|0]<<8|o[A+62|0]<<16|o[A+63|0]<<24,I=BA^(o[A+56|0]|o[A+57|0]<<8|o[A+58|0]<<16|o[A+59|0]<<24)^UI(V^yA,s^cA,1),C[A+56|0]=I,C[A+57|0]=I>>>8,C[A+58|0]=I>>>16,C[A+59|0]=I>>>24,I=DA^f^j,C[A+60|0]=I,C[A+61|0]=I>>>8,C[A+62|0]=I>>>16,C[A+63|0]=I>>>24,j=o[A+52|0]|o[A+53|0]<<8|o[A+54|0]<<16|o[A+55|0]<<24,I=oA^(o[A+48|0]|o[A+49|0]<<8|o[A+50|0]<<16|o[A+51|0]<<24)^UI(EA^GA,a^G,1),C[A+48|0]=I,C[A+49|0]=I>>>8,C[A+50|0]=I>>>16,C[A+51|0]=I>>>24,I=w^f^j,C[A+52|0]=I,C[A+53|0]=I>>>8,C[A+54|0]=I>>>16,C[A+55|0]=I>>>24}function w(A,I,g,B,Q,E,a){var _,c,t,r,e,y,h,D,p,w,n,k,F,N,G,M,K,U,b,H,Y,J,d,m,l,u,x,v,R,L,P,q,z,X,O,W,V,Z,T,$,AA,IA,gA,CA,BA,QA,iA,oA,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0,sA=0,hA=0,DA=0,fA=0,pA=0,wA=0,kA=0,FA=0,NA=0,GA=0,MA=0,KA=0,UA=0,bA=0,HA=0,YA=0,JA=0,dA=0,mA=0,lA=0,uA=0,xA=0,vA=0,RA=0,LA=0,PA=0,qA=0,zA=0,jA=0,XA=0,OA=0,WA=0,VA=0,ZA=0,TA=0,$A=0,AI=0,II=0;return s=t=s-560|0,SI(_A=t+352|0),a&&SA(_A,35600,34,0),FI(t+288|0,E,32,0),SA(rA=t+352|0,t+320|0,32,0),SA(rA,g,B,Q),j(rA,yA=t+224|0),hA=o[(aA=E)+32|0]|o[aA+33|0]<<8|o[aA+34|0]<<16|o[aA+35|0]<<24,DA=o[aA+36|0]|o[aA+37|0]<<8|o[aA+38|0]<<16|o[aA+39|0]<<24,cA=o[aA+40|0]|o[aA+41|0]<<8|o[aA+42|0]<<16|o[aA+43|0]<<24,EA=o[aA+44|0]|o[aA+45|0]<<8|o[aA+46|0]<<16|o[aA+47|0]<<24,_A=o[aA+48|0]|o[aA+49|0]<<8|o[aA+50|0]<<16|o[aA+51|0]<<24,E=o[aA+52|0]|o[aA+53|0]<<8|o[aA+54|0]<<16|o[aA+55|0]<<24,tA=o[aA+60|0]|o[aA+61|0]<<8|o[aA+62|0]<<16|o[aA+63|0]<<24,aA=o[aA+56|0]|o[aA+57|0]<<8|o[aA+58|0]<<16|o[aA+59|0]<<24,C[A+56|0]=aA,C[A+57|0]=aA>>>8,C[A+58|0]=aA>>>16,C[A+59|0]=aA>>>24,C[A+60|0]=tA,C[A+61|0]=tA>>>8,C[A+62|0]=tA>>>16,C[A+63|0]=tA>>>24,C[A+48|0]=_A,C[A+49|0]=_A>>>8,C[A+50|0]=_A>>>16,C[A+51|0]=_A>>>24,C[A+52|0]=E,C[A+53|0]=E>>>8,C[A+54|0]=E>>>16,C[A+55|0]=E>>>24,C[A+40|0]=cA,C[A+41|0]=cA>>>8,C[A+42|0]=cA>>>16,C[A+43|0]=cA>>>24,C[A+44|0]=EA,C[A+45|0]=EA>>>8,C[A+46|0]=EA>>>16,C[A+47|0]=EA>>>24,C[0|(E=A+32|0)]=hA,C[E+1|0]=hA>>>8,C[E+2|0]=hA>>>16,C[E+3|0]=hA>>>24,C[E+4|0]=DA,C[E+5|0]=DA>>>8,C[E+6|0]=DA>>>16,C[E+7|0]=DA>>>24,S(yA),nA(t,yA),tg(A,t),SI(rA),a&&SA(rA,35600,34,0),SA(a=t+352|0,A,64,0),SA(a,g,B,Q),j(a,eA=t+160|0),S(eA),C[t+288|0]=248&o[t+288|0],C[t+319|0]=63&o[t+319|0]|64,g=o[23+(A=c=t+288|0)|0],cA=Ig(r=o[A+21|0]|o[A+22|0]<<8|g<<16&2031616,0,e=(o[eA+28|0]|o[eA+29|0]<<8|o[eA+30|0]<<16|o[eA+31|0]<<24)>>>7|0,0),_A=f,g=(A=o[eA+27|0])>>>24|0,Q=A<<8|(EA=o[eA+23|0]|o[eA+24|0]<<8|o[eA+25|0]<<16|o[eA+26|0]<<24)>>>24,A=Ig(y=2097151&((3&(DA=(A=(B=o[eA+28|0])>>>16|0)|g))<<30|(g=(B<<=16)|Q)>>>2),0,h=(a=o[c+23|0]|o[c+24|0]<<8|o[c+25|0]<<16|o[c+26|0]<<24)>>>5&2097151,0),g=f+_A|0,B=A>>>0>(Q=A+cA|0)>>>0?g+1|0:g,A=Ig(D=(g=o[eA+23|0])<<16&2031616|o[eA+21|0]|o[eA+22|0]<<8,0,p=(o[c+28|0]|o[c+29|0]<<8|o[c+30|0]<<16|o[c+31|0]<<24)>>>7|0,0),B=f+B|0,_A=g=A+Q|0,Q=A>>>0>g>>>0?B+1|0:B,B=(A=o[c+27|0])>>>24|0,a=A<<8|a>>>24,A=Ig(w=2097151&((3&(B|=g=(A=o[c+28|0])>>>16|0))<<30|(g=(A<<=16)|a)>>>2),0,n=EA>>>5&2097151,0),g=f+Q|0,aA=B=A+_A|0,Q=A>>>0>B>>>0?g+1|0:g,EA=Ig(h,0,n,0),_A=f,g=(A=o[c+19|0])>>>24|0,a=A<<8|(GA=o[c+15|0]|o[c+16|0]<<8|o[c+17|0]<<16|o[c+18|0]<<24)>>>24,B=g,g=Ig(k=(7&(B|=g=(A=o[c+20|0])>>>16|0))<<29|(g=(A<<=16)|a)>>>3,DA=B>>>3|0,e,0),A=f+_A|0,A=g>>>0>(B=g+EA|0)>>>0?A+1|0:A,a=(g=Ig(r,0,y,0))+B|0,B=f+A|0,g=g>>>0>(EA=a)>>>0?B+1|0:B,B=(A=o[eA+19|0])>>>24|0,_A=A<<8|(kA=o[eA+15|0]|o[eA+16|0]<<8|o[eA+17|0]<<16|o[eA+18|0]<<24)>>>24,A=Ig(F=(7&(cA=(A=(a=o[eA+20|0])>>>16|0)|B))<<29|(B=(a<<=16)|_A)>>>3,N=cA>>>3|0,p,0),g=f+g|0,g=A>>>0>(B=A+EA|0)>>>0?g+1|0:g,A=Ig(D,0,w,0),g=f+g|0,hA=g=A>>>0>(yA=A+B|0)>>>0?g+1|0:g,fA=A=g-((yA>>>0<4293918720)-1|0)|0,B=(g=A>>>21|0)+Q|0,EA=B=(A=(2097151&A)<<11|(cA=yA- -1048576|0)>>>21)>>>0>(aA=A+aA|0)>>>0?B+1|0:B,wA=A=B-((aA>>>0<4293918720)-1|0)|0,tA=(2097151&A)<<11|(_A=aA- -1048576|0)>>>21,a=A>>>21|0,A=Ig(p,0,n,0),g=f,B=A,A=Ig(e,0,h,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,pA=(A=B)+(B=Ig(y,0,w,0))|0,A=f+g|0,A=B>>>0>pA>>>0?A+1|0:A,rA=pA-(g=-2097152&(B=pA- -1048576|0))|0,g=(A-((131071&(Q=A-((pA>>>0<4293918720)-1|0)|0))+(g>>>0>pA>>>0)|0)|0)+a|0,R=g=(A=tA+rA|0)>>>0<rA>>>0?g+1|0:g,L=A,rA=Ig(A,g,470296,0),tA=f,g=Ig(e,0,w,0),A=f,a=g,g=Ig(y,0,p,0),A=f+A|0,g=g>>>0>(a=a+g|0)>>>0?A+1|0:A,A=Q>>>21|0,Q=(2097151&Q)<<11|B>>>21,B=A+g|0,bA=Q=(B=Q>>>0>(a=Q+a|0)>>>0?B+1|0:B)-((a>>>0<4293918720)-1|0)|0,A=a-(g=-2097152&(UA=a- -1048576|0))|0,P=a=B-((131071&Q)+(g>>>0>a>>>0)|0)|0,q=g=aA-(B=-2097152&_A)|0,z=Q=EA-((B>>>0>aA>>>0)+wA|0)|0,X=A,B=Ig(A,a,666643,0),A=f+tA|0,A=B>>>0>(a=B+rA|0)>>>0?A+1|0:A,B=Ig(g,Q,654183,0),g=f+A|0,sA=Q=B+a|0,_A=B>>>0>Q>>>0?g+1|0:g,pA=yA-(A=-2097152&cA)|0,fA=hA-((A>>>0>yA>>>0)+fA|0)|0,g=Ig(y,0,k,DA),B=f,Q=(A=g)+(g=Ig(G=GA>>>6&2097151,0,e,0))|0,A=f+B|0,A=g>>>0>Q>>>0?A+1|0:A,g=Ig(h,0,D,0),B=f+A|0,B=g>>>0>(Q=g+Q|0)>>>0?B+1|0:B,A=Ig(r,0,n,0),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,B=Ig(p,0,M=kA>>>6&2097151,0),A=f+g|0,A=B>>>0>(Q=B+Q|0)>>>0?A+1|0:A,B=Ig(w,0,F,N),g=f+A|0,yA=Q=B+Q|0,a=B>>>0>Q>>>0?g+1|0:g,g=(A=o[c+14|0])>>>24|0,Q=A<<8|(hA=o[c+10|0]|o[c+11|0]<<8|o[c+12|0]<<16|o[c+13|0]<<24)>>>24,g=Ig(K=2097151&((1&(g|=A=(B=o[c+15|0])>>>16|0))<<31|(A=(B<<=16)|Q)>>>1),0,e,0),A=f,B=g,g=Ig(y,0,G,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,Q=(g=Ig(n,0,k,DA))+B|0,B=f+A|0,B=g>>>0>Q>>>0?B+1|0:B,A=Ig(h,0,F,N),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,A=Ig(r,0,D,0),g=f+g|0,cA=B=A+Q|0,Q=A>>>0>B>>>0?g+1|0:g,g=(A=o[eA+14|0])>>>24|0,EA=A<<8|(aA=o[eA+10|0]|o[eA+11|0]<<8|o[eA+12|0]<<16|o[eA+13|0]<<24)>>>24,B=g,g=(A=o[eA+15|0])>>>16|0,g=Ig(U=2097151&((1&(g|=B))<<31|(A=A<<16|EA)>>>1),0,p,0),A=f+Q|0,A=g>>>0>(B=g+cA|0)>>>0?A+1|0:A,g=Ig(w,0,M,0),A=f+A|0,EA=A=g>>>0>(cA=g+B|0)>>>0?A+1|0:A,HA=g=A-((cA>>>0<4293918720)-1|0)|0,B=(A=g>>>21|0)+a|0,tA=B=(g=(2097151&g)<<11|(rA=cA- -1048576|0)>>>21)>>>0>(wA=g+yA|0)>>>0?B+1|0:B,MA=g=B-((wA>>>0<4293918720)-1|0)|0,A=(A=g>>>21|0)+fA|0,O=A=(g=(B=(2097151&g)<<11|(yA=wA- -1048576|0)>>>21)+pA|0)>>>0<B>>>0?A+1|0:A,W=g,A=Ig(g,A,-997805,-1),g=f+_A|0,sA=B=A+sA|0,_A=A>>>0>B>>>0?g+1|0:g,pA=(dA=o[23+(_=t+224|0)|0]|o[_+24|0]<<8|o[_+25|0]<<16|o[_+26|0]<<24)>>>5&2097151,B=Ig(b=(A=o[c+2|0])<<16&2031616|o[0|c]|o[c+1|0]<<8,0,n,0),g=f,Q=(A=Ig(D,0,H=(a=o[c+2|0]|o[c+3|0]<<8|o[c+4|0]<<16|o[c+5|0]<<24)>>>5&2097151,0))+B|0,B=f+g|0,B=A>>>0>Q>>>0?B+1|0:B,A=Ig(Y=(o[c+7|0]|o[c+8|0]<<8|o[c+9|0]<<16|o[c+10|0]<<24)>>>7&2097151,0,M,0),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,B=Ig(U,0,J=hA>>>4&2097151,0),A=f+g|0,hA=Q=B+Q|0,Q=B>>>0>Q>>>0?A+1|0:A,a=(g=o[c+6|0])<<8|a>>>24,B=A=g>>>24|0,g=(A=o[c+7|0])>>>16|0,g=Ig(d=2097151&((3&(g|=B))<<30|(A=A<<16|a)>>>2),0,F,N),A=f+Q|0,A=g>>>0>(B=g+hA|0)>>>0?A+1|0:A,Q=(g=Ig(G,0,m=(o[eA+7|0]|o[eA+8|0]<<8|o[eA+9|0]<<16|o[eA+10|0]<<24)>>>7&2097151,0))+B|0,B=f+A|0,B=g>>>0>Q>>>0?B+1|0:B,g=Ig(K,0,KA=aA>>>4&2097151,0),A=f+B|0,a=g>>>0>(Q=g+Q|0)>>>0?A+1|0:A,A=(g=o[eA+6|0])>>>24|0,hA=g<<8|(aA=o[eA+2|0]|o[eA+3|0]<<8|o[eA+4|0]<<16|o[eA+5|0]<<24)>>>24,g=A,A=Ig(k,DA,l=2097151&((3&(g|=B=(A=o[eA+7|0])>>>16|0))<<30|(A=A<<16|hA)>>>2),0),g=f+a|0,g=A>>>0>(B=A+Q|0)>>>0?g+1|0:g,Q=B,B=Ig(u=(A=o[eA+2|0])<<16&2031616|o[0|eA]|o[eA+1|0]<<8,0,h,0),A=f+g|0,A=B>>>0>(Q=Q+B|0)>>>0?A+1|0:A,g=Ig(r,0,x=aA>>>5&2097151,0),A=f+A|0,A=g>>>0>(B=g+Q|0)>>>0?A+1|0:A,g=B,hA=B=B+pA|0,a=g=g>>>0>B>>>0?A+1|0:A,Q=o[_+21|0]|o[_+22|0]<<8,A=Ig(D,0,b,0),g=f,aA=(B=A)+(A=Ig(F,N,H,0))|0,B=f+g|0,B=A>>>0>aA>>>0?B+1|0:B,A=Ig(U,0,Y,0),g=f+B|0,g=A>>>0>(aA=A+aA|0)>>>0?g+1|0:g,A=Ig(J,0,KA,0),g=f+g|0,g=A>>>0>(B=A+aA|0)>>>0?g+1|0:g,aA=(A=B)+(B=Ig(M,0,d,0))|0,A=f+g|0,A=B>>>0>aA>>>0?A+1|0:A,g=Ig(G,0,l,0),A=f+A|0,A=g>>>0>(B=g+aA|0)>>>0?A+1|0:A,aA=(g=Ig(K,0,m,0))+B|0,B=f+A|0,B=g>>>0>aA>>>0?B+1|0:B,A=Ig(k,DA,x,0),g=f+B|0,g=A>>>0>(aA=A+aA|0)>>>0?g+1|0:g,A=Ig(r,0,u,0),g=f+g|0,A=A>>>0>(B=A+aA|0)>>>0?g+1|0:g,g=(g=B)>>>0>(B=B+Q|0)>>>0?A+1|0:A,Q=B,B=(A=o[_+23|0])<<16&2031616,A=g,B=A=B>>>0>(Q=Q+B|0)>>>0?A+1|0:A,eA=A=A-((Q>>>0<4293918720)-1|0)|0,g=(g=A>>>21|0)+a|0,A=(g=(a=hA=(A=(2097151&A)<<11|(aA=Q- -1048576|0)>>>21)+hA|0)>>>0<A>>>0?g+1|0:g)+_A|0,A=(_A=a+sA|0)>>>0<a>>>0?A+1|0:A,kA=a- -1048576|0,FA=a=g-((a>>>0<4293918720)-1|0)|0,NA=_A-(g=-2097152&kA)|0,YA=A-((g>>>0>_A>>>0)+a|0)|0,hA=Q,_A=B,A=Ig(q,z,470296,0),g=f,B=A,A=Ig(L,R,666643,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,Q=(A=B)+(B=Ig(W,O,654183,0))|0,A=f+g|0,GA=Q,a=B>>>0>Q>>>0?A+1|0:A,g=Ig(F,N,b,0),A=f,B=g,g=Ig(M,0,H,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,Q=(g=B)+(B=Ig(Y,0,KA,0))|0,g=f+A|0,g=B>>>0>Q>>>0?g+1|0:g,A=Ig(J,0,m,0),B=f+g|0,B=A>>>0>(Q=A+Q|0)>>>0?B+1|0:B,A=Ig(U,0,d,0),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,B=Ig(G,0,x,0),A=f+g|0,A=B>>>0>(Q=B+Q|0)>>>0?A+1|0:A,g=Ig(K,0,l,0),A=f+A|0,A=g>>>0>(B=g+Q|0)>>>0?A+1|0:A,Q=(g=B)+(B=Ig(k,DA,u,0))|0,g=f+A|0,pA=Q,B=B>>>0>Q>>>0?g+1|0:g,g=(A=o[_+19|0])>>>24|0,fA=A<<8|(sA=o[_+15|0]|o[_+16|0]<<8|o[_+17|0]<<16|o[_+18|0]<<24)>>>24,B=((JA=(A=(Q=o[_+20|0])>>>16|0)|g)>>>3|0)+B|0,pA=Q=(g=(7&JA)<<29|(g=(Q<<=16)|fA)>>>3)+pA|0,Q=g>>>0>Q>>>0?B+1|0:B,fA=sA>>>6&2097151,A=Ig(M,0,b,0),g=f,B=A,A=Ig(U,0,H,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,sA=(A=B)+(B=Ig(Y,0,m,0))|0,A=f+g|0,A=B>>>0>sA>>>0?A+1|0:A,B=Ig(J,0,l,0),g=f+A|0,g=B>>>0>(sA=B+sA|0)>>>0?g+1|0:g,B=Ig(d,0,KA,0),A=f+g|0,A=B>>>0>(sA=B+sA|0)>>>0?A+1|0:A,g=Ig(G,0,u,0),B=f+A|0,B=g>>>0>(sA=g+sA|0)>>>0?B+1|0:B,A=Ig(K,0,x,0),g=f+B|0,A=A>>>0>(sA=A+sA|0)>>>0?g+1|0:g,qA=A=(lA=sA+fA|0)>>>0<sA>>>0?A+1|0:A,ZA=A=A-((lA>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(LA=lA- -1048576|0)>>>21,A=(A>>>21|0)+Q|0,jA=A=B>>>0>(zA=B+pA|0)>>>0?A+1|0:A,TA=A=A-((zA>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(xA=zA- -1048576|0)>>>21,A=(A>>>21|0)+a|0,g=(B>>>0>(Q=B+GA|0)>>>0?A+1|0:A)+_A|0,_A=(B=Q+hA|0)-(A=-2097152&aA)|0,eA=A=(g=B>>>0<Q>>>0?g+1|0:g)-((A>>>0>B>>>0)+eA|0)|0,$A=A=A-((_A>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(vA=_A- -1048576|0)>>>21,A=(A>>21)+YA|0,Q=A=B>>>0>(a=B+NA|0)>>>0?A+1|0:A,VA=A=A-((a>>>0<4293918720)-1|0)|0,RA=(2097151&A)<<11|(GA=a- -1048576|0)>>>21,hA=A>>21,JA=wA-(A=-2097152&yA)|0,MA=tA-((A>>>0>wA>>>0)+MA|0)|0,A=Ig(e,0,p,0),PA=g=f,NA=A,sA=A- -1048576|0,uA=g=g-((A>>>0<4293918720)-1|0)|0,V=A=g>>>21|0,A=Ig(v=(2097151&g)<<11|sA>>>21,A,-683901,-1),g=f+EA|0,g=A>>>0>(B=A+cA|0)>>>0?g+1|0:g,yA=B-(A=-2097152&rA)|0,aA=g-((A>>>0>B>>>0)+HA|0)|0,g=Ig(n,0,G,0),A=f,B=g,g=Ig(e,0,J,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,g=Ig(y,0,K,0),A=f+A|0,A=g>>>0>(B=g+B|0)>>>0?A+1|0:A,EA=(g=B)+(B=Ig(D,0,k,DA))|0,g=f+A|0,g=B>>>0>EA>>>0?g+1|0:g,A=Ig(h,0,M,0),B=f+g|0,B=A>>>0>(EA=A+EA|0)>>>0?B+1|0:B,A=Ig(r,0,F,N),g=f+B|0,g=A>>>0>(EA=A+EA|0)>>>0?g+1|0:g,B=Ig(p,0,KA,0),A=f+g|0,A=B>>>0>(EA=B+EA|0)>>>0?A+1|0:A,g=Ig(w,0,U,0),A=f+A|0,cA=B=g+EA|0,EA=g>>>0>B>>>0?A+1|0:A,A=Ig(y,0,J,0),g=f,B=A,A=Ig(e,0,Y,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,tA=(A=Ig(D,0,G,0))+B|0,B=f+g|0,B=A>>>0>tA>>>0?B+1|0:B,A=Ig(n,0,K,0),g=f+B|0,g=A>>>0>(tA=A+tA|0)>>>0?g+1|0:g,B=Ig(k,DA,F,N),A=f+g|0,A=B>>>0>(tA=B+tA|0)>>>0?A+1|0:A,g=Ig(h,0,U,0),A=f+A|0,A=g>>>0>(B=g+tA|0)>>>0?A+1|0:A,tA=(g=B)+(B=Ig(r,0,M,0))|0,g=f+A|0,g=B>>>0>tA>>>0?g+1|0:g,A=Ig(p,0,m,0),B=f+g|0,B=A>>>0>(tA=A+tA|0)>>>0?B+1|0:B,A=Ig(w,0,KA,0),g=f+B|0,fA=g=A>>>0>(pA=A+tA|0)>>>0?g+1|0:g,OA=A=g-((pA>>>0<4293918720)-1|0)|0,g=(2097151&A)<<11|(wA=pA- -1048576|0)>>>21,A=(A>>>21|0)+EA|0,rA=A=g>>>0>(HA=g+cA|0)>>>0?A+1|0:A,mA=A=A-((HA>>>0<4293918720)-1|0)|0,g=(B=A>>>21|0)+aA|0,yA=g=(A=(2097151&A)<<11|(tA=HA- -1048576|0)>>>21)>>>0>(YA=A+yA|0)>>>0?g+1|0:g,XA=A=g-((YA>>>0<4293918720)-1|0)|0,EA=(2097151&A)<<11|(aA=YA- -1048576|0)>>>21,A=(A>>21)+MA|0,Z=A=(g=EA+JA|0)>>>0<EA>>>0?A+1|0:A,T=g,A=Ig(g,A,-683901,-1),g=f+hA|0,RA=B=A+RA|0,hA=A>>>0>B>>>0?g+1|0:g,A=Ig(y,0,b,0),g=f,B=A,A=Ig(n,0,H,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,EA=(A=B)+(B=Ig(F,N,Y,0))|0,A=f+g|0,A=B>>>0>EA>>>0?A+1|0:A,g=Ig(M,0,J,0),B=f+A|0,B=g>>>0>(EA=g+EA|0)>>>0?B+1|0:B,g=Ig(D,0,d,0),A=f+B|0,A=g>>>0>(EA=g+EA|0)>>>0?A+1|0:A,B=Ig(G,0,KA,0),g=f+A|0,g=B>>>0>(EA=B+EA|0)>>>0?g+1|0:g,A=Ig(K,0,U,0),g=f+g|0,g=A>>>0>(B=A+EA|0)>>>0?g+1|0:g,EA=(A=B)+(B=Ig(k,DA,m,0))|0,A=f+g|0,A=B>>>0>EA>>>0?A+1|0:A,g=Ig(h,0,x,0),B=f+A|0,B=g>>>0>(EA=g+EA|0)>>>0?B+1|0:B,g=Ig(r,0,l,0),A=f+B|0,A=g>>>0>(EA=g+EA|0)>>>0?A+1|0:A,B=Ig(w,0,u,0),g=f+A|0,MA=EA=B+EA|0,B=B>>>0>EA>>>0?g+1|0:g,g=(A=o[_+27|0])>>>24|0,cA=A<<8|dA>>>24,EA=2097151&((3&(g|=A=(EA=o[_+28|0])>>>16|0))<<30|(A=(EA<<=16)|cA)>>>2),g=B,cA=A=EA+MA|0,EA=A>>>0<EA>>>0?g+1|0:g,JA=Ig(X,P,470296,0),MA=f,A=(B=(2097151&bA)<<11|UA>>>21)+(NA-(g=-2097152&sA)|0)|0,g=PA-((524287&uA)+(g>>>0>NA>>>0)|0)+(bA>>>21)|0,$=g=A>>>0<B>>>0?g+1|0:g,AA=A,g=Ig(A,g,666643,0),A=f+MA|0,A=g>>>0>(B=g+JA|0)>>>0?A+1|0:A,sA=(g=Ig(L,R,654183,0))+B|0,B=f+A|0,B=g>>>0>sA>>>0?B+1|0:B,g=Ig(q,z,-997805,-1),A=f+B|0,A=g>>>0>(sA=g+sA|0)>>>0?A+1|0:A,B=Ig(W,O,136657,0),g=f+A|0,kA=(A=(2097151&FA)<<11|kA>>>21)+(sA=B+sA|0)|0,g=(FA>>>21|0)+(B>>>0>sA>>>0?g+1|0:g)|0,uA=sA=EA-((cA>>>0<4293918720)-1|0)|0,A=(A>>>0>kA>>>0?g+1|0:g)+EA|0,g=(EA=cA+kA|0)-(B=-2097152&(PA=cA- -1048576|0))|0,B=(A=(A=EA>>>0<kA>>>0?A+1|0:A)-((B>>>0>EA>>>0)+sA|0)|0)+hA|0,JA=EA=A-((g>>>0<4293918720)-1|0)|0,NA=(B=(cA=g+RA|0)>>>0<g>>>0?B+1|0:B)-(((g=-2097152&(MA=g- -1048576|0))>>>0>cA>>>0)+EA|0)|0,dA=A=cA-g|0,EA=a,a=Q,WA=YA-(A=-2097152&aA)|0,sA=yA-((A>>>0>YA>>>0)+XA|0)|0,A=Ig(AA,$,-683901,-1),g=f,Q=(B=A)+(A=Ig(v,V,136657,0))|0,B=f+g|0,g=rA+(A>>>0>Q>>>0?B+1|0:B)|0,tA=(B=Q+HA|0)-(A=-2097152&tA)|0,yA=(g=B>>>0<HA>>>0?g+1|0:g)-((A>>>0>B>>>0)+mA|0)|0,g=Ig(v,V,-997805,-1),A=f+fA|0,A=g>>>0>(B=g+pA|0)>>>0?A+1|0:A,Q=(g=Ig(AA,$,136657,0))+B|0,B=f+A|0,B=g>>>0>Q>>>0?B+1|0:B,A=Ig(X,P,-683901,-1),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,aA=Q-(A=-2097152&wA)|0,hA=g-((A>>>0>Q>>>0)+OA|0)|0,g=Ig(n,0,J,0),A=f,B=g,g=Ig(y,0,Y,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,Q=(g=Ig(e,0,d,0))+B|0,B=f+A|0,B=g>>>0>Q>>>0?B+1|0:B,A=Ig(F,N,G,0),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,B=Ig(D,0,K,0),A=f+g|0,A=B>>>0>(Q=B+Q|0)>>>0?A+1|0:A,B=Ig(k,DA,M,0),g=f+A|0,g=B>>>0>(Q=B+Q|0)>>>0?g+1|0:g,B=Ig(h,0,KA,0),A=f+g|0,A=B>>>0>(Q=B+Q|0)>>>0?A+1|0:A,g=Ig(r,0,U,0),B=f+A|0,B=g>>>0>(Q=g+Q|0)>>>0?B+1|0:B,A=Ig(p,0,l,0),g=f+B|0,g=A>>>0>(Q=A+Q|0)>>>0?g+1|0:g,B=Ig(w,0,m,0),A=f+g|0,cA=Q=B+Q|0,Q=B>>>0>Q>>>0?A+1|0:A,A=Ig(n,0,Y,0),g=f,B=A,A=Ig(e,0,H,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,rA=(A=B)+(B=Ig(D,0,J,0))|0,A=f+g|0,A=B>>>0>rA>>>0?A+1|0:A,g=Ig(y,0,d,0),B=f+A|0,B=g>>>0>(rA=g+rA|0)>>>0?B+1|0:B,A=Ig(G,0,M,0),g=f+B|0,g=A>>>0>(rA=A+rA|0)>>>0?g+1|0:g,B=Ig(F,N,K,0),A=f+g|0,A=B>>>0>(rA=B+rA|0)>>>0?A+1|0:A,B=Ig(k,DA,U,0),g=f+A|0,g=B>>>0>(rA=B+rA|0)>>>0?g+1|0:g,B=Ig(h,0,m,0),A=f+g|0,A=B>>>0>(rA=B+rA|0)>>>0?A+1|0:A,g=Ig(r,0,KA,0),B=f+A|0,B=g>>>0>(rA=g+rA|0)>>>0?B+1|0:B,rA=(A=Ig(p,0,x,0))+rA|0,g=f+B|0,B=Ig(w,0,l,0),A=f+(A>>>0>rA>>>0?g+1|0:g)|0,YA=A=B>>>0>(XA=B+rA|0)>>>0?A+1|0:A,gA=A=A-((XA>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(bA=XA- -1048576|0)>>>21,A=(A>>>21|0)+Q|0,UA=A=B>>>0>(RA=B+cA|0)>>>0?A+1|0:A,CA=A=A-((RA>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(FA=RA- -1048576|0)>>>21,A=(A>>>21|0)+hA|0,kA=A=B>>>0>(HA=B+aA|0)>>>0?A+1|0:A,BA=A=A-((HA>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(fA=HA- -1048576|0)>>>21,A=(A>>21)+yA|0,Q=A=B>>>0>(aA=B+tA|0)>>>0?A+1|0:A,yA=A=A-((aA>>>0<4293918720)-1|0)|0,hA=(2097151&A)<<11|(B=aA- -1048576|0)>>>21,A=(A>>21)+sA|0,OA=A=(cA=hA+WA|0)>>>0<hA>>>0?A+1|0:A,mA=cA,A=Ig(cA,A,-683901,-1),g=f,cA=A,A=Ig(T,Z,136657,0),g=f+g|0,A=(A>>>0>(cA=cA+A|0)>>>0?g+1|0:g)+a|0,AI=(a=EA+cA|0)-(g=-2097152&GA)|0,II=(A=a>>>0<cA>>>0?A+1|0:A)-((g>>>0>a>>>0)+VA|0)|0,hA=_A,cA=eA,_A=Ig(mA,OA,136657,0),a=f,WA=A=aA-(g=-2097152&B)|0,IA=Q=Q-((g>>>0>aA>>>0)+yA|0)|0,B=Ig(T,Z,-997805,-1),g=f+a|0,g=B>>>0>(_A=B+_A|0)>>>0?g+1|0:g,B=Ig(A,Q,-683901,-1),A=f+g|0,VA=Q=B+_A|0,EA=B>>>0>Q>>>0?A+1|0:A,A=Ig(W,O,470296,0),g=f,Q=(B=A)+(A=Ig(q,z,666643,0))|0,B=f+g|0,g=jA+(A>>>0>Q>>>0?B+1|0:B)|0,GA=A=Q+zA|0,a=g=A>>>0<zA>>>0?g+1|0:g,g=Ig(W,O,666643,0),A=f+qA|0,A=g>>>0>(B=g+lA|0)>>>0?A+1|0:A,tA=B-(g=-2097152&LA)|0,pA=A-((g>>>0>B>>>0)+ZA|0)|0,g=Ig(U,0,b,0),A=f,B=g,g=Ig(H,0,KA,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,Q=(g=B)+(B=Ig(Y,0,l,0))|0,g=f+A|0,g=B>>>0>Q>>>0?g+1|0:g,B=Ig(J,0,x,0),A=f+g|0,A=B>>>0>(Q=B+Q|0)>>>0?A+1|0:A,g=Ig(d,0,m,0),B=f+A|0,B=g>>>0>(Q=g+Q|0)>>>0?B+1|0:B,A=Ig(K,0,u,0),g=f+B|0,aA=Q=A+Q|0,Q=A>>>0>Q>>>0?g+1|0:g,g=(A=o[_+14|0])>>>24|0,_A=A<<8|(yA=o[_+10|0]|o[_+11|0]<<8|o[_+12|0]<<16|o[_+13|0]<<24)>>>24,g=2097151&((1&(g|=B=(A=o[_+15|0])>>>16|0))<<31|(A=_A|A<<16)>>>1),A=Q,aA=B=g+aA|0,Q=g>>>0>B>>>0?A+1|0:A,_A=yA>>>4&2097151,A=Ig(b,0,KA,0),g=f,B=A,A=Ig(H,0,m,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,A=Ig(Y,0,x,0),g=f+g|0,g=A>>>0>(B=A+B|0)>>>0?g+1|0:g,yA=(A=B)+(B=Ig(J,0,u,0))|0,A=f+g|0,A=B>>>0>yA>>>0?A+1|0:A,g=Ig(d,0,l,0),B=f+A|0,A=g>>>0>(yA=g+yA|0)>>>0?B+1|0:B,eA=A=(LA=_A+yA|0)>>>0<yA>>>0?A+1|0:A,QA=A=A-((LA>>>0<4293918720)-1|0)|0,g=(B=A>>>21|0)+Q|0,wA=g=(A=(2097151&A)<<11|(sA=LA- -1048576|0)>>>21)>>>0>(jA=A+aA|0)>>>0?g+1|0:g,iA=A=g-((jA>>>0<4293918720)-1|0)|0,g=(2097151&A)<<11|(rA=jA- -1048576|0)>>>21,A=(A>>>21|0)+pA|0,yA=A=g>>>0>(tA=g+tA|0)>>>0?A+1|0:A,oA=A=A-((tA>>>0<4293918720)-1|0)|0,g=(B=A>>21)+a|0,ZA=g=(g=(A=(2097151&A)<<11|(aA=tA- -1048576|0)>>>21)>>>0>(Q=A+GA|0)>>>0?g+1|0:g)-(((B=-2097152&xA)>>>0>Q>>>0)+TA|0)|0,xA=A=Q-B|0,_A=A- -1048576|0,TA=A=g-((A>>>0<4293918720)-1|0)|0,B=(g=A>>21)+EA|0,g=((A=(2097151&A)<<11|_A>>>21)>>>0>(Q=A+VA|0)>>>0?B+1|0:B)+cA|0,lA=g=(g=(A=Q)>>>0>(Q=Q+hA|0)>>>0?g+1|0:g)-(((B=-2097152&vA)>>>0>Q>>>0)+$A|0)|0,cA=A=Q-B|0,a=A- -1048576|0,qA=A=g-((A>>>0<4293918720)-1|0)|0,B=(g=A>>21)+II|0,vA=A=(B=(A=(2097151&A)<<11|a>>>21)>>>0>(EA=A+AI|0)>>>0?B+1|0:B)-((EA>>>0<4293918720)-1|0)|0,GA=dA- -1048576|0,pA=NA-((dA>>>0<4293918720)-1|0)|0,hA=(2097151&A)<<11|(Q=EA- -1048576|0)>>>21,A=(A>>21)+NA|0,$A=(dA=hA+dA|0)-(g=-2097152&GA)|0,AI=(hA>>>0>dA>>>0?A+1|0:A)-((g>>>0>dA>>>0)+pA|0)|0,II=EA-(A=-2097152&Q)|0,VA=B-((A>>>0>EA>>>0)+vA|0)|0,zA=cA-(A=-2097152&a)|0,dA=lA-((A>>>0>cA>>>0)+qA|0)|0,A=Ig(mA,OA,-997805,-1),g=f,B=A,A=Ig(T,Z,654183,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,Q=(A=B)+(B=Ig(WA,IA,136657,0))|0,A=f+g|0,g=ZA+(B>>>0>Q>>>0?A+1|0:A)|0,lA=(B=Q+xA|0)-(A=-2097152&_A)|0,qA=(g=B>>>0<xA>>>0?g+1|0:g)-((A>>>0>B>>>0)+TA|0)|0,xA=HA-(A=-2097152&fA)|0,NA=kA-((A>>>0>HA>>>0)+BA|0)|0,g=Ig(AA,$,-997805,-1),A=f,B=g,g=Ig(v,V,654183,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,Q=(g=B)+(B=Ig(X,P,136657,0))|0,g=f+A|0,g=B>>>0>Q>>>0?g+1|0:g,A=Ig(L,R,-683901,-1),B=f+g|0,g=UA+(A>>>0>(Q=A+Q|0)>>>0?B+1|0:B)|0,fA=(B=Q+RA|0)-(A=-2097152&FA)|0,kA=(g=B>>>0<RA>>>0?g+1|0:g)-((A>>>0>B>>>0)+CA|0)|0,g=Ig(AA,$,654183,0),A=f,B=g,g=Ig(v,V,470296,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,Q=(g=Ig(X,P,-997805,-1))+B|0,B=f+A|0,g=YA+(g>>>0>Q>>>0?B+1|0:B)|0,g=(A=Q+XA|0)>>>0<XA>>>0?g+1|0:g,B=A,A=Ig(L,R,136657,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,Q=(A=B)+(B=Ig(q,z,-683901,-1))|0,A=f+g|0,_A=Q-(g=-2097152&bA)|0,a=(B>>>0>Q>>>0?A+1|0:A)-((g>>>0>Q>>>0)+gA|0)|0,Q=(o[_+28|0]|o[_+29|0]<<8|o[_+30|0]<<16|o[_+31|0]<<24)>>>7|0,A=Ig(e,0,b,0),g=f,EA=(B=A)+(A=Ig(y,0,H,0))|0,B=f+g|0,B=A>>>0>EA>>>0?B+1|0:B,A=Ig(D,0,Y,0),g=f+B|0,g=A>>>0>(EA=A+EA|0)>>>0?g+1|0:g,B=Ig(F,N,J,0),A=f+g|0,A=B>>>0>(EA=B+EA|0)>>>0?A+1|0:A,B=Ig(n,0,d,0),g=f+A|0,g=B>>>0>(EA=B+EA|0)>>>0?g+1|0:g,B=Ig(G,0,U,0),A=f+g|0,A=B>>>0>(EA=B+EA|0)>>>0?A+1|0:A,g=Ig(M,0,K,0),B=f+A|0,B=g>>>0>(EA=g+EA|0)>>>0?B+1|0:B,A=Ig(k,DA,KA,0),g=f+B|0,g=A>>>0>(EA=A+EA|0)>>>0?g+1|0:g,B=Ig(h,0,l,0),A=f+g|0,A=B>>>0>(EA=B+EA|0)>>>0?A+1|0:A,B=Ig(r,0,m,0),g=f+A|0,g=B>>>0>(EA=B+EA|0)>>>0?g+1|0:g,B=Ig(p,0,u,0),A=f+g|0,A=B>>>0>(EA=B+EA|0)>>>0?A+1|0:A,g=Ig(w,0,x,0),B=f+A|0,g=B=g>>>0>(EA=g+EA|0)>>>0?B+1|0:B,UA=(B=(2097151&uA)<<11|PA>>>21)+(A=Q+EA|0)|0,A=(uA>>>21|0)+(g=A>>>0<EA>>>0?g+1|0:g)|0,hA=A=B>>>0>UA>>>0?A+1|0:A,vA=g=A-((UA>>>0<4293918720)-1|0)|0,B=(A=g>>>21|0)+a|0,cA=B=(g=(2097151&g)<<11|(DA=UA- -1048576|0)>>>21)>>>0>(FA=g+_A|0)>>>0?B+1|0:B,PA=g=B-((FA>>>0<4293918720)-1|0)|0,A=(A=g>>21)+kA|0,_A=A=(g=(2097151&g)<<11|(EA=FA- -1048576|0)>>>21)>>>0>(fA=g+fA|0)>>>0?A+1|0:A,bA=g=A-((fA>>>0<4293918720)-1|0)|0,B=(A=g>>21)+NA|0,uA=B=(g=(Q=(2097151&g)<<11|(a=fA- -1048576|0)>>>21)+xA|0)>>>0<Q>>>0?B+1|0:B,NA=g,A=Ig(g,B,-683901,-1),g=f+qA|0,kA=B=A+lA|0,Q=A>>>0>B>>>0?g+1|0:g,g=Ig(T,Z,470296,0),A=f+yA|0,A=g>>>0>(tA=g+tA|0)>>>0?A+1|0:A,g=Ig(mA,OA,654183,0),A=f+(A-(((B=-2097152&aA)>>>0>tA>>>0)+oA|0)|0)|0,A=g>>>0>(aA=g+(tA-B|0)|0)>>>0?A+1|0:A,B=Ig(WA,IA,-997805,-1),g=f+A|0,g=B>>>0>(aA=B+aA|0)>>>0?g+1|0:g,YA=B=fA-(A=-2097152&a)|0,KA=_A=_A-((A>>>0>fA>>>0)+bA|0)|0,aA=(a=Ig(NA,uA,136657,0))+aA|0,A=f+g|0,B=Ig(B,_A,-683901,-1),g=f+(a>>>0>aA>>>0?A+1|0:A)|0,_A=g=B>>>0>(yA=B+aA|0)>>>0?g+1|0:g,bA=A=g-((yA>>>0<4293918720)-1|0)|0,g=(2097151&A)<<11|(a=yA- -1048576|0)>>>21,A=(A>>21)+Q|0,fA=g=(A=g>>>0>(aA=g+kA|0)>>>0?A+1|0:A)-((aA>>>0<4293918720)-1|0)|0,tA=(2097151&g)<<11|(Q=aA- -1048576|0)>>>21,g=(g>>21)+dA|0,zA=kA=tA+zA|0,kA=tA>>>0>kA>>>0?g+1|0:g,dA=aA-(g=-2097152&Q)|0,XA=A-((g>>>0>aA>>>0)+fA|0)|0,lA=yA-(A=-2097152&a)|0,qA=_A-((A>>>0>yA>>>0)+bA|0)|0,A=Ig(T,Z,666643,0),B=wA+f|0,B=(a=A+jA|0)>>>0<jA>>>0?B+1|0:B,Q=(A=Ig(mA,OA,470296,0))+(a-(g=-2097152&rA)|0)|0,g=f+(B-((g>>>0>a>>>0)+iA|0)|0)|0,g=A>>>0>Q>>>0?g+1|0:g,B=Ig(WA,IA,654183,0),A=f+g|0,aA=Q=B+Q|0,Q=B>>>0>Q>>>0?A+1|0:A,a=FA-(A=-2097152&EA)|0,_A=cA-((A>>>0>FA>>>0)+PA|0)|0,A=Ig(AA,$,470296,0),g=f,B=A,A=Ig(v,V,666643,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,A=Ig(X,P,654183,0),g=f+g|0,g=A>>>0>(B=A+B|0)>>>0?g+1|0:g,EA=(A=B)+(B=Ig(L,R,-997805,-1))|0,A=f+g|0,A=B>>>0>EA>>>0?A+1|0:A,g=Ig(q,z,136657,0),A=f+A|0,A=g>>>0>(B=g+EA|0)>>>0?A+1|0:A,EA=(g=Ig(W,O,-683901,-1))+B|0,B=f+A|0,g=hA+(g>>>0>EA>>>0?B+1|0:B)|0,FA=(B=(2097151&JA)<<11|MA>>>21)+((EA=EA+UA|0)-(A=-2097152&DA)|0)|0,A=((g=EA>>>0<UA>>>0?g+1|0:g)-((A>>>0>EA>>>0)+vA|0)|0)+(JA>>21)|0,fA=A=B>>>0>FA>>>0?A+1|0:A,xA=A=A-((FA>>>0<4293918720)-1|0)|0,g=a,a=(2097151&A)<<11|(rA=FA- -1048576|0)>>>21,A=(A>>21)+_A|0,bA=A=(B=g+a|0)>>>0<a>>>0?A+1|0:A,UA=B,A=Ig(B,A,-683901,-1),g=f+Q|0,g=A>>>0>(B=A+aA|0)>>>0?g+1|0:g,Q=(A=B)+(B=Ig(NA,uA,-997805,-1))|0,A=f+g|0,A=B>>>0>Q>>>0?A+1|0:A,g=Ig(YA,KA,136657,0),B=f+A|0,MA=Q=g+Q|0,cA=g>>>0>Q>>>0?B+1|0:B,aA=LA-(A=-2097152&sA)|0,hA=eA-((A>>>0>LA>>>0)+QA|0)|0,g=Ig(b,0,m,0),A=f,B=g,g=Ig(H,0,l,0),A=f+A|0,A=g>>>0>(B=B+g|0)>>>0?A+1|0:A,g=Ig(Y,0,u,0),A=f+A|0,A=g>>>0>(B=g+B|0)>>>0?A+1|0:A,Q=(g=Ig(d,0,x,0))+B|0,B=f+A|0,g=g>>>0>Q>>>0?B+1|0:B,DA=B=(A=(o[_+7|0]|o[_+8|0]<<8|o[_+9|0]<<16|o[_+10|0]<<24)>>>7&2097151)+Q|0,EA=A>>>0>B>>>0?g+1|0:g,A=Ig(b,0,l,0),g=f,B=A,A=Ig(H,0,x,0),g=f+g|0,g=A>>>0>(B=B+A|0)>>>0?g+1|0:g,Q=(A=B)+(B=Ig(d,0,u,0))|0,A=f+g|0,_A=Q,Q=B>>>0>Q>>>0?A+1|0:A,A=(g=o[_+6|0])>>>24|0,a=g<<8|(vA=o[_+2|0]|o[_+3|0]<<8|o[_+4|0]<<16|o[_+5|0]<<24)>>>24,B=A,g=(A=o[_+7|0])>>>16|0,g|=B,B=Q,a=B=(A=2097151&((3&g)<<30|(A=A<<16|a)>>>2))>>>0>(_A=A+_A|0)>>>0?B+1|0:B,RA=A=B-((_A>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(wA=_A- -1048576|0)>>>21,A=(A>>>21|0)+EA|0,tA=A=B>>>0>(eA=B+DA|0)>>>0?A+1|0:A,PA=A=A-((eA>>>0<4293918720)-1|0)|0,B=(g=A>>>21|0)+hA|0,B=(A=(2097151&A)<<11|(yA=eA- -1048576|0)>>>21)>>>0>(Q=A+aA|0)>>>0?B+1|0:B,g=Ig(mA,OA,666643,0),A=f+B|0,A=g>>>0>(Q=g+Q|0)>>>0?A+1|0:A,g=Ig(WA,IA,470296,0),A=f+A|0,A=g>>>0>(B=g+Q|0)>>>0?A+1|0:A,Q=(g=B)+(B=Ig(UA,bA,136657,0))|0,g=f+A|0,g=B>>>0>Q>>>0?g+1|0:g,A=Ig(NA,uA,654183,0),g=f+g|0,g=A>>>0>(B=A+Q|0)>>>0?g+1|0:g,aA=(A=Ig(YA,KA,-997805,-1))+B|0,B=f+g|0,hA=B=A>>>0>aA>>>0?B+1|0:B,JA=A=B-((aA>>>0<4293918720)-1|0)|0,B=(2097151&A)<<11|(DA=aA- -1048576|0)>>>21,A=(A>>21)+cA|0,MA=B=(A=B>>>0>(Q=B+MA|0)>>>0?A+1|0:A)-((Q>>>0<4293918720)-1|0)|0,EA=(2097151&B)<<11|(cA=Q- -1048576|0)>>>21,B=(B>>21)+qA|0,HA=sA=EA+lA|0,sA=EA>>>0>sA>>>0?B+1|0:B,EA=Q,g=A,Q=(FA-(A=-2097152&rA)|0)+(rA=(2097151&pA)<<11|GA>>>21)|0,A=(fA-((A>>>0>FA>>>0)+xA|0)|0)+(pA>>21)|0,pA=A=Q>>>0<rA>>>0?A+1|0:A,lA=A=A-((Q>>>0<4293918720)-1|0)|0,FA=B=A>>21,A=Ig(mA=(2097151&A)<<11|(fA=Q- -1048576|0)>>>21,B,-683901,-1),g=f+g|0,g=A>>>0>(B=A+EA|0)>>>0?g+1|0:g,qA=B-(A=-2097152&cA)|0,LA=g-((A>>>0>B>>>0)+MA|0)|0,g=Ig(mA,FA,136657,0),A=f+hA|0,A=g>>>0>(B=g+aA|0)>>>0?A+1|0:A,jA=B-(g=-2097152&DA)|0,JA=A-((g>>>0>B>>>0)+JA|0)|0,g=Ig(WA,IA,666643,0),A=f+(tA-(((B=-2097152&yA)>>>0>eA>>>0)+PA|0)|0)|0,A=g>>>0>(EA=g+(eA-B|0)|0)>>>0?A+1|0:A,B=Ig(UA,bA,-997805,-1),g=f+A|0,g=B>>>0>(EA=B+EA|0)>>>0?g+1|0:g,A=Ig(NA,uA,470296,0),B=f+g|0,B=A>>>0>(EA=A+EA|0)>>>0?B+1|0:B,g=Ig(YA,KA,654183,0),A=f+B|0,MA=EA=g+EA|0,hA=g>>>0>EA>>>0?A+1|0:A,B=vA>>>5&2097151,A=Ig(b,0,x,0),g=f,cA=A,A=Ig(H,0,u,0),g=f+g|0,A=A>>>0>(EA=cA+A|0)>>>0?g+1|0:g,cA=g=B+EA|0,B=A=g>>>0<EA>>>0?A+1|0:A,eA=(g=Ig(b,0,u,0))+(A=(A=o[_+2|0])<<16&2031616|o[0|_]|o[_+1|0]<<8)|0,g=f,rA=g=A>>>0>eA>>>0?g+1|0:g,xA=g=g-((eA>>>0<4293918720)-1|0)|0,A=(A=g>>>21|0)+B|0,yA=A=(g=(2097151&g)<<11|(tA=eA- -1048576|0)>>>21)>>>0>(GA=g+cA|0)>>>0?A+1|0:A,vA=g=A-((GA>>>0<4293918720)-1|0)|0,B=(2097151&g)<<11|(aA=GA- -1048576|0)>>>21,g=(g>>>21|0)+a|0,g=B>>>0>(EA=B+_A|0)>>>0?g+1|0:g,B=Ig(UA,bA,654183,0),A=f+(g-(((a=-2097152&wA)>>>0>EA>>>0)+RA|0)|0)|0,A=B>>>0>(_A=B+(EA-a|0)|0)>>>0?A+1|0:A,g=Ig(NA,uA,666643,0),A=f+A|0,A=g>>>0>(B=g+_A|0)>>>0?A+1|0:A,DA=(g=B)+(B=Ig(YA,KA,470296,0))|0,g=f+A|0,cA=g=B>>>0>DA>>>0?g+1|0:g,PA=g=g-((DA>>>0<4293918720)-1|0)|0,B=(A=g>>21)+hA|0,wA=g=(B=(g=(2097151&g)<<11|(EA=DA- -1048576|0)>>>21)>>>0>(_A=g+MA|0)>>>0?B+1|0:B)-((_A>>>0<4293918720)-1|0)|0,hA=(2097151&g)<<11|(a=_A- -1048576|0)>>>21,g=(g>>21)+JA|0,uA=NA=hA+jA|0,hA=hA>>>0>NA>>>0?g+1|0:g,A=Ig(mA,FA,-997805,-1),g=f+B|0,g=A>>>0>(_A=A+_A|0)>>>0?g+1|0:g,JA=_A-(A=-2097152&a)|0,MA=g-((A>>>0>_A>>>0)+wA|0)|0,g=Ig(mA,FA,654183,0),A=f+cA|0,A=g>>>0>(B=g+DA|0)>>>0?A+1|0:A,NA=B-(g=-2097152&EA)|0,wA=A-((g>>>0>B>>>0)+PA|0)|0,A=Ig(UA,bA,470296,0),B=f+(yA-(((g=-2097152&aA)>>>0>GA>>>0)+vA|0)|0)|0,B=A>>>0>(a=A+(GA-g|0)|0)>>>0?B+1|0:B,g=Ig(YA,KA,666643,0),A=f+B|0,_A=a=g+a|0,B=g>>>0>a>>>0?A+1|0:A,g=Ig(UA,bA,666643,0),A=f+(rA-((4095&xA)+((a=-2097152&tA)>>>0>eA>>>0)|0)|0)|0,DA=A=g>>>0>(aA=g+(eA-a|0)|0)>>>0?A+1|0:A,rA=A=A-((aA>>>0<4293918720)-1|0)|0,a=(2097151&A)<<11|(cA=aA- -1048576|0)>>>21,A=(A>>21)+B|0,B=A=a>>>0>(EA=a+_A|0)>>>0?A+1|0:A,tA=A=A-((EA>>>0<4293918720)-1|0)|0,a=(2097151&A)<<11|(_A=EA- -1048576|0)>>>21,A=(A>>21)+wA|0,a=a>>>0>(yA=a+NA|0)>>>0?A+1|0:A,A=Ig(mA,FA,470296,0),B=f+B|0,B=A>>>0>(g=A+EA|0)>>>0?B+1|0:B,EA=g-(A=-2097152&_A)|0,_A=B-((A>>>0>g>>>0)+tA|0)|0,g=Ig(mA,FA,666643,0),A=f+(DA-(((B=-2097152&cA)>>>0>aA>>>0)+rA|0)|0)|0,g=(B=(A=g>>>0>(wA=g+(aA-B|0)|0)>>>0?A+1|0:A)>>21)+_A|0,A=(A=(g=(A=(2097151&A)<<11|wA>>>21)>>>0>(rA=A+EA|0)>>>0?g+1|0:g)>>21)+a|0,g=(g=(A=(g=(2097151&g)<<11|rA>>>21)>>>0>(tA=g+yA|0)>>>0?A+1|0:A)>>21)+MA|0,B=(A=(g=(A=(2097151&A)<<11|tA>>>21)>>>0>(a=A+JA|0)>>>0?g+1|0:g)>>21)+hA|0,A=(g=(B=(g=(2097151&g)<<11|a>>>21)>>>0>(yA=g+uA|0)>>>0?B+1|0:B)>>21)+LA|0,g=(B=(A=(B=(2097151&B)<<11|yA>>>21)>>>0>(aA=B+qA|0)>>>0?A+1|0:A)>>21)+sA|0,A=(A=(g=(A=(2097151&A)<<11|aA>>>21)>>>0>(hA=A+HA|0)>>>0?g+1|0:g)>>21)+XA|0,g=(g=(A=(g=(2097151&g)<<11|hA>>>21)>>>0>(DA=g+dA|0)>>>0?A+1|0:A)>>21)+kA|0,B=(A=(g=(A=(2097151&A)<<11|DA>>>21)>>>0>(cA=A+zA|0)>>>0?g+1|0:g)>>21)+VA|0,A=(g=(B=(g=(2097151&g)<<11|cA>>>21)>>>0>(EA=g+II|0)>>>0?B+1|0:B)>>21)+AI|0,fA=(sA=Q-(g=-2097152&fA)|0)+((2097151&(A=(B=(2097151&B)<<11|EA>>>21)>>>0>(_A=B+$A|0)>>>0?A+1|0:A))<<11|_A>>>21)|0,A=(pA-((g>>>0>Q>>>0)+lA|0)|0)+(A>>21)|0,pA=g=(A=sA>>>0>fA>>>0?A+1|0:A)>>21,wA=(A=Ig(kA=(2097151&A)<<11|fA>>>21,g,666643,0))+(g=2097151&wA)|0,A=f,Q=A=g>>>0>wA>>>0?A+1|0:A,C[0|E]=wA,C[E+1|0]=(255&A)<<24|wA>>>8,A=2097151&rA,g=Ig(kA,pA,470296,0)+A|0,B=f,A=(Q>>21)+(A>>>0>g>>>0?B+1|0:B)|0,A=(rA=(sA=(2097151&Q)<<11|wA>>>21)+g|0)>>>0<sA>>>0?A+1|0:A,C[E+4|0]=(2047&A)<<21|rA>>>11,g=A,B=rA,C[E+3|0]=(7&A)<<29|B>>>3,C[E+2|0]=31&((65535&Q)<<16|wA>>>16)|B<<5,Q=2097151&tA,tA=Ig(kA,pA,654183,0)+Q|0,A=f,rA=(2097151&g)<<11|B>>>21,g=(g>>21)+(Q=Q>>>0>tA>>>0?A+1|0:A)|0,A=g=(tA=rA+tA|0)>>>0<rA>>>0?g+1|0:g,C[E+6|0]=(63&A)<<26|tA>>>6,Q=tA,tA=0,C[E+5|0]=tA<<13|(1572864&B)>>>19|Q<<2,B=2097151&a,a=Ig(kA,pA,-997805,-1)+B|0,g=f,g=B>>>0>a>>>0?g+1|0:g,tA=(2097151&(B=A))<<11|Q>>>21,B=(A>>=21)+g|0,B=(a=tA+a|0)>>>0<tA>>>0?B+1|0:B,C[E+9|0]=(511&B)<<23|a>>>9,C[E+8|0]=(1&B)<<31|a>>>1,g=0,C[E+7|0]=g<<18|(2080768&Q)>>>14|a<<7,g=2097151&yA,Q=Ig(kA,pA,136657,0)+g|0,A=f,A=g>>>0>Q>>>0?A+1|0:A,yA=(2097151&(g=B))<<11|a>>>21,g=A+(B=g>>21)|0,g=(Q=yA+Q|0)>>>0<yA>>>0?g+1|0:g,C[E+12|0]=(4095&g)<<20|Q>>>12,B=Q,C[E+11|0]=(15&g)<<28|B>>>4,Q=0,C[E+10|0]=Q<<15|(1966080&a)>>>17|B<<4,Q=2097151&aA,a=Ig(kA,pA,-683901,-1)+Q|0,A=f,A=Q>>>0>a>>>0?A+1|0:A,Q=g,g=A+(g>>=21)|0,g=(Q=(aA=a)+(a=(2097151&Q)<<11|B>>>21)|0)>>>0<a>>>0?g+1|0:g,C[E+14|0]=(127&g)<<25|Q>>>7,a=0,C[E+13|0]=a<<12|(1048576&B)>>>20|Q<<1,A=g>>21,B=(g=(2097151&g)<<11|Q>>>21)>>>0>(a=g+(2097151&hA)|0)>>>0?A+1|0:A,C[E+17|0]=(1023&B)<<22|a>>>10,C[E+16|0]=(3&B)<<30|a>>>2,g=0,C[E+15|0]=g<<17|(2064384&Q)>>>15|a<<6,A=B>>21,A=(g=(2097151&B)<<11|a>>>21)>>>0>(B=g+(2097151&DA)|0)>>>0?A+1|0:A,C[E+20|0]=(8191&A)<<19|B>>>13,C[E+19|0]=(31&A)<<27|B>>>5,Q=(g=2097151&cA)+(cA=(2097151&A)<<11|B>>>21)|0,g=A>>21,g=Q>>>0<cA>>>0?g+1|0:g,cA=Q,C[E+21|0]=Q,DA=0,C[E+18|0]=DA<<14|(1835008&a)>>>18|B<<3,C[E+22|0]=(255&g)<<24|Q>>>8,B=g>>21,B=(Q=(a=(2097151&g)<<11|Q>>>21)+(2097151&EA)|0)>>>0<a>>>0?B+1|0:B,C[E+25|0]=(2047&B)<<21|Q>>>11,C[E+24|0]=(7&B)<<29|Q>>>3,C[E+23|0]=31&((65535&g)<<16|cA>>>16)|Q<<5,A=B>>21,A=(g=(2097151&B)<<11|Q>>>21)>>>0>(B=g+(2097151&_A)|0)>>>0?A+1|0:A,C[E+27|0]=(63&A)<<26|B>>>6,a=0,C[E+26|0]=a<<13|(1572864&Q)>>>19|B<<2,g=A,A>>=21,g=(Q=(_A=(2097151&g)<<11|B>>>21)+(a=2097151&fA)|0)>>>0<a>>>0?A+1|0:A,C[E+31|0]=(131071&g)<<15|Q>>>17,A=Q,C[E+30|0]=(511&g)<<23|A>>>9,Q=0,C[E+28|0]=Q<<18|(2080768&B)>>>14|A<<7,C[E+29|0]=_A+fA>>>1,XC(c,64),XC(_,64),I&&(i[I>>2]=64,i[I+4>>2]=0),s=t+560|0,0}function n(A,I,g){var B,Q,i,E,a,_,c,t,r,e,y,s,h,D,p,w,n,k,F,S,N,G,M,K,U,b,H,Y,J,d,m,l,u,x,v,R,L,P,q,z,j,X,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0,BA=0,QA=0,iA=0,oA=0,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0,sA=0,hA=0,DA=0,fA=0,pA=0,wA=0,nA=0,kA=0,FA=0,SA=0,NA=0,GA=0,MA=0,KA=0,UA=0,bA=0,HA=0,YA=0,JA=0,dA=0,mA=0,lA=0,uA=0,xA=0,vA=0,RA=0,LA=0,PA=0,qA=0;Z=Ig(B=(W=o[g+2|0])<<16&2031616|o[0|g]|o[g+1|0]<<8,0,Q=(QA=o[I+23|0]|o[I+24|0]<<8|o[I+25|0]<<16|o[I+26|0]<<24)>>>5&2097151,0),V=f,O=Ig(i=(W=o[I+23|0])<<16&2031616|o[I+21|0]|o[I+22|0]<<8,0,E=(T=o[g+2|0]|o[g+3|0]<<8|o[g+4|0]<<16|o[g+5|0]<<24)>>>5&2097151,0),W=f+V|0,W=O>>>0>(Z=O+Z|0)>>>0?W+1|0:W,V=Ig(a=(o[g+7|0]|o[g+8|0]<<8|o[g+9|0]<<16|o[g+10|0]<<24)>>>7&2097151,0,_=(aA=o[I+15|0]|o[I+16|0]<<8|o[I+17|0]<<16|o[I+18|0]<<24)>>>6&2097151,0),O=f+W|0,IA=Z=V+Z|0,V=V>>>0>Z>>>0?O+1|0:O,O=(W=o[I+14|0])>>>24|0,$=W<<8|(gA=o[I+10|0]|o[I+11|0]<<8|o[I+12|0]<<16|o[I+13|0]<<24)>>>24,O=Ig(c=2097151&((1&(CA=(W=O)|(O=(Z=o[I+15|0])>>>16|0)))<<31|(W=(Z<<=16)|$)>>>1),0,t=(AA=o[g+10|0]|o[g+11|0]<<8|o[g+12|0]<<16|o[g+13|0]<<24)>>>4&2097151,0),V=f+V|0,CA=W=O+IA|0,Z=W>>>0<O>>>0?V+1|0:V,V=(O=o[g+6|0])>>>24|0,IA=O<<8|T>>>24,T=r=2097151&((3&(V|=O=(W=o[g+7|0])>>>16|0))<<30|(W=IA|W<<16)>>>2),IA=0,$=(W=o[I+19|0])<<8|aA>>>24,V=O=W>>>24|0,W=(O=o[I+20|0])>>>16|0,G=V=(W|=V)>>>3|0,O=Ig(T,IA,e=(7&W)<<29|(O=O<<16|$)>>>3,V),W=f+Z|0,W=O>>>0>($=O+CA|0)>>>0?W+1|0:W,V=Ig(y=(T=o[g+15|0]|o[g+16|0]<<8|o[g+17|0]<<16|o[g+18|0]<<24)>>>6&2097151,0,s=(o[I+7|0]|o[I+8|0]<<8|o[I+9|0]<<16|o[I+10|0]<<24)>>>7&2097151,0),O=f+W|0,IA=Z=V+$|0,Z=V>>>0>Z>>>0?O+1|0:O,$=(W=o[g+14|0])<<8|AA>>>24,W=O=W>>>24|0,V=(O=o[g+15|0])>>>16|0,O=Ig(h=2097151&((1&(V|=W))<<31|(W=(O<<=16)|$)>>>1),0,D=gA>>>4&2097151,0),W=f+Z|0,AA=V=O+IA|0,IA=O>>>0>V>>>0?W+1|0:W,W=(O=o[g+19|0])>>>24|0,Z=O<<8|T>>>24,V=(O=o[g+20|0])>>>16|0,p=(7&(V|=W))<<29|(O=Z|O<<16)>>>3,eA=W=V>>>3|0,Z=W,W=(O=o[I+6|0])>>>24|0,T=O<<8|(CA=o[I+2|0]|o[I+3|0]<<8|o[I+4|0]<<16|o[I+5|0]<<24)>>>24,V=W,W=(O=o[I+7|0])>>>16|0,W=Ig(p,Z,w=2097151&((3&(W|=V))<<30|(O=O<<16|T)>>>2),0),O=f+IA|0,V=W>>>0>(Z=W+AA|0)>>>0?O+1|0:O,W=Ig(n=(W=o[g+23|0])<<16&2031616|o[g+21|0]|o[g+22|0]<<8,0,k=CA>>>5&2097151,0),O=f+V|0,V=W>>>0>(Z=W+Z|0)>>>0?O+1|0:O,O=Ig(F=(W=o[I+2|0])<<16&2031616|o[0|I]|o[I+1|0]<<8,0,hA=(CA=o[g+23|0]|o[g+24|0]<<8|o[g+25|0]<<16|o[g+26|0]<<24)>>>5&2097151,0),W=f+V|0,T=Z=O+Z|0,IA=O>>>0>Z>>>0?W+1|0:W,O=Ig(i,0,B,0),W=f,Z=(V=O)+(O=Ig(e,G,E,0))|0,V=f+W|0,V=O>>>0>Z>>>0?V+1|0:V,O=Ig(a,0,c,0),W=f+V|0,W=O>>>0>(Z=O+Z|0)>>>0?W+1|0:W,V=Ig(t,0,D,0),O=f+W|0,O=V>>>0>(Z=V+Z|0)>>>0?O+1|0:O,W=Ig(_,0,r,0),O=f+O|0,O=W>>>0>(V=W+Z|0)>>>0?O+1|0:O,Z=(W=V)+(V=Ig(y,0,w,0))|0,W=f+O|0,W=V>>>0>Z>>>0?W+1|0:W,O=Ig(h,0,s,0),V=f+W|0,V=O>>>0>(Z=O+Z|0)>>>0?V+1|0:V,Z=(O=Ig(p,eA,k,0))+Z|0,W=f+V|0,V=Ig(n,0,F,0),O=f+(O>>>0>Z>>>0?W+1|0:W)|0,Z=O=V>>>0>($=V+Z|0)>>>0?O+1|0:O,yA=O=O-(($>>>0<4293918720)-1|0)|0,W=(W=O>>>21|0)+IA|0,oA=V=(W=(O=(2097151&O)<<11|(cA=$- -1048576|0)>>>21)>>>0>(T=O+T|0)>>>0?W+1|0:W)-((T>>>0<4293918720)-1|0)|0,iA=T-(O=-2097152&(EA=T- -1048576|0))|0,BA=W-((O>>>0>T>>>0)+V|0)|0,IA=(W=o[g+27|0])<<8|CA>>>24,V=O=W>>>24|0,T=Ig(S=2097151&((3&(V|=W=(O=o[g+28|0])>>>16|0))<<30|(W=(O<<=16)|IA)>>>2),0,DA=(o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24)>>>7|0,0),IA=f,W=(O=o[I+27|0])>>>24|0,I=Ig(N=2097151&((3&(W|=V=(I=o[I+28|0])>>>16|0))<<30|(O=O<<8|QA>>>24|I<<16)>>>2),0,fA=(o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24)>>>7|0,0),O=f+IA|0,O=I>>>0>(g=I+T|0)>>>0?O+1|0:O,V=g,I=Ig(Q,0,fA,0),g=f,IA=(W=I)+(I=Ig(hA,0,DA,0))|0,W=f+g|0,W=I>>>0>IA>>>0?W+1|0:W,I=Ig(S,0,N,0),W=f+W|0,IA=W=I>>>0>(CA=I+IA|0)>>>0?W+1|0:W,AA=I=W-((CA>>>0<4293918720)-1|0)|0,W=I>>>21|0,T=(I=(2097151&I)<<11|(g=CA- -1048576|0)>>>21)+V|0,V=W+O|0,aA=W=(V=I>>>0>T>>>0?V+1|0:V)-((T>>>0<4293918720)-1|0)|0,I=T-(O=-2097152&(gA=T- -1048576|0))|0,K=O=V-((131071&W)+(O>>>0>T>>>0)|0)|0,U=I,I=Ig(I,O,666643,0),O=f+BA|0,nA=W=I+iA|0,T=I>>>0>W>>>0?O+1|0:O,iA=CA-(I=-2097152&g)|0,tA=IA-((131071&AA)+(I>>>0>CA>>>0)|0)|0,I=Ig(n,0,DA,0),g=f,W=(O=I)+(I=Ig(hA,0,N,0))|0,O=f+g|0,O=I>>>0>W>>>0?O+1|0:O,g=(I=Ig(i,0,fA,0))+W|0,W=f+O|0,W=I>>>0>g>>>0?W+1|0:W,I=Ig(Q,0,S,0),O=f+W|0,AA=g=I+g|0,I=I>>>0>g>>>0?O+1|0:O,g=Ig(Q,0,hA,0),O=f,V=(W=g)+(g=Ig(p,eA,DA,0))|0,W=f+O|0,W=g>>>0>V>>>0?W+1|0:W,O=(g=Ig(n,0,N,0))+V|0,V=f+W|0,V=g>>>0>O>>>0?V+1|0:V,W=(g=Ig(e,G,fA,0))+O|0,O=f+V|0,O=g>>>0>W>>>0?O+1|0:O,BA=(g=Ig(i,0,S,0))+W|0,W=f+O|0,CA=W=g>>>0>BA>>>0?W+1|0:W,_A=g=W-((BA>>>0<4293918720)-1|0)|0,W=I+(O=g>>>21|0)|0,g=W=(g=(2097151&g)<<11|(IA=BA- -1048576|0)>>>21)>>>0>(AA=g+AA|0)>>>0?W+1|0:W,QA=W=W-((AA>>>0<4293918720)-1|0)|0,O=iA,iA=(2097151&W)<<11|(I=AA- -1048576|0)>>>21,W=(W>>>21|0)+tA|0,b=W=(V=O+iA|0)>>>0<iA>>>0?W+1|0:W,H=I=AA-(O=-2097152&I)|0,Y=AA=g-((O>>>0>AA>>>0)+QA|0)|0,J=V,g=Ig(V,W,470296,0),O=f+T|0,O=g>>>0>(W=g+nA|0)>>>0?O+1|0:O,I=Ig(I,AA,654183,0),V=f+O|0,tA=g=I+W|0,T=I>>>0>g>>>0?V+1|0:V,QA=BA-(I=-2097152&IA)|0,BA=CA-((I>>>0>BA>>>0)+_A|0)|0,I=Ig(p,eA,N,0),g=f,W=(O=I)+(I=Ig(y,0,DA,0))|0,O=f+g|0,O=I>>>0>W>>>0?O+1|0:O,g=(I=Ig(i,0,hA,0))+W|0,W=f+O|0,W=I>>>0>g>>>0?W+1|0:W,I=Ig(Q,0,n,0),V=f+W|0,V=I>>>0>(g=I+g|0)>>>0?V+1|0:V,I=Ig(_,0,fA,0),O=f+V|0,O=I>>>0>(g=I+g|0)>>>0?O+1|0:O,I=Ig(e,G,S,0),W=f+O|0,CA=g=I+g|0,IA=I>>>0>g>>>0?W+1|0:W,I=Ig(h,0,DA,0),g=f,W=(O=I)+(I=Ig(y,0,N,0))|0,O=f+g|0,O=I>>>0>W>>>0?O+1|0:O,g=(I=Ig(Q,0,p,eA))+W|0,W=f+O|0,W=I>>>0>g>>>0?W+1|0:W,I=Ig(e,G,hA,0),V=f+W|0,V=I>>>0>(g=I+g|0)>>>0?V+1|0:V,I=Ig(i,0,n,0),O=f+V|0,O=I>>>0>(g=I+g|0)>>>0?O+1|0:O,I=Ig(c,0,fA,0),W=f+O|0,W=I>>>0>(g=I+g|0)>>>0?W+1|0:W,I=Ig(_,0,S,0),O=f+W|0,I=O=I>>>0>(g=I+g|0)>>>0?O+1|0:O,sA=O=O-((g>>>0<4293918720)-1|0)|0,V=(W=O>>>21|0)+IA|0,iA=V=(O=(2097151&O)<<11|(_A=g- -1048576|0)>>>21)>>>0>(pA=O+CA|0)>>>0?V+1|0:V,NA=O=V-((pA>>>0<4293918720)-1|0)|0,IA=(2097151&O)<<11|(AA=pA- -1048576|0)>>>21,O=(O>>>21|0)+BA|0,d=O=(V=IA+QA|0)>>>0<IA>>>0?O+1|0:O,m=V,O=Ig(V,O,-997805,-1),W=f+T|0,BA=V=O+tA|0,T=O>>>0>V>>>0?W+1|0:W,IA=$,$=Z,O=Ig(B,0,e,G),W=f,Z=(V=O)+(O=Ig(_,0,E,0))|0,V=f+W|0,V=O>>>0>Z>>>0?V+1|0:V,W=Ig(a,0,D,0),O=f+V|0,O=W>>>0>(Z=W+Z|0)>>>0?O+1|0:O,V=Ig(t,0,s,0),W=f+O|0,W=V>>>0>(Z=V+Z|0)>>>0?W+1|0:W,V=Ig(c,0,r,0),O=f+W|0,O=V>>>0>(Z=V+Z|0)>>>0?O+1|0:O,V=Ig(y,0,k,0),W=f+O|0,W=V>>>0>(Z=V+Z|0)>>>0?W+1|0:W,O=Ig(h,0,w,0),V=f+W|0,V=O>>>0>(Z=O+Z|0)>>>0?V+1|0:V,W=Ig(p,eA,F,0),O=f+V|0,CA=Z=W+Z|0,Z=W>>>0>Z>>>0?O+1|0:O,O=Ig(B,0,_,0),W=f,V=O,O=Ig(E,0,c,0),W=f+W|0,W=O>>>0>(V=V+O|0)>>>0?W+1|0:W,QA=(O=V)+(V=Ig(a,0,s,0))|0,O=f+W|0,O=V>>>0>QA>>>0?O+1|0:O,V=Ig(t,0,w,0),W=f+O|0,W=V>>>0>(QA=V+QA|0)>>>0?W+1|0:W,O=Ig(r,0,D,0),V=f+W|0,V=O>>>0>(QA=O+QA|0)>>>0?V+1|0:V,QA=(W=Ig(y,0,F,0))+QA|0,O=f+V|0,V=Ig(h,0,k,0),W=f+(W>>>0>QA>>>0?O+1|0:O)|0,KA=W=V>>>0>(MA=V+QA|0)>>>0?W+1|0:W,xA=W=W-((MA>>>0<4293918720)-1|0)|0,V=(2097151&W)<<11|(GA=MA- -1048576|0)>>>21,W=(W>>>21|0)+Z|0,rA=W=V>>>0>(UA=V+CA|0)>>>0?W+1|0:W,vA=W=W-((UA>>>0<4293918720)-1|0)|0,V=(2097151&W)<<11|(nA=UA- -1048576|0)>>>21,W=(W>>>21|0)+$|0,W=V>>>0>(IA=V+IA|0)>>>0?W+1|0:W,O=Ig(J,b,666643,0),W=f+(W-(((V=-2097152&cA)>>>0>IA>>>0)+yA|0)|0)|0,W=O>>>0>(Z=O+(IA-V|0)|0)>>>0?W+1|0:W,V=Ig(H,Y,470296,0),O=f+W|0,O=V>>>0>(Z=V+Z|0)>>>0?O+1|0:O,V=Ig(m,d,654183,0),W=f+O|0,tA=W=V>>>0>(kA=V+Z|0)>>>0?W+1|0:W,mA=W=W-((kA>>>0<4293918720)-1|0)|0,O=(O=W>>21)+T|0,BA=O=(W=(2097151&W)<<11|(QA=kA- -1048576|0)>>>21)>>>0>(yA=W+BA|0)>>>0?O+1|0:O,bA=W=O-((yA>>>0<4293918720)-1|0)|0,JA=(2097151&W)<<11|(cA=yA- -1048576|0)>>>21,CA=W>>21,O=Ig(B,0,N,0),W=f,V=O,O=Ig(Q,0,E,0),W=f+W|0,W=O>>>0>(V=V+O|0)>>>0?W+1|0:W,Z=(O=Ig(a,0,e,G))+V|0,V=f+W|0,V=O>>>0>Z>>>0?V+1|0:V,W=Ig(_,0,t,0),O=f+V|0,O=W>>>0>(Z=W+Z|0)>>>0?O+1|0:O,V=Ig(i,0,r,0),W=f+O|0,W=V>>>0>(Z=V+Z|0)>>>0?W+1|0:W,V=Ig(y,0,D,0),O=f+W|0,O=V>>>0>(Z=V+Z|0)>>>0?O+1|0:O,V=Ig(h,0,c,0),W=f+O|0,W=V>>>0>(Z=V+Z|0)>>>0?W+1|0:W,O=Ig(s,0,p,eA),V=f+W|0,V=O>>>0>(Z=O+Z|0)>>>0?V+1|0:V,W=Ig(k,0,hA,0),O=f+V|0,O=W>>>0>(Z=W+Z|0)>>>0?O+1|0:O,V=Ig(w,0,n,0),W=f+O|0,W=V>>>0>(Z=V+Z|0)>>>0?W+1|0:W,V=(O=Z)+(Z=Ig(S,0,F,0))|0,O=f+W|0,T=V,IA=V>>>0<Z>>>0?O+1|0:O,FA=Ig(DA,0,fA,0),$=V=(SA=f)-((FA>>>0<4293918720)-1|0)|0,W=FA-(O=-2097152&(Z=FA- -1048576|0))|0,O=(aA>>>21|0)+(O=SA-((524287&V)+(O>>>0>FA>>>0)|0)|0)|0,l=O=(V=(gA=(2097151&aA)<<11|gA>>>21)+W|0)>>>0<gA>>>0?O+1|0:O,u=V,W=(2097151&oA)<<11|EA>>>21,gA=Ig(V,O,666643,0)+W|0,O=f+(oA>>>21|0)|0,O=W>>>0>gA>>>0?O+1|0:O,V=Ig(U,K,470296,0),W=f+O|0,W=(V>>>0>(gA=V+gA|0)>>>0?W+1|0:W)+IA|0,W=(O=T+gA|0)>>>0<gA>>>0?W+1|0:W,gA=(V=Ig(J,b,654183,0))+O|0,O=f+W|0,dA=T- -1048576|0,FA=IA=IA-((T>>>0<4293918720)-1|0)|0,W=Ig(H,Y,-997805,-1),V=f+(V>>>0>gA>>>0?O+1|0:O)|0,V=W>>>0>(T=W+gA|0)>>>0?V+1|0:V,EA=(O=Ig(m,d,136657,0))+(T-(W=-2097152&dA)|0)|0,W=f+(V-((W>>>0>T>>>0)+IA|0)|0)|0,V=(aA=O>>>0>EA>>>0?W+1|0:W)+CA|0,HA=O=EA+JA|0,gA=V=O>>>0<EA>>>0?V+1|0:V,SA=pA-(O=-2097152&AA)|0,pA=iA-((O>>>0>pA>>>0)+NA|0)|0,x=V=$>>>21|0,W=(O=g)+(g=Ig(M=(2097151&$)<<11|Z>>>21,V,-683901,-1))|0,O=f+I|0,iA=W-(I=-2097152&_A)|0,oA=(g>>>0>W>>>0?O+1|0:O)-((I>>>0>W>>>0)+sA|0)|0,I=Ig(Q,0,y,0),g=f,O=I,I=Ig(t,0,DA,0),W=f+g|0,W=I>>>0>(O=O+I|0)>>>0?W+1|0:W,I=Ig(h,0,N,0),V=f+W|0,V=I>>>0>(g=I+O|0)>>>0?V+1|0:V,I=Ig(i,0,p,eA),O=f+V|0,O=I>>>0>(g=I+g|0)>>>0?O+1|0:O,I=Ig(_,0,hA,0),O=f+O|0,O=I>>>0>(g=I+g|0)>>>0?O+1|0:O,I=Ig(e,G,n,0),W=f+O|0,W=I>>>0>(g=I+g|0)>>>0?W+1|0:W,I=Ig(D,0,fA,0),W=f+W|0,W=I>>>0>(g=I+g|0)>>>0?W+1|0:W,I=Ig(c,0,S,0),V=f+W|0,Z=g=I+g|0,I=I>>>0>g>>>0?V+1|0:V,g=Ig(t,0,N,0),O=f,W=g,g=Ig(a,0,DA,0),O=f+O|0,O=g>>>0>(W=W+g|0)>>>0?O+1|0:O,g=Ig(i,0,y,0),O=f+O|0,O=g>>>0>(W=g+W|0)>>>0?O+1|0:O,V=(g=Ig(Q,0,h,0))+W|0,W=f+O|0,W=g>>>0>V>>>0?W+1|0:W,g=Ig(e,G,p,eA),W=f+W|0,W=g>>>0>(O=g+V|0)>>>0?W+1|0:W,g=Ig(c,0,hA,0),V=f+W|0,V=g>>>0>(O=g+O|0)>>>0?V+1|0:V,W=(g=Ig(_,0,n,0))+O|0,O=f+V|0,O=g>>>0>W>>>0?O+1|0:O,g=Ig(s,0,fA,0),O=f+O|0,O=g>>>0>(W=g+W|0)>>>0?O+1|0:O,AA=(g=Ig(D,0,S,0))+W|0,W=f+O|0,CA=W=g>>>0>AA>>>0?W+1|0:W,YA=g=W-((AA>>>0<4293918720)-1|0)|0,V=I+(O=g>>>21|0)|0,IA=V=(g=(2097151&g)<<11|(T=AA- -1048576|0)>>>21)>>>0>(_A=g+Z|0)>>>0?V+1|0:V,sA=I=V-((_A>>>0<4293918720)-1|0)|0,W=(O=I>>>21|0)+oA|0,Z=W=(I=(2097151&I)<<11|($=_A- -1048576|0)>>>21)>>>0>(iA=I+iA|0)>>>0?W+1|0:W,oA=g=W-((iA>>>0<4293918720)-1|0)|0,V=(O=g>>21)+pA|0,v=V=(g=(W=(2097151&g)<<11|(I=iA- -1048576|0)>>>21)+SA|0)>>>0<W>>>0?V+1|0:V,NA=EA- -1048576|0,JA=W=aA-((EA>>>0<4293918720)-1|0)|0,lA=g,g=Ig(g,V,-683901,-1),O=f+gA|0,SA=O=(W=(O=g>>>0>(V=g+HA|0)>>>0?O+1|0:O)-(((g=-2097152&NA)>>>0>V>>>0)+W|0)|0)-(((gA=V-g|0)>>>0<4293918720)-1|0)|0,P=gA-(g=-2097152&(pA=gA- -1048576|0))|0,RA=W-((g>>>0>gA>>>0)+O|0)|0,g=Ig(lA,v,136657,0),W=f+(BA-(((O=-2097152&cA)>>>0>yA>>>0)+bA|0)|0)|0,uA=V=g+(yA-O|0)|0,g=g>>>0>V>>>0?W+1|0:W,wA=iA-(I&=-2097152)|0,cA=Z-((I>>>0>iA>>>0)+oA|0)|0,I=Ig(u,l,-683901,-1),O=f,W=I,I=Ig(M,x,136657,0),O=f+O|0,W=IA+(I>>>0>(V=W+I|0)>>>0?O+1|0:O)|0,aA=(O=V+_A|0)-(I=-2097152&$)|0,gA=(W=O>>>0<_A>>>0?W+1|0:W)-((I>>>0>O>>>0)+sA|0)|0,I=Ig(M,x,-997805,-1),O=f+CA|0,O=I>>>0>(W=I+AA|0)>>>0?O+1|0:O,I=Ig(u,l,136657,0),O=f+O|0,O=I>>>0>(W=I+W|0)>>>0?O+1|0:O,V=(I=Ig(U,K,-683901,-1))+W|0,W=f+O|0,W=I>>>0>V>>>0?W+1|0:W,IA=V-(I=-2097152&T)|0,$=W-((I>>>0>V>>>0)+YA|0)|0,I=Ig(Q,0,t,0),O=f,V=(W=I)+(I=Ig(a,0,N,0))|0,W=f+O|0,W=I>>>0>V>>>0?W+1|0:W,I=Ig(r,0,DA,0),O=f+W|0,O=I>>>0>(V=I+V|0)>>>0?O+1|0:O,I=Ig(y,0,e,G),W=f+O|0,W=I>>>0>(V=I+V|0)>>>0?W+1|0:W,I=Ig(i,0,h,0),O=f+W|0,O=I>>>0>(V=I+V|0)>>>0?O+1|0:O,W=(I=Ig(_,0,p,eA))+V|0,V=f+O|0,V=I>>>0>W>>>0?V+1|0:V,O=(I=Ig(D,0,hA,0))+W|0,W=f+V|0,W=I>>>0>O>>>0?W+1|0:W,V=(I=Ig(c,0,n,0))+O|0,O=f+W|0,O=I>>>0>V>>>0?O+1|0:O,I=Ig(w,0,fA,0),W=f+O|0,W=I>>>0>(V=I+V|0)>>>0?W+1|0:W,I=Ig(s,0,S,0),O=f+W|0,Z=V=I+V|0,I=I>>>0>V>>>0?O+1|0:O,O=Ig(Q,0,a,0),W=f,T=(V=O)+(O=Ig(E,0,DA,0))|0,V=f+W|0,V=O>>>0>T>>>0?V+1|0:V,O=Ig(i,0,t,0),W=f+V|0,W=O>>>0>(T=O+T|0)>>>0?W+1|0:W,V=Ig(r,0,N,0),O=f+W|0,O=V>>>0>(T=V+T|0)>>>0?O+1|0:O,V=Ig(_,0,y,0),W=f+O|0,W=V>>>0>(T=V+T|0)>>>0?W+1|0:W,V=Ig(e,G,h,0),O=f+W|0,O=V>>>0>(T=V+T|0)>>>0?O+1|0:O,W=Ig(c,0,p,eA),V=f+O|0,V=W>>>0>(T=W+T|0)>>>0?V+1|0:V,O=Ig(s,0,hA,0),W=f+V|0,W=O>>>0>(T=O+T|0)>>>0?W+1|0:W,V=Ig(D,0,n,0),O=f+W|0,O=V>>>0>(T=V+T|0)>>>0?O+1|0:O,V=Ig(k,0,fA,0),W=f+O|0,W=V>>>0>(T=V+T|0)>>>0?W+1|0:W,V=Ig(w,0,S,0),O=f+W|0,yA=O=V>>>0>(bA=V+T|0)>>>0?O+1|0:O,q=O=O-((bA>>>0<4293918720)-1|0)|0,W=I+(W=O>>>21|0)|0,EA=W=(O=(2097151&O)<<11|(oA=bA- -1048576|0)>>>21)>>>0>(HA=O+Z|0)>>>0?W+1|0:W,z=I=W-((HA>>>0<4293918720)-1|0)|0,O=(W=I>>>21|0)+$|0,iA=O=(I=(2097151&I)<<11|(_A=HA- -1048576|0)>>>21)>>>0>(YA=I+IA|0)>>>0?O+1|0:O,j=I=O-((YA>>>0<4293918720)-1|0)|0,W=(W=I>>21)+gA|0,CA=W=(I=(2097151&I)<<11|(BA=YA- -1048576|0)>>>21)>>>0>(sA=I+aA|0)>>>0?W+1|0:W,LA=I=W-((sA>>>0<4293918720)-1|0)|0,O=(W=I>>21)+cA|0,R=O=(I=(V=(2097151&I)<<11|(Z=sA- -1048576|0)>>>21)+wA|0)>>>0<V>>>0?O+1|0:O,wA=I,I=Ig(I,O,-683901,-1),V=f+g|0,PA=O=I+uA|0,T=I>>>0>O>>>0?V+1|0:V,qA=kA-(I=-2097152&QA)|0,mA=tA-((I>>>0>kA>>>0)+mA|0)|0,I=Ig(H,Y,666643,0),O=f+(rA-(((g=-2097152&nA)>>>0>UA>>>0)+vA|0)|0)|0,O=I>>>0>(W=I+(UA-g|0)|0)>>>0?O+1|0:O,g=(I=Ig(m,d,470296,0))+W|0,W=f+O|0,nA=g,g=I>>>0>g>>>0?W+1|0:W,AA=MA-(I=-2097152&GA)|0,IA=KA-((I>>>0>MA>>>0)+xA|0)|0,I=Ig(B,0,c,0),O=f,W=I,I=Ig(E,0,D,0),V=f+O|0,V=I>>>0>(W=W+I|0)>>>0?V+1|0:V,I=Ig(a,0,w,0),O=f+V|0,O=I>>>0>(W=I+W|0)>>>0?O+1|0:O,V=(I=Ig(t,0,k,0))+W|0,W=f+O|0,W=I>>>0>V>>>0?W+1|0:W,I=Ig(r,0,s,0),O=f+W|0,O=I>>>0>(V=I+V|0)>>>0?O+1|0:O,I=Ig(h,0,F,0),W=f+O|0,$=V=I+V|0,I=I>>>0>V>>>0?W+1|0:W,O=Ig(B,0,D,0),W=f,gA=(V=O)+(O=Ig(E,0,s,0))|0,V=f+W|0,V=O>>>0>gA>>>0?V+1|0:V,W=Ig(a,0,k,0),O=f+V|0,O=W>>>0>(gA=W+gA|0)>>>0?O+1|0:O,V=Ig(t,0,F,0),W=f+O|0,W=V>>>0>(gA=V+gA|0)>>>0?W+1|0:W,V=Ig(r,0,w,0),O=f+W|0,tA=O=V>>>0>(kA=V+gA|0)>>>0?O+1|0:O,X=O=O-((kA>>>0<4293918720)-1|0)|0,V=I+(W=O>>>21|0)|0,cA=V=(O=(2097151&O)<<11|(QA=kA- -1048576|0)>>>21)>>>0>(KA=O+$|0)>>>0?V+1|0:V,xA=I=V-((KA>>>0<4293918720)-1|0)|0,O=(W=I>>>21|0)+IA|0,O=(I=(2097151&I)<<11|(aA=KA- -1048576|0)>>>21)>>>0>(V=I+AA|0)>>>0?O+1|0:O,I=Ig(m,d,666643,0),W=f+O|0,gA=W=I>>>0>(GA=I+V|0)>>>0?W+1|0:W,vA=I=W-((GA>>>0<4293918720)-1|0)|0,O=g+(O=I>>21)|0,IA=O=(I=(2097151&I)<<11|(AA=GA- -1048576|0)>>>21)>>>0>(rA=I+nA|0)>>>0?O+1|0:O,uA=I=O-((rA>>>0<4293918720)-1|0)|0,W=(O=I>>21)+mA|0,W=(I=(2097151&I)<<11|($=rA- -1048576|0)>>>21)>>>0>(g=I+qA|0)>>>0?W+1|0:W,I=Ig(lA,v,-997805,-1),V=f+W|0,V=I>>>0>(O=I+g|0)>>>0?V+1|0:V,UA=I=sA-(g=-2097152&Z)|0,L=W=CA-((g>>>0>sA>>>0)+LA|0)|0,Z=(g=Ig(wA,R,136657,0))+O|0,O=f+V|0,I=Ig(I,W,-683901,-1),O=f+(g>>>0>Z>>>0?O+1|0:O)|0,Z=O=I>>>0>(CA=I+Z|0)>>>0?O+1|0:O,MA=I=O-((CA>>>0<4293918720)-1|0)|0,O=(W=I>>21)+T|0,g=O=(T=nA=(I=(2097151&I)<<11|(V=CA- -1048576|0)>>>21)+PA|0)>>>0<I>>>0?O+1|0:O,sA=O=O-((T>>>0<4293918720)-1|0)|0,nA=(2097151&O)<<11|(I=T- -1048576|0)>>>21,O=(O>>21)+RA|0,RA=mA=nA+P|0,nA=nA>>>0>mA>>>0?O+1|0:O,LA=T-(I&=-2097152)|0,PA=g-((I>>>0>T>>>0)+sA|0)|0,qA=CA-(I=-2097152&V)|0,mA=Z-((I>>>0>CA>>>0)+MA|0)|0,I=Ig(lA,v,654183,0),W=f+(IA-(((g=-2097152&$)>>>0>rA>>>0)+uA|0)|0)|0,W=I>>>0>(O=I+(rA-g|0)|0)>>>0?W+1|0:W,g=(I=Ig(wA,R,-997805,-1))+O|0,O=f+W|0,O=I>>>0>g>>>0?O+1|0:O,I=Ig(UA,L,136657,0),O=f+O|0,uA=g=I+g|0,I=I>>>0>g>>>0?O+1|0:O,MA=YA-(g=-2097152&BA)|0,rA=iA-((g>>>0>YA>>>0)+j|0)|0,g=Ig(u,l,-997805,-1),O=f,V=(W=g)+(g=Ig(M,x,654183,0))|0,W=f+O|0,W=g>>>0>V>>>0?W+1|0:W,g=Ig(U,K,136657,0),O=f+W|0,O=g>>>0>(V=g+V|0)>>>0?O+1|0:O,g=Ig(J,b,-683901,-1),O=f+O|0,W=EA+(g>>>0>(V=g+V|0)>>>0?O+1|0:O)|0,BA=(O=V+HA|0)-(g=-2097152&_A)|0,_A=(W=O>>>0<HA>>>0?W+1|0:W)-((g>>>0>O>>>0)+z|0)|0,g=Ig(u,l,654183,0),O=f,V=(W=g)+(g=Ig(M,x,470296,0))|0,W=f+O|0,W=g>>>0>V>>>0?W+1|0:W,g=Ig(U,K,-997805,-1),O=f+W|0,W=yA+(g>>>0>(V=g+V|0)>>>0?O+1|0:O)|0,W=(g=V+bA|0)>>>0<bA>>>0?W+1|0:W,V=(O=g)+(g=Ig(J,b,136657,0))|0,O=f+W|0,O=g>>>0>V>>>0?O+1|0:O,W=(g=Ig(H,Y,-683901,-1))+V|0,V=f+O|0,V=g>>>0>W>>>0?V+1|0:V,$=W-(g=-2097152&oA)|0,Z=V-((g>>>0>W>>>0)+q|0)|0,g=Ig(B,0,DA,0),O=f,W=g,g=Ig(E,0,N,0),O=f+O|0,O=g>>>0>(W=W+g|0)>>>0?O+1|0:O,g=Ig(i,0,a,0),O=f+O|0,O=g>>>0>(W=g+W|0)>>>0?O+1|0:O,g=Ig(e,G,t,0),V=f+O|0,V=g>>>0>(W=g+W|0)>>>0?V+1|0:V,O=(g=Ig(Q,0,r,0))+W|0,W=f+V|0,W=g>>>0>O>>>0?W+1|0:W,g=Ig(y,0,c,0),W=f+W|0,W=g>>>0>(O=g+O|0)>>>0?W+1|0:W,V=(g=Ig(_,0,h,0))+O|0,O=f+W|0,O=g>>>0>V>>>0?O+1|0:O,g=Ig(D,0,p,eA),O=f+O|0,O=g>>>0>(W=g+V|0)>>>0?O+1|0:O,g=Ig(w,0,hA,0),V=f+O|0,V=g>>>0>(W=g+W|0)>>>0?V+1|0:V,O=(g=Ig(s,0,n,0))+W|0,W=f+V|0,W=g>>>0>O>>>0?W+1|0:W,g=Ig(F,0,fA,0),W=f+W|0,W=g>>>0>(O=g+O|0)>>>0?W+1|0:W,V=(g=Ig(S,0,k,0))+O|0,O=f+W|0,O=(FA>>>21|0)+(O=g>>>0>V>>>0?O+1|0:O)|0,CA=O=(g=(2097151&FA)<<11|dA>>>21)>>>0>(EA=g+V|0)>>>0?O+1|0:O,bA=g=O-((EA>>>0<4293918720)-1|0)|0,W=(W=g>>>21|0)+Z|0,IA=W=(g=(2097151&g)<<11|(T=EA- -1048576|0)>>>21)>>>0>(iA=g+$|0)>>>0?W+1|0:W,sA=g=W-((iA>>>0<4293918720)-1|0)|0,O=(W=g>>21)+_A|0,Z=O=(g=(2097151&g)<<11|($=iA- -1048576|0)>>>21)>>>0>(BA=g+BA|0)>>>0?O+1|0:O,oA=O=O-((BA>>>0<4293918720)-1|0)|0,W=(W=O>>21)+rA|0,rA=W=(O=(V=(2097151&O)<<11|(g=BA- -1048576|0)>>>21)+MA|0)>>>0<V>>>0?W+1|0:W,dA=O,W=Ig(O,W,-683901,-1),O=f+I|0,_A=V=W+uA|0,I=W>>>0>V>>>0?O+1|0:O,O=Ig(lA,v,470296,0),V=f+(gA-(((W=-2097152&AA)>>>0>GA>>>0)+vA|0)|0)|0,V=O>>>0>(AA=O+(GA-W|0)|0)>>>0?V+1|0:V,O=Ig(wA,R,654183,0),W=f+V|0,W=O>>>0>(AA=O+AA|0)>>>0?W+1|0:W,V=Ig(UA,L,-997805,-1),O=f+W|0,O=V>>>0>(AA=V+AA|0)>>>0?O+1|0:O,FA=g=BA-(W=-2097152&g)|0,eA=Z=Z-((W>>>0>BA>>>0)+oA|0)|0,AA=(V=Ig(dA,rA,136657,0))+AA|0,W=f+O|0,g=Ig(g,Z,-683901,-1),V=f+(V>>>0>AA>>>0?W+1|0:W)|0,Z=V=g>>>0>(gA=g+AA|0)>>>0?V+1|0:V,yA=W=V-((gA>>>0<4293918720)-1|0)|0,V=(2097151&W)<<11|(g=gA- -1048576|0)>>>21,W=(W>>21)+I|0,oA=V=(W=V>>>0>(AA=V+_A|0)>>>0?W+1|0:W)-((AA>>>0<4293918720)-1|0)|0,BA=(2097151&V)<<11|(I=AA- -1048576|0)>>>21,V=(V>>21)+mA|0,hA=_A=BA+qA|0,_A=BA>>>0>_A>>>0?V+1|0:V,DA=AA-(I&=-2097152)|0,fA=W-((I>>>0>AA>>>0)+oA|0)|0,HA=gA-(I=-2097152&g)|0,YA=Z-((I>>>0>gA>>>0)+yA|0)|0,I=Ig(lA,v,666643,0),W=f+(cA-(((g=-2097152&aA)>>>0>KA>>>0)+xA|0)|0)|0,W=I>>>0>(O=I+(KA-g|0)|0)>>>0?W+1|0:W,I=Ig(wA,R,470296,0),V=f+W|0,V=I>>>0>(g=I+O|0)>>>0?V+1|0:V,I=Ig(UA,L,654183,0),W=f+V|0,AA=g=I+g|0,I=I>>>0>g>>>0?W+1|0:W,$=iA-(g=-2097152&$)|0,Z=IA-((g>>>0>iA>>>0)+sA|0)|0,g=Ig(u,l,470296,0),O=f,W=g,g=Ig(M,x,666643,0),O=f+O|0,O=g>>>0>(W=W+g|0)>>>0?O+1|0:O,g=Ig(U,K,654183,0),V=f+O|0,V=g>>>0>(W=g+W|0)>>>0?V+1|0:V,O=(g=Ig(J,b,-997805,-1))+W|0,W=f+V|0,W=g>>>0>O>>>0?W+1|0:W,g=Ig(H,Y,136657,0),W=f+W|0,O=CA+(g>>>0>(V=g+O|0)>>>0?W+1|0:W)|0,O=(g=V+EA|0)>>>0<EA>>>0?O+1|0:O,W=g,g=Ig(m,d,-683901,-1),O=f+O|0,O=g>>>0>(V=W+g|0)>>>0?O+1|0:O,oA=(g=(2097151&JA)<<11|NA>>>21)+(V-(W=-2097152&T)|0)|0,W=(O-((W>>>0>V>>>0)+bA|0)|0)+(JA>>21)|0,iA=W=g>>>0>oA>>>0?W+1|0:W,sA=g=W-((oA>>>0<4293918720)-1|0)|0,W=(O=g>>21)+Z|0,JA=W=(g=(V=(2097151&g)<<11|(BA=oA- -1048576|0)>>>21)+$|0)>>>0<V>>>0?W+1|0:W,yA=g,g=Ig(g,W,-683901,-1),V=f+I|0,V=g>>>0>(O=g+AA|0)>>>0?V+1|0:V,I=Ig(dA,rA,-997805,-1),W=f+V|0,W=I>>>0>(g=I+O|0)>>>0?W+1|0:W,I=Ig(FA,eA,136657,0),O=f+W|0,NA=g=I+g|0,$=I>>>0>g>>>0?O+1|0:O,T=kA-(I=-2097152&QA)|0,IA=tA-((I>>>0>kA>>>0)+X|0)|0,I=Ig(B,0,s,0),g=f,O=I,I=Ig(E,0,w,0),W=f+g|0,W=I>>>0>(O=O+I|0)>>>0?W+1|0:W,I=Ig(a,0,F,0),W=f+W|0,W=I>>>0>(g=I+O|0)>>>0?W+1|0:W,I=Ig(r,0,k,0),O=f+W|0,I=I>>>0>(W=g=I+g|0)>>>0?O+1|0:O,g=Ig(B,0,w,0),O=f,Z=(V=g)+(g=Ig(E,0,k,0))|0,V=f+O|0,V=g>>>0>Z>>>0?V+1|0:V,g=Ig(r,0,F,0),O=f+V|0,g=O=g>>>0>(Z=g+Z|0)>>>0?O+1|0:O,lA=O=O-((Z>>>0<4293918720)-1|0)|0,V=O>>>21|0,EA=(O=(2097151&O)<<11|(cA=Z- -1048576|0)>>>21)+W|0,W=I+V|0,aA=W=O>>>0>EA>>>0?W+1|0:W,KA=I=W-((EA>>>0<4293918720)-1|0)|0,O=(V=I>>>21|0)+IA|0,O=(I=(2097151&I)<<11|(gA=EA- -1048576|0)>>>21)>>>0>(W=I+T|0)>>>0?O+1|0:O,V=(I=Ig(wA,R,666643,0))+W|0,W=f+O|0,W=I>>>0>V>>>0?W+1|0:W,I=Ig(UA,L,470296,0),W=f+W|0,W=I>>>0>(O=I+V|0)>>>0?W+1|0:W,V=(I=Ig(yA,JA,136657,0))+O|0,O=f+W|0,O=I>>>0>V>>>0?O+1|0:O,W=(I=Ig(dA,rA,654183,0))+V|0,V=f+O|0,V=I>>>0>W>>>0?V+1|0:V,I=Ig(FA,eA,-997805,-1),O=f+V|0,CA=O=I>>>0>(AA=I+W|0)>>>0?O+1|0:O,GA=I=O-((AA>>>0<4293918720)-1|0)|0,W=(V=I>>21)+$|0,NA=O=(W=(I=(O=(2097151&I)<<11|(T=AA- -1048576|0)>>>21)+NA|0)>>>0<O>>>0?W+1|0:W)-((I>>>0<4293918720)-1|0)|0,$=(2097151&O)<<11|(IA=I- -1048576|0)>>>21,O=(O>>21)+YA|0,MA=QA=$+HA|0,tA=$>>>0>QA>>>0?O+1|0:O,$=I,V=W,W=(iA-(((O=-2097152&BA)>>>0>oA>>>0)+sA|0)|0)+(SA>>21)|0,QA=W=(I=(oA-O|0)+(BA=(2097151&SA)<<11|pA>>>21)|0)>>>0<BA>>>0?W+1|0:W,bA=W=W-((I>>>0<4293918720)-1|0)|0,oA=O=W>>21,W=Ig(wA=(2097151&W)<<11|(iA=I- -1048576|0)>>>21,O,-683901,-1),O=f+V|0,O=W>>>0>($=W+$|0)>>>0?O+1|0:O,HA=$-(W=-2097152&IA)|0,YA=O-((W>>>0>$>>>0)+NA|0)|0,O=Ig(wA,oA,136657,0),W=f+CA|0,W=O>>>0>(V=O+AA|0)>>>0?W+1|0:W,sA=V-(O=-2097152&T)|0,NA=W-((O>>>0>V>>>0)+GA|0)|0,V=(O=Ig(UA,L,666643,0))+(EA-(W=-2097152&gA)|0)|0,W=f+(aA-((W>>>0>EA>>>0)+KA|0)|0)|0,W=O>>>0>V>>>0?W+1|0:W,$=(O=Ig(yA,JA,-997805,-1))+V|0,V=f+W|0,V=O>>>0>$>>>0?V+1|0:V,W=Ig(dA,rA,470296,0),O=f+V|0,O=W>>>0>($=W+$|0)>>>0?O+1|0:O,V=Ig(FA,eA,654183,0),W=f+O|0,SA=$=V+$|0,CA=V>>>0>$>>>0?W+1|0:W,$=Z,Z=g,g=Ig(E,0,F,0),O=f,W=g,g=Ig(B,0,k,0),O=f+O|0,O=g>>>0>(V=W+g|0)>>>0?O+1|0:O,g=Ig(B,0,F,0),kA=W=f,EA=g,aA=g- -1048576|0,KA=g=W-((g>>>0<4293918720)-1|0)|0,W=g>>>21|0,BA=(g=(2097151&g)<<11|aA>>>21)+V|0,V=W+O|0,gA=V=g>>>0>BA>>>0?V+1|0:V,GA=g=V-((BA>>>0<4293918720)-1|0)|0,O=(W=g>>>21|0)+Z|0,O=(g=(2097151&g)<<11|(AA=BA- -1048576|0)>>>21)>>>0>(V=g+$|0)>>>0?O+1|0:O,Z=(g=Ig(yA,JA,654183,0))+(V-(W=-2097152&cA)|0)|0,V=f+(O-((8191&lA)+(W>>>0>V>>>0)|0)|0)|0,V=g>>>0>Z>>>0?V+1|0:V,g=Ig(dA,rA,666643,0),W=f+V|0,W=g>>>0>(O=g+Z|0)>>>0?W+1|0:W,T=(g=Ig(FA,eA,470296,0))+O|0,O=f+W|0,IA=O=g>>>0>T>>>0?O+1|0:O,pA=g=O-((T>>>0<4293918720)-1|0)|0,W=(W=g>>21)+CA|0,V=W=(g=(2097151&g)<<11|($=T- -1048576|0)>>>21)>>>0>(Z=g+SA|0)>>>0?W+1|0:W,cA=O=W-((Z>>>0<4293918720)-1|0)|0,CA=(2097151&O)<<11|(g=Z- -1048576|0)>>>21,O=(O>>21)+NA|0,CA=CA>>>0>(rA=SA=CA+sA|0)>>>0?O+1|0:O,W=Ig(wA,oA,-997805,-1),O=f+V|0,dA=(Z=W+Z|0)-(g&=-2097152)|0,NA=(W>>>0>Z>>>0?O+1|0:O)-((g>>>0>Z>>>0)+cA|0)|0,g=Ig(wA,oA,654183,0),V=f+IA|0,V=g>>>0>(O=g+T|0)>>>0?V+1|0:V,SA=O-(g=-2097152&$)|0,pA=V-((g>>>0>O>>>0)+pA|0)|0,g=Ig(yA,JA,470296,0),W=f+(gA-((8191&GA)+((O=-2097152&AA)>>>0>BA>>>0)|0)|0)|0,W=g>>>0>(V=g+(BA-O|0)|0)>>>0?W+1|0:W,g=Ig(FA,eA,666643,0),W=f+W|0,W=g>>>0>(O=g+V|0)>>>0?W+1|0:W,Z=O,g=Ig(yA,JA,666643,0),V=f+(kA-((2047&KA)+((O=-2097152&aA)>>>0>EA>>>0)|0)|0)|0,T=V=g>>>0>(AA=g+(EA-O|0)|0)>>>0?V+1|0:V,cA=g=V-((AA>>>0<4293918720)-1|0)|0,W=W+(O=g>>21)|0,aA=g=(W=(g=(2097151&g)<<11|(IA=AA- -1048576|0)>>>21)>>>0>($=g+Z|0)>>>0?W+1|0:W)-(($>>>0<4293918720)-1|0)|0,V=(O=g>>21)+pA|0,g=(g=(2097151&g)<<11|(Z=$- -1048576|0)>>>21)>>>0>(gA=g+SA|0)>>>0?V+1|0:V,O=Ig(wA,oA,470296,0),W=f+W|0,W=O>>>0>(V=O+$|0)>>>0?W+1|0:W,Z=V-(O=-2097152&Z)|0,$=W-((O>>>0>V>>>0)+aA|0)|0,O=Ig(wA,oA,666643,0),V=f+(T-(((W=-2097152&IA)>>>0>AA>>>0)+cA|0)|0)|0,O=(W=(V=O>>>0>(BA=O+(AA-W|0)|0)>>>0?V+1|0:V)>>21)+$|0,W=g+(V=(O=(V=(2097151&V)<<11|BA>>>21)>>>0>(Z=V+Z|0)>>>0?O+1|0:O)>>21)|0,O=(O=(W=(g=$=(O=(2097151&O)<<11|Z>>>21)+gA|0)>>>0<O>>>0?W+1|0:W)>>21)+NA|0,W=(W=(O=(W=(2097151&W)<<11|g>>>21)>>>0>(cA=W+dA|0)>>>0?O+1|0:O)>>21)+CA|0,V=(O=(W=(O=(2097151&O)<<11|cA>>>21)>>>0>(aA=O+rA|0)>>>0?W+1|0:W)>>21)+YA|0,O=(W=(V=(W=(2097151&W)<<11|aA>>>21)>>>0>(gA=W+HA|0)>>>0?V+1|0:V)>>21)+tA|0,W=(V=(O=(V=(2097151&V)<<11|gA>>>21)>>>0>(AA=V+MA|0)>>>0?O+1|0:O)>>21)+fA|0,O=(O=(W=(O=(2097151&O)<<11|AA>>>21)>>>0>(CA=O+DA|0)>>>0?W+1|0:W)>>21)+_A|0,W=(W=(O=(W=(2097151&W)<<11|CA>>>21)>>>0>(T=W+hA|0)>>>0?O+1|0:O)>>21)+PA|0,V=(O=(W=(O=(2097151&O)<<11|T>>>21)>>>0>(IA=O+LA|0)>>>0?W+1|0:W)>>21)+nA|0,W=(QA-((I>>>0<(O=-2097152&iA)>>>0)+bA|0)|0)+((V=(W=(2097151&W)<<11|IA>>>21)>>>0>($=W+RA|0)>>>0?V+1|0:V)>>21)|0,QA=O=(W=(iA=(tA=I-O|0)+((2097151&V)<<11|$>>>21)|0)>>>0<tA>>>0?W+1|0:W)>>21,I=(I=Ig(tA=(2097151&W)<<11|iA>>>21,O,666643,0))+(O=2097151&BA)|0,V=f,C[0|A]=I,V=I>>>0<O>>>0?V+1|0:V,C[A+1|0]=(255&V)<<24|I>>>8,O=2097151&Z,Z=Ig(tA,QA,470296,0)+O|0,W=f,W=(V>>21)+(W=O>>>0>Z>>>0?W+1|0:W)|0,W=(Z=(BA=(2097151&V)<<11|I>>>21)+Z|0)>>>0<BA>>>0?W+1|0:W,C[A+4|0]=(2047&W)<<21|Z>>>11;C[A+3|0]=(7&W)<<29|Z>>>3,C[A+2|0]=31&((65535&V)<<16|I>>>16)|Z<<5,I=2097151&g,g=Ig(tA,QA,654183,0)+I|0,V=f,V=I>>>0>g>>>0?V+1|0:V,I=W,O=(W>>=21)+V|0,I=O=(I=(2097151&I)<<11|Z>>>21)>>>0>(g=I+g|0)>>>0?O+1|0:O,C[A+6|0]=(63&O)<<26|g>>>6,W=0,C[A+5|0]=W<<13|(1572864&Z)>>>19|g<<2,W=2097151&cA,V=Ig(tA,QA,-997805,-1)+W|0,O=f,O=W>>>0>V>>>0?O+1|0:O,W=(W=I>>21)+O|0,W=(I=(Z=V)+(V=(2097151&I)<<11|g>>>21)|0)>>>0<V>>>0?W+1|0:W,C[A+9|0]=(511&W)<<23|I>>>9,C[A+8|0]=(1&W)<<31|I>>>1,O=0,C[A+7|0]=O<<18|(2080768&g)>>>14|I<<7,g=2097151&aA,O=Ig(tA,QA,136657,0)+g|0,V=f,V=g>>>0>O>>>0?V+1|0:V,g=(Z=(2097151&(g=W))<<11|I>>>21)+O|0,O=(W>>=21)+V|0,O=g>>>0<Z>>>0?O+1|0:O,C[A+12|0]=(4095&O)<<20|g>>>12,C[A+11|0]=(15&O)<<28|g>>>4,W=0,C[A+10|0]=W<<15|(1966080&I)>>>17|g<<4,I=2097151&gA,V=Ig(tA,QA,-683901,-1)+I|0,W=f,W=I>>>0>V>>>0?W+1|0:W,I=O,O=W+(O>>=21)|0,O=(I=(Z=V)+(V=(2097151&I)<<11|g>>>21)|0)>>>0<V>>>0?O+1|0:O,C[A+14|0]=(127&O)<<25|I>>>7,W=0,C[A+13|0]=W<<12|(1048576&g)>>>20|I<<1,W=O>>21,W=(g=(O=(2097151&O)<<11|I>>>21)+(2097151&AA)|0)>>>0<O>>>0?W+1|0:W,C[A+17|0]=(1023&W)<<22|g>>>10,C[A+16|0]=(3&W)<<30|g>>>2,O=0,C[A+15|0]=O<<17|(2064384&I)>>>15|g<<6,I=W,W>>=21,V=(I=(O=(2097151&I)<<11|g>>>21)+(2097151&CA)|0)>>>0<O>>>0?W+1|0:W,C[A+20|0]=(8191&V)<<19|I>>>13,C[A+19|0]=(31&V)<<27|I>>>5,O=V>>21,O=(W=(Z=(2097151&V)<<11|I>>>21)+(2097151&T)|0)>>>0<Z>>>0?O+1|0:O,Z=W,C[A+21|0]=W,W=0,C[A+18|0]=W<<14|(1835008&g)>>>18|I<<3,C[A+22|0]=(255&O)<<24|Z>>>8,W=O>>21,W=(I=(g=(2097151&O)<<11|Z>>>21)+(2097151&IA)|0)>>>0<g>>>0?W+1|0:W,C[A+25|0]=(2047&W)<<21|I>>>11,C[A+24|0]=(7&W)<<29|I>>>3,C[A+23|0]=31&((65535&O)<<16|Z>>>16)|I<<5,O=(2097151&W)<<11|I>>>21,W>>=21,W=(g=O+(2097151&$)|0)>>>0<O>>>0?W+1|0:W,C[A+27|0]=(63&W)<<26|g>>>6,O=0,C[A+26|0]=O<<13|(1572864&I)>>>19|g<<2,I=W,O=W>>=21,O=(I=(Z=(2097151&I)<<11|g>>>21)+(V=2097151&iA)|0)>>>0<V>>>0?O+1|0:O,C[A+31|0]=(131071&O)<<15|I>>>17,C[A+30|0]=(511&O)<<23|I>>>9,W=0,C[A+28|0]=W<<18|(2080768&g)>>>14|I<<7,C[A+29|0]=Z+iA>>>1}function k(A,I,g,C){for(var B=0,Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0;E=(B=_<<3)+g|0,Q=o[0|(B=I+B|0)]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,G=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,c=Q<<24|(65280&Q)<<8,t=(a=16711680&Q)<<24,a=a>>>8|0,B=(e=-16777216&Q)>>>24|0,i[E>>2]=t|e<<8|-16777216&((255&G)<<24|Q>>>8)|16711680&((16777215&G)<<8|Q>>>24)|G>>>8&65280|G>>>24,Q=B|a|c,B=0,i[E+4>>2]=Q|B,16!=(0|(_=_+1|0)););for(I=i[A+4>>2],i[C>>2]=i[A>>2],i[C+4>>2]=I,I=i[A+60>>2],i[C+56>>2]=i[A+56>>2],i[C+60>>2]=I,I=i[A+52>>2],i[C+48>>2]=i[A+48>>2],i[C+52>>2]=I,I=i[A+44>>2],i[C+40>>2]=i[A+40>>2],i[C+44>>2]=I,I=i[A+36>>2],i[C+32>>2]=i[A+32>>2],i[C+36>>2]=I,I=i[A+28>>2],i[C+24>>2]=i[A+24>>2],i[C+28>>2]=I,I=i[A+20>>2],i[C+16>>2]=i[A+16>>2],i[C+20>>2]=I,I=i[A+12>>2],i[C+8>>2]=i[A+8>>2],i[C+12>>2]=I;E=i[C+56>>2],a=i[C+60>>2],B=i[(I=G=(M=P<<3)+g|0)>>2],I=i[I+4>>2],k=Q=i[C+36>>2],Q=UI(p=i[C+32>>2],Q,50),_=f,Q=UI(p,k,46)^Q,_^=f,Q=UI(p,k,23)^Q,I=(f^_)+I|0,I=(B=Q+B|0)>>>0<Q>>>0?I+1|0:I,B=(_=i[(Q=M+34416|0)>>2])+B|0,I=i[Q+4>>2]+I|0,I=B>>>0<_>>>0?I+1|0:I,Q=(_=((t=i[C+48>>2])^(y=i[C+40>>2]))&p^t)+B|0,B=(((w=i[C+52>>2])^(F=i[C+44>>2]))&k^w)+I|0,I=(Q>>>0<_>>>0?B+1|0:B)+a|0,I=(E=Q+E|0)>>>0<Q>>>0?I+1|0:I,_=(Q=i[C+24>>2])+E|0,B=i[C+28>>2]+I|0,s=B=Q>>>0>_>>>0?B+1|0:B,i[C+24>>2]=_,i[C+28>>2]=B,n=B=i[C+4>>2],B=UI(Q=i[C>>2],B,36),a=f,B=UI(Q,n,30)^B,a^=f,e=E+(UI(Q,n,25)^B)|0,B=I+(f^a)|0,B=E>>>0>e>>>0?B+1|0:B,c=(I=e)+(e=Q&((a=i[C+16>>2])|(E=i[C+8>>2]))|E&a)|0,I=(I=B)+(n&((B=i[C+20>>2])|(h=i[C+12>>2]))|B&h)|0,e=I=c>>>0<e>>>0?I+1|0:I,i[C+56>>2]=c,i[C+60>>2]=I,r=a,D=B,N=i[(I=l=(S=8|M)+g|0)>>2],U=i[I+4>>2],B=((k^F)&s^F)+w|0,B=(I=(a=(y^p)&_^y)+t|0)>>>0<a>>>0?B+1|0:B,a=UI(_,s,50),t=f,a=UI(_,s,46)^a,t^=f,a=(w=UI(_,s,23)^a)+I|0,I=(f^t)+B|0,I=(a>>>0<w>>>0?I+1|0:I)+U|0,I=(B=a+N|0)>>>0<a>>>0?I+1|0:I,a=(a=B)+(t=i[(B=S+34416|0)>>2])|0,B=i[B+4>>2]+I|0,B=(I=a>>>0<t>>>0?B+1|0:B)+D|0,w=B=(t=a+r|0)>>>0<a>>>0?B+1|0:B,i[C+16>>2]=t,i[C+20>>2]=B,I=I+((h|n)&e|h&n)|0,I=(B=a+((Q|E)&c|Q&E)|0)>>>0<a>>>0?I+1|0:I,a=UI(c,e,36),r=f,a=UI(c,e,30)^a,r^=f,D=B,B=UI(c,e,25)^a,I=(f^r)+I|0,r=I=B>>>0>(a=D+B|0)>>>0?I+1|0:I,i[C+48>>2]=a,i[C+52>>2]=I,D=E,S=h,I=(h=i[(B=Y=(E=16|M)+g|0)>>2])+y|0,B=i[B+4>>2]+F|0,B=I>>>0<h>>>0?B+1|0:B,E=(y=I)+(h=i[(I=E+34416|0)>>2])|0,I=i[I+4>>2]+B|0,I=((s^k)&w^k)+(I=E>>>0<h>>>0?I+1|0:I)|0,I=(B=(B=E)+(E=(_^p)&t^p)|0)>>>0<E>>>0?I+1|0:I,E=UI(t,w,50),h=f,E=UI(t,w,46)^E,h^=f,E=(y=UI(t,w,23)^E)+B|0,B=(f^h)+I|0,B=(y=E>>>0<y>>>0?B+1|0:B)+S|0,S=B=(h=E)>>>0>(E=E+D|0)>>>0?B+1|0:B,i[C+8>>2]=E,i[C+12>>2]=B,I=UI(a,r,36),B=f,I=UI(a,r,30)^I,B^=f,F=UI(a,r,25)^I,I=((e|n)&r|e&n)+(f^B)|0,B=y+((D=F+((Q|c)&a|Q&c)|0)>>>0<F>>>0?I+1|0:I)|0,h=B=(y=h+D|0)>>>0<h>>>0?B+1|0:B,i[C+40>>2]=y,i[C+44>>2]=B,D=Q,B=(B=p)+(p=i[(I=u=(Q=24|M)+g|0)>>2])|0,I=i[I+4>>2]+k|0,I=B>>>0<p>>>0?I+1|0:I,Q=(F=B)+(p=i[(B=Q+34416|0)>>2])|0,B=i[B+4>>2]+I|0,B=(s^(s^w)&S)+(B=Q>>>0<p>>>0?B+1|0:B)|0,B=(I=(I=Q)+(Q=_^(_^t)&E)|0)>>>0<Q>>>0?B+1|0:B,Q=UI(E,S,50),p=f,Q=UI(E,S,46)^Q,p^=f,Q=(k=UI(E,S,23)^Q)+I|0,I=(f^p)+B|0,B=(I=Q>>>0<k>>>0?I+1|0:I)+n|0,k=B=(n=Q+D|0)>>>0<Q>>>0?B+1|0:B,i[C>>2]=n,i[C+4>>2]=B,B=UI(y,h,36),p=f,B=UI(y,h,30)^B,D=f^p,F=UI(y,h,25)^B,B=((e|r)&h|e&r)+(f^D)|0,I=I+((p=F+((a|c)&y|a&c)|0)>>>0<F>>>0?B+1|0:B)|0,p=I=(D=Q+p|0)>>>0<Q>>>0?I+1|0:I,i[C+32>>2]=D,i[C+36>>2]=I,Q=i[(B=m=(I=32|M)+g|0)>>2],B=s+i[B+4>>2]|0,B=(Q=Q+_|0)>>>0<_>>>0?B+1|0:B,Q=(_=i[(I=I+34416|0)>>2])+Q|0,I=i[I+4>>2]+B|0,I=(w^(w^S)&k)+(I=Q>>>0<_>>>0?I+1|0:I)|0,I=(B=(B=Q)+(Q=t^(E^t)&n)|0)>>>0<Q>>>0?I+1|0:I,Q=UI(n,k,50),_=f,Q=UI(n,k,46)^Q,_^=f,Q=(s=UI(n,k,23)^Q)+B|0,B=(f^_)+I|0,F=B=Q>>>0<s>>>0?B+1|0:B,I=B,B=UI(D,p,36),_=f,B=UI(D,p,30)^B,s=f^_,N=UI(D,p,25)^B,B=((r|h)&p|r&h)+(f^s)|0,I=((_=N+((a|y)&D|a&y)|0)>>>0<N>>>0?B+1|0:B)+I|0,_=I=(s=Q+_|0)>>>0<_>>>0?I+1|0:I,i[C+24>>2]=s,i[C+28>>2]=I,B=e+F|0,F=B=(e=Q+c|0)>>>0<Q>>>0?B+1|0:B,i[C+56>>2]=e,i[C+60>>2]=B,Q=i[(I=J=(B=40|M)+g|0)>>2],I=w+i[I+4>>2]|0,I=(Q=Q+t|0)>>>0<t>>>0?I+1|0:I,Q=(c=i[(B=B+34416|0)>>2])+Q|0,B=i[B+4>>2]+I|0,B=(S^(k^S)&F)+(B=Q>>>0<c>>>0?B+1|0:B)|0,B=(I=(I=Q)+(Q=E^(E^n)&e)|0)>>>0<Q>>>0?B+1|0:B,Q=UI(e,F,50),c=f,Q=UI(e,F,46)^Q,c^=f,Q=(t=UI(e,F,23)^Q)+I|0,I=(f^c)+B|0,I=Q>>>0<t>>>0?I+1|0:I,B=UI(s,_,36),c=f,B=UI(s,_,30)^B,t=f^c,w=UI(s,_,25)^B,B=((h|p)&_|h&p)+(f^t)|0,B=((c=w+((y|D)&s|y&D)|0)>>>0<w>>>0?B+1|0:B)+I|0,c=B=(t=Q+c|0)>>>0<c>>>0?B+1|0:B,i[C+16>>2]=t,i[C+20>>2]=B,I=I+r|0,N=I=(r=Q+a|0)>>>0<a>>>0?I+1|0:I,i[C+48>>2]=r,i[C+52>>2]=I,Q=i[(B=H=(I=48|M)+g|0)>>2],B=S+i[B+4>>2]|0,B=(Q=Q+E|0)>>>0<E>>>0?B+1|0:B,Q=(E=i[(I=I+34416|0)>>2])+Q|0,I=i[I+4>>2]+B|0,I=(k^(k^F)&N)+(I=Q>>>0<E>>>0?I+1|0:I)|0,I=(B=(B=Q)+(Q=n^(e^n)&r)|0)>>>0<Q>>>0?I+1|0:I,Q=UI(r,N,50),E=f,Q=UI(r,N,46)^Q,E^=f,Q=(a=UI(r,N,23)^Q)+B|0,B=(f^E)+I|0,a=B=Q>>>0<a>>>0?B+1|0:B,I=B,B=UI(t,c,36),E=f,B=UI(t,c,30)^B,w=f^E,S=UI(t,c,25)^B,B=((_|p)&c|_&p)+(f^w)|0,I=((E=S+((s|D)&t|s&D)|0)>>>0<S>>>0?B+1|0:B)+I|0,w=I=(B=E)>>>0>(E=Q+E|0)>>>0?I+1|0:I,i[C+8>>2]=E,i[C+12>>2]=I,B=a+h|0,S=B=(U=Q+y|0)>>>0<Q>>>0?B+1|0:B,i[C+40>>2]=U,i[C+44>>2]=B,Q=i[(I=d=(B=56|M)+g|0)>>2],I=k+i[I+4>>2]|0,I=(Q=Q+n|0)>>>0<n>>>0?I+1|0:I,Q=(a=i[(B=B+34416|0)>>2])+Q|0,B=i[B+4>>2]+I|0,B=(F^(F^N)&S)+(B=Q>>>0<a>>>0?B+1|0:B)|0,B=(I=(I=Q)+(Q=e^(e^r)&U)|0)>>>0<Q>>>0?B+1|0:B,Q=UI(U,S,50),a=f,Q=UI(U,S,46)^Q,a^=f,Q=(h=UI(U,S,23)^Q)+I|0,I=(f^a)+B|0,I=Q>>>0<h>>>0?I+1|0:I,B=UI(E,w,36),a=f,B=UI(E,w,30)^B,h=f^a,y=UI(E,w,25)^B,B=((_|c)&w|_&c)+(f^h)|0,B=((a=y+((t|s)&E|t&s)|0)>>>0<y>>>0?B+1|0:B)+I|0,h=B=(h=a)>>>0>(a=Q+a|0)>>>0?B+1|0:B,i[C>>2]=a,i[C+4>>2]=B,I=I+p|0,k=I=(y=Q+D|0)>>>0<Q>>>0?I+1|0:I,i[C+32>>2]=y,i[C+36>>2]=I,Q=i[(B=x=(I=64|M)+g|0)>>2],B=F+i[B+4>>2]|0,B=(Q=Q+e|0)>>>0<e>>>0?B+1|0:B,Q=(e=i[(I=I+34416|0)>>2])+Q|0,I=i[I+4>>2]+B|0,I=(N^(S^N)&k)+(I=Q>>>0<e>>>0?I+1|0:I)|0,I=(B=(B=Q)+(Q=r^(r^U)&y)|0)>>>0<Q>>>0?I+1|0:I,Q=UI(y,k,50),e=f,Q=UI(y,k,46)^Q,e^=f,Q=(n=UI(y,k,23)^Q)+B|0,B=(f^e)+I|0,p=B=Q>>>0<n>>>0?B+1|0:B,I=B,B=UI(a,h,36),e=f,B=UI(a,h,30)^B,n=f^e,D=UI(a,h,25)^B,B=((c|w)&h|c&w)+(f^n)|0,I=((e=D+((E|t)&a|E&t)|0)>>>0<D>>>0?B+1|0:B)+I|0,e=I=(n=Q+e|0)>>>0<e>>>0?I+1|0:I,i[C+56>>2]=n,i[C+60>>2]=I,B=_+p|0,F=B=(_=Q+s|0)>>>0<Q>>>0?B+1|0:B,i[C+24>>2]=_,i[C+28>>2]=B,Q=i[(I=b=(B=72|M)+g|0)>>2],I=N+i[I+4>>2]|0,I=(Q=Q+r|0)>>>0<r>>>0?I+1|0:I,Q=(r=i[(B=B+34416|0)>>2])+Q|0,B=i[B+4>>2]+I|0,B=(S^(k^S)&F)+(B=Q>>>0<r>>>0?B+1|0:B)|0,B=(I=(I=Q)+(Q=U^(y^U)&_)|0)>>>0<Q>>>0?B+1|0:B,Q=UI(_,F,50),r=f,Q=UI(_,F,46)^Q,r^=f,Q=(p=UI(_,F,23)^Q)+I|0,I=(f^r)+B|0,I=Q>>>0<p>>>0?I+1|0:I,B=UI(n,e,36),r=f,B=UI(n,e,30)^B,p=f^r,D=UI(n,e,25)^B,B=((h|w)&e|h&w)+(f^p)|0,B=((r=D+((E|a)&n|E&a)|0)>>>0<D>>>0?B+1|0:B)+I|0,r=B=(p=Q+r|0)>>>0<r>>>0?B+1|0:B,i[C+48>>2]=p,i[C+52>>2]=B,I=I+c|0,N=I=(c=Q+t|0)>>>0<Q>>>0?I+1|0:I,i[C+16>>2]=c,i[C+20>>2]=I,I=(I=U)+(t=i[(B=U=(Q=80|M)+g|0)>>2])|0,B=i[B+4>>2]+S|0,B=I>>>0<t>>>0?B+1|0:B,Q=(s=I)+(t=i[(I=Q+34416|0)>>2])|0,I=i[I+4>>2]+B|0,I=(k^(k^F)&N)+(I=Q>>>0<t>>>0?I+1|0:I)|0,I=(B=(B=Q)+(Q=y^(_^y)&c)|0)>>>0<Q>>>0?I+1|0:I,Q=UI(c,N,50),t=f,Q=UI(c,N,46)^Q,t^=f,Q=(D=UI(c,N,23)^Q)+B|0,B=(f^t)+I|0,s=B=Q>>>0<D>>>0?B+1|0:B,I=B,B=UI(p,r,36),t=f,B=UI(p,r,30)^B,D=f^t,S=UI(p,r,25)^B,B=((e|h)&r|e&h)+(f^D)|0,I=((t=S+((a|n)&p|a&n)|0)>>>0<S>>>0?B+1|0:B)+I|0,t=I=(D=Q+t|0)>>>0<t>>>0?I+1|0:I,i[C+40>>2]=D,i[C+44>>2]=I,B=s+w|0,w=B=(s=Q+E|0)>>>0<E>>>0?B+1|0:B,i[C+8>>2]=s,i[C+12>>2]=B,B=34416+(I=88|M)|0,E=i[(I=K=I+g|0)>>2],Q=i[B>>2]+E|0,I=i[B+4>>2]+i[I+4>>2]|0,B=k+(Q>>>0<E>>>0?I+1|0:I)|0,B=(F^(F^N)&w)+(B=(I=Q+y|0)>>>0<y>>>0?B+1|0:B)|0,B=(I=(Q=_^(_^c)&s)+I|0)>>>0<Q>>>0?B+1|0:B,Q=UI(s,w,50),E=f,Q=UI(s,w,46)^Q,E^=f,Q=(y=UI(s,w,23)^Q)+I|0,I=(f^E)+B|0,I=Q>>>0<y>>>0?I+1|0:I,B=UI(D,t,36),E=f,B=UI(D,t,30)^B,y=f^E,S=UI(D,t,25)^B,B=((e|r)&t|e&r)+(f^y)|0,B=((E=S+((p|n)&D|p&n)|0)>>>0<S>>>0?B+1|0:B)+I|0,y=B=(y=E)>>>0>(E=Q+E|0)>>>0?B+1|0:B,i[C+32>>2]=E,i[C+36>>2]=B,I=I+h|0,h=I=(B=a)>>>0>(a=Q+a|0)>>>0?I+1|0:I,i[C>>2]=a,i[C+4>>2]=I,B=34416+(I=96|M)|0,S=i[(I=v=I+g|0)>>2],Q=i[B>>2]+S|0,B=i[B+4>>2]+i[I+4>>2]|0,I=F+(Q>>>0<S>>>0?B+1|0:B)|0,I=(B=Q+_|0)>>>0<_>>>0?I+1|0:I,Q=(_=c^(c^s)&a)+B|0,B=(N^(w^N)&h)+I|0,B=Q>>>0<_>>>0?B+1|0:B,I=UI(a,h,50),_=f,I=UI(a,h,46)^I,_^=f,F=Q,Q=UI(a,h,23)^I,B=(f^_)+B|0,k=B=(I=F+Q|0)>>>0<Q>>>0?B+1|0:B,Q=I,I=UI(E,y,36),_=f,I=UI(E,y,30)^I,S=f^_,F=UI(E,y,25)^I,I=((t|r)&y|t&r)+(f^S)|0,B=((_=F+((p|D)&E|p&D)|0)>>>0<F>>>0?I+1|0:I)+B|0,_=B=(S=Q+_|0)>>>0<_>>>0?B+1|0:B,i[C+24>>2]=S,i[C+28>>2]=B,B=e+k|0,e=B=(n=Q+n|0)>>>0<Q>>>0?B+1|0:B,i[C+56>>2]=n,i[C+60>>2]=B,B=34416+(I=104|M)|0,k=i[(I=L=I+g|0)>>2],Q=i[B>>2]+k|0,I=i[B+4>>2]+i[I+4>>2]|0,B=N+(Q>>>0<k>>>0?I+1|0:I)|0,B=(I=Q+c|0)>>>0<c>>>0?B+1|0:B,Q=(c=s^(a^s)&n)+I|0,I=(w^(h^w)&e)+B|0,I=Q>>>0<c>>>0?I+1|0:I,B=UI(n,e,50),c=f,B=UI(n,e,46)^B,c^=f,k=UI(n,e,23)^B,B=(f^c)+I|0,F=B=(Q=k+Q|0)>>>0<k>>>0?B+1|0:B,I=B,B=UI(S,_,36),c=f,B=UI(S,_,30)^B,k=f^c,N=UI(S,_,25)^B,B=((t|y)&_|t&y)+(f^k)|0,I=((c=N+((E|D)&S|E&D)|0)>>>0<N>>>0?B+1|0:B)+I|0,c=I=(k=Q+c|0)>>>0<c>>>0?I+1|0:I,i[C+16>>2]=k,i[C+20>>2]=I,I=r+F|0,r=I=(p=Q+p|0)>>>0<Q>>>0?I+1|0:I,i[C+48>>2]=p,i[C+52>>2]=I,B=34416+(I=112|M)|0,F=i[(Q=N=I+g|0)>>2],I=i[B>>2]+F|0,B=i[B+4>>2]+i[Q+4>>2]|0,B=w+(I>>>0<F>>>0?B+1|0:B)|0,B=(h^(e^h)&r)+(B=(I=I+s|0)>>>0<s>>>0?B+1|0:B)|0,B=(I=(Q=a^(a^n)&p)+I|0)>>>0<Q>>>0?B+1|0:B,Q=UI(p,r,50),s=f,Q=UI(p,r,46)^Q,s^=f,Q=(w=UI(p,r,23)^Q)+I|0,I=(f^s)+B|0,F=I=Q>>>0<w>>>0?I+1|0:I,B=I,I=UI(k,c,36),s=f,I=UI(k,c,30)^I,w=f^s,R=UI(k,c,25)^I,I=((_|y)&c|_&y)+(f^w)|0,B=((s=R+((E|S)&k|E&S)|0)>>>0<R>>>0?I+1|0:I)+B|0,s=B=(w=Q+s|0)>>>0<s>>>0?B+1|0:B,i[C+8>>2]=w,i[C+12>>2]=B,B=t+F|0,Q=B=(t=Q+D|0)>>>0<Q>>>0?B+1|0:B,i[C+40>>2]=t,i[C+44>>2]=B,B=34416+(I=120|M)|0,M=i[(I=D=I+g|0)>>2],F=i[B>>2]+M|0,B=i[B+4>>2]+i[I+4>>2]|0,I=h+(F>>>0<M>>>0?B+1|0:B)|0,I=(e^(e^r)&Q)+(I=(B=a+F|0)>>>0<a>>>0?I+1|0:I)|0,I=(B=(a=n^(p^n)&t)+B|0)>>>0<a>>>0?I+1|0:I,a=UI(t,Q,50),e=f,a=UI(t,Q,46)^a,e^=f,Q=(a=UI(t,Q,23)^a)+B|0,B=(f^e)+I|0,B=Q>>>0<a>>>0?B+1|0:B,a=Q,e=B,I=B,B=UI(w,s,36),t=f,B=UI(w,s,30)^B,r=f^t,h=UI(w,s,25)^B,B=((_|c)&s|_&c)+(f^r)|0,I=((t=h+((k|S)&w|k&S)|0)>>>0<h>>>0?B+1|0:B)+I|0,I=(Q=Q+t|0)>>>0<t>>>0?I+1|0:I,i[C>>2]=Q,i[C+4>>2]=I,B=e+y|0,B=(r=E)>>>0>(E=E+a|0)>>>0?B+1|0:B,i[C+32>>2]=E,i[C+36>>2]=B,64!=(0|P);)c=((P=P+16|0)<<3)+g|0,a=i[G>>2],_=i[G+4>>2],R=i[b>>2],e=I=i[b+4>>2],B=I,Q=I=i[N+4>>2],I=UI(S=i[N>>2],I,45),E=f,r=((63&Q)<<26|S>>>6)^(I=UI(S,Q,3)^I),I=(Q>>>6^(t=f^E))+B|0,B=((E=r+R|0)>>>0<r>>>0?I+1|0:I)+_|0,B=(I=E+a|0)>>>0<E>>>0?B+1|0:B,a=E=i[l+4>>2],E=UI(_=i[l>>2],E,63),t=f,E=((127&a)<<25|_>>>7)^UI(_,a,56)^E,B=(f^t^a>>>7)+B|0,E=B=E>>>0>(k=E+I|0)>>>0?B+1|0:B,i[c>>2]=k,i[c+4>>2]=B,_=(N=i[U>>2])+_|0,I=(c=i[U+4>>2])+a|0,B=_>>>0<N>>>0?I+1|0:I,a=I=i[D+4>>2],I=UI(F=i[D>>2],I,45),t=f,r=_,_=((63&a)<<26|F>>>6)^UI(F,a,3)^I,B=(f^t^a>>>6)+B|0,_=_>>>0>(r=r+_|0)>>>0?B+1|0:B,B=UI(t=i[Y>>2],I=i[Y+4>>2],63),h=f,s=r,r=((127&I)<<25|t>>>7)^UI(t,I,56)^B,B=(f^h^I>>>7)+_|0,_=B=r>>>0>(w=s+r|0)>>>0?B+1|0:B,i[G+136>>2]=w,i[G+140>>2]=B,B=(U=i[K>>2])+t|0,I=(t=i[K+4>>2])+I|0,r=UI(k,E,45),h=f,r=(y=((63&E)<<26|k>>>6)^UI(k,E,3)^r)+B|0,B=(f^h^E>>>6)+(B>>>0<U>>>0?I+1|0:I)|0,B=r>>>0<y>>>0?B+1|0:B,h=I=i[u+4>>2],I=UI(y=i[u>>2],I,63),n=f,s=r,r=((127&h)<<25|y>>>7)^UI(y,h,56)^I,B=(f^n^h>>>7)+B|0,r=B=r>>>0>(M=s+r|0)>>>0?B+1|0:B,i[G+144>>2]=M,i[G+148>>2]=B,y=(l=i[v>>2])+y|0,I=(I=h)+(h=i[v+4>>2])|0,B=y>>>0<l>>>0?I+1|0:I,I=UI(w,_,45),n=f,p=((63&_)<<26|w>>>6)^UI(w,_,3)^I,B=(f^n^_>>>6)+B|0,B=(y=p+y|0)>>>0<p>>>0?B+1|0:B,n=I=i[m+4>>2],I=UI(p=i[m>>2],I,63),D=f,s=y,y=((127&n)<<25|p>>>7)^UI(p,n,56)^I,B=(f^D^n>>>7)+B|0,y=B=y>>>0>(Y=s+y|0)>>>0?B+1|0:B,i[G+152>>2]=Y,i[G+156>>2]=B,I=(u=i[L>>2])+p|0,B=(B=n)+(n=i[L+4>>2])|0,p=UI(M,r,45),D=f,p=((63&r)<<26|M>>>6)^UI(M,r,3)^p,B=(f^D^r>>>6)+(I>>>0<u>>>0?B+1|0:B)|0,p=(s=p+I|0)>>>0<p>>>0?B+1|0:B,B=UI(D=i[J>>2],I=i[J+4>>2],63),m=f,K=s,s=((127&I)<<25|D>>>7)^(B=UI(D,I,56)^B),B=(I>>>7^(J=f^m))+p|0,p=B=s>>>0>(m=K+s|0)>>>0?B+1|0:B,i[G+160>>2]=m,i[G+164>>2]=B,I=I+Q|0,I=(B=D+S|0)>>>0<D>>>0?I+1|0:I,D=UI(Y,y,45),s=f,D=(J=((63&y)<<26|Y>>>6)^UI(Y,y,3)^D)+B|0,B=(f^s^y>>>6)+I|0,B=D>>>0<J>>>0?B+1|0:B,s=i[H>>2],H=I=i[H+4>>2],I=UI(s,I,63),J=f,I=UI(s,H,56)^I,K=D,B=(H>>>7^(b=f^J))+B|0,D=B=(D=((127&H)<<25|s>>>7)^I)>>>0>(J=K+D|0)>>>0?B+1|0:B,i[G+168>>2]=J,i[G+172>>2]=B,I=a+H|0,I=(B=s+F|0)>>>0<s>>>0?I+1|0:I,K=s=i[d+4>>2],s=UI(b=i[d>>2],s,63),H=f,s=(d=((127&K)<<25|b>>>7)^UI(b,K,56)^s)+B|0,B=(f^H^K>>>7)+I|0,I=s>>>0<d>>>0?B+1|0:B,B=UI(m,p,45),H=f,B=UI(m,p,3)^B,d=f^H,H=s,I=(p>>>6^d)+I|0,s=I=(s=((63&p)<<26|m>>>6)^B)>>>0>(H=H+s|0)>>>0?I+1|0:I,i[G+176>>2]=H,i[G+180>>2]=I,v=i[x>>2],x=I=i[x+4>>2],d=I,I=UI(R,e,63),B=f,L=((127&e)<<25|R>>>7)^UI(R,e,56)^I,I=(f^B^e>>>7)+_|0,B=((w=L+w|0)>>>0<L>>>0?I+1|0:I)+d|0,B=(I=w+v|0)>>>0<w>>>0?B+1|0:B,_=UI(H,s,45),w=f,d=(_=((63&s)<<26|H>>>6)^UI(H,s,3)^_)+I|0,I=(f^w^s>>>6)+B|0,_=I=_>>>0>d>>>0?I+1|0:I,i[G+192>>2]=d,i[G+196>>2]=I,B=E+K|0,B=(I=k+b|0)>>>0<b>>>0?B+1|0:B,w=UI(v,x,63),b=f,K=((127&x)<<25|v>>>7)^UI(v,x,56)^w,B=(f^b^x>>>7)+B|0,I=(w=K+I|0)>>>0<K>>>0?B+1|0:B,B=UI(J,D,45),b=f,B=UI(J,D,3)^B,x=w,I=(D>>>6^(K=f^b))+I|0,w=I=(w=((63&D)<<26|J>>>6)^B)>>>0>(b=x+w|0)>>>0?I+1|0:I,i[G+184>>2]=b,i[G+188>>2]=I,I=UI(U,t,63),B=f,I=((127&t)<<25|U>>>7)^UI(U,t,56)^I,B=(f^B^t>>>7)+c|0,I=y+(I>>>0>(K=I+N|0)>>>0?B+1|0:B)|0,I=(B=Y+K|0)>>>0<Y>>>0?I+1|0:I,y=UI(d,_,45),Y=f,y=UI(d,_,3)^y,K=f^Y,Y=(y^=(63&_)<<26|d>>>6)+B|0,B=(_>>>6^K)+I|0,y=B=y>>>0>Y>>>0?B+1|0:B,i[G+208>>2]=Y,i[G+212>>2]=B,I=UI(N,c,63),B=f,K=UI(N,c,56)^I,B=((I=c>>>7|0)^f^B)+e|0,I=r+((c=(N=K^((127&c)<<25|N>>>7))+R|0)>>>0<N>>>0?B+1|0:B)|0,I=(B=c+M|0)>>>0<M>>>0?I+1|0:I,e=UI(b,w,45),c=f,r=(e=((63&w)<<26|b>>>6)^UI(b,w,3)^e)+B|0,B=(f^c^w>>>6)+I|0,e=B=e>>>0>r>>>0?B+1|0:B,i[G+200>>2]=r,i[G+204>>2]=B,I=UI(u,n,63),B=f,N=((127&n)<<25|u>>>7)^UI(u,n,56)^I,I=(f^B^n>>>7)+h|0,B=D+((c=N+l|0)>>>0<N>>>0?I+1|0:I)|0,B=(I=c+J|0)>>>0<J>>>0?B+1|0:B,c=UI(Y,y,45),D=f,N=I,I=y>>>6|0,c=((63&y)<<26|Y>>>6)^UI(Y,y,3)^c,B=(I^f^D)+B|0,c=B=c>>>0>(y=N+c|0)>>>0?B+1|0:B,i[G+224>>2]=y,i[G+228>>2]=B,I=UI(l,h,63),B=f,I=UI(l,h,56)^I,D=f^B,N=((127&h)<<25|l>>>7)^I,I=((B=h>>>7|0)^D)+t|0,B=p+((h=N+U|0)>>>0<N>>>0?I+1|0:I)|0,B=(I=h+m|0)>>>0<m>>>0?B+1|0:B,t=UI(r,e,45),h=f,D=I,I=e>>>6|0,e=((63&e)<<26|r>>>6)^UI(r,e,3)^t,I=(I^f^h)+B|0,e=I=(t=D+e|0)>>>0<e>>>0?I+1|0:I,i[G+216>>2]=t,i[G+220>>2]=I,I=UI(F,a,63),B=f,h=((127&a)<<25|F>>>7)^UI(F,a,56)^I,B=(f^B^a>>>7)+Q|0,B=w+((I=h+S|0)>>>0<h>>>0?B+1|0:B)|0,I=(r=I+b|0)>>>0<b>>>0?B+1|0:B,B=UI(y,c,45),h=f,D=r,r=UI(y,c,3)^B,B=c>>>6|0,c=D+(r^=(63&c)<<26|y>>>6)|0,I=(B^f^h)+I|0,i[G+240>>2]=c,i[G+244>>2]=c>>>0<r>>>0?I+1|0:I,I=UI(S,Q,63),B=f,I=UI(S,Q,56)^I,c=f^B,B=((B=Q>>>7|0)^c)+n|0,I=s+((I^=(127&Q)<<25|S>>>7)>>>0>(Q=I+u|0)>>>0?B+1|0:B)|0,I=(B=Q+H|0)>>>0<H>>>0?I+1|0:I,Q=UI(t,e,45),c=f,r=B,B=e>>>6|0,Q=((63&e)<<26|t>>>6)^UI(t,e,3)^Q,B=(B^f^c)+I|0,Q=B=Q>>>0>(e=r+Q|0)>>>0?B+1|0:B,i[G+232>>2]=e,i[G+236>>2]=B,I=UI(k,E,63),B=f,r=UI(k,E,56)^I,B=((I=E>>>7|0)^f^B)+a|0,I=_+((E=(c=r^((127&E)<<25|k>>>7))+F|0)>>>0<c>>>0?B+1|0:B)|0,I=(B=E+d|0)>>>0<d>>>0?I+1|0:I,E=UI(e,Q,45),a=f,r=B,B=Q>>>6|0,Q=r+(E=((63&Q)<<26|e>>>6)^UI(e,Q,3)^E)|0,B=(B^f^a)+I|0,i[G+248>>2]=Q,i[G+252>>2]=Q>>>0<E>>>0?B+1|0:B;I=I+i[A+4>>2]|0,I=(g=Q+i[A>>2]|0)>>>0<Q>>>0?I+1|0:I,i[A>>2]=g,i[A+4>>2]=I,B=i[A+12>>2]+i[C+12>>2]|0,I=(g=i[C+8>>2])+i[A+8>>2]|0,i[A+8>>2]=I,i[A+12>>2]=I>>>0<g>>>0?B+1|0:B,B=i[A+20>>2]+i[C+20>>2]|0,I=(g=i[C+16>>2])+i[A+16>>2]|0,i[A+16>>2]=I,i[A+20>>2]=I>>>0<g>>>0?B+1|0:B,I=i[A+28>>2]+i[C+28>>2]|0,g=(B=i[C+24>>2])+i[A+24>>2]|0,i[A+24>>2]=g,i[A+28>>2]=g>>>0<B>>>0?I+1|0:I,B=i[A+36>>2]+i[C+36>>2]|0,I=(g=i[C+32>>2])+i[A+32>>2]|0,i[A+32>>2]=I,i[A+36>>2]=I>>>0<g>>>0?B+1|0:B,I=i[A+44>>2]+i[C+44>>2]|0,g=(B=i[C+40>>2])+i[A+40>>2]|0,i[A+40>>2]=g,i[A+44>>2]=g>>>0<B>>>0?I+1|0:I,B=i[A+52>>2]+i[C+52>>2]|0,I=(g=i[C+48>>2])+i[A+48>>2]|0,i[A+48>>2]=I,i[A+52>>2]=I>>>0<g>>>0?B+1|0:B,B=i[A+60>>2]+i[C+60>>2]|0,I=(g=i[C+56>>2])+i[A+56>>2]|0,i[A+56>>2]=I,i[A+60>>2]=I>>>0<g>>>0?B+1|0:B}function F(A,I){var g,C=0,B=0,Q=0,E=0,c=0,t=0,r=0,e=0,y=0,p=0,w=0,n=0,k=0,F=0,S=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0,BA=0,QA=0,iA=0,oA=0,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0;if(s=g=s-4096|0,A){A:{I:{if(2==(0|(E=i[A+36>>2]))){if(oA=i[A+4>>2],(IA=i[I>>2])|(V=o[I+8|0])>>>0>=2)break I;IA=0}else V=o[I+8|0],oA=i[A+4>>2],IA=i[I>>2];if(bg(g+3072|0,0,1024),bg(g+2104|0,0,968),i[g+2048>>2]=IA,i[g+2052>>2]=0,u=i[I+4>>2],i[g+2064>>2]=V,i[g+2068>>2]=0,i[g+2056>>2]=u,i[g+2060>>2]=0,i[g+2072>>2]=i[A+16>>2],i[g+2076>>2]=0,u=i[A+8>>2],i[g+2088>>2]=E,i[g+2092>>2]=0,i[g+2080>>2]=u,i[g+2084>>2]=0,!i[A+20>>2])break A;for(u=0;(S=127&r)||(u=(z=z+1|0)?u:u+1|0,i[g+2096>>2]=z,i[g+2100>>2]=u,E=bg(g,0,1024),bg(E+1024|0,0,1024),N(C=E+3072|0,E+2048|0,E),N(C,E,E+1024|0)),S=i[4+(E=(g+1024|0)+(S<<3)|0)>>2],i[(C=(r<<3)+oA|0)>>2]=i[E>>2],i[C+4>>2]=S,(S=i[A+20>>2])>>>0>(r=r+1|0)>>>0;);break A}S=i[A+20>>2],cA=1}if(!((u=(aA=!(V|IA))<<1)>>>0>=S>>>0))for(E=i[A+24>>2],iA=i[I+4>>2],r=(z=(a(E,iA)+u|0)+a(S,V)|0)+((z>>>0)%(E>>>0)|0?-1:E-1|0)|0,tA=V+1|0;;){C=i[A+28>>2],EA=1==((z>>>0)%((E=i[A+24>>2])>>>0)|0)?z-1|0:r,r=cA?i[i[A>>2]+4>>2]+(EA<<10)|0:(u<<3)+oA|0,B=i[r>>2],r=i[r+4>>2],i[I+12>>2]=u,C=aA?iA:(r>>>0)%(C>>>0)|0;A:if(IA)r=E+((0|C)==(0|iA)?~S+u|0:(u?0:-1)-S|0)|0,Q=0,3!=(0|V)&&(Q=a(S,tA));else{if(!V){r=u-1|0,Q=0;break A}if(r=a(S,V),(0|C)==(0|iA)){r=(r+u|0)-1|0,Q=0;break A}r=r-!u|0,Q=0}S=Q,c=(p=i[i[A>>2]+4>>2])+(a(C,E)<<10)|0,y=(C=r-1|0)>>>0>(Q=C+S|0)>>>0,Ig(B,0,B,0),Ig(r,0,f,0),S=Q-(r=f)|0,C=0,e=0;A:{I:{g:{C:{B:{Q:{i:{o:{E:{a:{if(r=y-(Q>>>0<r>>>0)|0){if(!E)break a;break E}h=S-a((S>>>0)/(E>>>0)|0,E)|0,D=0,f=0;break A}if(!S)break o;break i}if(!((B=E-1|0)&E))break Q;t=0-(B=(_(E)+33|0)-_(r)|0)|0;break C}h=0,D=r,f=0;break A}if((C=32-_(r)|0)>>>0<31)break B;break g}if(h=B&S,D=0,1==(0|E))break I;E=31&(S=FC(E)),(63&S)>>>0>=32?B=r>>>E|0:(C=r>>>E|0,B=0),f=C;break A}B=C+1|0,t=63-C|0}if(Q=31&(C=63&B),C>>>0>=32?(C=0,y=r>>>Q|0):(C=r>>>Q|0,y=((1<<Q)-1&r)<<32-Q|S>>>Q),Q=31&(t&=63),t>>>0>=32?(r=S<<Q,S=0):(r=(1<<Q)-1&S>>>32-Q|r<<Q,S<<=Q),B)for(F=-1==(0|(t=E-1|0))?-1:0;d=C<<1|y>>>31,y=(C=y<<1|r>>>31)-(b=E&(Q=F-(d+(C>>>0>t>>>0)|0)>>31))|0,C=d-(C>>>0<b>>>0)|0,r=r<<1|S>>>31,S=e|S<<1,e=1&Q,B=B-1|0;);h=y,D=C,f=r<<1|S>>>31;break A}h=S,D=r,r=0}f=r}if(f=D,r=(h<<10)+c|0,E=p+(EA<<10)|0,_A=p+(z<<10)|0,IA)N(E,r,_A);else{for(Ng(g+3072|0,r,1024),r=0;Q=i[(B=(S=r<<3)+(C=g+3072|0)|0)>>2],p=i[(y=E+S|0)>>2],y=i[B+4>>2]^i[y+4>>2],i[B>>2]=Q^p,i[B+4>>2]=y,y=i[(B=(Q=8|S)+C|0)>>2],p=i[(Q=E+Q|0)>>2],Q=i[B+4>>2]^i[Q+4>>2],i[B>>2]=y^p,i[B+4>>2]=Q,y=i[(B=(Q=16|S)+C|0)>>2],p=i[(Q=E+Q|0)>>2],Q=i[B+4>>2]^i[Q+4>>2],i[B>>2]=y^p,i[B+4>>2]=Q,Q=i[(S=(B=24|S)+C|0)>>2],y=i[(B=B+E|0)>>2],B=i[S+4>>2]^i[B+4>>2],i[S>>2]=Q^y,i[S+4>>2]=B,128!=(0|(r=r+4|0)););for(Ng(g+2048|0,C,1024),S=0,r=0;Q=(y=i[56+(E=(g+3072|0)+(r<<7)|0)>>2])+(B=i[E+24>>2])|0,p=(F=i[E+60>>2])+(C=i[E+28>>2])|0,e=Ig(B<<1&-2,1&(C<<1|B>>>31),y,0),B=f+(B>>>0>Q>>>0?p+1|0:p)|0,p=(C=e+Q|0)>>>0<e>>>0?B+1|0:B,c=(e=UI(C^i[E+120>>2],p^i[E+124>>2],32))+(B=i[E+88>>2])|0,t=(k=f)+(Q=i[E+92>>2])|0,d=Ig(e,0,B<<1&-2,1&(Q<<1|B>>>31)),B=f+(B>>>0>c>>>0?t+1|0:t)|0,b=UI(y^(Q=d+c|0),F^(v=Q>>>0<d>>>0?B+1|0:B),40),w=1+(B=p+(BA=f)|0)|0,t=B,y=(B=C+b|0)>>>0<C>>>0?w:t,d=(C=Ig(b,0,C<<1&-2,1&(p<<1|C>>>31)))+B|0,B=f+y|0,k=UI(d^e,k^(X=C>>>0>d>>>0?B+1|0:B),48),Y=w=f,y=(n=i[E+44>>2])+(C=i[E+12>>2])|0,e=(p=i[E+40>>2])+(B=i[E+8>>2])|0,c=Ig(B<<1&-2,1&(C<<1|B>>>31),p,0),B=f+(B>>>0>e>>>0?y+1|0:y)|0,c=(C=e+c|0)>>>0<c>>>0?B+1|0:B,e=(t=UI(C^i[E+104>>2],c^i[E+108>>2],32))+(y=i[E+72>>2])|0,F=(M=f)+(B=i[E+76>>2])|0,G=Ig(t,0,y<<1&-2,1&(B<<1|y>>>31)),y=f+(e>>>0<y>>>0?F+1|0:F)|0,e=UI(H=p^(B=G+e|0),n^(p=B>>>0<G>>>0?y+1|0:y),40),G=1+(y=c+(F=f)|0)|0,n=y,n=(y=C+e|0)>>>0<C>>>0?G:n,C=Ig(e,0,C<<1&-2,1&(c<<1|C>>>31)),c=f+n|0,n=UI((y=C+y|0)^t,M^(O=C>>>0>y>>>0?c+1|0:c),48),G=1+(C=p+(QA=f)|0)|0,t=C,c=(C=B+n|0)>>>0<B>>>0?G:t,p=C+(B=Ig(n,0,B<<1&-2,1&(p<<1|B>>>31)))|0,C=f+c|0,M=UI(e^p,F^(Z=B>>>0>p>>>0?C+1|0:C),1),gA=H=f,e=(J=i[E+36>>2])+(C=i[E+4>>2])|0,t=(c=i[E+32>>2])+(B=i[E>>2])|0,F=Ig(B<<1&-2,1&(C<<1|B>>>31),c,0),B=f+(B>>>0>t>>>0?e+1|0:e)|0,t=(C=t+F|0)>>>0<F>>>0?B+1|0:B,F=(q=UI(C^i[E+96>>2],t^i[E+100>>2],32))+(B=i[(e=j=E- -64|0)>>2])|0,G=($=f)+(e=i[e+4>>2])|0,R=Ig(q,0,B<<1&-2,1&(e<<1|B>>>31)),B=f+(B>>>0>F>>>0?G+1|0:G)|0,G=UI(c^(e=R+F|0),J^(R=e>>>0<R>>>0?B+1|0:B),40),F=1+(B=t+(AA=f)|0)|0,c=B,c=(B=C+G|0)>>>0<C>>>0?F:c,C=B+(t=Ig(G,0,C<<1&-2,1&(t<<1|C>>>31)))|0,B=f+c|0,c=1+(B=(W=C>>>0<t>>>0?B+1|0:B)+H|0)|0,t=B,t=(B=C+M|0)>>>0<C>>>0?c:t,c=B+(F=Ig(M,0,C<<1&-2,1&(W<<1|C>>>31)))|0,B=f+t|0,w=UI(c^k,(l=c>>>0<F>>>0?B+1|0:B)^w,32),L=f,F=(K=i[E+52>>2])+(B=i[E+20>>2])|0,J=(H=i[E+48>>2])+(t=i[E+16>>2])|0,m=Ig(t<<1&-2,1&(B<<1|t>>>31),H,0),t=f+(t>>>0>J>>>0?F+1|0:F)|0,J=(B=J+m|0)>>>0<m>>>0?t+1|0:t,P=(m=UI(B^i[E+112>>2],J^i[E+116>>2],32))+(F=i[E+80>>2])|0,x=(CA=f)+(t=i[E+84>>2])|0,U=Ig(m,0,F<<1&-2,1&(t<<1|F>>>31)),F=f+(F>>>0>P>>>0?x+1|0:x)|0,H=UI(H^(t=U+P|0),K^(P=t>>>0<U>>>0?F+1|0:F),40),U=1+(F=J+(K=f)|0)|0,x=F,x=(F=B+H|0)>>>0<B>>>0?U:x,B=Ig(H,0,B<<1&-2,1&(J<<1|B>>>31)),J=f+x|0,J=UI(U=(F=B+F|0)^m,CA^(m=B>>>0>F>>>0?J+1|0:J),48),U=1+(B=P+(CA=f)|0)|0,x=B,x=(B=t+J|0)>>>0<t>>>0?U:x,t=Ig(J,0,t<<1&-2,1&(P<<1|t>>>31)),P=f+x|0,U=1+(t=(P=(B=t+B|0)>>>0<t>>>0?P+1|0:P)+L|0)|0,x=t,x=(t=B+w|0)>>>0<B>>>0?U:x,T=M^(t=(U=Ig(w,0,B<<1&-2,1&(P<<1|B>>>31)))+t|0),M=f+x|0,M=UI(T,gA^(x=t>>>0<U>>>0?M+1|0:M),40),rA=1+(U=l+(gA=f)|0)|0,T=U,T=(U=c+M|0)>>>0<c>>>0?rA:T,c=(l=Ig(M,0,c<<1&-2,1&(l<<1|c>>>31)))+U|0,i[E>>2]=c,U=f+T|0,l=c>>>0<l>>>0?U+1|0:U,i[E+4>>2]=l,c=UI(c^w,l^L,48),i[E+120>>2]=c,w=f,i[E+124>>2]=w,T=1+(w=w+x|0)|0,U=w,l=(w=c+t|0)>>>0<t>>>0?T:U,c=(t=Ig(c,0,t<<1&-2,1&(x<<1|t>>>31)))+w|0,i[E+80>>2]=c,w=f+l|0,t=c>>>0<t>>>0?w+1|0:w,i[E+84>>2]=t,eA=E,yA=UI(c^M,t^gA,1),i[eA+40>>2]=yA,i[E+44>>2]=f,c=UI(B^H,K^P,1),w=1+(B=O+(H=f)|0)|0,t=B,t=(B=c+y|0)>>>0<y>>>0?w:t,B=B+(M=Ig(c,0,y<<1&-2,1&(O<<1|y>>>31)))|0,y=f+t|0,t=UI(C^q,W^$,48),y=UI(t^B,(M=B>>>0<M>>>0?y+1|0:y)^(O=f),32),q=w=f,K=1+(C=v+Y|0)|0,Y=C,W=(C=Q+k|0)>>>0<Q>>>0?K:Y,Q=Ig(k,0,Q<<1&-2,1&(v<<1|Q>>>31)),k=f+W|0,Y=1+(Q=(k=(C=Q+C|0)>>>0<Q>>>0?k+1|0:k)+w|0)|0,w=Q,w=(Q=C+y|0)>>>0<C>>>0?Y:w,Y=c^(Q=(v=Ig(y,0,C<<1&-2,1&(k<<1|C>>>31)))+Q|0),c=f+w|0,c=UI(Y,H^(w=Q>>>0<v>>>0?c+1|0:c),40),K=1+(v=M+(H=f)|0)|0,Y=v,W=(v=B+c|0)>>>0<B>>>0?K:Y,Y=y^(B=(M=Ig(c,0,B<<1&-2,1&(M<<1|B>>>31)))+v|0),y=f+W|0,y=UI(Y,q^(M=B>>>0<M>>>0?y+1|0:y),48),i[E+96>>2]=y,v=f,i[E+100>>2]=v,i[E+8>>2]=B,i[E+12>>2]=M,K=1+(B=w+v|0)|0,Y=B,M=(B=Q+y|0)>>>0<Q>>>0?K:Y,Q=Ig(y,0,Q<<1&-2,1&(w<<1|Q>>>31)),y=f+M|0,eA=E,yA=UI((B=Q+B|0)^c,H^(Q=B>>>0<Q>>>0?y+1|0:y),1),i[eA+48>>2]=yA,i[E+52>>2]=f,i[E+88>>2]=B,i[E+92>>2]=Q,y=UI(C^b,k^BA,1),Q=1+(C=m+(b=f)|0)|0,B=C,Q=(C=y+F|0)>>>0<F>>>0?Q:B,B=C+(c=Ig(y,0,F<<1&-2,1&(m<<1|F>>>31)))|0,C=f+Q|0,c=UI(B^n,QA^(F=B>>>0<c>>>0?C+1|0:C),32),k=Q=f,w=1+(C=R+O|0)|0,Q=C,n=(C=e+t|0)>>>0<e>>>0?w:Q,e=Ig(t,0,e<<1&-2,1&(R<<1|e>>>31)),Q=f+n|0,w=1+(Q=k+(e=(C=e+C|0)>>>0<e>>>0?Q+1|0:Q)|0)|0,t=Q,t=(Q=C+c|0)>>>0<C>>>0?w:t,w=y^(Q=Q+(n=Ig(c,0,C<<1&-2,1&(e<<1|C>>>31)))|0),y=f+t|0,y=UI(w,b^(t=Q>>>0<n>>>0?y+1|0:y),40),Y=1+(n=F+(b=f)|0)|0,w=n,M=(n=B+y|0)>>>0<B>>>0?Y:w,B=(F=Ig(y,0,B<<1&-2,1&(F<<1|B>>>31)))+n|0,i[E+16>>2]=B,n=f+M|0,F=B>>>0<F>>>0?n+1|0:n,i[E+20>>2]=F,B=UI(B^c,F^k,48),i[E+104>>2]=B,c=f,i[E+108>>2]=c,w=1+(c=c+t|0)|0,k=c,F=(c=B+Q|0)>>>0<Q>>>0?w:k,Q=(B=Ig(B,0,Q<<1&-2,1&(t<<1|Q>>>31)))+c|0,c=f+F|0,F=B=B>>>0>Q>>>0?c+1|0:c,i[j>>2]=Q,i[j+4>>2]=B,B=(e=UI(C^G,e^AA,1))+d|0,c=(k=f)+X|0,C=(t=Ig(d<<1&-2,1&(X<<1|d>>>31),e,0))+B|0,B=f+(B>>>0<e>>>0?c+1|0:c)|0,c=UI(C^J,CA^(t=C>>>0<t>>>0?B+1|0:B),32),n=1+(B=Z+(d=f)|0)|0,w=B,n=(B=c+p|0)>>>0<p>>>0?n:w,w=e^(B=(p=Ig(c,0,p<<1&-2,1&(Z<<1|p>>>31)))+B|0),e=f+n|0,p=UI(w,k^(e=B>>>0<p>>>0?e+1|0:e),40),G=1+(n=t+(k=f)|0)|0,w=n,M=(n=C+p|0)>>>0<C>>>0?G:w,w=c^(t=(C=Ig(p,0,C<<1&-2,1&(t<<1|C>>>31)))+n|0),c=f+M|0,C=UI(w,d^(c=C>>>0>t>>>0?c+1|0:c),48),G=1+(n=e+(d=f)|0)|0,w=n,M=(n=C+B|0)>>>0<B>>>0?G:w,B=(e=Ig(C,0,B<<1&-2,1&(e<<1|B>>>31)))+n|0,i[E+72>>2]=B,n=f+M|0,e=B>>>0<e>>>0?n+1|0:n,i[E+76>>2]=e,i[E+112>>2]=C,i[E+116>>2]=d,i[E+24>>2]=t,i[E+28>>2]=c,eA=E,yA=UI(Q^y,F^b,1),i[eA+56>>2]=yA,i[E+60>>2]=f,eA=E,yA=UI(B^p,e^k,1),i[eA+32>>2]=yA,i[E+36>>2]=f,8!=(0|(r=r+1|0)););for(;B=(Q=i[392+(E=(g+3072|0)+(S<<4)|0)>>2])+(C=i[E+136>>2])|0,y=(t=i[E+396>>2])+(r=i[E+140>>2])|0,p=Ig(C<<1&-2,1&(r<<1|C>>>31),Q,0),C=f+(C>>>0>B>>>0?y+1|0:y)|0,y=(r=p+B|0)>>>0<p>>>0?C+1|0:C,e=(p=UI(r^i[E+904>>2],y^i[E+908>>2],32))+(C=i[E+648>>2])|0,c=(b=f)+(B=i[E+652>>2])|0,F=Ig(p,0,C<<1&-2,1&(B<<1|C>>>31)),C=f+(C>>>0>e>>>0?c+1|0:c)|0,d=UI(Q^(B=F+e|0),t^(J=B>>>0<F>>>0?C+1|0:C),40),t=1+(C=y+(P=f)|0)|0,Q=C,Q=(C=r+d|0)>>>0<r>>>0?t:Q,F=(r=Ig(d,0,r<<1&-2,1&(y<<1|r>>>31)))+C|0,C=f+Q|0,b=UI(F^p,b^(v=r>>>0>F>>>0?C+1|0:C),48),x=G=f,Q=(k=i[E+268>>2])+(r=i[E+12>>2])|0,p=(y=i[E+264>>2])+(C=i[E+8>>2])|0,e=Ig(C<<1&-2,1&(r<<1|C>>>31),y,0),C=f+(C>>>0>p>>>0?Q+1|0:Q)|0,e=(r=p+e|0)>>>0<e>>>0?C+1|0:C,p=(c=UI(r^i[E+776>>2],e^i[E+780>>2],32))+(Q=i[E+520>>2])|0,t=(n=f)+(C=i[E+524>>2])|0,M=Ig(c,0,Q<<1&-2,1&(C<<1|Q>>>31)),Q=f+(Q>>>0>p>>>0?t+1|0:t)|0,p=UI(w=y^(C=M+p|0),k^(y=C>>>0<M>>>0?Q+1|0:Q),40),w=1+(Q=e+(t=f)|0)|0,k=Q,k=(Q=r+p|0)>>>0<r>>>0?w:k,r=Ig(p,0,r<<1&-2,1&(e<<1|r>>>31)),e=f+k|0,k=UI((Q=r+Q|0)^c,n^(X=Q>>>0<r>>>0?e+1|0:e),48),n=1+(r=y+(BA=f)|0)|0,w=r,e=(r=C+k|0)>>>0<C>>>0?n:w,y=r+(C=Ig(k,0,C<<1&-2,1&(y<<1|C>>>31)))|0,r=f+e|0,n=UI(p^y,t^(O=C>>>0>y>>>0?r+1|0:r),1),Y=w=f,p=(H=i[E+260>>2])+(r=i[E+4>>2])|0,c=(e=i[E+256>>2])+(C=i[E>>2])|0,t=Ig(C<<1&-2,1&(r<<1|C>>>31),e,0),C=f+(C>>>0>c>>>0?p+1|0:p)|0,c=(r=c+t|0)>>>0<t>>>0?C+1|0:C,t=(Z=UI(r^i[E+768>>2],c^i[E+772>>2],32))+(C=i[E+512>>2])|0,M=(QA=f)+(p=i[E+516>>2])|0,q=Ig(Z,0,C<<1&-2,1&(p<<1|C>>>31)),C=f+(C>>>0>t>>>0?M+1|0:M)|0,M=UI(e^(p=q+t|0),H^(q=p>>>0<q>>>0?C+1|0:C),40),e=1+(C=c+(gA=f)|0)|0,t=C,e=(C=r+M|0)>>>0<r>>>0?e:t,r=C+(c=Ig(M,0,r<<1&-2,1&(c<<1|r>>>31)))|0,C=f+e|0,w=1+(C=(j=r>>>0<c>>>0?C+1|0:C)+w|0)|0,t=C,c=(C=r+n|0)>>>0<r>>>0?w:t,e=C+(t=Ig(n,0,r<<1&-2,1&(j<<1|r>>>31)))|0,C=f+c|0,G=UI(e^b,(R=e>>>0<t>>>0?C+1|0:C)^G,32),W=f,t=($=i[E+388>>2])+(C=i[E+132>>2])|0,H=(w=i[E+384>>2])+(c=i[E+128>>2])|0,l=Ig(c<<1&-2,1&(C<<1|c>>>31),w,0),c=f+(c>>>0>H>>>0?t+1|0:t)|0,H=(C=H+l|0)>>>0<l>>>0?c+1|0:c,L=(l=UI(C^i[E+896>>2],H^i[E+900>>2],32))+(t=i[E+640>>2])|0,m=(AA=f)+(c=i[E+644>>2])|0,K=Ig(l,0,t<<1&-2,1&(c<<1|t>>>31)),t=f+(t>>>0>L>>>0?m+1|0:m)|0,w=UI(w^(c=K+L|0),$^(L=c>>>0<K>>>0?t+1|0:t),40),U=1+(t=H+($=f)|0)|0,K=t,m=(t=C+w|0)>>>0<C>>>0?U:K,C=Ig(w,0,C<<1&-2,1&(H<<1|C>>>31)),H=f+m|0,H=UI(K=(t=C+t|0)^l,AA^(l=C>>>0>t>>>0?H+1|0:H),48),U=1+(C=L+(AA=f)|0)|0,K=C,m=(C=c+H|0)>>>0<c>>>0?U:K,c=Ig(H,0,c<<1&-2,1&(L<<1|c>>>31)),L=f+m|0,U=1+(c=(L=(C=c+C|0)>>>0<c>>>0?L+1|0:L)+W|0)|0,K=c,m=(c=C+G|0)>>>0<C>>>0?U:K,U=n^(c=(K=Ig(G,0,C<<1&-2,1&(L<<1|C>>>31)))+c|0),n=f+m|0,n=UI(U,Y^(m=c>>>0<K>>>0?n+1|0:n),40),T=1+(K=R+(Y=f)|0)|0,U=K,CA=(K=e+n|0)>>>0<e>>>0?T:U,e=(R=Ig(n,0,e<<1&-2,1&(R<<1|e>>>31)))+K|0,i[E>>2]=e,K=f+CA|0,R=e>>>0<R>>>0?K+1|0:K,i[E+4>>2]=R,e=UI(e^G,R^W,48),i[E+904>>2]=e,G=f,i[E+908>>2]=G,U=1+(G=G+m|0)|0,K=G,R=(G=c+e|0)>>>0<c>>>0?U:K,e=(c=Ig(e,0,c<<1&-2,1&(m<<1|c>>>31)))+G|0,i[E+640>>2]=e,G=f+R|0,c=c>>>0>e>>>0?G+1|0:G,i[E+644>>2]=c,eA=E,yA=UI(e^n,c^Y,1),i[eA+264>>2]=yA,i[E+268>>2]=f,e=UI(C^w,L^$,1),G=1+(C=X+(w=f)|0)|0,n=C,c=(C=Q+e|0)>>>0<Q>>>0?G:n,C=C+(n=Ig(e,0,Q<<1&-2,1&(X<<1|Q>>>31)))|0,Q=f+c|0,c=UI(r^Z,j^QA,48),Q=UI(c^C,(n=C>>>0<n>>>0?Q+1|0:Q)^(X=f),32),Z=G=f,K=1+(r=J+x|0)|0,Y=r,j=(r=B+b|0)>>>0<B>>>0?K:Y,B=Ig(b,0,B<<1&-2,1&(J<<1|B>>>31)),b=f+j|0,Y=1+(B=(b=B>>>0>(r=B+r|0)>>>0?b+1|0:b)+G|0)|0,G=B,G=(B=Q+r|0)>>>0<r>>>0?Y:G,Y=e^(B=(J=Ig(Q,0,r<<1&-2,1&(b<<1|r>>>31)))+B|0),e=f+G|0,e=UI(Y,w^(G=B>>>0<J>>>0?e+1|0:e),40),K=1+(J=n+(w=f)|0)|0,Y=J,j=(J=C+e|0)>>>0<C>>>0?K:Y,Y=Q^(C=(n=Ig(e,0,C<<1&-2,1&(n<<1|C>>>31)))+J|0),Q=f+j|0,Q=UI(Y,Z^(n=C>>>0<n>>>0?Q+1|0:Q),48),i[E+768>>2]=Q,J=f,i[E+772>>2]=J,i[E+8>>2]=C,i[E+12>>2]=n,Y=1+(C=G+J|0)|0,n=C,n=(C=B+Q|0)>>>0<B>>>0?Y:n,B=Ig(Q,0,B<<1&-2,1&(G<<1|B>>>31)),Q=f+n|0,eA=E,yA=UI((C=B+C|0)^e,w^(B=C>>>0<B>>>0?Q+1|0:Q),1),i[eA+384>>2]=yA,i[E+388>>2]=f,i[E+648>>2]=C,i[E+652>>2]=B,Q=UI(r^d,b^P,1),B=1+(r=l+(d=f)|0)|0,C=r,B=(r=Q+t|0)>>>0<t>>>0?B:C,C=r+(e=Ig(Q,0,t<<1&-2,1&(l<<1|t>>>31)))|0,r=f+B|0,e=UI(C^k,BA^(t=C>>>0<e>>>0?r+1|0:r),32),b=B=f,k=1+(r=q+X|0)|0,B=r,k=(r=c+p|0)>>>0<p>>>0?k:B,p=Ig(c,0,p<<1&-2,1&(q<<1|p>>>31)),B=f+k|0,w=1+(B=b+(p=(r=p+r|0)>>>0<p>>>0?B+1|0:B)|0)|0,k=B,c=(B=r+e|0)>>>0<r>>>0?w:k,w=Q^(B=B+(k=Ig(e,0,r<<1&-2,1&(p<<1|r>>>31)))|0),Q=f+c|0,Q=UI(w,d^(c=B>>>0<k>>>0?Q+1|0:Q),40),n=1+(k=t+(d=f)|0)|0,w=k,n=(k=C+Q|0)>>>0<C>>>0?n:w,C=(t=Ig(Q,0,C<<1&-2,1&(t<<1|C>>>31)))+k|0,i[E+128>>2]=C,k=f+n|0,t=C>>>0<t>>>0?k+1|0:k,i[E+132>>2]=t,C=UI(C^e,t^b,48),i[E+776>>2]=C,e=f,i[E+780>>2]=e,k=1+(e=c+e|0)|0,t=e,t=(e=C+B|0)>>>0<B>>>0?k:t,B=(C=Ig(C,0,B<<1&-2,1&(c<<1|B>>>31)))+e|0,e=f+t|0,t=C=C>>>0>B>>>0?e+1|0:e,i[E+512>>2]=B,i[E+516>>2]=C,C=(p=UI(r^M,p^gA,1))+F|0,e=(b=f)+v|0,r=(c=Ig(F<<1&-2,1&(v<<1|F>>>31),p,0))+C|0,C=f+(C>>>0<p>>>0?e+1|0:e)|0,e=UI(r^H,AA^(c=r>>>0<c>>>0?C+1|0:C),32),w=1+(C=O+(F=f)|0)|0,k=C,k=(C=e+y|0)>>>0<y>>>0?w:k,w=p^(C=(y=Ig(e,0,y<<1&-2,1&(O<<1|y>>>31)))+C|0),p=f+k|0,y=UI(w,b^(p=C>>>0<y>>>0?p+1|0:p),40),n=1+(k=c+(b=f)|0)|0,w=k,n=(k=r+y|0)>>>0<r>>>0?n:w,k=e^(c=(r=Ig(y,0,r<<1&-2,1&(c<<1|r>>>31)))+k|0),e=f+n|0,r=UI(k,F^(e=r>>>0>c>>>0?e+1|0:e),48),n=1+(k=p+(F=f)|0)|0,w=k,n=(k=C+r|0)>>>0<C>>>0?n:w,C=(p=Ig(r,0,C<<1&-2,1&(p<<1|C>>>31)))+k|0,i[E+520>>2]=C,k=f+n|0,p=C>>>0<p>>>0?k+1|0:k,i[E+524>>2]=p,i[E+896>>2]=r,i[E+900>>2]=F,i[E+136>>2]=c,i[E+140>>2]=e,eA=E,yA=UI(B^Q,t^d,1),i[eA+392>>2]=yA,i[E+396>>2]=f,eA=E,yA=UI(C^y,p^b,1),i[eA+256>>2]=yA,i[E+260>>2]=f,8!=(0|(S=S+1|0)););for(E=Ng(_A,g+2048|0,1024),r=0;Q=i[(C=(S=r<<3)+E|0)>>2],p=i[(y=(B=g+3072|0)+S|0)>>2],y=i[C+4>>2]^i[y+4>>2],i[C>>2]=Q^p,i[C+4>>2]=y,y=i[(C=(Q=8|S)+E|0)>>2],p=i[(Q=B+Q|0)>>2],Q=i[C+4>>2]^i[Q+4>>2],i[C>>2]=y^p,i[C+4>>2]=Q,y=i[(C=(Q=16|S)+E|0)>>2],p=i[(Q=B+Q|0)>>2],Q=i[C+4>>2]^i[Q+4>>2],i[C>>2]=y^p,i[C+4>>2]=Q,Q=i[(S=(C=24|S)+E|0)>>2],B=i[(C=C+B|0)>>2],C=i[S+4>>2]^i[C+4>>2],i[S>>2]=B^Q,i[S+4>>2]=C,128!=(0|(r=r+4|0)););}if(r=EA+1|0,z=z+1|0,!((S=i[A+20>>2])>>>0>(u=u+1|0)>>>0))break}}s=g+4096|0}function S(A){var I,g,B,Q,i,E,a,_,c,t,r,e=0,y=0,s=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0;h=(U=o[A+44|0]|o[A+45|0]<<8|o[A+46|0]<<16|o[A+47|0]<<24)>>>5&2097151,s=Ig(I=(o[A+60|0]|o[A+61|0]<<8|o[A+62|0]<<16|o[A+63|0]<<24)>>>3|0,0,-683901,-1),y=(e=o[A+44|0])<<16&2031616|o[A+42|0]|o[A+43|0]<<8,e=f,n=e=y>>>0>(F=s+y|0)>>>0?e+1|0:e,M=e=e-((F>>>0<4293918720)-1|0)|0,s=e>>21,e=(y=h)+(h=(2097151&e)<<11|(p=F- -1048576|0)>>>21)|0,y=s,m=y=e>>>0<h>>>0?y+1|0:y,z=e,G=Ig(e,y,-683901,-1),k=f,w=Ig(g=(o[A+49|0]|o[A+50|0]<<8|o[A+51|0]<<16|o[A+52|0]<<24)>>>7&2097151,0,-997805,-1),s=(e=o[A+27|0])>>>24|0,h=e<<8|(K=o[A+23|0]|o[A+24|0]<<8|o[A+25|0]<<16|o[A+26|0]<<24)>>>24,y=(e=o[A+28|0])>>>16|0,y=2097151&((3&(y|=s))<<30|(e=h|e<<16)>>>2),e=f,e=y>>>0>(s=y+w|0)>>>0?e+1|0:e,y=Ig(P=(S=o[A+52|0]|o[A+53|0]<<8|o[A+54|0]<<16|o[A+55|0]<<24)>>>4&2097151,0,654183,0),e=f+e|0,w=s=y+s|0,s=y>>>0>s>>>0?e+1|0:e,D=(y=o[A+48|0])<<8|U>>>24,y=e=y>>>24|0,e=Ig(B=2097151&((3&(U=(e=(h=o[A+49|0])>>>16|0)|y))<<30|(y=(h<<=16)|D)>>>2),0,136657,0),s=f+s|0,s=e>>>0>(y=e+w|0)>>>0?s+1|0:s,h=(e=Ig(Q=(o[A+57|0]|o[A+58|0]<<8|o[A+59|0]<<16|o[A+60|0]<<24)>>>6&2097151,0,666643,0))+y|0,y=f+s|0,w=h,s=e>>>0>h>>>0?y+1|0:y,y=(e=o[A+56|0])>>>24|0,D=e<<8|S>>>24,y=Ig(i=2097151&((1&(S=(e=(h=o[A+57|0])>>>16|0)|y))<<31|(y=(h<<=16)|D)>>>1),0,470296,0),e=f+s|0,y=(e=(s=h=y+w|0)>>>0<y>>>0?e+1|0:e)+k|0,y=s>>>0>(h=s+G|0)>>>0?y+1|0:y,b=s- -1048576|0,l=s=e-((s>>>0<4293918720)-1|0)|0,k=h-(e=-2097152&b)|0,G=y-((e>>>0>h>>>0)+s|0)|0,y=Ig(g,0,654183,0),e=f,e=y>>>0>(s=y+(K>>>5&2097151)|0)>>>0?e+1|0:e,h=(y=s)+(s=Ig(P,0,470296,0))|0,y=f+e|0,y=s>>>0>h>>>0?y+1|0:y,e=Ig(B,j,-997805,-1),y=f+y|0,y=e>>>0>(s=e+h|0)>>>0?y+1|0:y,h=(e=s)+(s=Ig(i,X,666643,0))|0,e=f+y|0,D=h,h=s>>>0>h>>>0?e+1|0:e,w=(s=Ig(g,0,470296,0))+(e=(e=o[A+23|0])<<16&2031616|o[A+21|0]|o[A+22|0]<<8)|0,s=f,s=e>>>0>w>>>0?s+1|0:s,w=(y=Ig(P,0,666643,0))+w|0,e=f+s|0,s=Ig(B,j,654183,0),y=f+(y>>>0>w>>>0?e+1|0:e)|0,S=y=s>>>0>(K=s+w|0)>>>0?y+1|0:y,L=y=y-((K>>>0<4293918720)-1|0)|0,e=(e=y>>>21|0)+h|0,s=e=(y=(2097151&y)<<11|(w=K- -1048576|0)>>>21)>>>0>(D=y+D|0)>>>0?e+1|0:e,N=y=e-((D>>>0<4293918720)-1|0)|0,e=k,k=(2097151&y)<<11|(h=D- -1048576|0)>>>21,y=(y>>21)+G|0,U=k=(y=k>>>0>(H=e+k|0)>>>0?y+1|0:y)-((H>>>0<4293918720)-1|0)|0,q=H-(e=-2097152&(G=H- -1048576|0))|0,O=y-((e>>>0>H>>>0)+k|0)|0,e=Ig(z,m,136657,0),s=f+s|0,s=e>>>0>(y=e+D|0)>>>0?s+1|0:s,d=y-(e=-2097152&h)|0,Y=s-((e>>>0>y>>>0)+N|0)|0,H=F-(e=-2097152&p)|0,M=n-((e>>>0>F>>>0)+M|0)|0,n=Ig(I,0,136657,0),y=(e=o[A+40|0])>>>24|0,h=e<<8|(p=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24)>>>24,s=(e=o[A+41|0])>>>16|0,y=(s|=y)>>>3|0,s=(7&s)<<29|(e=h|e<<16)>>>3,e=y+f|0,e=s>>>0>(h=s+n|0)>>>0?e+1|0:e,y=Ig(Q,0,-683901,-1),e=f+e|0,e=y>>>0>(s=y+h|0)>>>0?e+1|0:e,D=s,y=Ig(I,0,-997805,-1),s=f,s=y>>>0>(h=y+(p>>>6&2097151)|0)>>>0?s+1|0:s,p=(y=h)+(h=Ig(Q,0,136657,0))|0,y=f+s|0,s=Ig(i,X,-683901,-1),y=f+(h>>>0>p>>>0?y+1|0:y)|0,k=y=s>>>0>(u=s+p|0)>>>0?y+1|0:y,W=s=y-((u>>>0<4293918720)-1|0)|0,e=e+(y=s>>21)|0,p=e=(s=(2097151&s)<<11|(F=u- -1048576|0)>>>21)>>>0>(N=s+D|0)>>>0?e+1|0:e,x=e=e-((N>>>0<4293918720)-1|0)|0,y=(y=e>>21)+M|0,R=y=(e=(s=(2097151&e)<<11|(D=N- -1048576|0)>>>21)+H|0)>>>0<s>>>0?y+1|0:y,v=e,y=Ig(e,y,-683901,-1),e=f+Y|0,J=s=y+d|0,h=y>>>0>s>>>0?e+1|0:e,H=K-(e=-2097152&w)|0,M=S-((4095&L)+(e>>>0>K>>>0)|0)|0,K=Ig(g,0,666643,0),e=(y=o[A+19|0])>>>24|0,w=y<<8|(S=o[A+15|0]|o[A+16|0]<<8|o[A+17|0]<<16|o[A+18|0]<<24)>>>24,s=e,y=(7&(s|=y=(e=o[A+20|0])>>>16|0))<<29|(y=(e<<=16)|w)>>>3,s=f+(s>>>3|0)|0,s=y>>>0>(w=y+K|0)>>>0?s+1|0:s,e=Ig(B,j,470296,0),y=f+s|0,e=e>>>0>(w=e+w|0)>>>0?y+1|0:y,s=Ig(B,j,666643,0),y=f,K=y=s>>>0>(d=s+(S>>>6&2097151)|0)>>>0?y+1|0:y,V=s=y-((d>>>0<4293918720)-1|0)|0,e=e+(y=s>>>21|0)|0,S=e=(s=(2097151&s)<<11|(n=d- -1048576|0)>>>21)>>>0>(Y=s+w|0)>>>0?e+1|0:e,Z=e=e-((Y>>>0<4293918720)-1|0)|0,y=(y=e>>>21|0)+M|0,y=(e=(2097151&e)<<11|(w=Y- -1048576|0)>>>21)>>>0>(s=e+H|0)>>>0?y+1|0:y,M=(e=s)+(s=Ig(z,m,-997805,-1))|0,e=f+y|0,e=s>>>0>M>>>0?e+1|0:e,L=y=N-(s=-2097152&D)|0,E=D=p-((s>>>0>N>>>0)+x|0)|0,s=Ig(v,R,136657,0),e=f+e|0,e=s>>>0>(p=s+M|0)>>>0?e+1|0:e,s=Ig(y,D,-683901,-1),y=f+e|0,p=y=s>>>0>(M=s+p|0)>>>0?y+1|0:y,x=e=y-((M>>>0<4293918720)-1|0)|0,y=(2097151&e)<<11|(D=M- -1048576|0)>>>21,e=(e>>21)+h|0,J=y=(e=y>>>0>(N=y+J|0)>>>0?e+1|0:e)-((N>>>0<4293918720)-1|0)|0,H=(2097151&y)<<11|(h=N- -1048576|0)>>>21,y=(y>>21)+O|0,_=q=H+q|0,H=H>>>0>q>>>0?y+1|0:y,c=N-(y=-2097152&h)|0,t=e-((y>>>0>N>>>0)+J|0)|0,q=M-(e=-2097152&D)|0,O=p-((e>>>0>M>>>0)+x|0)|0,s=(e=Ig(z,m,654183,0))+(Y-(y=-2097152&w)|0)|0,y=f+(S-((2147483647&Z)+(y>>>0>Y>>>0)|0)|0)|0,y=e>>>0>s>>>0?y+1|0:y,e=Ig(v,R,-997805,-1),y=f+y|0,y=e>>>0>(s=e+s|0)>>>0?y+1|0:y,h=(e=s)+(s=Ig(L,E,136657,0))|0,e=f+y|0,J=h,p=s>>>0>h>>>0?e+1|0:e,Y=u-(e=-2097152&F)|0,N=k-((e>>>0>u>>>0)+W|0)|0,S=Ig(P,0,-683901,-1),e=(y=o[A+35|0])>>>24|0,h=y<<8|(w=o[A+31|0]|o[A+32|0]<<8|o[A+33|0]<<16|o[A+34|0]<<24)>>>24,s=e,y=(e=o[A+36|0])>>>16|0,y|=s,s=f,s=(e=2097151&((1&y)<<31|(e=e<<16|h)>>>1))>>>0>(y=e+S|0)>>>0?s+1|0:s,h=(e=Ig(I,0,654183,0))+y|0,y=f+s|0,y=e>>>0>h>>>0?y+1|0:y,s=Ig(Q,0,-997805,-1),e=f+y|0,e=s>>>0>(h=s+h|0)>>>0?e+1|0:e,y=Ig(i,X,136657,0),e=f+e|0,D=s=y+h|0,h=y>>>0>s>>>0?e+1|0:e,e=Ig(g,0,-683901,-1),y=f,y=e>>>0>(s=e+(w>>>4&2097151)|0)>>>0?y+1|0:y,w=(e=Ig(P,0,136657,0))+s|0,s=f+y|0,s=e>>>0>w>>>0?s+1|0:s,e=Ig(I,0,470296,0),y=f+s|0,y=e>>>0>(w=e+w|0)>>>0?y+1|0:y,w=(s=Ig(Q,0,654183,0))+w|0,e=f+y|0,y=Ig(i,X,-997805,-1),e=f+(s>>>0>w>>>0?e+1|0:e)|0,S=e=y>>>0>(k=y+w|0)>>>0?e+1|0:e,r=y=e-((k>>>0<4293918720)-1|0)|0,s=(e=y>>21)+h|0,M=y=(s=(y=(2097151&y)<<11|(w=k- -1048576|0)>>>21)>>>0>(F=y+D|0)>>>0?s+1|0:s)-((F>>>0<4293918720)-1|0)|0,e=(e=y>>21)+N|0,x=e=(y=(h=(2097151&y)<<11|(D=F- -1048576|0)>>>21)+Y|0)>>>0<h>>>0?e+1|0:e,h=J,J=y,e=Ig(y,e,-683901,-1),y=f+p|0,N=h=h+e|0,h=e>>>0>h>>>0?y+1|0:y,p=(e=Ig(z,m,470296,0))+(d-(y=-2097152&n)|0)|0,y=f+(K-((2047&V)+(y>>>0>d>>>0)|0)|0)|0,y=e>>>0>p>>>0?y+1|0:y,n=(e=p)+(p=Ig(v,R,654183,0))|0,e=f+y|0,e=p>>>0>n>>>0?e+1|0:e,p=Ig(L,E,-997805,-1),y=f+e|0,y=p>>>0>(n=p+n|0)>>>0?y+1|0:y,u=D=F-(e=-2097152&D)|0,a=p=s-((e>>>0>F>>>0)+M|0)|0,s=Ig(J,x,136657,0),e=f+y|0,e=s>>>0>(n=s+n|0)>>>0?e+1|0:e,s=Ig(D,p,-683901,-1),y=f+e|0,p=y=s>>>0>(K=s+n|0)>>>0?y+1|0:y,Y=e=y-((K>>>0<4293918720)-1|0)|0,y=(2097151&e)<<11|(D=K- -1048576|0)>>>21,e=(e>>21)+h|0,N=y=(e=y>>>0>(n=y+N|0)>>>0?e+1|0:e)-((n>>>0<4293918720)-1|0)|0,F=(2097151&y)<<11|(h=n- -1048576|0)>>>21,y=(y>>21)+O|0,W=M=F+q|0,M=F>>>0>M>>>0?y+1|0:y,V=n-(y=-2097152&h)|0,Z=e-((y>>>0>n>>>0)+N|0)|0,q=K-(e=-2097152&D)|0,O=p-((e>>>0>K>>>0)+Y|0)|0,p=Ig(z,m,666643,0),e=(y=o[A+14|0])>>>24|0,h=y<<8|(N=o[A+10|0]|o[A+11|0]<<8|o[A+12|0]<<16|o[A+13|0]<<24)>>>24,s=e,y=(e=o[A+15|0])>>>16|0,y|=s,s=f,s=(e=2097151&((1&y)<<31|(e=e<<16|h)>>>1))>>>0>(y=e+p|0)>>>0?s+1|0:s,h=(e=y)+(y=Ig(v,R,470296,0))|0,e=f+s|0,e=y>>>0>h>>>0?e+1|0:e,y=Ig(L,E,654183,0),e=f+e|0,e=y>>>0>(s=y+h|0)>>>0?e+1|0:e,h=(y=s)+(s=Ig(J,x,-997805,-1))|0,y=f+e|0,y=s>>>0>h>>>0?y+1|0:y,e=Ig(u,a,136657,0),y=f+y|0,K=s=e+h|0,h=e>>>0>s>>>0?y+1|0:y,w=k-(e=-2097152&w)|0,p=S-((e>>>0>k>>>0)+r|0)|0,s=Ig(g,0,136657,0),e=f,e=(y=(o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24)>>>7&2097151)>>>0>(s=y+s|0)>>>0?e+1|0:e,D=(y=s)+(s=Ig(P,0,-997805,-1))|0,y=f+e|0,y=s>>>0>D>>>0?y+1|0:y,e=Ig(B,j,-683901,-1),y=f+y|0,y=e>>>0>(s=e+D|0)>>>0?y+1|0:y,D=(e=Ig(I,0,666643,0))+s|0,s=f+y|0,s=e>>>0>D>>>0?s+1|0:s,y=Ig(Q,0,470296,0),e=f+s|0,e=y>>>0>(D=y+D|0)>>>0?e+1|0:e,y=Ig(i,X,654183,0),e=f+e|0,y=(l>>21)+(y>>>0>(s=y+D|0)>>>0?e+1|0:e)|0,F=y=(D=(2097151&l)<<11|b>>>21)>>>0>(b=D+s|0)>>>0?y+1|0:y,l=e=y-((b>>>0<4293918720)-1|0)|0,D=(2097151&e)<<11|(n=b- -1048576|0)>>>21,e=(e>>21)+p|0,d=e=(y=D+w|0)>>>0<D>>>0?e+1|0:e,Y=y,y=Ig(y,e,-683901,-1),e=f+h|0,D=s=y+K|0,h=y>>>0>s>>>0?e+1|0:e,e=Ig(v,R,666643,0),y=f,y=e>>>0>(s=e+(N>>>4&2097151)|0)>>>0?y+1|0:y,e=Ig(L,E,470296,0),y=f+y|0,y=e>>>0>(s=e+s|0)>>>0?y+1|0:y,p=(e=Ig(J,x,654183,0))+s|0,s=f+y|0,s=e>>>0>p>>>0?s+1|0:s,y=Ig(u,a,-997805,-1),e=f+s|0,e=y>>>0>(p=y+p|0)>>>0?e+1|0:e,y=Ig(Y,d,136657,0),e=f+e|0,S=e=y>>>0>(k=y+p|0)>>>0?e+1|0:e,R=y=e-((k>>>0<4293918720)-1|0)|0,e=D,D=(2097151&y)<<11|(w=k- -1048576|0)>>>21,y=(y>>21)+h|0,v=h=(y=(s=e+D|0)>>>0<D>>>0?y+1|0:y)-((s>>>0<4293918720)-1|0)|0,e=(e=h>>21)+O|0,z=D=(h=(2097151&h)<<11|(p=s- -1048576|0)>>>21)+q|0,K=h>>>0>D>>>0?e+1|0:e,D=s,s=y,h=(b-(y=-2097152&n)|0)+(n=(2097151&U)<<11|G>>>21)|0,y=(F-((y>>>0>b>>>0)+l|0)|0)+(U>>21)|0,N=y=h>>>0<n>>>0?y+1|0:y,P=y=y-((h>>>0<4293918720)-1|0)|0,G=e=y>>21,e=Ig(m=(2097151&y)<<11|(l=h- -1048576|0)>>>21,e,-683901,-1),s=f+s|0,s=e>>>0>(y=e+D|0)>>>0?s+1|0:s,j=y-(e=-2097152&p)|0,X=s-((e>>>0>y>>>0)+v|0)|0,e=Ig(m,G,136657,0),y=S+f|0,v=(s=e+k|0)-(e=-2097152&w)|0,b=(y=s>>>0<k>>>0?y+1|0:y)-((e>>>0>s>>>0)+R|0)|0,y=Ig(L,E,666643,0),s=f,s=(e=(o[A+7|0]|o[A+8|0]<<8|o[A+9|0]<<16|o[A+10|0]<<24)>>>7&2097151)>>>0>(y=e+y|0)>>>0?s+1|0:s,D=(e=Ig(J,x,470296,0))+y|0,y=f+s|0,y=e>>>0>D>>>0?y+1|0:y,e=Ig(u,a,654183,0),y=f+y|0,y=e>>>0>(s=e+D|0)>>>0?y+1|0:y,D=(e=s)+(s=Ig(Y,d,-997805,-1))|0,e=f+y|0,n=D,D=s>>>0>D>>>0?e+1|0:e,S=Ig(J,x,666643,0),e=(y=o[A+6|0])>>>24|0,p=y<<8|(R=o[A+2|0]|o[A+3|0]<<8|o[A+4|0]<<16|o[A+5|0]<<24)>>>24,s=e,y=(e=o[A+7|0])>>>16|0,y=2097151&((3&(y|=s))<<30|(e=e<<16|p)>>>2),e=f,e=y>>>0>(s=y+S|0)>>>0?e+1|0:e,p=(y=Ig(u,a,470296,0))+s|0,s=f+e|0,s=y>>>0>p>>>0?s+1|0:s,y=Ig(Y,d,654183,0),e=f+s|0,S=e=y>>>0>(F=y+p|0)>>>0?e+1|0:e,U=e=e-((F>>>0<4293918720)-1|0)|0,y=(s=e>>21)+D|0,k=e=(y=(e=(2097151&e)<<11|(w=F- -1048576|0)>>>21)>>>0>(p=e+n|0)>>>0?y+1|0:y)-((p>>>0<4293918720)-1|0)|0,n=(2097151&e)<<11|(D=p- -1048576|0)>>>21,e=(e>>21)+b|0,v=J=n+v|0,n=n>>>0>J>>>0?e+1|0:e,e=Ig(m,G,-997805,-1),y=f+y|0,y=e>>>0>(s=e+p|0)>>>0?y+1|0:y,L=s-(e=-2097152&D)|0,x=y-((e>>>0>s>>>0)+k|0)|0,y=Ig(m,G,654183,0),e=S+f|0,J=(s=y+F|0)-(y=-2097152&w)|0,b=(e=s>>>0<F>>>0?e+1|0:e)-((y>>>0>s>>>0)+U|0)|0,e=Ig(u,a,666643,0),y=f,y=e>>>0>(s=e+(R>>>5&2097151)|0)>>>0?y+1|0:y,e=Ig(Y,d,470296,0),y=f+y|0,p=s=e+s|0,s=e>>>0>s>>>0?y+1|0:y,D=Ig(Y,d,666643,0),y=(e=o[A+2|0])<<16&2031616|o[0|A]|o[A+1|0]<<8,e=f,S=e=y>>>0>(k=D+y|0)>>>0?e+1|0:e,d=e=e-((k>>>0<4293918720)-1|0)|0,D=(2097151&e)<<11|(w=k- -1048576|0)>>>21,e=(e>>21)+s|0,s=e=D>>>0>(F=D+p|0)>>>0?e+1|0:e,U=e=e-((F>>>0<4293918720)-1|0)|0,D=(2097151&e)<<11|(p=F- -1048576|0)>>>21,e=(e>>21)+b|0,D=D>>>0>(Y=D+J|0)>>>0?e+1|0:e,e=Ig(m,G,470296,0),s=s+f|0,s=(y=e+F|0)>>>0<F>>>0?s+1|0:s,F=y-(e=-2097152&p)|0,p=s-((e>>>0>y>>>0)+U|0)|0,y=Ig(m,G,666643,0),e=f+(S-(((s=-2097152&w)>>>0>k>>>0)+d|0)|0)|0,y=(s=(e=y>>>0>(b=y+(k-s|0)|0)>>>0?e+1|0:e)>>21)+p|0,e=(e=(y=(e=(2097151&e)<<11|b>>>21)>>>0>(U=e+F|0)>>>0?y+1|0:y)>>21)+D|0,y=(y=(e=(y=(2097151&y)<<11|U>>>21)>>>0>(G=y+Y|0)>>>0?e+1|0:e)>>21)+x|0,s=(e=(y=(e=(2097151&e)<<11|G>>>21)>>>0>(D=e+L|0)>>>0?y+1|0:y)>>21)+n|0,e=(y=(s=(y=(2097151&y)<<11|D>>>21)>>>0>(k=y+v|0)>>>0?s+1|0:s)>>21)+X|0,y=(s=(e=(s=(2097151&s)<<11|k>>>21)>>>0>(F=s+j|0)>>>0?e+1|0:e)>>21)+K|0,K=p=(e=(2097151&e)<<11|F>>>21)+z|0,e=(e=(y=e>>>0>p>>>0?y+1|0:y)>>21)+Z|0,y=(y=(e=(y=(2097151&y)<<11|p>>>21)>>>0>(n=y+V|0)>>>0?e+1|0:e)>>21)+M|0,s=(e=(y=(e=(2097151&e)<<11|n>>>21)>>>0>(S=e+W|0)>>>0?y+1|0:y)>>21)+t|0,e=(y=(s=(y=(2097151&y)<<11|S>>>21)>>>0>(w=y+c|0)>>>0?s+1|0:s)>>21)+H|0,l=(M=h-(y=-2097152&l)|0)+((2097151&(e=(s=(2097151&s)<<11|w>>>21)>>>0>(p=s+_|0)>>>0?e+1|0:e))<<11|p>>>21)|0,e=(N-((y>>>0>h>>>0)+P|0)|0)+(e>>21)|0,N=y=(e=M>>>0>l>>>0?e+1|0:e)>>21,b=(e=Ig(H=(2097151&e)<<11|l>>>21,y,666643,0))+(y=2097151&b)|0,e=f,h=e=y>>>0>b>>>0?e+1|0:e,C[0|A]=b,C[A+1|0]=(255&e)<<24|b>>>8,e=2097151&U,y=Ig(H,N,470296,0)+e|0,s=f,e=(h>>21)+(e>>>0>y>>>0?s+1|0:s)|0,e=(M=(2097151&h)<<11|b>>>21)>>>0>(U=M+y|0)>>>0?e+1|0:e,C[A+4|0]=(2047&e)<<21|U>>>11,y=e,s=U,C[A+3|0]=(7&e)<<29|s>>>3,C[A+2|0]=31&((65535&h)<<16|b>>>16)|s<<5,h=2097151&G,G=Ig(H,N,654183,0)+h|0,e=f,U=(2097151&y)<<11|s>>>21,y=(y>>21)+(h=h>>>0>G>>>0?e+1|0:e)|0,e=y=(G=U+G|0)>>>0<U>>>0?y+1|0:y,C[A+6|0]=(63&e)<<26|G>>>6,h=G,G=0,C[A+5|0]=G<<13|(1572864&s)>>>19|h<<2,s=2097151&D,D=Ig(H,N,-997805,-1)+s|0,y=f,y=s>>>0>D>>>0?y+1|0:y,G=(2097151&(s=e))<<11|h>>>21,s=(e>>=21)+y|0,s=(D=G+D|0)>>>0<G>>>0?s+1|0:s,C[A+9|0]=(511&s)<<23|D>>>9,C[A+8|0]=(1&s)<<31|D>>>1,y=0,C[A+7|0]=y<<18|(2080768&h)>>>14|D<<7,y=2097151&k,h=Ig(H,N,136657,0)+y|0,e=f,e=y>>>0>h>>>0?e+1|0:e,k=(2097151&(y=s))<<11|D>>>21,y=e+(s=y>>21)|0,y=(h=k+h|0)>>>0<k>>>0?y+1|0:y,C[A+12|0]=(4095&y)<<20|h>>>12,s=h,C[A+11|0]=(15&y)<<28|s>>>4,h=0,C[A+10|0]=h<<15|(1966080&D)>>>17|s<<4,h=2097151&F,D=Ig(H,N,-683901,-1)+h|0,e=f,e=h>>>0>D>>>0?e+1|0:e,h=y,y=e+(y>>=21)|0,y=(h=(J=D)+(D=(2097151&h)<<11|s>>>21)|0)>>>0<D>>>0?y+1|0:y,C[A+14|0]=(127&y)<<25|h>>>7,D=0,C[A+13|0]=D<<12|(1048576&s)>>>20|h<<1,e=y>>21,s=(y=(2097151&y)<<11|h>>>21)>>>0>(D=y+(2097151&K)|0)>>>0?e+1|0:e,C[A+17|0]=(1023&s)<<22|D>>>10,C[A+16|0]=(3&s)<<30|D>>>2,y=0,C[A+15|0]=y<<17|(2064384&h)>>>15|D<<6,e=s>>21,e=(y=(2097151&s)<<11|D>>>21)>>>0>(s=y+(2097151&n)|0)>>>0?e+1|0:e,C[A+20|0]=(8191&e)<<19|s>>>13,C[A+19|0]=(31&e)<<27|s>>>5,h=(y=2097151&S)+(S=(2097151&e)<<11|s>>>21)|0,y=e>>21,y=h>>>0<S>>>0?y+1|0:y,S=h,C[A+21|0]=h,n=0,C[A+18|0]=n<<14|(1835008&D)>>>18|s<<3,C[A+22|0]=(255&y)<<24|h>>>8,s=y>>21,s=(h=(D=(2097151&y)<<11|h>>>21)+(2097151&w)|0)>>>0<D>>>0?s+1|0:s,C[A+25|0]=(2047&s)<<21|h>>>11,C[A+24|0]=(7&s)<<29|h>>>3,C[A+23|0]=31&((65535&y)<<16|S>>>16)|h<<5,e=s>>21,e=(y=(2097151&s)<<11|h>>>21)>>>0>(s=y+(2097151&p)|0)>>>0?e+1|0:e,C[A+27|0]=(63&e)<<26|s>>>6,D=0,C[A+26|0]=D<<13|(1572864&h)>>>19|s<<2,y=e,e>>=21,y=(h=(p=(2097151&y)<<11|s>>>21)+(D=2097151&l)|0)>>>0<D>>>0?e+1|0:e,C[A+31|0]=(131071&y)<<15|h>>>17,e=h,C[A+30|0]=(511&y)<<23|e>>>9,h=0,C[A+28|0]=h<<18|(2080768&s)>>>14|e<<7,C[A+29|0]=p+l>>>1}function N(A,I,g){var C,B=0,Q=0,o=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0;for(s=E=s-2048|0,Ng(E+1024|0,I,1024),I=0;Q=i[(_=(o=E+1024|0)+(B=I<<3)|0)>>2],a=i[(c=A+B|0)>>2],c=i[_+4>>2]^i[c+4>>2],i[_>>2]=Q^a,i[_+4>>2]=c,c=i[(_=(Q=8|B)+o|0)>>2],a=i[(Q=A+Q|0)>>2],Q=i[_+4>>2]^i[Q+4>>2],i[_>>2]=a^c,i[_+4>>2]=Q,c=i[(_=(Q=16|B)+o|0)>>2],a=i[(Q=A+Q|0)>>2],Q=i[_+4>>2]^i[Q+4>>2],i[_>>2]=a^c,i[_+4>>2]=Q,Q=i[(B=(_=24|B)+o|0)>>2],c=i[(_=A+_|0)>>2],_=i[B+4>>2]^i[_+4>>2],i[B>>2]=Q^c,i[B+4>>2]=_,128!=(0|(I=I+4|0)););for(C=Ng(E,o,1024),A=0,I=0;E=i[(B=(o=I<<3)+C|0)>>2],Q=i[(_=g+o|0)>>2],_=i[B+4>>2]^i[_+4>>2],i[B>>2]=Q^E,i[B+4>>2]=_,_=i[(B=(E=8|o)+C|0)>>2],Q=i[(E=g+E|0)>>2],E=i[B+4>>2]^i[E+4>>2],i[B>>2]=Q^_,i[B+4>>2]=E,_=i[(B=(E=16|o)+C|0)>>2],Q=i[(E=g+E|0)>>2],E=i[B+4>>2]^i[E+4>>2],i[B>>2]=Q^_,i[B+4>>2]=E,E=i[(o=(B=24|o)+C|0)>>2],_=i[(B=g+B|0)>>2],B=i[o+4>>2]^i[B+4>>2],i[o>>2]=E^_,i[o+4>>2]=B,128!=(0|(I=I+4|0)););for(;c=(Q=i[56+(o=(C+1024|0)+(A<<7)|0)>>2])+(B=i[o+24>>2])|0,I=(t=i[o+60>>2])+(E=i[o+28>>2])|0,_=B>>>0>c>>>0?I+1|0:I,E=Ig(B<<1&-2,1&(E<<1|B>>>31),Q,0),I=f+_|0,_=(B=E+c|0)>>>0<E>>>0?I+1|0:I,e=(c=UI(i[o+120>>2]^B,_^i[o+124>>2],32))+(E=i[o+88>>2])|0,I=(y=f)+(a=i[o+92>>2])|0,r=E>>>0>e>>>0?I+1|0:I,a=Ig(E<<1&-2,1&(a<<1|E>>>31),c,0),I=f+r|0,x=UI(Q^(E=a+e|0),t^(h=E>>>0<a>>>0?I+1|0:I),40),I=_+(z=f)|0,Q=(a=B+x|0)>>>0<B>>>0?I+1|0:I,B=Ig(x,0,B<<1&-2,1&(_<<1|B>>>31)),I=f+Q|0,H=UI(c^(F=B+a|0),y^(b=B>>>0>F>>>0?I+1|0:I),48),j=I=f,p=H,e=I,a=(c=i[o+40>>2])+(B=i[o+8>>2])|0,I=(Y=i[o+44>>2])+(_=i[o+12>>2])|0,Q=B>>>0>a>>>0?I+1|0:I,_=Ig(B<<1&-2,1&(_<<1|B>>>31),c,0),I=f+Q|0,Q=(B=_+a|0)>>>0<_>>>0?I+1|0:I,y=(a=UI(i[o+104>>2]^B,Q^i[o+108>>2],32))+(_=i[o+72>>2])|0,I=(w=f)+(r=i[o+76>>2])|0,t=_>>>0>y>>>0?I+1|0:I,r=Ig(_<<1&-2,1&(r<<1|_>>>31),a,0),I=f+t|0,r=UI(t=(_=r+y|0)^c,Y^(c=_>>>0<r>>>0?I+1|0:I),40),I=Q+(n=f)|0,t=(y=B+r|0)>>>0<B>>>0?I+1|0:I,Q=Ig(r,0,B<<1&-2,1&(Q<<1|B>>>31)),I=f+t|0,v=UI((B=Q+y|0)^a,w^(y=B>>>0<Q>>>0?I+1|0:I),48),I=c+(R=f)|0,Q=(a=_+v|0)>>>0<_>>>0?I+1|0:I,c=Ig(v,0,_<<1&-2,1&(c<<1|_>>>31)),I=f+Q|0,M=UI((_=c+a|0)^r,n^(Y=_>>>0<c>>>0?I+1|0:I),1),L=I=f,k=M,t=I,w=(r=i[o+32>>2])+(Q=i[o>>2])|0,I=(J=i[o+36>>2])+(c=i[o+4>>2])|0,a=Q>>>0>w>>>0?I+1|0:I,c=Ig(Q<<1&-2,1&(c<<1|Q>>>31),r,0),I=f+a|0,a=(Q=c+w|0)>>>0<c>>>0?I+1|0:I,D=(d=UI(i[o+96>>2]^Q,a^i[o+100>>2],32))+(c=i[(I=S=o- -64|0)>>2])|0,I=(q=f)+(w=i[I+4>>2])|0,n=c>>>0>D>>>0?I+1|0:I,w=Ig(c<<1&-2,1&(w<<1|c>>>31),d,0),I=f+n|0,J=UI((c=w+D|0)^r,J^(w=c>>>0<w>>>0?I+1|0:I),40),I=a+(X=f)|0,r=(n=Q+J|0)>>>0<Q>>>0?I+1|0:I,a=Ig(J,0,Q<<1&-2,1&(a<<1|Q>>>31)),I=f+r|0,I=(n=(Q=a+n|0)>>>0<a>>>0?I+1|0:I)+t|0,r=(a=Q+k|0)>>>0<Q>>>0?I+1|0:I,t=Ig(k,0,Q<<1&-2,1&(n<<1|Q>>>31)),I=f+r|0,m=UI((a=t+a|0)^p,(D=a>>>0<t>>>0?I+1|0:I)^e,32),P=I=f,N=I,k=(p=i[o+48>>2])+(r=i[o+16>>2])|0,I=(l=i[o+52>>2])+(e=i[o+20>>2])|0,t=r>>>0>k>>>0?I+1|0:I,e=Ig(r<<1&-2,1&(e<<1|r>>>31),p,0),I=f+t|0,t=(r=e+k|0)>>>0<e>>>0?I+1|0:I,G=(k=UI(i[o+112>>2]^r,t^i[o+116>>2],32))+(e=i[o+80>>2])|0,I=(u=f)+(K=i[o+84>>2])|0,U=e>>>0>G>>>0?I+1|0:I,K=Ig(e<<1&-2,1&(K<<1|e>>>31),k,0),I=f+U|0,K=UI(G=(e=K+G|0)^p,l^(p=e>>>0<K>>>0?I+1|0:I),40),I=t+(l=f)|0,U=(G=r+K|0)>>>0<r>>>0?I+1|0:I,t=Ig(K,0,r<<1&-2,1&(t<<1|r>>>31)),I=f+U|0,U=UI(G=(r=t+G|0)^k,u^(k=t>>>0>r>>>0?I+1|0:I),48),I=p+(u=f)|0,t=(G=e+U|0)>>>0<e>>>0?I+1|0:I,p=Ig(U,0,e<<1&-2,1&(p<<1|e>>>31)),I=f+t|0,I=(p=(e=p+G|0)>>>0<p>>>0?I+1|0:I)+N|0,N=(t=e+m|0)>>>0<e>>>0?I+1|0:I,G=Ig(m,0,e<<1&-2,1&(p<<1|e>>>31)),I=f+N|0,N=UI(N=(t=G+t|0)^M,L^(M=t>>>0<G>>>0?I+1|0:I),40),I=D+(L=f)|0,G=(O=a+N|0)>>>0<a>>>0?I+1|0:I,a=(D=Ig(N,0,a<<1&-2,1&(D<<1|a>>>31)))+O|0,I=f+G|0,i[o>>2]=a,I=a>>>0<D>>>0?I+1|0:I,i[o+4>>2]=I,a=UI(a^m,I^P,48),i[o+120>>2]=a,I=f,i[o+124>>2]=I,I=I+M|0,D=(m=a+t|0)>>>0<t>>>0?I+1|0:I,a=(t=Ig(a,0,t<<1&-2,1&(M<<1|t>>>31)))+m|0,I=f+D|0,i[o+80>>2]=a,I=a>>>0<t>>>0?I+1|0:I,i[o+84>>2]=I,W=o,V=UI(a^N,I^L,1),i[W+40>>2]=V,i[o+44>>2]=f,I=h+j|0,a=(t=E+H|0)>>>0<E>>>0?I+1|0:I,E=Ig(H,0,E<<1&-2,1&(h<<1|E>>>31)),I=f+a|0,a=I=E>>>0>(t=E+t|0)>>>0?I+1|0:I,E=I,e=UI(e^K,p^l,1),I=y+(p=f)|0,h=(D=B+e|0)>>>0<B>>>0?I+1|0:I,B=(y=Ig(e,0,B<<1&-2,1&(y<<1|B>>>31)))+D|0,I=f+h|0,n=UI(Q^d,n^q,48),y=UI(n^B,(Q=B>>>0<y>>>0?I+1|0:I)^(M=f),32),I=(H=f)+E|0,h=y>>>0>(D=y+t|0)>>>0?I+1|0:I,E=(I=D)+(D=Ig(t<<1&-2,1&(E<<1|t>>>31),y,0))|0,I=f+h|0,h=UI(N=E^e,p^(e=E>>>0<D>>>0?I+1|0:I),40),I=Q+(D=f)|0,p=(d=B+h|0)>>>0<B>>>0?I+1|0:I,B=Ig(h,0,B<<1&-2,1&(Q<<1|B>>>31)),I=f+p|0,B=UI((Q=B+d|0)^y,H^(I=B>>>0>Q>>>0?I+1|0:I),48),i[o+96>>2]=B,y=f,i[o+100>>2]=y,i[o+8>>2]=Q,i[o+12>>2]=I,I=e+y|0,Q=(y=B+E|0)>>>0<E>>>0?I+1|0:I,E=Ig(B,0,E<<1&-2,1&(e<<1|E>>>31)),I=f+Q|0,W=o,V=UI((B=E+y|0)^h,(I=B>>>0<E>>>0?I+1|0:I)^D,1),i[W+48>>2]=V,i[o+52>>2]=f,i[o+88>>2]=B,i[o+92>>2]=I,e=UI(t^x,a^z,1),I=k+(h=f)|0,E=(B=r+e|0)>>>0<r>>>0?I+1|0:I,Q=Ig(e,0,r<<1&-2,1&(k<<1|r>>>31)),I=f+E|0,t=UI((B=Q+B|0)^v,R^(a=B>>>0<Q>>>0?I+1|0:I),32),y=I=f,Q=I,I=w+M|0,r=(E=c+n|0)>>>0<c>>>0?I+1|0:I,c=Ig(n,0,c<<1&-2,1&(w<<1|c>>>31)),I=f+r|0,I=(c=(E=c+E|0)>>>0<c>>>0?I+1|0:I)+Q|0,r=(Q=E+t|0)>>>0<E>>>0?I+1|0:I,w=Ig(t,0,E<<1&-2,1&(c<<1|E>>>31)),I=f+r|0,e=UI((Q=w+Q|0)^e,h^(r=Q>>>0<w>>>0?I+1|0:I),40),I=a+(w=f)|0,h=(n=B+e|0)>>>0<B>>>0?I+1|0:I,B=(a=Ig(e,0,B<<1&-2,1&(a<<1|B>>>31)))+n|0,I=f+h|0,i[o+16>>2]=B,I=B>>>0<a>>>0?I+1|0:I,i[o+20>>2]=I,B=UI(B^t,I^y,48),i[o+104>>2]=B,I=f,i[o+108>>2]=I,a=S,I=I+r|0,t=(h=B+Q|0)>>>0<Q>>>0?I+1|0:I,Q=Ig(B,0,Q<<1&-2,1&(r<<1|Q>>>31)),I=f+t|0,r=B=Q+h|0,t=I=B>>>0<Q>>>0?I+1|0:I,i[a>>2]=B,i[a+4>>2]=I,c=UI(E^J,c^X,1),I=(y=f)+b|0,E=(B=c+F|0)>>>0<c>>>0?I+1|0:I,Q=Ig(F<<1&-2,1&(b<<1|F>>>31),c,0),I=f+E|0,a=UI((B=Q+B|0)^U,u^(Q=B>>>0<Q>>>0?I+1|0:I),32),I=Y+(F=f)|0,h=(E=a+_|0)>>>0<_>>>0?I+1|0:I,_=Ig(a,0,_<<1&-2,1&(Y<<1|_>>>31)),I=f+h|0,c=UI((E=_+E|0)^c,y^(_=E>>>0<_>>>0?I+1|0:I),40),I=Q+(b=f)|0,h=(y=B+c|0)>>>0<B>>>0?I+1|0:I,Q=Ig(c,0,B<<1&-2,1&(Q<<1|B>>>31)),I=f+h|0,I=(B=Q+y|0)>>>0<Q>>>0?I+1|0:I,Q=B,B^=a,a=I,B=UI(B,F^I,48),I=_+(F=f)|0,h=(y=B+E|0)>>>0<E>>>0?I+1|0:I,E=(_=Ig(B,0,E<<1&-2,1&(_<<1|E>>>31)))+y|0,I=f+h|0,i[o+72>>2]=E,I=E>>>0<_>>>0?I+1|0:I,i[o+76>>2]=I,i[o+112>>2]=B,i[o+116>>2]=F,i[o+24>>2]=Q,i[o+28>>2]=a,W=o,V=UI(r^e,t^w,1),i[W+56>>2]=V,i[o+60>>2]=f,W=o,V=UI(E^c,I^b,1),i[W+32>>2]=V,i[o+36>>2]=f,8!=(0|(A=A+1|0)););for(A=0;c=(Q=i[392+(o=(C+1024|0)+(A<<4)|0)>>2])+(B=i[o+136>>2])|0,I=(t=i[o+396>>2])+(E=i[o+140>>2])|0,_=B>>>0>c>>>0?I+1|0:I,E=Ig(B<<1&-2,1&(E<<1|B>>>31),Q,0),I=f+_|0,_=(B=E+c|0)>>>0<E>>>0?I+1|0:I,e=(c=UI(i[o+904>>2]^B,_^i[o+908>>2],32))+(E=i[o+648>>2])|0,I=(y=f)+(a=i[o+652>>2])|0,r=E>>>0>e>>>0?I+1|0:I,a=Ig(E<<1&-2,1&(a<<1|E>>>31),c,0),I=f+r|0,x=UI(Q^(E=a+e|0),t^(h=E>>>0<a>>>0?I+1|0:I),40),I=_+(G=f)|0,Q=(a=B+x|0)>>>0<B>>>0?I+1|0:I,B=Ig(x,0,B<<1&-2,1&(_<<1|B>>>31)),I=f+Q|0,H=UI(c^(F=B+a|0),y^(b=B>>>0>F>>>0?I+1|0:I),48),z=I=f,p=H,e=I,a=(c=i[o+264>>2])+(B=i[o+8>>2])|0,I=(Y=i[o+268>>2])+(_=i[o+12>>2])|0,Q=B>>>0>a>>>0?I+1|0:I,_=Ig(B<<1&-2,1&(_<<1|B>>>31),c,0),I=f+Q|0,Q=(B=_+a|0)>>>0<_>>>0?I+1|0:I,y=(a=UI(i[o+776>>2]^B,Q^i[o+780>>2],32))+(_=i[o+520>>2])|0,I=(w=f)+(r=i[o+524>>2])|0,t=_>>>0>y>>>0?I+1|0:I,r=Ig(_<<1&-2,1&(r<<1|_>>>31),a,0),I=f+t|0,r=UI(t=(_=r+y|0)^c,Y^(c=_>>>0<r>>>0?I+1|0:I),40),I=Q+(n=f)|0,t=(y=B+r|0)>>>0<B>>>0?I+1|0:I,Q=Ig(r,0,B<<1&-2,1&(Q<<1|B>>>31)),I=f+t|0,v=UI((B=Q+y|0)^a,w^(y=B>>>0<Q>>>0?I+1|0:I),48),I=c+(j=f)|0,Q=(a=_+v|0)>>>0<_>>>0?I+1|0:I,c=Ig(v,0,_<<1&-2,1&(c<<1|_>>>31)),I=f+Q|0,M=UI((_=c+a|0)^r,n^(Y=_>>>0<c>>>0?I+1|0:I),1),R=I=f,k=M,t=I,w=(r=i[o+256>>2])+(Q=i[o>>2])|0,I=(J=i[o+260>>2])+(c=i[o+4>>2])|0,a=Q>>>0>w>>>0?I+1|0:I,c=Ig(Q<<1&-2,1&(c<<1|Q>>>31),r,0),I=f+a|0,a=(Q=c+w|0)>>>0<c>>>0?I+1|0:I,D=(d=UI(i[o+768>>2]^Q,a^i[o+772>>2],32))+(c=i[o+512>>2])|0,I=(L=f)+(w=i[o+516>>2])|0,n=c>>>0>D>>>0?I+1|0:I,w=Ig(c<<1&-2,1&(w<<1|c>>>31),d,0),I=f+n|0,J=UI((c=w+D|0)^r,J^(w=c>>>0<w>>>0?I+1|0:I),40),I=a+(q=f)|0,r=(n=Q+J|0)>>>0<Q>>>0?I+1|0:I,a=Ig(J,0,Q<<1&-2,1&(a<<1|Q>>>31)),I=f+r|0,I=(n=(Q=a+n|0)>>>0<a>>>0?I+1|0:I)+t|0,r=(a=Q+k|0)>>>0<Q>>>0?I+1|0:I,t=Ig(k,0,Q<<1&-2,1&(n<<1|Q>>>31)),I=f+r|0,m=UI((a=t+a|0)^p,(D=a>>>0<t>>>0?I+1|0:I)^e,32),X=I=f,N=I,k=(p=i[o+384>>2])+(r=i[o+128>>2])|0,I=(P=i[o+388>>2])+(e=i[o+132>>2])|0,t=r>>>0>k>>>0?I+1|0:I,e=Ig(r<<1&-2,1&(e<<1|r>>>31),p,0),I=f+t|0,t=(r=e+k|0)>>>0<e>>>0?I+1|0:I,S=(k=UI(i[o+896>>2]^r,t^i[o+900>>2],32))+(e=i[o+640>>2])|0,I=(l=f)+(K=i[o+644>>2])|0,U=e>>>0>S>>>0?I+1|0:I,K=Ig(e<<1&-2,1&(K<<1|e>>>31),k,0),I=f+U|0,K=UI(S=(e=K+S|0)^p,P^(p=e>>>0<K>>>0?I+1|0:I),40),I=t+(P=f)|0,U=(S=r+K|0)>>>0<r>>>0?I+1|0:I,t=Ig(K,0,r<<1&-2,1&(t<<1|r>>>31)),I=f+U|0,U=UI(S=(r=t+S|0)^k,l^(k=t>>>0>r>>>0?I+1|0:I),48),I=p+(l=f)|0,t=(S=e+U|0)>>>0<e>>>0?I+1|0:I,p=Ig(U,0,e<<1&-2,1&(p<<1|e>>>31)),I=f+t|0,I=(p=(e=p+S|0)>>>0<p>>>0?I+1|0:I)+N|0,N=(t=e+m|0)>>>0<e>>>0?I+1|0:I,S=Ig(m,0,e<<1&-2,1&(p<<1|e>>>31)),I=f+N|0,N=UI(N=(t=S+t|0)^M,R^(M=t>>>0<S>>>0?I+1|0:I),40),I=D+(R=f)|0,S=(u=a+N|0)>>>0<a>>>0?I+1|0:I,a=(D=Ig(N,0,a<<1&-2,1&(D<<1|a>>>31)))+u|0,I=f+S|0,i[o>>2]=a,I=a>>>0<D>>>0?I+1|0:I,i[o+4>>2]=I,a=UI(a^m,I^X,48),i[o+904>>2]=a,I=f,i[o+908>>2]=I,I=I+M|0,D=(m=a+t|0)>>>0<t>>>0?I+1|0:I,a=(t=Ig(a,0,t<<1&-2,1&(M<<1|t>>>31)))+m|0,I=f+D|0,i[o+640>>2]=a,I=a>>>0<t>>>0?I+1|0:I,i[o+644>>2]=I,W=o,V=UI(a^N,I^R,1),i[W+264>>2]=V,i[o+268>>2]=f,I=h+z|0,a=(t=E+H|0)>>>0<E>>>0?I+1|0:I,E=Ig(H,0,E<<1&-2,1&(h<<1|E>>>31)),I=f+a|0,a=I=E>>>0>(t=E+t|0)>>>0?I+1|0:I,E=I,e=UI(e^K,p^P,1),I=y+(p=f)|0,h=(D=B+e|0)>>>0<B>>>0?I+1|0:I,B=(y=Ig(e,0,B<<1&-2,1&(y<<1|B>>>31)))+D|0,I=f+h|0,n=UI(Q^d,n^L,48),y=UI(n^B,(Q=B>>>0<y>>>0?I+1|0:I)^(M=f),32),I=(H=f)+E|0,h=y>>>0>(D=y+t|0)>>>0?I+1|0:I,E=(I=D)+(D=Ig(t<<1&-2,1&(E<<1|t>>>31),y,0))|0,I=f+h|0,h=UI(S=E^e,p^(e=E>>>0<D>>>0?I+1|0:I),40),I=Q+(D=f)|0,p=(d=B+h|0)>>>0<B>>>0?I+1|0:I,B=Ig(h,0,B<<1&-2,1&(Q<<1|B>>>31)),I=f+p|0,B=UI((Q=B+d|0)^y,H^(I=B>>>0>Q>>>0?I+1|0:I),48),i[o+768>>2]=B,y=f,i[o+772>>2]=y,i[o+8>>2]=Q,i[o+12>>2]=I,I=e+y|0,Q=(y=B+E|0)>>>0<E>>>0?I+1|0:I,E=Ig(B,0,E<<1&-2,1&(e<<1|E>>>31)),I=f+Q|0,W=o,V=UI((B=E+y|0)^h,(I=B>>>0<E>>>0?I+1|0:I)^D,1),i[W+384>>2]=V,i[o+388>>2]=f,i[o+648>>2]=B,i[o+652>>2]=I,e=UI(t^x,a^G,1),I=k+(h=f)|0,E=(B=r+e|0)>>>0<r>>>0?I+1|0:I,Q=Ig(e,0,r<<1&-2,1&(k<<1|r>>>31)),I=f+E|0,t=UI((B=Q+B|0)^v,j^(a=B>>>0<Q>>>0?I+1|0:I),32),y=I=f,Q=I,I=w+M|0,r=(E=c+n|0)>>>0<c>>>0?I+1|0:I,c=Ig(n,0,c<<1&-2,1&(w<<1|c>>>31)),I=f+r|0,I=(c=(E=c+E|0)>>>0<c>>>0?I+1|0:I)+Q|0,r=(Q=E+t|0)>>>0<E>>>0?I+1|0:I,w=Ig(t,0,E<<1&-2,1&(c<<1|E>>>31)),I=f+r|0,e=UI((Q=w+Q|0)^e,h^(r=Q>>>0<w>>>0?I+1|0:I),40),I=a+(w=f)|0,h=(n=B+e|0)>>>0<B>>>0?I+1|0:I,B=(a=Ig(e,0,B<<1&-2,1&(a<<1|B>>>31)))+n|0,I=f+h|0,i[o+128>>2]=B,I=B>>>0<a>>>0?I+1|0:I,i[o+132>>2]=I,B=UI(B^t,I^y,48),i[o+776>>2]=B,I=f,i[o+780>>2]=I,I=I+r|0,a=(t=B+Q|0)>>>0<Q>>>0?I+1|0:I,Q=Ig(B,0,Q<<1&-2,1&(r<<1|Q>>>31)),I=f+a|0,r=B=Q+t|0,t=I=B>>>0<Q>>>0?I+1|0:I,i[o+512>>2]=B,i[o+516>>2]=I,c=UI(E^J,c^q,1),I=(y=f)+b|0,E=(B=c+F|0)>>>0<c>>>0?I+1|0:I,Q=Ig(F<<1&-2,1&(b<<1|F>>>31),c,0),I=f+E|0,a=UI((B=Q+B|0)^U,l^(Q=B>>>0<Q>>>0?I+1|0:I),32),I=Y+(F=f)|0,h=(E=a+_|0)>>>0<_>>>0?I+1|0:I,_=Ig(a,0,_<<1&-2,1&(Y<<1|_>>>31)),I=f+h|0,c=UI((E=_+E|0)^c,y^(_=E>>>0<_>>>0?I+1|0:I),40),I=Q+(b=f)|0,h=(y=B+c|0)>>>0<B>>>0?I+1|0:I,Q=Ig(c,0,B<<1&-2,1&(Q<<1|B>>>31)),I=f+h|0,I=(B=Q+y|0)>>>0<Q>>>0?I+1|0:I,Q=B,B^=a,a=I,B=UI(B,F^I,48),I=_+(F=f)|0,h=(y=B+E|0)>>>0<E>>>0?I+1|0:I,E=(_=Ig(B,0,E<<1&-2,1&(_<<1|E>>>31)))+y|0,I=f+h|0,i[o+520>>2]=E,I=E>>>0<_>>>0?I+1|0:I,i[o+524>>2]=I,i[o+896>>2]=B,i[o+900>>2]=F,i[o+136>>2]=Q,i[o+140>>2]=a,W=o,V=UI(r^e,t^w,1),i[W+392>>2]=V,i[o+396>>2]=f,W=o,V=UI(E^c,I^b,1),i[W+256>>2]=V,i[o+260>>2]=f,8!=(0|(A=A+1|0)););for(I=Ng(g,C,1024),A=0;B=i[(o=(g=A<<3)+I|0)>>2],Q=i[(_=(E=a=C+1024|0)+g|0)>>2],_=i[o+4>>2]^i[_+4>>2],i[o>>2]=B^Q,i[o+4>>2]=_,_=i[(o=(B=8|g)+I|0)>>2],E=i[(B=B+E|0)>>2],B=i[o+4>>2]^i[B+4>>2],i[o>>2]=E^_,i[o+4>>2]=B,E=i[(o=(B=16|g)+I|0)>>2],_=i[(B=B+a|0)>>2],B=i[o+4>>2]^i[B+4>>2],i[o>>2]=E^_,i[o+4>>2]=B,B=i[(g=(o=24|g)+I|0)>>2],E=i[(o=o+a|0)>>2],o=i[g+4>>2]^i[o+4>>2],i[g>>2]=B^E,i[g+4>>2]=o,128!=(0|(A=A+4|0)););s=C+2048|0}function G(A,I,g){var C,B,Q,E,a,_,c,t,r,e,y,h,D,f,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0;for(s=C=s-800|0,k=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,S=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,G=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,M=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,w=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,K=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,U=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,Q=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,E=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,a=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,_=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,c=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,t=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,r=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,n=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=g- -64|0,e=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,i[I>>2]=33620224^e,i[g+56>>2]=1496785429,i[g+60>>2]=1652156816,i[(A=g+48|0)>>2]=33620224,i[A+4>>2]=218629379,i[g+40>>2]=1110511904,i[g+44>>2]=-584534669,i[(B=g+32|0)>>2]=1427652059,i[B+4>>2]=-248528275,y=n^e,i[g>>2]=y,i[g+92>>2]=-584534669^r,i[g+88>>2]=1110511904^t,i[g+84>>2]=-248528275^c,i[(n=g+80|0)>>2]=1427652059^_,i[g+76>>2]=1652156816^a,i[g+72>>2]=1496785429^E,i[g+68>>2]=218629379^Q,U^=r,i[g+28>>2]=U,K^=t,i[g+24>>2]=K,h=w^c,i[g+20>>2]=h,M^=_,i[(w=g+16|0)>>2]=M,G^=a,i[g+12>>2]=G,D=S^E,i[g+8>>2]=D,f=k^Q,i[g+4>>2]=f,S=0;k=i[n+12>>2],i[C+792>>2]=i[n+8>>2],i[C+796>>2]=k,k=i[n+4>>2],i[C+784>>2]=i[n>>2],i[C+788>>2]=k,k=i[I+12>>2],i[C+760>>2]=i[I+8>>2],i[C+764>>2]=k,k=i[I+4>>2],i[C+752>>2]=i[I>>2],i[C+756>>2]=k,k=i[n+12>>2],i[C+744>>2]=i[n+8>>2],i[C+748>>2]=k,k=i[n+4>>2],i[C+736>>2]=i[n>>2],i[C+740>>2]=k,AI(k=C+768|0,C+752|0,C+736|0),p=i[C+780>>2],i[n+8>>2]=i[C+776>>2],i[n+12>>2]=p,p=i[C+772>>2],i[n>>2]=i[C+768>>2],i[n+4>>2]=p,p=i[A+12>>2],i[C+728>>2]=i[A+8>>2],i[C+732>>2]=p,p=i[A+4>>2],i[C+720>>2]=i[A>>2],i[C+724>>2]=p,p=i[I+12>>2],i[C+712>>2]=i[I+8>>2],i[C+716>>2]=p,p=i[I+4>>2],i[C+704>>2]=i[I>>2],i[C+708>>2]=p,AI(k,C+720|0,C+704|0),p=i[C+780>>2],i[I+8>>2]=i[C+776>>2],i[I+12>>2]=p,p=i[C+772>>2],i[I>>2]=i[C+768>>2],i[I+4>>2]=p,p=i[B+12>>2],i[C+696>>2]=i[B+8>>2],i[C+700>>2]=p,p=i[B+4>>2],i[C+688>>2]=i[B>>2],i[C+692>>2]=p,p=i[A+12>>2],i[C+680>>2]=i[A+8>>2],i[C+684>>2]=p,p=i[A+4>>2],i[C+672>>2]=i[A>>2],i[C+676>>2]=p,AI(k,C+688|0,C+672|0),p=i[C+780>>2],i[A+8>>2]=i[C+776>>2],i[A+12>>2]=p,p=i[C+772>>2],i[A>>2]=i[C+768>>2],i[A+4>>2]=p,p=i[w+12>>2],i[C+664>>2]=i[w+8>>2],i[C+668>>2]=p,p=i[w+4>>2],i[C+656>>2]=i[w>>2],i[C+660>>2]=p,p=i[B+12>>2],i[C+648>>2]=i[B+8>>2],i[C+652>>2]=p,p=i[B+4>>2],i[C+640>>2]=i[B>>2],i[C+644>>2]=p,AI(k,C+656|0,C+640|0),p=i[C+780>>2],i[B+8>>2]=i[C+776>>2],i[B+12>>2]=p,p=i[C+772>>2],i[B>>2]=i[C+768>>2],i[B+4>>2]=p,p=i[g+12>>2],i[C+632>>2]=i[g+8>>2],i[C+636>>2]=p,p=i[g+4>>2],i[C+624>>2]=i[g>>2],i[C+628>>2]=p,p=i[w+12>>2],i[C+616>>2]=i[w+8>>2],i[C+620>>2]=p,p=i[w+4>>2],i[C+608>>2]=i[w>>2],i[C+612>>2]=p,AI(k,C+624|0,C+608|0),p=i[C+780>>2],i[w+8>>2]=i[C+776>>2],i[w+12>>2]=p,p=i[C+772>>2],i[w>>2]=i[C+768>>2],i[w+4>>2]=p,p=i[C+796>>2],i[C+600>>2]=i[C+792>>2],i[C+604>>2]=p,p=i[C+788>>2],i[C+592>>2]=i[C+784>>2],i[C+596>>2]=p,p=i[g+12>>2],i[C+584>>2]=i[g+8>>2],i[C+588>>2]=p,p=i[g+4>>2],i[C+576>>2]=i[g>>2],i[C+580>>2]=p,AI(k,C+592|0,C+576|0),p=i[C+768>>2],F=i[C+772>>2],N=i[C+776>>2],i[g+12>>2]=i[C+780>>2]^a,i[g+8>>2]=N^E,i[g+4>>2]=F^Q,i[g>>2]=p^e,p=i[n+12>>2],i[C+792>>2]=i[n+8>>2],i[C+796>>2]=p,p=i[n+4>>2],i[C+784>>2]=i[n>>2],i[C+788>>2]=p,p=i[I+12>>2],i[C+568>>2]=i[I+8>>2],i[C+572>>2]=p,p=i[I+4>>2],i[C+560>>2]=i[I>>2],i[C+564>>2]=p,p=i[n+12>>2],i[C+552>>2]=i[n+8>>2],i[C+556>>2]=p,p=i[n+4>>2],i[C+544>>2]=i[n>>2],i[C+548>>2]=p,AI(k,C+560|0,C+544|0),p=i[C+780>>2],i[n+8>>2]=i[C+776>>2],i[n+12>>2]=p,p=i[C+772>>2],i[n>>2]=i[C+768>>2],i[n+4>>2]=p,p=i[A+12>>2],i[C+536>>2]=i[A+8>>2],i[C+540>>2]=p,p=i[A+4>>2],i[C+528>>2]=i[A>>2],i[C+532>>2]=p,p=i[I+12>>2],i[C+520>>2]=i[I+8>>2],i[C+524>>2]=p,p=i[I+4>>2],i[C+512>>2]=i[I>>2],i[C+516>>2]=p,AI(k,C+528|0,C+512|0),p=i[C+780>>2],i[I+8>>2]=i[C+776>>2],i[I+12>>2]=p,p=i[C+772>>2],i[I>>2]=i[C+768>>2],i[I+4>>2]=p,p=i[B+12>>2],i[C+504>>2]=i[B+8>>2],i[C+508>>2]=p,p=i[B+4>>2],i[C+496>>2]=i[B>>2],i[C+500>>2]=p,p=i[A+12>>2],i[C+488>>2]=i[A+8>>2],i[C+492>>2]=p,p=i[A+4>>2],i[C+480>>2]=i[A>>2],i[C+484>>2]=p,AI(k,C+496|0,C+480|0),p=i[C+780>>2],i[A+8>>2]=i[C+776>>2],i[A+12>>2]=p,p=i[C+772>>2],i[A>>2]=i[C+768>>2],i[A+4>>2]=p,p=i[w+12>>2],i[C+472>>2]=i[w+8>>2],i[C+476>>2]=p,p=i[w+4>>2],i[C+464>>2]=i[w>>2],i[C+468>>2]=p,p=i[B+12>>2],i[C+456>>2]=i[B+8>>2],i[C+460>>2]=p,p=i[B+4>>2],i[C+448>>2]=i[B>>2],i[C+452>>2]=p,AI(k,C+464|0,C+448|0),p=i[C+780>>2],i[B+8>>2]=i[C+776>>2],i[B+12>>2]=p,p=i[C+772>>2],i[B>>2]=i[C+768>>2],i[B+4>>2]=p,p=i[g+12>>2],i[C+440>>2]=i[g+8>>2],i[C+444>>2]=p,p=i[g+4>>2],i[C+432>>2]=i[g>>2],i[C+436>>2]=p,p=i[w+12>>2],i[C+424>>2]=i[w+8>>2],i[C+428>>2]=p,p=i[w+4>>2],i[C+416>>2]=i[w>>2],i[C+420>>2]=p,AI(k,C+432|0,C+416|0),p=i[C+780>>2],i[w+8>>2]=i[C+776>>2],i[w+12>>2]=p,p=i[C+772>>2],i[w>>2]=i[C+768>>2],i[w+4>>2]=p,p=i[C+796>>2],i[C+408>>2]=i[C+792>>2],i[C+412>>2]=p,p=i[C+788>>2],i[C+400>>2]=i[C+784>>2],i[C+404>>2]=p,p=i[g+12>>2],i[C+392>>2]=i[g+8>>2],i[C+396>>2]=p,p=i[g+4>>2],i[C+384>>2]=i[g>>2],i[C+388>>2]=p,AI(k,C+400|0,C+384|0),p=i[C+768>>2],F=i[C+772>>2],N=i[C+776>>2],i[g+12>>2]=i[C+780>>2]^r,i[g+8>>2]=N^t,i[g+4>>2]=F^c,i[g>>2]=p^_,p=i[n+12>>2],i[C+792>>2]=i[n+8>>2],i[C+796>>2]=p,p=i[n+4>>2],i[C+784>>2]=i[n>>2],i[C+788>>2]=p,p=i[I+12>>2],i[C+376>>2]=i[I+8>>2],i[C+380>>2]=p,p=i[I+4>>2],i[C+368>>2]=i[I>>2],i[C+372>>2]=p,p=i[n+12>>2],i[C+360>>2]=i[n+8>>2],i[C+364>>2]=p,p=i[n+4>>2],i[C+352>>2]=i[n>>2],i[C+356>>2]=p,AI(k,C+368|0,C+352|0),p=i[C+780>>2],i[n+8>>2]=i[C+776>>2],i[n+12>>2]=p,p=i[C+772>>2],i[n>>2]=i[C+768>>2],i[n+4>>2]=p,p=i[A+12>>2],i[C+344>>2]=i[A+8>>2],i[C+348>>2]=p,p=i[A+4>>2],i[C+336>>2]=i[A>>2],i[C+340>>2]=p,p=i[I+12>>2],i[C+328>>2]=i[I+8>>2],i[C+332>>2]=p,p=i[I+4>>2],i[C+320>>2]=i[I>>2],i[C+324>>2]=p,AI(k,C+336|0,C+320|0),p=i[C+780>>2],i[I+8>>2]=i[C+776>>2],i[I+12>>2]=p,p=i[C+772>>2],i[I>>2]=i[C+768>>2],i[I+4>>2]=p,p=i[B+12>>2],i[C+312>>2]=i[B+8>>2],i[C+316>>2]=p,p=i[B+4>>2],i[C+304>>2]=i[B>>2],i[C+308>>2]=p,p=i[A+12>>2],i[C+296>>2]=i[A+8>>2],i[C+300>>2]=p,p=i[A+4>>2],i[C+288>>2]=i[A>>2],i[C+292>>2]=p,AI(k,C+304|0,C+288|0),p=i[C+780>>2],i[A+8>>2]=i[C+776>>2],i[A+12>>2]=p,p=i[C+772>>2],i[A>>2]=i[C+768>>2],i[A+4>>2]=p,p=i[w+12>>2],i[C+280>>2]=i[w+8>>2],i[C+284>>2]=p,p=i[w+4>>2],i[C+272>>2]=i[w>>2],i[C+276>>2]=p,p=i[B+12>>2],i[C+264>>2]=i[B+8>>2],i[C+268>>2]=p,p=i[B+4>>2],i[C+256>>2]=i[B>>2],i[C+260>>2]=p,AI(k,C+272|0,C+256|0),p=i[C+780>>2],i[B+8>>2]=i[C+776>>2],i[B+12>>2]=p,p=i[C+772>>2],i[B>>2]=i[C+768>>2],i[B+4>>2]=p,p=i[g+12>>2],i[C+248>>2]=i[g+8>>2],i[C+252>>2]=p,p=i[g+4>>2],i[C+240>>2]=i[g>>2],i[C+244>>2]=p,p=i[w+12>>2],i[C+232>>2]=i[w+8>>2],i[C+236>>2]=p,p=i[w+4>>2],i[C+224>>2]=i[w>>2],i[C+228>>2]=p,AI(k,C+240|0,C+224|0),p=i[C+780>>2],i[w+8>>2]=i[C+776>>2],i[w+12>>2]=p,p=i[C+772>>2],i[w>>2]=i[C+768>>2],i[w+4>>2]=p,p=i[C+796>>2],i[C+216>>2]=i[C+792>>2],i[C+220>>2]=p,p=i[C+788>>2],i[C+208>>2]=i[C+784>>2],i[C+212>>2]=p,p=i[g+12>>2],i[C+200>>2]=i[g+8>>2],i[C+204>>2]=p,p=i[g+4>>2],i[C+192>>2]=i[g>>2],i[C+196>>2]=p,AI(k,C+208|0,C+192|0),p=i[C+768>>2],F=i[C+772>>2],N=i[C+776>>2],i[g+12>>2]=G^i[C+780>>2],i[g+8>>2]=N^D,i[g+4>>2]=F^f,i[g>>2]=p^y,p=i[n+12>>2],i[C+792>>2]=i[n+8>>2],i[C+796>>2]=p,p=i[n+4>>2],i[C+784>>2]=i[n>>2],i[C+788>>2]=p,p=i[I+12>>2],i[C+184>>2]=i[I+8>>2],i[C+188>>2]=p,p=i[I+4>>2],i[C+176>>2]=i[I>>2],i[C+180>>2]=p,p=i[n+12>>2],i[C+168>>2]=i[n+8>>2],i[C+172>>2]=p,p=i[n+4>>2],i[C+160>>2]=i[n>>2],i[C+164>>2]=p,AI(k,C+176|0,C+160|0),p=i[C+780>>2],i[n+8>>2]=i[C+776>>2],i[n+12>>2]=p,p=i[C+772>>2],i[n>>2]=i[C+768>>2],i[n+4>>2]=p,p=i[A+12>>2],i[C+152>>2]=i[A+8>>2],i[C+156>>2]=p,p=i[A+4>>2],i[C+144>>2]=i[A>>2],i[C+148>>2]=p,p=i[I+12>>2],i[C+136>>2]=i[I+8>>2],i[C+140>>2]=p,p=i[I+4>>2],i[C+128>>2]=i[I>>2],i[C+132>>2]=p,AI(k,C+144|0,C+128|0),p=i[C+780>>2],i[I+8>>2]=i[C+776>>2],i[I+12>>2]=p,p=i[C+772>>2],i[I>>2]=i[C+768>>2],i[I+4>>2]=p,p=i[B+12>>2],i[C+120>>2]=i[B+8>>2],i[C+124>>2]=p,p=i[B+4>>2],i[C+112>>2]=i[B>>2],i[C+116>>2]=p,p=i[A+12>>2],i[C+104>>2]=i[A+8>>2],i[C+108>>2]=p,p=i[A+4>>2],i[C+96>>2]=i[A>>2],i[C+100>>2]=p,AI(k,C+112|0,C+96|0),p=i[C+780>>2],i[A+8>>2]=i[C+776>>2],i[A+12>>2]=p,p=i[C+772>>2],i[A>>2]=i[C+768>>2],i[A+4>>2]=p,p=i[w+12>>2],i[C+88>>2]=i[w+8>>2],i[C+92>>2]=p,p=i[w+4>>2],i[C+80>>2]=i[w>>2],i[C+84>>2]=p,p=i[B+12>>2],i[C+72>>2]=i[B+8>>2],i[C+76>>2]=p,p=i[B+4>>2],i[C+64>>2]=i[B>>2],i[C+68>>2]=p,AI(k,C+80|0,C- -64|0),p=i[C+780>>2],i[B+8>>2]=i[C+776>>2],i[B+12>>2]=p,p=i[C+772>>2],i[B>>2]=i[C+768>>2],i[B+4>>2]=p,p=i[g+12>>2],i[C+56>>2]=i[g+8>>2],i[C+60>>2]=p,p=i[g+4>>2],i[C+48>>2]=i[g>>2],i[C+52>>2]=p,p=i[w+12>>2],i[C+40>>2]=i[w+8>>2],i[C+44>>2]=p,p=i[w+4>>2],i[C+32>>2]=i[w>>2],i[C+36>>2]=p,AI(k,C+48|0,C+32|0),p=i[C+780>>2],i[w+8>>2]=i[C+776>>2],i[w+12>>2]=p,p=i[C+772>>2],i[w>>2]=i[C+768>>2],i[w+4>>2]=p,p=i[C+796>>2],i[C+24>>2]=i[C+792>>2],i[C+28>>2]=p,p=i[C+788>>2],i[C+16>>2]=i[C+784>>2],i[C+20>>2]=p,p=i[g+12>>2],i[C+8>>2]=i[g+8>>2],i[C+12>>2]=p,p=i[g+4>>2],i[C>>2]=i[g>>2],i[C+4>>2]=p,AI(k,C+16|0,C),k=i[C+768>>2],p=i[C+772>>2],F=i[C+776>>2],i[g+12>>2]=U^i[C+780>>2],i[g+8>>2]=F^K,i[g+4>>2]=p^h,i[g>>2]=k^M,4!=(0|(S=S+1|0)););s=C+800|0}function M(A,I){var g,B,E,a,_,c,t,r,e,y,h,D,p,w,n,k,F,S,N,G,M,K,U=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0;for(s=g=s-48|0,Y=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,H=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,C[A+24|0]=H,C[A+25|0]=H>>>8,C[A+26|0]=H>>>16,C[A+27|0]=H>>>24,C[A+28|0]=Y,C[A+29|0]=Y>>>8,C[A+30|0]=Y>>>16,C[A+31|0]=Y>>>24,Y=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,H=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,C[0|A]=H,C[A+1|0]=H>>>8,C[A+2|0]=H>>>16,C[A+3|0]=H>>>24,C[A+4|0]=Y,C[A+5|0]=Y>>>8,C[A+6|0]=Y>>>16,C[A+7|0]=Y>>>24,Y=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,H=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,C[A+16|0]=H,C[A+17|0]=H>>>8,C[A+18|0]=H>>>16,C[A+19|0]=H>>>24,C[A+20|0]=Y,C[A+21|0]=Y>>>8,C[A+22|0]=Y>>>16,C[A+23|0]=Y>>>24,H=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,I=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,C[A+12|0]=H,C[A+13|0]=H>>>8,C[A+14|0]=H>>>16,C[A+15|0]=H>>>24,I=o[A+31|0],C[A+31|0]=127&I,fA(g,A),y=128&I,s=I=s-960|0,v(H=I+304|0,g),i[I+304>>2]=i[I+304>>2]+1,LA(H,H),Y=Ig(H=i[I+340>>2],H>>31,486662,0),H=f,l=(P=Y+16777216|0)>>>0<16777216?H+1|0:H,x=Y-(-33554432&P)|0,U=Ig(H=i[I+336>>2],H>>31,486662,0),Y=f,J=Ig(H=i[I+332>>2],H>>31,486662,0),H=f,u=U,U=(U=(H=(m=J+16777216|0)>>>0<16777216?H+1|0:H)>>25)+Y|0,H=(H=(33554431&H)<<7|m>>>25)>>>0>(d=u+H|0)>>>0?U+1|0:U,B=((67108863&(H=(Y=d+33554432|0)>>>0<33554432?H+1|0:H))<<6|Y>>>26)+x|0,i[I+292>>2]=0-B,W=d-(-67108864&Y)|0,i[I+288>>2]=0-W,x=J-(-33554432&m)|0,Y=Ig(H=i[I+328>>2],H>>31,486662,0),H=f,m=Ig(U=i[I+324>>2],U>>31,486662,0),U=f,u=Y,H=H+(Y=(U=(d=m+16777216|0)>>>0<16777216?U+1|0:U)>>25)|0,H=(U=u+(J=(33554431&U)<<7|d>>>25)|0)>>>0<J>>>0?H+1|0:H,E=((67108863&(H=(Y=U+33554432|0)>>>0<33554432?H+1|0:H))<<6|Y>>>26)+x|0,i[I+284>>2]=0-E,a=U-(-67108864&Y)|0,i[I+280>>2]=0-a,x=m-(-33554432&d)|0,U=Ig(H=i[I+320>>2],H>>31,486662,0),H=f,m=Ig(Y=i[I+316>>2],Y>>31,486662,0),Y=f,u=U,H=(U=(Y=(d=m+16777216|0)>>>0<16777216?Y+1|0:Y)>>25)+H|0,U=H=(Y=u+(J=(33554431&Y)<<7|d>>>25)|0)>>>0<J>>>0?H+1|0:H,_=((67108863&(U=(J=Y+33554432|0)>>>0<33554432?U+1|0:U))<<6|J>>>26)+x|0,i[I+276>>2]=0-_,c=Y-(-67108864&J)|0,i[I+272>>2]=0-c,u=m-(-33554432&d)|0,H=Ig(H=i[I+312>>2],H>>31,486662,0),x=f,J=Ig(Y=i[I+308>>2],Y>>31,486662,0),U=f,Y=(33554431&(U=(m=J+16777216|0)>>>0<16777216?U+1|0:U))<<7|m>>>25,U=(U>>25)+x|0,Y=Y>>>0>(d=Y+H|0)>>>0?U+1|0:U,t=((67108863&(Y=(H=d+33554432|0)>>>0<33554432?Y+1|0:Y))<<6|H>>>26)+u|0,i[I+268>>2]=0-t,r=d-(-67108864&H)|0,i[I+264>>2]=0-r,d=J-(-33554432&m)|0,Y=Ig((33554431&l)<<7|P>>>25,l>>25,19,0),H=f,J=Y,Y=Ig(U=i[I+304>>2],U>>31,486662,0),H=f+H|0,Y=(U=J+Y|0)>>>0<Y>>>0?H+1|0:H,e=((67108863&(Y=(H=U+33554432|0)>>>0<33554432?Y+1|0:Y))<<6|H>>>26)+d|0,i[I+260>>2]=0-e,L=U-(-67108864&H)|0,i[I+256>>2]=0-L,R(Y=I+208|0,H=I+256|0),b(I+160|0,H,Y),h=i[I+196>>2],D=i[I+160>>2],q=i[I+208>>2],p=i[I+164>>2],w=i[I+168>>2],z=i[I+212>>2],j=i[I+216>>2],n=i[I+172>>2],k=i[I+176>>2],X=i[I+220>>2],O=i[I+224>>2],F=i[I+180>>2],S=i[I+184>>2],u=i[I+228>>2],x=i[I+232>>2],N=i[I+188>>2],G=i[I+192>>2],Y=Ig(H=i[I+244>>2],H>>31,486662,0),H=f,l=(P=Y+16777216|0)>>>0<16777216?H+1|0:H,M=Y-(-33554432&P)|0,H=Ig(H=i[I+240>>2],H>>31,486662,0),K=f,J=Ig(Y=i[I+236>>2],Y>>31,486662,0),U=f,Y=H,H=(33554431&(U=(m=J+16777216|0)>>>0<16777216?U+1|0:U))<<7|m>>>25,U=(U>>25)+K|0,H=H>>>0>(d=Y+H|0)>>>0?U+1|0:U,U=((67108863&(H=(Y=d+33554432|0)>>>0<33554432?H+1|0:H))<<6|Y>>>26)+M|0,i[I+244>>2]=U,i[I+388>>2]=U+(h-B|0),H=d-(-67108864&Y)|0,i[I+240>>2]=H,i[I+384>>2]=H+(G-W|0),W=J-(-33554432&m)|0,H=Ig(x,x>>31,486662,0),J=f,m=Ig(u,u>>31,486662,0),Y=f,u=H,H=(H=(Y=(d=m+16777216|0)>>>0<16777216?Y+1|0:Y)>>25)+J|0,U=H=(U=(33554431&Y)<<7|d>>>25)>>>0>(Y=u+U|0)>>>0?H+1|0:H,J=((67108863&(U=(J=Y+33554432|0)>>>0<33554432?U+1|0:U))<<6|(H=J)>>>26)+W|0,i[I+236>>2]=J,i[I+380>>2]=J+(N-E|0),H=Y-(-67108864&H)|0,i[I+232>>2]=H,i[I+376>>2]=H+(S-a|0),x=m-(-33554432&d)|0,U=Ig(O,O>>31,486662,0),Y=f,J=Ig(X,X>>31,486662,0),H=f,u=U,U=(U=(H=(m=J+16777216|0)>>>0<16777216?H+1|0:H)>>25)+Y|0,Y=(H=(33554431&H)<<7|m>>>25)>>>0>(d=u+H|0)>>>0?U+1|0:U,U=((67108863&(Y=(H=d+33554432|0)>>>0<33554432?Y+1|0:Y))<<6|H>>>26)+x|0,i[I+228>>2]=U,i[I+372>>2]=U+(F-_|0),H=d-(-67108864&H)|0,i[I+224>>2]=H,i[I+368>>2]=H+(k-c|0),x=J-(-33554432&m)|0,H=Ig(j,j>>31,486662,0),Y=f,m=Ig(z,z>>31,486662,0),U=f,u=H,Y=(H=(U=(d=m+16777216|0)>>>0<16777216?U+1|0:U)>>25)+Y|0,H=Y=(U=u+(J=(33554431&U)<<7|d>>>25)|0)>>>0<J>>>0?Y+1|0:Y,J=((67108863&(H=(J=U+33554432|0)>>>0<33554432?H+1|0:H))<<6|(Y=J)>>>26)+x|0,i[I+220>>2]=J,i[I+364>>2]=J+(n-t|0),H=U-(-67108864&Y)|0,i[I+216>>2]=H,i[I+360>>2]=H+(w-r|0),d=m-(-33554432&d)|0,Y=Ig((33554431&l)<<7|P>>>25,l>>25,19,0),H=f,U=Y,Y=Ig(q,q>>31,486662,0),H=f+H|0,H=(U=U+Y|0)>>>0<Y>>>0?H+1|0:H,l=((67108863&(H=(Y=U+33554432|0)>>>0<33554432?H+1|0:H))<<6|Y>>>26)+d|0,i[I+212>>2]=l,i[I+356>>2]=l+(p-e|0),H=U-(-67108864&Y)|0,i[I+208>>2]=H,i[I+352>>2]=H+(D-L|0),b(H=I+624|0,Y=I+352|0,Y),b(I,Y,H),R(Y=I+784|0,I),R(Y,Y),b(H=I+912|0,I,Y),R(Y=I+576|0,H),R(Y,Y),R(Y,Y),R(Y,Y),b(U=I+528|0,H,Y),R(U,U),R(U,U),b(U,U,I),H=i[I+564>>2],i[I+512>>2]=i[I+560>>2],i[I+516>>2]=H,H=i[I+556>>2],i[I+504>>2]=i[I+552>>2],i[I+508>>2]=H,H=i[I+548>>2],i[I+496>>2]=i[I+544>>2],i[I+500>>2]=H,H=i[I+540>>2],i[I+488>>2]=i[I+536>>2],i[I+492>>2]=H,H=i[I+532>>2],i[I+480>>2]=i[I+528>>2],i[I+484>>2]=H,R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),b(U,U,H=I+480|0),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),b(U,U,H),H=i[I+564>>2],i[I+464>>2]=i[I+560>>2],i[I+468>>2]=H,H=i[I+556>>2],i[I+456>>2]=i[I+552>>2],i[I+460>>2]=H,H=i[I+548>>2],i[I+448>>2]=i[I+544>>2],i[I+452>>2]=H,H=i[I+540>>2],i[I+440>>2]=i[I+536>>2],i[I+444>>2]=H,H=i[I+532>>2],i[I+432>>2]=i[I+528>>2],i[I+436>>2]=H,R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),b(U,U,Y=I+432|0),H=i[I+564>>2],i[I+464>>2]=i[I+560>>2],i[I+468>>2]=H,H=i[I+556>>2],i[I+456>>2]=i[I+552>>2],i[I+460>>2]=H,H=i[I+548>>2],i[I+448>>2]=i[I+544>>2],i[I+452>>2]=H,H=i[I+540>>2],i[I+440>>2]=i[I+536>>2],i[I+444>>2]=H,H=i[I+532>>2],i[I+432>>2]=i[I+528>>2],i[I+436>>2]=H,R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),R(U,U),b(U,U,Y),H=i[I+564>>2],i[I+464>>2]=i[I+560>>2],i[I+468>>2]=H,H=i[I+556>>2],i[I+456>>2]=i[I+552>>2],i[I+460>>2]=H,H=i[I+548>>2],i[I+448>>2]=i[I+544>>2],i[I+452>>2]=H,H=i[I+540>>2],i[I+440>>2]=i[I+536>>2],i[I+444>>2]=H,H=i[I+532>>2],i[I+432>>2]=i[I+528>>2],i[I+436>>2]=H;R(H=I+528|0,H),120!=(0|(V=V+1|0)););b(H,H,I+432|0),R(H,H),R(H,H),R(H,H),R(H,H),R(H,H),R(H,H),R(H,H),R(H,H),R(H,H),R(H,H),b(H,H,I+480|0),R(H,H),R(H,H),R(H,H),b(H,H,I),R(H,H),QI(I+400|0,H),q=i[I+256>>2],z=i[I+260>>2],j=i[I+264>>2],X=i[I+268>>2],O=i[I+272>>2],d=i[I+276>>2],l=i[I+280>>2],U=i[I+284>>2],Y=i[I+288>>2],u=(L=0-(1&C[I+401|0])|0)&(0-(H=i[I+292>>2])^H)^H,i[I+660>>2]=u,x=Y^L&(Y^0-Y),i[I+656>>2]=x,P=U^L&(U^0-U),i[I+652>>2]=P,J=l^L&(l^0-l),i[I+648>>2]=J,m=d^L&(d^0-d),i[I+644>>2]=m,d=O^L&(O^0-O),i[I+640>>2]=d,l=X^L&(X^0-X),i[I+636>>2]=l,U=j^L&(j^0-j),i[I+632>>2]=U,Y=z^L&(z^0-z),i[I+628>>2]=Y,H=(q^L&(q^0-q))-(486662&L)|0,i[I+624>>2]=H+1,i[I+820>>2]=u,i[I+816>>2]=x,i[I+812>>2]=P,i[I+808>>2]=J,i[I+804>>2]=m,i[I+800>>2]=d,i[I+796>>2]=l,i[I+792>>2]=U,i[I+788>>2]=Y,i[I+784>>2]=H-1,LA(I,I+624|0),b(H=I+912|0,I+784|0,I),QI(A,H),C[A+31|0]=o[A+31|0]|y,MA(I,A)&&(DB(),Q()),H=i[I+36>>2],i[I+816>>2]=i[I+32>>2],i[I+820>>2]=H,H=i[I+28>>2],i[I+808>>2]=i[I+24>>2],i[I+812>>2]=H,H=i[I+20>>2],i[I+800>>2]=i[I+16>>2],i[I+804>>2]=H,H=i[I+12>>2],i[I+792>>2]=i[I+8>>2],i[I+796>>2]=H,H=i[I+52>>2],i[I+832>>2]=i[I+48>>2],i[I+836>>2]=H,H=i[I+60>>2],i[I+840>>2]=i[I+56>>2],i[I+844>>2]=H,H=i[4+(Y=I- -64|0)>>2],i[I+848>>2]=i[Y>>2],i[I+852>>2]=H,H=i[I+76>>2],i[I+856>>2]=i[I+72>>2],i[I+860>>2]=H,H=i[I+4>>2],i[I+784>>2]=i[I>>2],i[I+788>>2]=H,H=i[I+44>>2],i[I+824>>2]=i[I+40>>2],i[I+828>>2]=H,H=i[I+116>>2],i[I+896>>2]=i[I+112>>2],i[I+900>>2]=H,H=i[I+108>>2],i[I+888>>2]=i[I+104>>2],i[I+892>>2]=H,H=i[I+100>>2],i[I+880>>2]=i[I+96>>2],i[I+884>>2]=H,H=i[I+92>>2],i[I+872>>2]=i[I+88>>2],i[I+876>>2]=H,H=i[I+84>>2],i[I+864>>2]=i[I+80>>2],i[I+868>>2]=H,KA(J=I+624|0,m=I+784|0),b(m,J,d=I+744|0),b(Y=I+824|0,U=I+664|0,l=I+704|0),b(H=I+864|0,l,d),KA(J,m),b(m,J,d),b(Y,U,l),b(H,l,d),KA(J,m),b(I,J,d),b(Y=I+40|0,U,l),b(H=I+80|0,l,d),b(I+120|0,J,U),LA(J,H),b(m,I,J),b(H=I+912|0,Y,J),QI(A,H),QI(I+576|0,m),C[A+31|0]=o[A+31|0]^o[I+576|0]<<7,s=I+960|0,s=g+48|0}function K(A){var I,g=0,C=0,B=0,Q=0,a=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0;s=I=s-16|0;A:{I:{g:{C:{B:{Q:{i:{o:{E:{a:{if((A|=0)>>>0<=244){if(3&(g=(Q=i[9405])>>>(A=(t=A>>>0<11?16:A+11&504)>>>3|0)|0)){A=37660+(g=(C=A+(1&~g)|0)<<3)|0,g=i[g+37668>>2],(0|A)!=(0|(B=i[g+8>>2]))?(i[B+12>>2]=A,i[A+8>>2]=B):(h=37620,D=Lg(-2,C)&Q,i[h>>2]=D),A=g+8|0,C<<=3,i[g+4>>2]=3|C,i[4+(g=g+C|0)>>2]=1|i[g+4>>2];break A}if((r=i[9407])>>>0>=t>>>0)break a;if(g){g=37660+(C=(A=FC((0-(C=2<<A)|C)&g<<A))<<3)|0,C=i[C+37668>>2],(0|g)!=(0|(B=i[C+8>>2]))?(i[B+12>>2]=g,i[g+8>>2]=B):(Q=Lg(-2,A)&Q,i[9405]=Q),i[C+4>>2]=3|t,a=(A<<=3)-t|0,i[4+(c=C+t|0)>>2]=1|a,i[A+C>>2]=a,r&&(A=37660+(-8&r)|0,B=i[9410],(g=1<<(r>>>3))&Q?g=i[A+8>>2]:(i[9405]=g|Q,g=A),i[A+8>>2]=B,i[g+12>>2]=B,i[B+12>>2]=A,i[B+8>>2]=g),A=C+8|0,i[9410]=c,i[9407]=a;break A}if(!(y=i[9406]))break a;for(C=i[37924+(FC(y)<<2)>>2],a=(-8&i[C+4>>2])-t|0,g=C;(A=i[g+16>>2])||(A=i[g+20>>2]);)a=(g=(B=(-8&i[A+4>>2])-t|0)>>>0<a>>>0)?B:a,C=g?A:C,g=A;if(e=i[C+24>>2],(0|C)!=(0|(A=i[C+12>>2]))){g=i[C+8>>2],i[g+12>>2]=A,i[A+8>>2]=g;break I}if(g=i[C+20>>2])B=C+20|0;else{if(!(g=i[C+16>>2]))break E;B=C+16|0}for(;c=B,B=(A=g)+20|0,(g=i[A+20>>2])||(B=A+16|0,g=i[A+16>>2]););i[c>>2]=0;break I}if(t=-1,!(A>>>0>4294967231)&&(t=-8&(g=A+11|0),c=i[9406])){r=31,a=0-t|0,A>>>0<=16777204&&(r=62+((t>>>38-(A=_(g>>>8|0))&1)-(A<<1)|0)|0);_:{c:{if(g=i[37924+(r<<2)>>2])for(A=0,C=t<<(31!=(0|r)?25-(r>>>1|0):0);;){if(!((Q=(-8&i[g+4>>2])-t|0)>>>0>=a>>>0||(B=g,a=Q))){a=0,A=g;break c}if(Q=i[g+20>>2],g=i[16+((C>>>29&4)+g|0)>>2],A=Q?(0|Q)==(0|g)?A:Q:A,C<<=1,!g)break}else A=0;if(!(A|B)){if(B=0,!(A=(0-(A=2<<r)|A)&c))break a;A=i[37924+(FC(A)<<2)>>2]}if(!A)break _}for(;a=(g=(C=(-8&i[A+4>>2])-t|0)>>>0<a>>>0)?C:a,B=g?A:B,A=(g=i[A+16>>2])||i[A+20>>2];);}if(!(!B|i[9407]-t>>>0<=a>>>0)){if(r=i[B+24>>2],(0|B)!=(0|(A=i[B+12>>2]))){g=i[B+8>>2],i[g+12>>2]=A,i[A+8>>2]=g;break g}if(g=i[B+20>>2])C=B+20|0;else{if(!(g=i[B+16>>2]))break o;C=B+16|0}for(;Q=C,C=(A=g)+20|0,(g=i[A+20>>2])||(C=A+16|0,g=i[A+16>>2]););i[Q>>2]=0;break g}}}if((B=i[9407])>>>0>=t>>>0){A=i[9410],(g=B-t|0)>>>0>=16?(i[4+(C=A+t|0)>>2]=1|g,i[A+B>>2]=g,i[A+4>>2]=3|t):(i[A+4>>2]=3|B,i[4+(g=A+B|0)>>2]=1|i[g+4>>2],C=0,g=0),i[9407]=g,i[9410]=C,A=A+8|0;break A}if((C=i[9408])>>>0>t>>>0){g=C-t|0,i[9408]=g,C=(A=i[9411])+t|0,i[9411]=C,i[C+4>>2]=1|g,i[A+4>>2]=3|t,A=A+8|0;break A}if(A=0,a=t+47|0,i[9523]?g=i[9525]:(i[9526]=-1,i[9527]=-1,i[9524]=4096,i[9525]=4096,i[9523]=I+12&-16^1431655768,i[9528]=0,i[9516]=0,g=4096),(g=(Q=a+g|0)&(c=0-g|0))>>>0<=t>>>0)break A;if((r=i[9515])&&(B=(e=i[9513])+g|0)>>>0<=e>>>0|B>>>0>r>>>0)break A;a:{if(!(4&o[38064])){_:{c:{t:{r:{if(B=i[9411])for(A=38068;;){if((r=i[A>>2])>>>0<=B>>>0&B>>>0<r+i[A+4>>2]>>>0)break r;if(!(A=i[A+8>>2]))break}if(-1==(0|(C=cg(0))))break _;if(Q=g,(B=(A=i[9524])-1|0)&C&&(Q=(g-C|0)+(C+B&0-A)|0),Q>>>0<=t>>>0)break _;if((B=i[9515])&&(A=(c=i[9513])+Q|0)>>>0<=c>>>0|A>>>0>B>>>0)break _;if((0|C)!=(0|(A=cg(Q))))break t;break a}if((0|(C=cg(Q=c&Q-C)))==(i[A>>2]+i[A+4>>2]|0))break c;A=C}if(-1==(0|A))break _;if(t+48>>>0<=Q>>>0){C=A;break a}if(-1==(0|cg(C=(C=i[9525])+(a-Q|0)&0-C)))break _;Q=C+Q|0,C=A;break a}if(-1!=(0|C))break a}i[9516]=4|i[9516]}if(-1==(0|(C=cg(g)))|-1==(0|(A=cg(0)))|A>>>0<=C>>>0)break B;if((Q=A-C|0)>>>0<=t+40>>>0)break B}A=i[9513]+Q|0,i[9513]=A,A>>>0>E[9514]&&(i[9514]=A);a:{if(a=i[9411]){for(A=38068;;){if(((g=i[A>>2])+(B=i[A+4>>2])|0)==(0|C))break a;if(!(A=i[A+8>>2]))break}break i}for((A=i[9409])>>>0<=C>>>0&&A||(i[9409]=C),A=0,i[9518]=Q,i[9517]=C,i[9413]=-1,i[9414]=i[9523],i[9520]=0;B=37660+(g=A<<3)|0,i[g+37668>>2]=B,i[g+37672>>2]=B,32!=(0|(A=A+1|0)););B=(A=Q-40|0)-(g=-8-C&7)|0,i[9408]=B,g=g+C|0,i[9411]=g,i[g+4>>2]=1|B,i[4+(A+C|0)>>2]=40,i[9412]=i[9527];break Q}if(8&i[A+12>>2]|C>>>0<=a>>>0|g>>>0>a>>>0)break i;i[A+4>>2]=B+Q,g=(A=-8-a&7)+a|0,i[9411]=g,A=(C=i[9408]+Q|0)-A|0,i[9408]=A,i[g+4>>2]=1|A,i[4+(C+a|0)>>2]=40,i[9412]=i[9527];break Q}A=0;break I}A=0;break g}E[9409]>C>>>0&&(i[9409]=C),B=C+Q|0,A=38068;i:{for(;;){if((0|(g=i[A>>2]))!=(0|B)){if(A=i[A+8>>2])continue;break i}break}if(!(8&o[A+12|0]))break C}for(A=38068;!((g=i[A>>2])>>>0<=a>>>0&&(B=g+i[A+4>>2]|0)>>>0>a>>>0);)A=i[A+8>>2];for(c=(A=Q-40|0)-(g=-8-C&7)|0,i[9408]=c,g=g+C|0,i[9411]=g,i[g+4>>2]=1|c,i[4+(A+C|0)>>2]=40,i[9412]=i[9527],i[(g=(A=(B+(39-B&7)|0)-47|0)>>>0<a+16>>>0?a:A)+4>>2]=27,A=i[9520],i[g+16>>2]=i[9519],i[g+20>>2]=A,A=i[9518],i[g+8>>2]=i[9517],i[g+12>>2]=A,i[9519]=g+8,i[9518]=Q,i[9517]=C,i[9520]=0,A=g+24|0;i[A+4>>2]=7,C=A+8|0,A=A+4|0,C>>>0<B>>>0;);if((0|g)!=(0|a)){i[g+4>>2]=-2&i[g+4>>2],C=g-a|0,i[a+4>>2]=1|C,i[g>>2]=C;i:if(C>>>0<=255)A=37660+(-8&C)|0,(g=i[9405])&(C=1<<(C>>>3))?g=i[A+8>>2]:(i[9405]=g|C,g=A),i[A+8>>2]=a,i[g+12>>2]=a,B=8,C=12;else{A=31,C>>>0<=16777215&&(A=62+((C>>>38-(A=_(C>>>8|0))&1)-(A<<1)|0)|0),i[a+28>>2]=A,i[a+16>>2]=0,i[a+20>>2]=0,g=37924+(A<<2)|0;o:{if((B=i[9406])&(Q=1<<A)){for(A=C<<(31!=(0|A)?25-(A>>>1|0):0),B=i[g>>2];;){if((0|C)==(-8&i[(g=B)+4>>2]))break o;if(B=A>>>29|0,A<<=1,!(B=i[16+(Q=(4&B)+g|0)>>2]))break}i[Q+16>>2]=a}else i[9406]=B|Q,i[g>>2]=a;i[a+24>>2]=g,A=g=a,B=12,C=8;break i}A=i[g+8>>2],i[A+12>>2]=a,i[g+8>>2]=a,i[a+8>>2]=A,A=0,B=12,C=24}i[B+a>>2]=g,i[C+a>>2]=A}}if(!((A=i[9408])>>>0<=t>>>0)){g=A-t|0,i[9408]=g,C=(A=i[9411])+t|0,i[9411]=C,i[C+4>>2]=1|g,i[A+4>>2]=3|t,A=A+8|0;break A}}i[9404]=48,A=0;break A}i[A>>2]=C,i[A+4>>2]=i[A+4>>2]+Q,i[4+(r=(-8-C&7)+C|0)>>2]=3|t,c=(Q=g+(-8-g&7)|0)-(a=t+r|0)|0;C:if(i[9411]!=(0|Q))if(i[9410]!=(0|Q)){if(1==(3&(A=i[Q+4>>2]))){e=-8&A,C=i[Q+12>>2];B:if(A>>>0<=255){if((0|(g=i[Q+8>>2]))==(0|C)){h=37620,D=i[9405]&Lg(-2,A>>>3|0),i[h>>2]=D;break B}i[g+12>>2]=C,i[C+8>>2]=g}else{t=i[Q+24>>2];Q:if((0|C)==(0|Q)){i:{if(A=i[Q+20>>2])g=Q+20|0;else{if(!(A=i[Q+16>>2]))break i;g=Q+16|0}for(;B=g,C=A,g=A+20|0,(A=i[A+20>>2])||(g=C+16|0,A=i[C+16>>2]););i[B>>2]=0;break Q}C=0}else A=i[Q+8>>2],i[A+12>>2]=C,i[C+8>>2]=A;if(t){A=i[Q+28>>2];Q:{if(i[(g=37924+(A<<2)|0)>>2]==(0|Q)){if(i[g>>2]=C,C)break Q;h=37624,D=i[9406]&Lg(-2,A),i[h>>2]=D;break B}if(i[t+(i[t+16>>2]==(0|Q)?16:20)>>2]=C,!C)break B}i[C+24>>2]=t,(A=i[Q+16>>2])&&(i[C+16>>2]=A,i[A+24>>2]=C),(A=i[Q+20>>2])&&(i[C+20>>2]=A,i[A+24>>2]=C)}}c=c+e|0,A=i[4+(Q=Q+e|0)>>2]}if(i[Q+4>>2]=-2&A,i[a+4>>2]=1|c,i[a+c>>2]=c,c>>>0<=255)A=37660+(-8&c)|0,(g=i[9405])&(C=1<<(c>>>3))?g=i[A+8>>2]:(i[9405]=g|C,g=A),i[A+8>>2]=a,i[g+12>>2]=a,i[a+12>>2]=A,i[a+8>>2]=g;else{C=31,c>>>0<=16777215&&(C=62+((c>>>38-(A=_(c>>>8|0))&1)-(A<<1)|0)|0),i[a+28>>2]=C,i[a+16>>2]=0,i[a+20>>2]=0,A=37924+(C<<2)|0;B:{if((g=i[9406])&(B=1<<C)){for(C=c<<(31!=(0|C)?25-(C>>>1|0):0),g=i[A>>2];;){if((-8&i[(A=g)+4>>2])==(0|c))break B;if(g=C>>>29|0,C<<=1,!(g=i[16+(B=(4&g)+A|0)>>2]))break}i[B+16>>2]=a}else i[9406]=g|B,i[A>>2]=a;i[a+24>>2]=A,i[a+12>>2]=a,i[a+8>>2]=a;break C}g=i[A+8>>2],i[g+12>>2]=a,i[A+8>>2]=a,i[a+24>>2]=0,i[a+12>>2]=A,i[a+8>>2]=g}}else i[9410]=a,A=i[9407]+c|0,i[9407]=A,i[a+4>>2]=1|A,i[A+a>>2]=A;else i[9411]=a,A=i[9408]+c|0,i[9408]=A,i[a+4>>2]=1|A;A=r+8|0;break A}g:if(r){g=i[B+28>>2];C:{if(i[(C=37924+(g<<2)|0)>>2]==(0|B)){if(i[C>>2]=A,A)break C;c=Lg(-2,g)&c,i[9406]=c;break g}if(i[r+(i[r+16>>2]==(0|B)?16:20)>>2]=A,!A)break g}i[A+24>>2]=r,(g=i[B+16>>2])&&(i[A+16>>2]=g,i[g+24>>2]=A),(g=i[B+20>>2])&&(i[A+20>>2]=g,i[g+24>>2]=A)}g:if(a>>>0<=15)A=a+t|0,i[B+4>>2]=3|A,i[4+(A=A+B|0)>>2]=1|i[A+4>>2];else if(i[B+4>>2]=3|t,i[4+(Q=B+t|0)>>2]=1|a,i[a+Q>>2]=a,a>>>0<=255)A=37660+(-8&a)|0,(g=i[9405])&(C=1<<(a>>>3))?g=i[A+8>>2]:(i[9405]=g|C,g=A),i[A+8>>2]=Q,i[g+12>>2]=Q,i[Q+12>>2]=A,i[Q+8>>2]=g;else{A=31,a>>>0<=16777215&&(A=62+((a>>>38-(A=_(a>>>8|0))&1)-(A<<1)|0)|0),i[Q+28>>2]=A,i[Q+16>>2]=0,i[Q+20>>2]=0,g=37924+(A<<2)|0;C:{if((C=1<<A)&c){for(A=a<<(31!=(0|A)?25-(A>>>1|0):0),g=i[g>>2];;){if(C=g,(-8&i[g+4>>2])==(0|a))break C;if(c=A>>>29|0,A<<=1,!(g=i[16+(c=g+(4&c)|0)>>2]))break}i[c+16>>2]=Q,i[Q+24>>2]=C}else i[9406]=C|c,i[g>>2]=Q,i[Q+24>>2]=g;i[Q+12>>2]=Q,i[Q+8>>2]=Q;break g}A=i[C+8>>2],i[A+12>>2]=Q,i[C+8>>2]=Q,i[Q+24>>2]=0,i[Q+12>>2]=C,i[Q+8>>2]=A}A=B+8|0;break A}I:if(e){g=i[C+28>>2];g:{if(i[(B=37924+(g<<2)|0)>>2]==(0|C)){if(i[B>>2]=A,A)break g;h=37624,D=Lg(-2,g)&y,i[h>>2]=D;break I}if(i[e+(i[e+16>>2]==(0|C)?16:20)>>2]=A,!A)break I}i[A+24>>2]=e,(g=i[C+16>>2])&&(i[A+16>>2]=g,i[g+24>>2]=A),(g=i[C+20>>2])&&(i[A+20>>2]=g,i[g+24>>2]=A)}a>>>0<=15?(A=a+t|0,i[C+4>>2]=3|A,i[4+(A=A+C|0)>>2]=1|i[A+4>>2]):(i[C+4>>2]=3|t,i[4+(c=C+t|0)>>2]=1|a,i[a+c>>2]=a,r&&(A=37660+(-8&r)|0,B=i[9410],(g=1<<(r>>>3))&Q?g=i[A+8>>2]:(i[9405]=g|Q,g=A),i[A+8>>2]=B,i[g+12>>2]=B,i[B+12>>2]=A,i[B+8>>2]=g),i[9410]=c,i[9407]=a),A=C+8|0}return s=I+16|0,0|A}function U(A,I,g,B,Q,E){var _,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,X=0,O=0,W=0,V=0,Z=0,T=0;if(s=_=s-592|0,r=-1,ZI(t=A+32|0)&&!KI(A)&&NI(Q)&&!KI(Q)&&!qA(y=_+128|0,Q)){for(SI(r=_+384|0),E&&SA(r,35600,34,0),SA(r,A,32,0),SA(r,Q,32,0),SA(r,I,g,B),j(I=r,r=_+320|0),S(r),B=_+8|0,g=t,Q=0,I=0,s=c=s-2272|0;E=c+2016|0,t=o[r+(Q>>>3|0)|0],C[E+Q|0]=t>>>(6&Q)&1,C[(e=E)+(E=1|Q)|0]=t>>>(7&E)&1,256!=(0|(Q=Q+2|0)););for(;;){I=(E=I)+1|0;A:if(!(E>>>0>254)&&o[0|(D=(Q=c+2016|0)+E|0)]){I:if(Q=C[0|(h=I+Q|0)])if((0|(Q=(r=Q<<1)+(t=C[0|D])|0))<=15)C[0|D]=Q,C[0|h]=0;else{if((0|(Q=t-r|0))<-15)break A;for(C[0|D]=Q,Q=I;;){if(!o[0|(t=(c+2016|0)+Q|0)]){C[0|t]=1;break I}if(C[0|t]=0,t=Q>>>0<255,Q=Q+1|0,!t)break}}if(!(E>>>0>253)){I:if(t=C[0|(e=(Q=E+2|0)+(c+2016|0)|0)])if((0|(t=(h=t<<2)+(r=C[0|D])|0))>=16){if((0|(t=r-h|0))<-15)break A;for(C[0|D]=t;;){if(o[0|(t=(c+2016|0)+Q|0)]){if(C[0|t]=0,t=Q>>>0<255,Q=Q+1|0,t)continue;break I}break}C[0|t]=1}else C[0|D]=t,C[0|e]=0;if(253!=(0|E)){I:if(t=C[0|(e=(Q=E+3|0)+(c+2016|0)|0)])if((0|(t=(h=t<<3)+(r=C[0|D])|0))>=16){if((0|(t=r-h|0))<-15)break A;for(C[0|D]=t;;){if(o[0|(t=(c+2016|0)+Q|0)]){if(C[0|t]=0,t=Q>>>0<255,Q=Q+1|0,t)continue;break I}break}C[0|t]=1}else C[0|D]=t,C[0|e]=0;if(!(E>>>0>251)){I:if(t=C[0|(e=(Q=E+4|0)+(c+2016|0)|0)])if((0|(t=(h=t<<4)+(r=C[0|D])|0))>=16){if((0|(t=r-h|0))<-15)break A;for(C[0|D]=t;;){if(o[0|(t=(c+2016|0)+Q|0)]){if(C[0|t]=0,t=Q>>>0<255,Q=Q+1|0,t)continue;break I}break}C[0|t]=1}else C[0|D]=t,C[0|e]=0;if(251!=(0|E)){I:if(t=C[0|(e=(Q=E+5|0)+(c+2016|0)|0)])if((0|(t=(h=t<<5)+(r=C[0|D])|0))>=16){if((0|(t=r-h|0))<-15)break A;for(C[0|D]=t;;){if(o[0|(t=(c+2016|0)+Q|0)]){if(C[0|t]=0,t=Q>>>0<255,Q=Q+1|0,t)continue;break I}break}C[0|t]=1}else C[0|D]=t,C[0|e]=0;if(!(E>>>0>249)&&(E=C[0|(h=(Q=E+6|0)+(c+2016|0)|0)]))if((0|(E=(r=E<<6)+(t=C[0|D])|0))>=16){if((0|(E=t-r|0))<-15)break A;for(C[0|D]=E;;){if(o[0|(E=(c+2016|0)+Q|0)]){if(C[0|E]=0,E=Q>>>0<255,Q=Q+1|0,E)continue;break A}break}C[0|E]=1}else C[0|D]=E,C[0|h]=0}}}}}if(256==(0|I))break}for(Q=0;I=c+1760|0,E=o[g+(Q>>>3|0)|0],C[I+Q|0]=E>>>(6&Q)&1,C[(t=I)+(I=1|Q)|0]=E>>>(7&I)&1,256!=(0|(Q=Q+2|0)););for(I=0;;){g=I,I=I+1|0;A:if(!(g>>>0>254)&&o[0|(e=(Q=c+1760|0)+g|0)]){I:if(Q=C[0|(r=I+Q|0)])if((0|(Q=(t=Q<<1)+(E=C[0|e])|0))<=15)C[0|e]=Q,C[0|r]=0;else{if((0|(Q=E-t|0))<-15)break A;for(C[0|e]=Q,Q=I;;){if(!o[0|(E=(c+1760|0)+Q|0)]){C[0|E]=1;break I}if(C[0|E]=0,E=Q>>>0<255,Q=Q+1|0,!E)break}}if(!(g>>>0>253)){I:if(E=C[0|(h=(Q=g+2|0)+(c+1760|0)|0)])if((0|(E=(r=E<<2)+(t=C[0|e])|0))>=16){if((0|(E=t-r|0))<-15)break A;for(C[0|e]=E;;){if(o[0|(E=(c+1760|0)+Q|0)]){if(C[0|E]=0,E=Q>>>0<255,Q=Q+1|0,E)continue;break I}break}C[0|E]=1}else C[0|e]=E,C[0|h]=0;if(253!=(0|g)){I:if(E=C[0|(h=(Q=g+3|0)+(c+1760|0)|0)])if((0|(E=(r=E<<3)+(t=C[0|e])|0))>=16){if((0|(E=t-r|0))<-15)break A;for(C[0|e]=E;;){if(o[0|(E=(c+1760|0)+Q|0)]){if(C[0|E]=0,E=Q>>>0<255,Q=Q+1|0,E)continue;break I}break}C[0|E]=1}else C[0|e]=E,C[0|h]=0;if(!(g>>>0>251)){I:if(E=C[0|(h=(Q=g+4|0)+(c+1760|0)|0)])if((0|(E=(r=E<<4)+(t=C[0|e])|0))>=16){if((0|(E=t-r|0))<-15)break A;for(C[0|e]=E;;){if(o[0|(E=(c+1760|0)+Q|0)]){if(C[0|E]=0,E=Q>>>0<255,Q=Q+1|0,E)continue;break I}break}C[0|E]=1}else C[0|e]=E,C[0|h]=0;if(251!=(0|g)){I:if(E=C[0|(h=(Q=g+5|0)+(c+1760|0)|0)])if((0|(E=(r=E<<5)+(t=C[0|e])|0))>=16){if((0|(E=t-r|0))<-15)break A;for(C[0|e]=E;;){if(o[0|(E=(c+1760|0)+Q|0)]){if(C[0|E]=0,E=Q>>>0<255,Q=Q+1|0,E)continue;break I}break}C[0|E]=1}else C[0|e]=E,C[0|h]=0;if(!(g>>>0>249)&&(g=C[0|(r=(Q=g+6|0)+(c+1760|0)|0)]))if((0|(g=(t=g<<6)+(E=C[0|e])|0))>=16){if((0|(g=E-t|0))<-15)break A;for(C[0|e]=g;;){if(o[0|(g=(c+1760|0)+Q|0)]){if(C[0|g]=0,g=Q>>>0<255,Q=Q+1|0,g)continue;break A}break}C[0|g]=1}else C[0|e]=g,C[0|r]=0}}}}}if(256==(0|I))break}for($A(Q=c+480|0,y),I=i[y+36>>2],i[c+192>>2]=i[y+32>>2],i[c+196>>2]=I,I=i[y+28>>2],i[c+184>>2]=i[y+24>>2],i[c+188>>2]=I,I=i[y+20>>2],i[c+176>>2]=i[y+16>>2],i[c+180>>2]=I,I=i[y+12>>2],i[c+168>>2]=i[y+8>>2],i[c+172>>2]=I,I=i[y+4>>2],i[c+160>>2]=i[y>>2],i[c+164>>2]=I,I=i[y+52>>2],i[c+208>>2]=i[y+48>>2],i[c+212>>2]=I,I=i[y+60>>2],i[c+216>>2]=i[y+56>>2],i[c+220>>2]=I,I=i[4+(g=y- -64|0)>>2],i[c+224>>2]=i[g>>2],i[c+228>>2]=I,I=i[y+76>>2],i[c+232>>2]=i[y+72>>2],i[c+236>>2]=I,I=i[y+44>>2],i[c+200>>2]=i[y+40>>2],i[c+204>>2]=I,I=i[y+92>>2],i[c+248>>2]=i[y+88>>2],i[c+252>>2]=I,I=i[y+100>>2],i[c+256>>2]=i[y+96>>2],i[c+260>>2]=I,I=i[y+108>>2],i[c+264>>2]=i[y+104>>2],i[c+268>>2]=I,I=i[y+116>>2],i[c+272>>2]=i[y+112>>2],i[c+276>>2]=I,I=i[y+84>>2],i[c+240>>2]=i[y+80>>2],i[c+244>>2]=I,KA(E=c+320|0,g=c+160|0),b(c,E,f=c+440|0),b(c+40|0,p=c+360|0,w=c+400|0),b(c+80|0,w,f),b(c+120|0,E,p),sA(E,c,Q),b(g,E,f),b(k=c+200|0,p,w),b(F=c+240|0,w,f),b(n=c+280|0,E,p),$A(I=c+640|0,g),sA(E,c,I),b(g,E,f),b(k,p,w),b(F,w,f),b(n,E,p),$A(I=c+800|0,g),sA(E,c,I),b(g,E,f),b(k,p,w),b(F,w,f),b(n,E,p),$A(I=c+960|0,g),sA(E,c,I),b(g,E,f),b(k,p,w),b(F,w,f),b(n,E,p),$A(I=c+1120|0,g),sA(E,c,I),b(g,E,f),b(k,p,w),b(F,w,f),b(n,E,p),$A(I=c+1280|0,g),sA(E,c,I),b(g,E,f),b(k,p,w),b(F,w,f),b(n,E,p),$A(I=c+1440|0,g),sA(E,c,I),b(g,E,f),b(k,p,w),b(F,w,f),b(n,E,p),$A(c+1600|0,g),i[B+32>>2]=0,i[B+36>>2]=0,i[B+24>>2]=0,i[B+28>>2]=0,i[B+16>>2]=0,i[B+20>>2]=0,i[B+8>>2]=0,i[B+12>>2]=0,i[B>>2]=0,i[B+4>>2]=0,i[B+44>>2]=0,i[B+48>>2]=0,i[B+40>>2]=1,i[B+52>>2]=0,i[B+56>>2]=0,i[B+60>>2]=0,i[B+64>>2]=0,i[B+68>>2]=0,i[B+72>>2]=0,i[B+84>>2]=0,i[B+88>>2]=0,i[B+76>>2]=0,i[B+80>>2]=1,i[B+92>>2]=0,i[B+96>>2]=0,i[B+100>>2]=0,i[B+104>>2]=0,i[B+108>>2]=0,i[B+112>>2]=0,i[B+116>>2]=0,X=B+80|0,O=B+40|0,I=255;;){A:{I:{if(!o[(g=c+2016|0)+I|0]&&!o[(Q=c+1760|0)+I|0]){if(!(o[(E=g)+(g=I-1|0)|0]|o[g+Q|0]))break I;I=g}if((0|I)<0)break A;for(;KA(Q=c+320|0,B),g=I,(0|(E=C[I+(c+2016|0)|0]))>0?(b(I=c+160|0,Q,f),b(k,p,w),b(F,w,f),b(n,Q,p),sA(Q,I,(c+480|0)+a((254&E)>>>1|0,160)|0)):(0|E)>=0||(b(I=c+160|0,Q=c+320|0,f),b(k,p,w),b(F,w,f),b(n,Q,p),hA(Q,I,(c+480|0)+a((0-E&254)>>>1|0,160)|0)),(0|(u=C[g+(c+1760|0)|0]))>0?(b(I=c+160|0,Q=c+320|0,f),b(k,p,w),b(F,w,f),b(n,Q,p),DA(Q,I,a((254&u)>>>1|0,120)+1728|0)):(0|u)>=0||(b(c+160|0,x=c+320|0,f),b(k,p,w),b(F,w,f),b(n,x,p),N=i[c+160>>2],G=i[c+200>>2],M=i[c+164>>2],K=i[c+204>>2],U=i[c+168>>2],H=i[c+208>>2],Y=i[c+172>>2],J=i[c+212>>2],d=i[c+176>>2],m=i[c+216>>2],l=i[c+180>>2],D=i[c+220>>2],e=i[c+184>>2],h=i[c+224>>2],r=i[c+188>>2],y=i[c+228>>2],t=i[c+192>>2],E=i[c+232>>2],Q=i[c+236>>2],I=i[c+196>>2],i[c+396>>2]=Q-I,i[c+392>>2]=E-t,i[c+388>>2]=y-r,i[c+384>>2]=h-e,i[c+380>>2]=D-l,i[c+376>>2]=m-d,i[c+372>>2]=J-Y,i[c+368>>2]=H-U,i[c+364>>2]=K-M,i[c+360>>2]=G-N,i[c+356>>2]=I+Q,i[c+352>>2]=E+t,i[c+348>>2]=r+y,i[c+344>>2]=e+h,i[c+340>>2]=D+l,i[c+336>>2]=d+m,i[c+332>>2]=Y+J,i[c+328>>2]=U+H,i[c+324>>2]=M+K,i[c+320>>2]=N+G,b(w,x,40+(I=a((0-u&254)>>>1|0,120)+1728|0)|0),b(p,p,I),b(f,I+80|0,n),W=i[c+276>>2],V=i[c+272>>2],u=i[c+268>>2],x=i[c+264>>2],e=i[c+260>>2],h=i[c+256>>2],r=i[c+252>>2],y=i[c+248>>2],t=i[c+244>>2],E=i[c+240>>2],v=i[c+360>>2],R=i[c+400>>2],L=i[c+364>>2],P=i[c+404>>2],q=i[c+368>>2],z=i[c+408>>2],N=i[c+372>>2],G=i[c+412>>2],M=i[c+376>>2],K=i[c+416>>2],U=i[c+380>>2],H=i[c+420>>2],Y=i[c+384>>2],J=i[c+424>>2],d=i[c+388>>2],m=i[c+428>>2],l=i[c+392>>2],D=i[c+432>>2],Q=i[c+396>>2],I=i[c+436>>2],i[c+396>>2]=Q+I,i[c+392>>2]=D+l,i[c+388>>2]=d+m,i[c+384>>2]=Y+J,i[c+380>>2]=U+H,i[c+376>>2]=M+K,i[c+372>>2]=N+G,i[c+368>>2]=q+z,i[c+364>>2]=L+P,i[c+360>>2]=v+R,i[c+356>>2]=I-Q,i[c+352>>2]=D-l,i[c+348>>2]=m-d,i[c+344>>2]=J-Y,i[c+340>>2]=H-U,i[c+336>>2]=K-M,i[c+332>>2]=G-N,i[c+328>>2]=z-q,i[c+324>>2]=P-L,i[c+320>>2]=R-v,N=E<<1,G=i[c+440>>2],i[c+400>>2]=N-G,M=t<<1,K=i[c+444>>2],i[c+404>>2]=M-K,U=y<<1,H=i[c+448>>2],i[c+408>>2]=U-H,Y=r<<1,J=i[c+452>>2],i[c+412>>2]=Y-J,d=h<<1,m=i[c+456>>2],i[c+416>>2]=d-m,l=e<<1,D=i[c+460>>2],i[c+420>>2]=l-D,e=x<<1,h=i[c+464>>2],i[c+424>>2]=e-h,r=u<<1,y=i[c+468>>2],i[c+428>>2]=r-y,t=V<<1,E=i[c+472>>2],i[c+432>>2]=t-E,Q=W<<1,I=i[c+476>>2],i[c+436>>2]=Q-I,i[c+440>>2]=N+G,i[c+444>>2]=M+K,i[c+448>>2]=U+H,i[c+452>>2]=Y+J,i[c+456>>2]=d+m,i[c+460>>2]=D+l,i[c+464>>2]=e+h,i[c+468>>2]=r+y,i[c+472>>2]=E+t,i[c+476>>2]=I+Q),b(B,c+320|0,f),b(O,p,w),b(X,w,f),I=g-1|0,(0|g)>0;);break A}if(I=I-2|0,g)continue}break}s=c+2272|0,tg(I=_+288|0,B),Z=-1,T=NC(I,A),r=((0|A)==(0|I)?Z:T)|MI(A,I,32)}return s=_+592|0,r}function b(A,I,g){var C,B,Q,o,E,_,c,t,r,e,y,s,h,D,p,w,n,k,F,S,N,G,M,K,U,b,H,Y,J,d,m,l,u,x,v,R,L,P,q,z,j,X,O,W,V,Z,T,$,AA,IA,gA,CA,BA,QA=0,iA=0,oA=0,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0,sA=0,hA=0,DA=0,fA=0,pA=0,wA=0,nA=0,kA=0,FA=0,SA=0,NA=0,GA=0,MA=0,KA=0;QA=Ig(C=i[g+4>>2],e=C>>31,wA=(w=i[I+20>>2])<<1,m=wA>>31),oA=f,iA=(hA=Ig(fA=i[g>>2],Q=fA>>31,B=i[I+24>>2],o=B>>31))+QA|0,QA=f+oA|0,QA=iA>>>0<hA>>>0?QA+1|0:QA,rA=Ig(E=i[g+8>>2],h=E>>31,hA=i[I+16>>2],_=hA>>31),oA=f+QA|0,oA=(iA=rA+iA|0)>>>0<rA>>>0?oA+1|0:oA,QA=(rA=Ig(y=i[g+12>>2],n=y>>31,K=(k=i[I+12>>2])<<1,l=K>>31))+iA|0,iA=f+oA|0,iA=QA>>>0<rA>>>0?iA+1|0:iA,oA=(DA=Ig(D=i[g+16>>2],U=D>>31,rA=i[I+8>>2],c=rA>>31))+QA|0,QA=f+iA|0,QA=oA>>>0<DA>>>0?QA+1|0:QA,iA=oA,oA=Ig(F=i[g+20>>2],u=F>>31,b=(S=i[I+4>>2])<<1,x=b>>31),QA=f+QA|0,QA=(iA=iA+oA|0)>>>0<oA>>>0?QA+1|0:QA,Z=cA=i[g+24>>2],oA=(eA=Ig(cA,W=cA>>31,DA=i[I>>2],t=DA>>31))+iA|0,iA=f+QA|0,iA=oA>>>0<eA>>>0?iA+1|0:iA,v=i[g+28>>2],QA=(eA=Ig(sA=a(v,19),N=sA>>31,H=(G=i[I+36>>2])<<1,R=H>>31))+oA|0,oA=f+iA|0,oA=QA>>>0<eA>>>0?oA+1|0:oA,SA=i[g+32>>2],iA=(tA=Ig(EA=a(SA,19),p=EA>>31,eA=i[I+32>>2],r=eA>>31))+QA|0,QA=f+oA|0,QA=iA>>>0<tA>>>0?QA+1|0:QA,T=i[g+36>>2],g=Ig(tA=a(T,19),s=tA>>31,Y=(M=i[I+28>>2])<<1,L=Y>>31),QA=f+QA|0,aA=I=g+iA|0,g=I>>>0<g>>>0?QA+1|0:QA,I=Ig(hA,_,C,e),QA=f,iA=Ig(fA,Q,w,P=w>>31),oA=f+QA|0,oA=(I=iA+I|0)>>>0<iA>>>0?oA+1|0:oA,QA=Ig(E,h,k,q=k>>31),iA=f+oA|0,iA=(I=QA+I|0)>>>0<QA>>>0?iA+1|0:iA,oA=Ig(rA,c,y,n),QA=f+iA|0,QA=(I=oA+I|0)>>>0<oA>>>0?QA+1|0:QA,iA=Ig(D,U,S,z=S>>31),QA=f+QA|0,QA=(I=iA+I|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(DA,t,F,u),QA=f+QA|0,QA=(I=iA+I|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(cA=a(cA,19),J=cA>>31,G,j=G>>31),oA=f+QA|0,oA=(I=iA+I|0)>>>0<iA>>>0?oA+1|0:oA,QA=Ig(eA,r,sA,N),iA=f+oA|0,iA=(I=QA+I|0)>>>0<QA>>>0?iA+1|0:iA,oA=Ig(EA,p,M,X=M>>31),QA=f+iA|0,QA=(I=oA+I|0)>>>0<oA>>>0?QA+1|0:QA,iA=Ig(tA,s,B,o),QA=f+QA|0,GA=I=iA+I|0,nA=I>>>0<iA>>>0?QA+1|0:QA,I=Ig(C,e,K,l),QA=f,iA=Ig(fA,Q,hA,_),QA=f+QA|0,QA=(I=iA+I|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(rA,c,E,h),oA=f+QA|0,oA=(I=iA+I|0)>>>0<iA>>>0?oA+1|0:oA,QA=Ig(y,n,b,x),iA=f+oA|0,iA=(I=QA+I|0)>>>0<QA>>>0?iA+1|0:iA,oA=Ig(DA,t,D,U),QA=f+iA|0,QA=(I=oA+I|0)>>>0<oA>>>0?QA+1|0:QA,iA=Ig(d=a(F,19),O=d>>31,H,R),QA=f+QA|0,QA=(I=iA+I|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(eA,r,cA,J),QA=f+QA|0,QA=(I=iA+I|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(sA,N,Y,L),oA=f+QA|0,oA=(I=iA+I|0)>>>0<iA>>>0?oA+1|0:oA,QA=Ig(EA,p,B,o),iA=f+oA|0,iA=(I=QA+I|0)>>>0<QA>>>0?iA+1|0:iA,oA=Ig(tA,s,wA,m),QA=f+iA|0,$=I=oA+I|0,AA=QA=I>>>0<oA>>>0?QA+1|0:QA,IA=I=I+33554432|0,gA=QA=I>>>0<33554432?QA+1|0:QA,oA=(67108863&QA)<<6|I>>>26,QA=(QA>>26)+nA|0,GA=I=oA+GA|0,QA=I>>>0<oA>>>0?QA+1|0:QA,CA=I=I+16777216|0,QA=g+(iA=(oA=I>>>0<16777216?QA+1|0:QA)>>25)|0,QA=(I=(oA=(33554431&oA)<<7|I>>>25)+aA|0)>>>0<oA>>>0?QA+1|0:QA,kA=g=(iA=I)+33554432|0,I=QA=g>>>0<33554432?QA+1|0:QA,i[A+24>>2]=iA-(-67108864&g),g=Ig(C,e,b,x),QA=f,iA=Ig(fA,Q,rA,c),oA=f+QA|0,oA=(g=iA+g|0)>>>0<iA>>>0?oA+1|0:oA,iA=(QA=g)+(g=Ig(DA,t,E,h))|0,QA=f+oA|0,QA=g>>>0>iA>>>0?QA+1|0:QA,oA=Ig(g=a(y,19),FA=g>>31,H,R),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,oA=(aA=Ig(eA,r,nA=a(D,19),V=nA>>31))+iA|0,iA=f+QA|0,iA=oA>>>0<aA>>>0?iA+1|0:iA,aA=Ig(Y,L,d,O),QA=f+iA|0,QA=(oA=aA+oA|0)>>>0<aA>>>0?QA+1|0:QA,iA=(aA=Ig(B,o,cA,J))+oA|0,oA=f+QA|0,oA=iA>>>0<aA>>>0?oA+1|0:oA,aA=Ig(sA,N,wA,m),QA=f+oA|0,QA=(iA=aA+iA|0)>>>0<aA>>>0?QA+1|0:QA,oA=Ig(EA,p,hA,_),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,oA=(aA=Ig(tA,s,K,l))+iA|0,iA=f+QA|0,yA=oA,MA=oA>>>0<aA>>>0?iA+1|0:iA,QA=Ig(DA,t,C,e),iA=f,oA=(aA=Ig(fA,Q,S,z))+QA|0,QA=f+iA|0,QA=oA>>>0<aA>>>0?QA+1|0:QA,aA=iA=a(E,19),iA=(_A=Ig(iA,NA=iA>>31,G,j))+oA|0,oA=f+QA|0,oA=iA>>>0<_A>>>0?oA+1|0:oA,_A=Ig(eA,r,g,FA),QA=f+oA|0,QA=(iA=_A+iA|0)>>>0<_A>>>0?QA+1|0:QA,oA=Ig(nA,V,M,X),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,oA=(_A=Ig(B,o,d,O))+iA|0,iA=f+QA|0,iA=oA>>>0<_A>>>0?iA+1|0:iA,_A=Ig(cA,J,w,P),QA=f+iA|0,QA=(oA=_A+oA|0)>>>0<_A>>>0?QA+1|0:QA,iA=(_A=Ig(hA,_,sA,N))+oA|0,oA=f+QA|0,oA=iA>>>0<_A>>>0?oA+1|0:oA,_A=Ig(EA,p,k,q),QA=f+oA|0,QA=(iA=_A+iA|0)>>>0<_A>>>0?QA+1|0:QA,oA=Ig(tA,s,rA,c),QA=f+QA|0,KA=iA=oA+iA|0,_A=iA>>>0<oA>>>0?QA+1|0:QA,QA=Ig(QA=a(C,19),QA>>31,H,R),iA=f,oA=Ig(fA,Q,DA,t),iA=f+iA|0,iA=(QA=oA+QA|0)>>>0<oA>>>0?iA+1|0:iA,oA=(aA=Ig(eA,r,aA,NA))+QA|0,QA=f+iA|0,g=(iA=Ig(g,FA,Y,L))+oA|0,oA=f+(oA>>>0<aA>>>0?QA+1|0:QA)|0,oA=g>>>0<iA>>>0?oA+1|0:oA,iA=Ig(B,o,nA,V),QA=f+oA|0,QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(wA,m,d,O),QA=f+QA|0,QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA,oA=Ig(hA,_,cA,J),iA=f+QA|0,iA=(g=oA+g|0)>>>0<oA>>>0?iA+1|0:iA,oA=Ig(sA,N,K,l),QA=f+iA|0,QA=(g=oA+g|0)>>>0<oA>>>0?QA+1|0:QA,iA=Ig(EA,p,rA,c),oA=f+QA|0,oA=(g=iA+g|0)>>>0<iA>>>0?oA+1|0:oA,iA=Ig(tA,s,b,x),QA=f+oA|0,aA=g=iA+g|0,FA=QA=g>>>0<iA>>>0?QA+1|0:QA,NA=g=g+33554432|0,BA=QA=g>>>0<33554432?QA+1|0:QA,iA=(oA=QA>>26)+_A|0,_A=g=(QA=(67108863&QA)<<6|g>>>26)+KA|0,QA=g>>>0<QA>>>0?iA+1|0:iA,KA=g=g+16777216|0,iA=(33554431&(QA=g>>>0<16777216?QA+1|0:QA))<<7|g>>>25,QA=(QA>>25)+MA|0,QA=(g=iA+yA|0)>>>0<iA>>>0?QA+1|0:QA,MA=iA=(oA=g)+33554432|0,g=QA=iA>>>0<33554432?QA+1|0:QA,i[A+8>>2]=oA-(-67108864&iA),QA=Ig(B,o,C,e),oA=f,iA=(yA=Ig(fA,Q,M,X))+QA|0,QA=f+oA|0,QA=iA>>>0<yA>>>0?QA+1|0:QA,oA=Ig(E,h,w,P),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,oA=Ig(hA,_,y,n),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,yA=Ig(D,U,k,q),oA=f+QA|0,oA=(iA=yA+iA|0)>>>0<yA>>>0?oA+1|0:oA,QA=(yA=Ig(rA,c,F,u))+iA|0,iA=f+oA|0,iA=QA>>>0<yA>>>0?iA+1|0:iA,oA=(yA=Ig(S,z,Z,W))+QA|0,QA=f+iA|0,QA=oA>>>0<yA>>>0?QA+1|0:QA,iA=oA,oA=Ig(DA,t,v,yA=v>>31),QA=f+QA|0,QA=(iA=iA+oA|0)>>>0<oA>>>0?QA+1|0:QA,oA=Ig(EA,p,G,j),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,pA=Ig(tA,s,eA,r),oA=f+QA|0,QA=I>>26,I=(kA=(67108863&I)<<6|kA>>>26)+(iA=pA+iA|0)|0,iA=QA+(iA>>>0<pA>>>0?oA+1|0:oA)|0,QA=(oA=I)>>>0<kA>>>0?iA+1|0:iA,kA=iA=oA+16777216|0,I=QA=iA>>>0<16777216?QA+1|0:QA,i[A+28>>2]=oA-(-33554432&iA),QA=Ig(rA,c,C,e),iA=f,pA=Ig(fA,Q,k,q),oA=f+iA|0,oA=(QA=pA+QA|0)>>>0<pA>>>0?oA+1|0:oA,pA=Ig(E,h,S,z),iA=f+oA|0,iA=(QA=pA+QA|0)>>>0<pA>>>0?iA+1|0:iA,oA=(pA=Ig(DA,t,y,n))+QA|0,QA=f+iA|0,QA=oA>>>0<pA>>>0?QA+1|0:QA,iA=oA,oA=Ig(nA,V,G,j),QA=f+QA|0,QA=(iA=iA+oA|0)>>>0<oA>>>0?QA+1|0:QA,oA=Ig(eA,r,d,O),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,iA=(cA=Ig(cA,J,M,X))+iA|0,oA=f+QA|0,QA=(sA=Ig(B,o,sA,N))+iA|0,iA=f+(iA>>>0<cA>>>0?oA+1|0:oA)|0,oA=(EA=Ig(EA,p,w,P))+QA|0,QA=f+(QA>>>0<sA>>>0?iA+1|0:iA)|0,QA=oA>>>0<EA>>>0?QA+1|0:QA,iA=oA,oA=Ig(tA,s,hA,_),QA=f+QA|0,EA=iA=iA+oA|0,QA=(QA=iA>>>0<oA>>>0?QA+1|0:QA)+(iA=g>>26)|0,EA=g=EA+(oA=(67108863&g)<<6|MA>>>26)|0,QA=g>>>0<oA>>>0?QA+1|0:QA,sA=iA=g+16777216|0,g=oA=iA>>>0<16777216?QA+1|0:QA,i[A+12>>2]=EA-(-33554432&iA),QA=Ig(C,e,Y,L),oA=f,iA=(EA=Ig(fA,Q,eA,r))+QA|0,QA=f+oA|0,QA=iA>>>0<EA>>>0?QA+1|0:QA,oA=Ig(B,o,E,h),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,EA=Ig(y,n,wA,m),oA=f+QA|0,oA=(iA=EA+iA|0)>>>0<EA>>>0?oA+1|0:oA,QA=(EA=Ig(hA,_,D,U))+iA|0,iA=f+oA|0,iA=QA>>>0<EA>>>0?iA+1|0:iA,oA=(EA=Ig(K,l,F,u))+QA|0,QA=f+iA|0,QA=oA>>>0<EA>>>0?QA+1|0:QA,iA=oA,oA=Ig(rA,c,Z,W),QA=f+QA|0,QA=(iA=iA+oA|0)>>>0<oA>>>0?QA+1|0:QA,oA=Ig(v,yA,b,x),QA=f+QA|0,QA=(iA=oA+iA|0)>>>0<oA>>>0?QA+1|0:QA,iA=(wA=Ig(DA,t,EA=SA,cA=EA>>31))+iA|0,oA=f+QA|0,QA=(tA=Ig(tA,s,H,R))+iA|0,iA=f+(iA>>>0<wA>>>0?oA+1|0:oA)|0,iA=QA>>>0<tA>>>0?iA+1|0:iA,SA=QA,QA=(QA=I>>25)+iA|0,QA=(I=SA+(oA=(33554431&I)<<7|kA>>>25)|0)>>>0<oA>>>0?QA+1|0:QA,tA=iA=(oA=I)+33554432|0,I=QA=iA>>>0<33554432?QA+1|0:QA,i[A+32>>2]=oA-(-67108864&iA),iA=g>>25,g=(sA=(33554431&g)<<7|sA>>>25)+($-(QA=-67108864&IA)|0)|0,QA=iA+(AA-((QA>>>0>$>>>0)+gA|0)|0)|0,QA=g>>>0<sA>>>0?QA+1|0:QA,QA=((67108863&(QA=(g=(iA=g)+33554432|0)>>>0<33554432?QA+1|0:QA))<<6|g>>>26)+(oA=GA-(-33554432&CA)|0)|0,i[A+20>>2]=QA,i[A+16>>2]=iA-(-67108864&g),g=Ig(eA,r,C,e),QA=f,iA=Ig(fA,Q,G,j),QA=f+QA|0,QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA,oA=Ig(E,h,M,X),iA=f+QA|0,iA=(g=oA+g|0)>>>0<oA>>>0?iA+1|0:iA,QA=Ig(B,o,y,n),oA=f+iA|0,oA=(g=QA+g|0)>>>0<QA>>>0?oA+1|0:oA,iA=Ig(D,U,w,P),QA=f+oA|0,QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(hA,_,F,u),QA=f+QA|0,QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA,iA=Ig(k,q,Z,W),QA=f+QA|0,QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA,oA=Ig(rA,c,v,yA),iA=f+QA|0,iA=(g=oA+g|0)>>>0<oA>>>0?iA+1|0:iA,QA=Ig(EA,cA,S,z),oA=f+iA|0,oA=(g=QA+g|0)>>>0<QA>>>0?oA+1|0:oA,iA=Ig(DA,t,T,T>>31),QA=f+oA|0,QA=(QA=(g=iA+g|0)>>>0<iA>>>0?QA+1|0:QA)+(iA=I>>26)|0,QA=(I=(oA=g)+(g=(67108863&I)<<6|tA>>>26)|0)>>>0<g>>>0?QA+1|0:QA,QA=(I=(g=I)+16777216|0)>>>0<16777216?QA+1|0:QA,i[A+36>>2]=g-(-33554432&I),oA=_A-(-33554432&KA)|0,iA=aA-(g=-67108864&NA)|0,fA=FA-((g>>>0>aA>>>0)+BA|0)|0,I=(g=Ig((33554431&(g=QA))<<7|I>>>25,QA>>=25,19,0))+iA|0,iA=f+fA|0,QA=I>>>0<g>>>0?iA+1|0:iA,QA=((67108863&(QA=(I=(g=I)+33554432|0)>>>0<33554432?QA+1|0:QA))<<6|I>>>26)+oA|0,i[A+4>>2]=QA,i[A>>2]=g-(-67108864&I)}function H(A,I){var g,C,B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w=0,n=0,k=0;s=g=s-544|0,C=o[A+60|0]|o[A+61|0]<<8|o[A+62|0]<<16|o[A+63|0]<<24,B=o[A+56|0]|o[A+57|0]<<8|o[A+58|0]<<16|o[A+59|0]<<24,Q=o[A+52|0]|o[A+53|0]<<8|o[A+54|0]<<16|o[A+55|0]<<24,E=o[A+48|0]|o[A+49|0]<<8|o[A+50|0]<<16|o[A+51|0]<<24,a=o[A+32|0]|o[A+33|0]<<8|o[A+34|0]<<16|o[A+35|0]<<24,_=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24,c=o[A+40|0]|o[A+41|0]<<8|o[A+42|0]<<16|o[A+43|0]<<24,t=o[A+44|0]|o[A+45|0]<<8|o[A+46|0]<<16|o[A+47|0]<<24,w=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,r=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,e=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,y=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,h=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,D=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,f=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,p=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,A=i[I+124>>2],i[g+536>>2]=i[I+120>>2],i[g+540>>2]=A,A=i[I+116>>2],i[g+528>>2]=i[I+112>>2],i[g+532>>2]=A,A=i[I+108>>2],i[g+504>>2]=i[I+104>>2],i[g+508>>2]=A,A=i[I+100>>2],i[g+496>>2]=i[I+96>>2],i[g+500>>2]=A,A=i[I+124>>2],i[g+488>>2]=i[I+120>>2],i[g+492>>2]=A,A=i[I+116>>2],i[g+480>>2]=i[I+112>>2],i[g+484>>2]=A,AI(k=g+512|0,g+496|0,g+480|0),A=i[g+524>>2],i[I+120>>2]=i[g+520>>2],i[I+124>>2]=A,A=i[g+516>>2],i[I+112>>2]=i[g+512>>2],i[I+116>>2]=A,A=i[I+92>>2],i[g+472>>2]=i[I+88>>2],i[g+476>>2]=A,A=i[I+84>>2],i[g+464>>2]=i[I+80>>2],i[g+468>>2]=A,A=i[I+108>>2],i[g+456>>2]=i[I+104>>2],i[g+460>>2]=A,A=i[I+100>>2],i[g+448>>2]=i[I+96>>2],i[g+452>>2]=A,AI(k,g+464|0,g+448|0),A=i[g+524>>2],i[I+104>>2]=i[g+520>>2],i[I+108>>2]=A,A=i[g+516>>2],i[I+96>>2]=i[g+512>>2],i[I+100>>2]=A,A=i[I+76>>2],i[g+440>>2]=i[I+72>>2],i[g+444>>2]=A,n=i[4+(A=I- -64|0)>>2],i[g+432>>2]=i[A>>2],i[g+436>>2]=n,n=i[I+92>>2],i[g+424>>2]=i[I+88>>2],i[g+428>>2]=n,n=i[I+84>>2],i[g+416>>2]=i[I+80>>2],i[g+420>>2]=n,AI(k,g+432|0,g+416|0),n=i[g+524>>2],i[I+88>>2]=i[g+520>>2],i[I+92>>2]=n,n=i[g+516>>2],i[I+80>>2]=i[g+512>>2],i[I+84>>2]=n,n=i[I+60>>2],i[g+408>>2]=i[I+56>>2],i[g+412>>2]=n,n=i[I+52>>2],i[g+400>>2]=i[I+48>>2],i[g+404>>2]=n,n=i[I+76>>2],i[g+392>>2]=i[I+72>>2],i[g+396>>2]=n,n=i[A+4>>2],i[g+384>>2]=i[A>>2],i[g+388>>2]=n,AI(k,g+400|0,g+384|0),n=i[g+524>>2],i[I+72>>2]=i[g+520>>2],i[I+76>>2]=n,n=i[g+516>>2],i[A>>2]=i[g+512>>2],i[A+4>>2]=n,n=i[I+44>>2],i[g+376>>2]=i[I+40>>2],i[g+380>>2]=n,n=i[I+36>>2],i[g+368>>2]=i[I+32>>2],i[g+372>>2]=n,n=i[I+60>>2],i[g+360>>2]=i[I+56>>2],i[g+364>>2]=n,n=i[I+52>>2],i[g+352>>2]=i[I+48>>2],i[g+356>>2]=n,AI(k,g+368|0,g+352|0),n=i[g+524>>2],i[I+56>>2]=i[g+520>>2],i[I+60>>2]=n,n=i[g+516>>2],i[I+48>>2]=i[g+512>>2],i[I+52>>2]=n,n=i[I+28>>2],i[g+344>>2]=i[I+24>>2],i[g+348>>2]=n,n=i[I+20>>2],i[g+336>>2]=i[I+16>>2],i[g+340>>2]=n,n=i[I+44>>2],i[g+328>>2]=i[I+40>>2],i[g+332>>2]=n,n=i[I+36>>2],i[g+320>>2]=i[I+32>>2],i[g+324>>2]=n,AI(k,g+336|0,g+320|0),n=i[g+524>>2],i[I+40>>2]=i[g+520>>2],i[I+44>>2]=n,n=i[g+516>>2],i[I+32>>2]=i[g+512>>2],i[I+36>>2]=n,n=i[I+12>>2],i[g+312>>2]=i[I+8>>2],i[g+316>>2]=n,n=i[I+4>>2],i[g+304>>2]=i[I>>2],i[g+308>>2]=n,n=i[I+28>>2],i[g+296>>2]=i[I+24>>2],i[g+300>>2]=n,n=i[I+20>>2],i[g+288>>2]=i[I+16>>2],i[g+292>>2]=n,AI(k,g+304|0,g+288|0),n=i[g+524>>2],i[I+24>>2]=i[g+520>>2],i[I+28>>2]=n,n=i[g+516>>2],i[I+16>>2]=i[g+512>>2],i[I+20>>2]=n,n=i[g+540>>2],i[g+280>>2]=i[g+536>>2],i[g+284>>2]=n,n=i[g+532>>2],i[g+272>>2]=i[g+528>>2],i[g+276>>2]=n,n=i[I+12>>2],i[g+264>>2]=i[I+8>>2],i[g+268>>2]=n,n=i[I+4>>2],i[g+256>>2]=i[I>>2],i[g+260>>2]=n,AI(k,g+272|0,g+256|0),n=i[g+524>>2],i[I+8>>2]=i[g+520>>2],i[I+12>>2]=n,n=i[g+516>>2],i[I>>2]=i[g+512>>2],i[I+4>>2]=n,i[I+12>>2]=(o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24)^f,i[I+8>>2]=(o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24)^D,i[I+4>>2]=(o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24)^h,i[I>>2]=(o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24)^p,i[A>>2]=(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24)^y,i[I+68>>2]=(o[I+68|0]|o[I+69|0]<<8|o[I+70|0]<<16|o[I+71|0]<<24)^e,i[I+72>>2]=(o[I+72|0]|o[I+73|0]<<8|o[I+74|0]<<16|o[I+75|0]<<24)^r,i[I+76>>2]=(o[I+76|0]|o[I+77|0]<<8|o[I+78|0]<<16|o[I+79|0]<<24)^w,w=i[I+124>>2],i[g+536>>2]=i[I+120>>2],i[g+540>>2]=w,w=i[I+116>>2],i[g+528>>2]=i[I+112>>2],i[g+532>>2]=w,w=i[I+108>>2],i[g+248>>2]=i[I+104>>2],i[g+252>>2]=w,w=i[I+100>>2],i[g+240>>2]=i[I+96>>2],i[g+244>>2]=w,w=i[I+124>>2],i[g+232>>2]=i[I+120>>2],i[g+236>>2]=w,w=i[I+116>>2],i[g+224>>2]=i[I+112>>2],i[g+228>>2]=w,AI(k,g+240|0,g+224|0),w=i[g+524>>2],i[I+120>>2]=i[g+520>>2],i[I+124>>2]=w,w=i[g+516>>2],i[I+112>>2]=i[g+512>>2],i[I+116>>2]=w,w=i[I+92>>2],i[g+216>>2]=i[I+88>>2],i[g+220>>2]=w,w=i[I+84>>2],i[g+208>>2]=i[I+80>>2],i[g+212>>2]=w,w=i[I+108>>2],i[g+200>>2]=i[I+104>>2],i[g+204>>2]=w,w=i[I+100>>2],i[g+192>>2]=i[I+96>>2],i[g+196>>2]=w,AI(k,g+208|0,g+192|0),w=i[g+524>>2],i[I+104>>2]=i[g+520>>2],i[I+108>>2]=w,w=i[g+516>>2],i[I+96>>2]=i[g+512>>2],i[I+100>>2]=w,w=i[I+76>>2],i[g+184>>2]=i[I+72>>2],i[g+188>>2]=w,w=i[A+4>>2],i[g+176>>2]=i[A>>2],i[g+180>>2]=w,w=i[I+92>>2],i[g+168>>2]=i[I+88>>2],i[g+172>>2]=w,w=i[I+84>>2],i[g+160>>2]=i[I+80>>2],i[g+164>>2]=w,AI(k,g+176|0,g+160|0),w=i[g+524>>2],i[I+88>>2]=i[g+520>>2],i[I+92>>2]=w,w=i[g+516>>2],i[I+80>>2]=i[g+512>>2],i[I+84>>2]=w,w=i[I+60>>2],i[g+152>>2]=i[I+56>>2],i[g+156>>2]=w,w=i[I+52>>2],i[g+144>>2]=i[I+48>>2],i[g+148>>2]=w,w=i[I+76>>2],i[g+136>>2]=i[I+72>>2],i[g+140>>2]=w,w=i[A+4>>2],i[g+128>>2]=i[A>>2],i[g+132>>2]=w,AI(k,g+144|0,g+128|0),w=i[g+524>>2],i[I+72>>2]=i[g+520>>2],i[I+76>>2]=w,w=i[g+516>>2],i[A>>2]=i[g+512>>2],i[A+4>>2]=w,w=i[I+44>>2],i[g+120>>2]=i[I+40>>2],i[g+124>>2]=w,w=i[I+36>>2],i[g+112>>2]=i[I+32>>2],i[g+116>>2]=w,w=i[I+60>>2],i[g+104>>2]=i[I+56>>2],i[g+108>>2]=w,w=i[I+52>>2],i[g+96>>2]=i[I+48>>2],i[g+100>>2]=w,AI(k,g+112|0,g+96|0),w=i[g+524>>2],i[I+56>>2]=i[g+520>>2],i[I+60>>2]=w,w=i[g+516>>2],i[I+48>>2]=i[g+512>>2],i[I+52>>2]=w,w=i[I+28>>2],i[g+88>>2]=i[I+24>>2],i[g+92>>2]=w,w=i[I+20>>2],i[g+80>>2]=i[I+16>>2],i[g+84>>2]=w,w=i[I+44>>2],i[g+72>>2]=i[I+40>>2],i[g+76>>2]=w,w=i[I+36>>2],i[g+64>>2]=i[I+32>>2],i[g+68>>2]=w,AI(k,g+80|0,g- -64|0),w=i[g+524>>2],i[I+40>>2]=i[g+520>>2],i[I+44>>2]=w,w=i[g+516>>2],i[I+32>>2]=i[g+512>>2],i[I+36>>2]=w,w=i[I+12>>2],i[g+56>>2]=i[I+8>>2],i[g+60>>2]=w,w=i[I+4>>2],i[g+48>>2]=i[I>>2],i[g+52>>2]=w,w=i[I+28>>2],i[g+40>>2]=i[I+24>>2],i[g+44>>2]=w,w=i[I+20>>2],i[g+32>>2]=i[I+16>>2],i[g+36>>2]=w,AI(k,g+48|0,g+32|0),w=i[g+524>>2],i[I+24>>2]=i[g+520>>2],i[I+28>>2]=w,w=i[g+516>>2],i[I+16>>2]=i[g+512>>2],i[I+20>>2]=w,w=i[g+540>>2],i[g+24>>2]=i[g+536>>2],i[g+28>>2]=w,w=i[g+532>>2],i[g+16>>2]=i[g+528>>2],i[g+20>>2]=w,w=i[I+12>>2],i[g+8>>2]=i[I+8>>2],i[g+12>>2]=w,w=i[I+4>>2],i[g>>2]=i[I>>2],i[g+4>>2]=w,AI(k,g+16|0,g),k=i[g+524>>2],i[I+8>>2]=i[g+520>>2],i[I+12>>2]=k,k=i[g+516>>2],i[I>>2]=i[g+512>>2],i[I+4>>2]=k,i[I+12>>2]=(o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24)^t,i[I+8>>2]=(o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24)^c,i[I+4>>2]=(o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24)^_,i[I>>2]=(o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24)^a,i[A>>2]=(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24)^E,i[I+68>>2]=(o[I+68|0]|o[I+69|0]<<8|o[I+70|0]<<16|o[I+71|0]<<24)^Q,i[I+72>>2]=(o[I+72|0]|o[I+73|0]<<8|o[I+74|0]<<16|o[I+75|0]<<24)^B,i[I+76>>2]=(o[I+76|0]|o[I+77|0]<<8|o[I+78|0]<<16|o[I+79|0]<<24)^C,s=g+544|0}function Y(A,I,g,B,Q){var E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0;for(s=E=s-288|0,D=(o[Q+44|0]|o[Q+45|0]<<8|o[Q+46|0]<<16|o[Q+47|0]<<24)^B>>>29,f=(o[Q+40|0]|o[Q+41|0]<<8|o[Q+42|0]<<16|o[Q+43|0]<<24)^B<<3,p=(o[Q+36|0]|o[Q+37|0]<<8|o[Q+38|0]<<16|o[Q+39|0]<<24)^g>>>29,B=(o[0|(c=Q+32|0)]|o[c+1|0]<<8|o[c+2|0]<<16|o[c+3|0]<<24)^g<<3,y=Q+16|0,r=Q+48|0,_=Q- -64|0,e=Q+80|0,a=Q+96|0,t=Q+112|0;g=i[t+12>>2],i[E+280>>2]=i[t+8>>2],i[E+284>>2]=g,g=i[t+4>>2],i[E+272>>2]=i[t>>2],i[E+276>>2]=g,g=i[a+12>>2],i[E+248>>2]=i[a+8>>2],i[E+252>>2]=g,g=i[a+4>>2],i[E+240>>2]=i[a>>2],i[E+244>>2]=g,g=i[t+12>>2],i[E+232>>2]=i[t+8>>2],i[E+236>>2]=g,g=i[t+4>>2],i[E+224>>2]=i[t>>2],i[E+228>>2]=g,AI(h=E+256|0,E+240|0,E+224|0),g=i[E+268>>2],i[t+8>>2]=i[E+264>>2],i[t+12>>2]=g,g=i[E+260>>2],i[t>>2]=i[E+256>>2],i[t+4>>2]=g,g=i[e+12>>2],i[E+216>>2]=i[e+8>>2],i[E+220>>2]=g,g=i[e+4>>2],i[E+208>>2]=i[e>>2],i[E+212>>2]=g,g=i[a+12>>2],i[E+200>>2]=i[a+8>>2],i[E+204>>2]=g,g=i[a+4>>2],i[E+192>>2]=i[a>>2],i[E+196>>2]=g,AI(h,E+208|0,E+192|0),g=i[E+268>>2],i[a+8>>2]=i[E+264>>2],i[a+12>>2]=g,g=i[E+260>>2],i[a>>2]=i[E+256>>2],i[a+4>>2]=g,g=i[_+12>>2],i[E+184>>2]=i[_+8>>2],i[E+188>>2]=g,g=i[_+4>>2],i[E+176>>2]=i[_>>2],i[E+180>>2]=g,g=i[e+12>>2],i[E+168>>2]=i[e+8>>2],i[E+172>>2]=g,g=i[e+4>>2],i[E+160>>2]=i[e>>2],i[E+164>>2]=g,AI(h,E+176|0,E+160|0),g=i[E+268>>2],i[e+8>>2]=i[E+264>>2],i[e+12>>2]=g,g=i[E+260>>2],i[e>>2]=i[E+256>>2],i[e+4>>2]=g,g=i[r+12>>2],i[E+152>>2]=i[r+8>>2],i[E+156>>2]=g,g=i[r+4>>2],i[E+144>>2]=i[r>>2],i[E+148>>2]=g,g=i[_+12>>2],i[E+136>>2]=i[_+8>>2],i[E+140>>2]=g,g=i[_+4>>2],i[E+128>>2]=i[_>>2],i[E+132>>2]=g,AI(h,E+144|0,E+128|0),g=i[E+268>>2],i[_+8>>2]=i[E+264>>2],i[_+12>>2]=g,g=i[E+260>>2],i[_>>2]=i[E+256>>2],i[_+4>>2]=g,g=i[c+12>>2],i[E+120>>2]=i[c+8>>2],i[E+124>>2]=g,g=i[c+4>>2],i[E+112>>2]=i[c>>2],i[E+116>>2]=g,g=i[r+12>>2],i[E+104>>2]=i[r+8>>2],i[E+108>>2]=g,g=i[r+4>>2],i[E+96>>2]=i[r>>2],i[E+100>>2]=g,AI(h,E+112|0,E+96|0),g=i[E+268>>2],i[r+8>>2]=i[E+264>>2],i[r+12>>2]=g,g=i[E+260>>2],i[r>>2]=i[E+256>>2],i[r+4>>2]=g,g=i[y+12>>2],i[E+88>>2]=i[y+8>>2],i[E+92>>2]=g,g=i[y+4>>2],i[E+80>>2]=i[y>>2],i[E+84>>2]=g,g=i[c+12>>2],i[E+72>>2]=i[c+8>>2],i[E+76>>2]=g,g=i[c+4>>2],i[E+64>>2]=i[c>>2],i[E+68>>2]=g,AI(h,E+80|0,E- -64|0),g=i[E+268>>2],i[c+8>>2]=i[E+264>>2],i[c+12>>2]=g,g=i[E+260>>2],i[c>>2]=i[E+256>>2],i[c+4>>2]=g,g=i[Q+12>>2],i[E+56>>2]=i[Q+8>>2],i[E+60>>2]=g,g=i[Q+4>>2],i[E+48>>2]=i[Q>>2],i[E+52>>2]=g,g=i[y+12>>2],i[E+40>>2]=i[y+8>>2],i[E+44>>2]=g,g=i[y+4>>2],i[E+32>>2]=i[y>>2],i[E+36>>2]=g,AI(h,E+48|0,E+32|0),g=i[E+268>>2],i[y+8>>2]=i[E+264>>2],i[y+12>>2]=g,g=i[E+260>>2],i[y>>2]=i[E+256>>2],i[y+4>>2]=g,g=i[E+284>>2],i[E+24>>2]=i[E+280>>2],i[E+28>>2]=g,g=i[E+276>>2],i[E+16>>2]=i[E+272>>2],i[E+20>>2]=g,g=i[Q+12>>2],i[E+8>>2]=i[Q+8>>2],i[E+12>>2]=g,g=i[Q+4>>2],i[E>>2]=i[Q>>2],i[E+4>>2]=g,AI(h,E+16|0,E),g=i[E+268>>2],i[Q+8>>2]=i[E+264>>2],i[Q+12>>2]=g,g=i[E+260>>2],i[Q>>2]=i[E+256>>2],i[Q+4>>2]=g,n=D^(o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24),i[Q+12>>2]=n,k=f^(o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24),i[Q+8>>2]=k,F=p^(o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24),i[Q+4>>2]=F,S=B^(o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24),i[Q>>2]=S,N=B^(o[0|_]|o[_+1|0]<<8|o[_+2|0]<<16|o[_+3|0]<<24),i[_>>2]=N,G=p^(o[Q+68|0]|o[Q+69|0]<<8|o[Q+70|0]<<16|o[Q+71|0]<<24),i[Q+68>>2]=G,M=f^(o[Q+72|0]|o[Q+73|0]<<8|o[Q+74|0]<<16|o[Q+75|0]<<24),i[Q+72>>2]=M,K=D^(o[Q+76|0]|o[Q+77|0]<<8|o[Q+78|0]<<16|o[Q+79|0]<<24),i[Q+76>>2]=K,7!=(0|(w=w+1|0)););A:{I:{g:{if(g=I-16|0){if(16==(0|g))break g;break I}_=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,c=o[Q+48|0]|o[Q+49|0]<<8|o[Q+50|0]<<16|o[Q+51|0]<<24,y=o[Q+32|0]|o[Q+33|0]<<8|o[Q+34|0]<<16|o[Q+35|0]<<24,r=o[Q+96|0]|o[Q+97|0]<<8|o[Q+98|0]<<16|o[Q+99|0]<<24,e=o[Q+80|0]|o[Q+81|0]<<8|o[Q+82|0]<<16|o[Q+83|0]<<24,a=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,t=o[Q+52|0]|o[Q+53|0]<<8|o[Q+54|0]<<16|o[Q+55|0]<<24,h=o[Q+36|0]|o[Q+37|0]<<8|o[Q+38|0]<<16|o[Q+39|0]<<24,D=o[Q+100|0]|o[Q+101|0]<<8|o[Q+102|0]<<16|o[Q+103|0]<<24,f=o[Q+84|0]|o[Q+85|0]<<8|o[Q+86|0]<<16|o[Q+87|0]<<24,p=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,w=o[Q+56|0]|o[Q+57|0]<<8|o[Q+58|0]<<16|o[Q+59|0]<<24,B=o[Q+40|0]|o[Q+41|0]<<8|o[Q+42|0]<<16|o[Q+43|0]<<24,g=o[Q+104|0]|o[Q+105|0]<<8|o[Q+106|0]<<16|o[Q+107|0]<<24,I=o[Q+88|0]|o[Q+89|0]<<8|o[Q+90|0]<<16|o[Q+91|0]<<24,Q=n^(o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24)^(o[Q+60|0]|o[Q+61|0]<<8|o[Q+62|0]<<16|o[Q+63|0]<<24)^(o[Q+44|0]|o[Q+45|0]<<8|o[Q+46|0]<<16|o[Q+47|0]<<24)^(o[Q+92|0]|o[Q+93|0]<<8|o[Q+94|0]<<16|o[Q+95|0]<<24)^(o[Q+108|0]|o[Q+109|0]<<8|o[Q+110|0]<<16|o[Q+111|0]<<24)^K,C[A+12|0]=Q,C[A+13|0]=Q>>>8,C[A+14|0]=Q>>>16,C[A+15|0]=Q>>>24,I=p^w^B^I^g^M^k,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=a^t^h^D^f^G^F,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=_^c^y^r^e^N^S,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24;break A}t=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,h=o[Q+48|0]|o[Q+49|0]<<8|o[Q+50|0]<<16|o[Q+51|0]<<24,D=o[Q+32|0]|o[Q+33|0]<<8|o[Q+34|0]<<16|o[Q+35|0]<<24,f=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,p=o[Q+52|0]|o[Q+53|0]<<8|o[Q+54|0]<<16|o[Q+55|0]<<24,w=o[Q+36|0]|o[Q+37|0]<<8|o[Q+38|0]<<16|o[Q+39|0]<<24,B=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,g=o[Q+56|0]|o[Q+57|0]<<8|o[Q+58|0]<<16|o[Q+59|0]<<24,I=o[Q+40|0]|o[Q+41|0]<<8|o[Q+42|0]<<16|o[Q+43|0]<<24,a=n^(o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24)^(o[Q+60|0]|o[Q+61|0]<<8|o[Q+62|0]<<16|o[Q+63|0]<<24)^(o[Q+44|0]|o[Q+45|0]<<8|o[Q+46|0]<<16|o[Q+47|0]<<24),C[A+12|0]=a,C[A+13|0]=a>>>8,C[A+14|0]=a>>>16,C[A+15|0]=a>>>24,I=B^I^g^k,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=f^p^w^F,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=t^h^D^S,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,r=o[Q+80|0]|o[Q+81|0]<<8|o[Q+82|0]<<16|o[Q+83|0]<<24,e=o[0|(I=Q- -64|0)]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,a=o[Q+112|0]|o[Q+113|0]<<8|o[Q+114|0]<<16|o[Q+115|0]<<24,t=o[Q+96|0]|o[Q+97|0]<<8|o[Q+98|0]<<16|o[Q+99|0]<<24,h=o[Q+84|0]|o[Q+85|0]<<8|o[Q+86|0]<<16|o[Q+87|0]<<24,D=o[Q+68|0]|o[Q+69|0]<<8|o[Q+70|0]<<16|o[Q+71|0]<<24,f=o[Q+116|0]|o[Q+117|0]<<8|o[Q+118|0]<<16|o[Q+119|0]<<24,p=o[Q+100|0]|o[Q+101|0]<<8|o[Q+102|0]<<16|o[Q+103|0]<<24,w=o[Q+88|0]|o[Q+89|0]<<8|o[Q+90|0]<<16|o[Q+91|0]<<24,B=o[Q+72|0]|o[Q+73|0]<<8|o[Q+74|0]<<16|o[Q+75|0]<<24,g=o[Q+120|0]|o[Q+121|0]<<8|o[Q+122|0]<<16|o[Q+123|0]<<24,I=o[Q+104|0]|o[Q+105|0]<<8|o[Q+106|0]<<16|o[Q+107|0]<<24,Q=(o[Q+92|0]|o[Q+93|0]<<8|o[Q+94|0]<<16|o[Q+95|0]<<24)^(o[Q+76|0]|o[Q+77|0]<<8|o[Q+78|0]<<16|o[Q+79|0]<<24)^(o[Q+124|0]|o[Q+125|0]<<8|o[Q+126|0]<<16|o[Q+127|0]<<24)^(o[Q+108|0]|o[Q+109|0]<<8|o[Q+110|0]<<16|o[Q+111|0]<<24),C[A+28|0]=Q,C[A+29|0]=Q>>>8,C[A+30|0]=Q>>>16,C[A+31|0]=Q>>>24,I=w^B^I^g,C[A+24|0]=I,C[A+25|0]=I>>>8,C[A+26|0]=I>>>16,C[A+27|0]=I>>>24,I=h^D^f^p,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=r^e^a^t,C[A+16|0]=I,C[A+17|0]=I>>>8,C[A+18|0]=I>>>16,C[A+19|0]=I>>>24;break A}bg(A,0,I)}s=E+288|0}function J(A,I,g,C){var B=0,Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0;for(B=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,i[g>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,i[g+4>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,i[g+8>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,i[g+12>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[g+16>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[g+20>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,i[g+24>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[g+28>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+32|0]|o[I+33|0]<<8|o[I+34|0]<<16|o[I+35|0]<<24,i[g+32>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+36|0]|o[I+37|0]<<8|o[I+38|0]<<16|o[I+39|0]<<24,i[g+36>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+40|0]|o[I+41|0]<<8|o[I+42|0]<<16|o[I+43|0]<<24,i[g+40>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+44|0]|o[I+45|0]<<8|o[I+46|0]<<16|o[I+47|0]<<24,i[g+44>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+48|0]|o[I+49|0]<<8|o[I+50|0]<<16|o[I+51|0]<<24,i[g+48>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+52|0]|o[I+53|0]<<8|o[I+54|0]<<16|o[I+55|0]<<24,i[g+52>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,B=o[I+56|0]|o[I+57|0]<<8|o[I+58|0]<<16|o[I+59|0]<<24,i[g+56>>2]=B<<24|(65280&B)<<8|B>>>8&65280|B>>>24,I=o[I+60|0]|o[I+61|0]<<8|o[I+62|0]<<16|o[I+63|0]<<24,i[g+60>>2]=I<<24|(65280&I)<<8|I>>>8&65280|I>>>24,I=i[A+28>>2],i[C+24>>2]=i[A+24>>2],i[C+28>>2]=I,I=i[A+20>>2],i[C+16>>2]=i[A+16>>2],i[C+20>>2]=I,I=i[A+12>>2],i[C+8>>2]=i[A+8>>2],i[C+12>>2]=I,I=i[A+4>>2],i[C>>2]=i[A>>2],i[C+4>>2]=I;_=i[C+28>>2],B=(I=n<<2)+g|0,E=i[C+16>>2],c=i[B>>2]+(Lg(E,26)^Lg(E,21)^Lg(E,7))|0,r=(_=((Q=i[I+35264>>2]+c|0)+(E&((c=i[C+24>>2])^(e=i[C+20>>2]))^c)|0)+_|0)+i[C+12>>2]|0,i[C+12>>2]=r,_=(s=_+(Lg(t=i[C>>2],30)^Lg(t,19)^Lg(t,10))|0)+(t&((Q=i[C+8>>2])|(a=i[C+4>>2]))|Q&a)|0,i[C+28>>2]=_,Q=(s=Q)+(c=(i[(D=(Q=4|I)+g|0)>>2]+((c+(e^r&(E^e))|0)+(Lg(r,26)^Lg(r,21)^Lg(r,7))|0)|0)+i[Q+35264>>2]|0)|0,i[C+8>>2]=Q,c=(c+(_&(a|t)|a&t)|0)+(Lg(_,30)^Lg(_,19)^Lg(_,10))|0,i[C+24>>2]=c,e=(s=a)+(a=(((e+i[(w=(a=8|I)+g|0)>>2]|0)+i[a+35264>>2]|0)+(E^Q&(E^r))|0)+(Lg(Q,26)^Lg(Q,21)^Lg(Q,7))|0)|0,i[C+4>>2]=e,a=a+((c&(_|t)|_&t)+(Lg(c,30)^Lg(c,19)^Lg(c,10))|0)|0,i[C+20>>2]=a,E=(s=t)+(t=(((E+i[(k=(t=12|I)+g|0)>>2]|0)+i[t+35264>>2]|0)+(r^e&(Q^r))|0)+(Lg(e,26)^Lg(e,21)^Lg(e,7))|0)|0,i[C>>2]=E,t=t+((a&(_|c)|_&c)+(Lg(a,30)^Lg(a,19)^Lg(a,10))|0)|0,i[C+16>>2]=t,r=(y=((((s=r)+i[(F=(r=16|I)+g|0)>>2]|0)+i[r+35264>>2]|0)+(Q^E&(Q^e))|0)+(Lg(E,26)^Lg(E,21)^Lg(E,7))|0)+((t&(a|c)|a&c)+(Lg(t,30)^Lg(t,19)^Lg(t,10))|0)|0,i[C+12>>2]=r,y=_+y|0,i[C+28>>2]=y,_=(Q=(((Q+i[(S=(_=20|I)+g|0)>>2]|0)+i[_+35264>>2]|0)+(e^y&(E^e))|0)+(Lg(y,26)^Lg(y,21)^Lg(y,7))|0)+((r&(a|t)|a&t)+(Lg(r,30)^Lg(r,19)^Lg(r,10))|0)|0,i[C+8>>2]=_,Q=Q+c|0,i[C+24>>2]=Q,c=(e=(((e+i[(N=(c=24|I)+g|0)>>2]|0)+i[c+35264>>2]|0)+(E^Q&(E^y))|0)+(Lg(Q,26)^Lg(Q,21)^Lg(Q,7))|0)+((_&(t|r)|t&r)+(Lg(_,30)^Lg(_,19)^Lg(_,10))|0)|0,i[C+4>>2]=c,e=a+e|0,i[C+20>>2]=e,a=(E=(((E+i[(G=(a=28|I)+g|0)>>2]|0)+i[a+35264>>2]|0)+(y^e&(Q^y))|0)+(Lg(e,26)^Lg(e,21)^Lg(e,7))|0)+((c&(_|r)|_&r)+(Lg(c,30)^Lg(c,19)^Lg(c,10))|0)|0,i[C>>2]=a,E=E+t|0,i[C+16>>2]=E,t=(y=(((y+i[(M=(t=32|I)+g|0)>>2]|0)+i[t+35264>>2]|0)+(Q^E&(Q^e))|0)+(Lg(E,26)^Lg(E,21)^Lg(E,7))|0)+((a&(_|c)|_&c)+(Lg(a,30)^Lg(a,19)^Lg(a,10))|0)|0,i[C+28>>2]=t,y=r+y|0,i[C+12>>2]=y,r=(Q=(((Q+i[(K=(r=36|I)+g|0)>>2]|0)+i[r+35264>>2]|0)+(e^y&(E^e))|0)+(Lg(y,26)^Lg(y,21)^Lg(y,7))|0)+((t&(a|c)|a&c)+(Lg(t,30)^Lg(t,19)^Lg(t,10))|0)|0,i[C+24>>2]=r,Q=Q+_|0,i[C+8>>2]=Q,_=(e=(((e+i[(U=(_=40|I)+g|0)>>2]|0)+i[_+35264>>2]|0)+(E^Q&(E^y))|0)+(Lg(Q,26)^Lg(Q,21)^Lg(Q,7))|0)+((r&(a|t)|a&t)+(Lg(r,30)^Lg(r,19)^Lg(r,10))|0)|0,i[C+20>>2]=_,e=c+e|0,i[C+4>>2]=e,s=(c=44|I)+g|0,c=(E=((E+(i[c+35264>>2]+i[s>>2]|0)|0)+(y^e&(Q^y))|0)+(Lg(e,26)^Lg(e,21)^Lg(e,7))|0)+((_&(t|r)|t&r)+(Lg(_,30)^Lg(_,19)^Lg(_,10))|0)|0,i[C+16>>2]=c,a=a+E|0,i[C>>2]=a,p=(E=48|I)+g|0,E=(y=((y+(i[E+35264>>2]+i[p>>2]|0)|0)+(Q^a&(Q^e))|0)+(Lg(a,26)^Lg(a,21)^Lg(a,7))|0)+((c&(_|r)|_&r)+(Lg(c,30)^Lg(c,19)^Lg(c,10))|0)|0,i[C+12>>2]=E,t=t+y|0,i[C+28>>2]=t,f=(y=52|I)+g|0,Q=(y=(((i[y+35264>>2]+i[f>>2]|0)+Q|0)+(e^t&(a^e))|0)+(Lg(t,26)^Lg(t,21)^Lg(t,7))|0)+((E&(_|c)|_&c)+(Lg(E,30)^Lg(E,19)^Lg(E,10))|0)|0,i[C+8>>2]=Q,r=r+y|0,i[C+24>>2]=r,y=(h=56|I)+g|0,e=(h=(((i[h+35264>>2]+i[y>>2]|0)+e|0)+(a^r&(a^t))|0)+(Lg(r,26)^Lg(r,21)^Lg(r,7))|0)+((Q&(c|E)|c&E)+(Lg(Q,30)^Lg(Q,19)^Lg(Q,10))|0)|0,i[C+4>>2]=e,_=_+h|0,i[C+20>>2]=_,h=(I|=60)+g|0,_=(I=((a+(i[I+35264>>2]+i[h>>2]|0)|0)+(t^_&(t^r))|0)+(Lg(_,26)^Lg(_,21)^Lg(_,7))|0)+((e&(Q|E)|Q&E)+(Lg(e,30)^Lg(e,19)^Lg(e,10))|0)|0,i[C>>2]=_,i[C+16>>2]=I+c,48!=(0|n);)a=i[K>>2],n=n+16|0,I=i[y>>2],_=(Q=i[B>>2]+(a+(Lg(I,15)^Lg(I,13)^I>>>10)|0)|0)+(Lg(c=i[D>>2],25)^Lg(c,14)^c>>>3)|0,i[(n<<2)+g>>2]=_,r=(E=(Q=(t=i[U>>2])+c|0)+(Lg(c=i[h>>2],15)^Lg(c,13)^c>>>10)|0)+(Lg(Q=i[w>>2],25)^Lg(Q,14)^Q>>>3)|0,i[B+68>>2]=r,e=(s=((E=Q)+(Q=i[s>>2])|0)+(Lg(_,15)^Lg(_,13)^_>>>10)|0)+(Lg(E=i[k>>2],25)^Lg(E,14)^E>>>3)|0,i[B+72>>2]=e,y=(h=((s=E)+(E=i[p>>2])|0)+(Lg(r,15)^Lg(r,13)^r>>>10)|0)+(Lg(s=i[F>>2],25)^Lg(s,14)^s>>>3)|0,i[B+76>>2]=y,p=(h=((h=s)+(s=i[f>>2])|0)+(Lg(e,15)^Lg(e,13)^e>>>10)|0)+(Lg(f=i[S>>2],25)^Lg(f,14)^f>>>3)|0,i[B+80>>2]=p,f=(D=(I+f|0)+(Lg(y,15)^Lg(y,13)^y>>>10)|0)+(Lg(h=i[N>>2],25)^Lg(h,14)^h>>>3)|0,i[B+84>>2]=f,h=((c+h|0)+(Lg(w=i[G>>2],25)^Lg(w,14)^w>>>3)|0)+(Lg(p,15)^Lg(p,13)^p>>>10)|0,i[B+88>>2]=h,r=((D=i[M>>2])+(r+(Lg(a,25)^Lg(a,14)^a>>>3)|0)|0)+(Lg(h,15)^Lg(h,13)^h>>>10)|0,i[B+96>>2]=r,D=((_+w|0)+(Lg(D,25)^Lg(D,14)^D>>>3)|0)+(Lg(f,15)^Lg(f,13)^f>>>10)|0,i[B+92>>2]=D,y=(y+(t+(Lg(Q,25)^Lg(Q,14)^Q>>>3)|0)|0)+(Lg(r,15)^Lg(r,13)^r>>>10)|0,i[B+104>>2]=y,a=(e+(a+(Lg(t,25)^Lg(t,14)^t>>>3)|0)|0)+(Lg(D,15)^Lg(D,13)^D>>>10)|0,i[B+100>>2]=a,t=(f+(E+(Lg(s,25)^Lg(s,14)^s>>>3)|0)|0)+(Lg(y,15)^Lg(y,13)^y>>>10)|0,i[B+112>>2]=t,a=(p+(Q+(Lg(E,25)^Lg(E,14)^E>>>3)|0)|0)+(Lg(a,15)^Lg(a,13)^a>>>10)|0,i[B+108>>2]=a,b=B,H=(D+(I+(Lg(c,25)^Lg(c,14)^c>>>3)|0)|0)+(Lg(t,15)^Lg(t,13)^t>>>10)|0,i[b+120>>2]=H,I=(h+(s+(Lg(I,25)^Lg(I,14)^I>>>3)|0)|0)+(Lg(a,15)^Lg(a,13)^a>>>10)|0,i[B+116>>2]=I,b=B,H=(r+(c+(Lg(_,25)^Lg(_,14)^_>>>3)|0)|0)+(Lg(I,15)^Lg(I,13)^I>>>10)|0,i[b+124>>2]=H;i[A>>2]=_+i[A>>2],i[A+4>>2]=i[A+4>>2]+i[C+4>>2],i[A+8>>2]=i[A+8>>2]+i[C+8>>2],i[A+12>>2]=i[A+12>>2]+i[C+12>>2],i[A+16>>2]=i[A+16>>2]+i[C+16>>2],i[A+20>>2]=i[A+20>>2]+i[C+20>>2],i[A+24>>2]=i[A+24>>2]+i[C+24>>2],i[A+28>>2]=i[A+28>>2]+i[C+28>>2]}function d(A,I,g){var B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F,S,N,G,M,K,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0;s=B=s-288|0,t=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,r=o[g+48|0]|o[g+49|0]<<8|o[g+50|0]<<16|o[g+51|0]<<24,e=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,y=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,h=o[g+52|0]|o[g+53|0]<<8|o[g+54|0]<<16|o[g+55|0]<<24,D=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,f=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,p=o[g+56|0]|o[g+57|0]<<8|o[g+58|0]<<16|o[g+59|0]<<24,J=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,w=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,n=o[g+60|0]|o[g+61|0]<<8|o[g+62|0]<<16|o[g+63|0]<<24,b=o[g+32|0]|o[g+33|0]<<8|o[g+34|0]<<16|o[g+35|0]<<24,d=o[g+80|0]|o[g+81|0]<<8|o[g+82|0]<<16|o[g+83|0]<<24,k=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,F=o[g+112|0]|o[g+113|0]<<8|o[g+114|0]<<16|o[g+115|0]<<24,U=o[g+96|0]|o[g+97|0]<<8|o[g+98|0]<<16|o[g+99|0]<<24,H=o[g+36|0]|o[g+37|0]<<8|o[g+38|0]<<16|o[g+39|0]<<24,m=o[g+84|0]|o[g+85|0]<<8|o[g+86|0]<<16|o[g+87|0]<<24,S=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,N=o[g+116|0]|o[g+117|0]<<8|o[g+118|0]<<16|o[g+119|0]<<24,E=o[g+100|0]|o[g+101|0]<<8|o[g+102|0]<<16|o[g+103|0]<<24,Y=o[g+40|0]|o[g+41|0]<<8|o[g+42|0]<<16|o[g+43|0]<<24,l=o[g+88|0]|o[g+89|0]<<8|o[g+90|0]<<16|o[g+91|0]<<24,G=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,M=o[g+120|0]|o[g+121|0]<<8|o[g+122|0]<<16|o[g+123|0]<<24,a=o[g+104|0]|o[g+105|0]<<8|o[g+106|0]<<16|o[g+107|0]<<24,K=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,Q=(_=o[g+44|0]|o[g+45|0]<<8|o[g+46|0]<<16|o[g+47|0]<<24)^(c=o[g+108|0]|o[g+109|0]<<8|o[g+110|0]<<16|o[g+111|0]<<24)&(o[g+124|0]|o[g+125|0]<<8|o[g+126|0]<<16|o[g+127|0]<<24)^(o[g+92|0]|o[g+93|0]<<8|o[g+94|0]<<16|o[g+95|0]<<24)^(o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24),C[A+28|0]=Q,C[A+29|0]=Q>>>8,C[A+30|0]=Q>>>16,C[A+31|0]=Q>>>24,l=Y^a&M^l^G,C[A+24|0]=l,C[A+25|0]=l>>>8,C[A+26|0]=l>>>16,C[A+27|0]=l>>>24,m=H^E&N^m^S,C[A+20|0]=m,C[A+21|0]=m>>>8,C[A+22|0]=m>>>16,C[A+23|0]=m>>>24,d=b^U&F^d^k,C[A+16|0]=d,C[A+17|0]=d>>>8,C[A+18|0]=d>>>16,C[A+19|0]=d>>>24,J=n&_^J^w^c,C[A+12|0]=J,C[A+13|0]=J>>>8,C[A+14|0]=J>>>16,C[A+15|0]=J>>>24,Y=Y&p^D^f^a,C[A+8|0]=Y,C[A+9|0]=Y>>>8,C[A+10|0]=Y>>>16,C[A+11|0]=Y>>>24,H=H&h^e^y^E,C[A+4|0]=H,C[A+5|0]=H>>>8,C[A+6|0]=H>>>16,C[A+7|0]=H>>>24,b=U^b&r^t^K,C[0|A]=b,C[A+1|0]=b>>>8,C[A+2|0]=b>>>16,C[A+3|0]=b>>>24,A=i[g+124>>2],i[B+280>>2]=i[g+120>>2],i[B+284>>2]=A,A=i[g+116>>2],i[B+272>>2]=i[g+112>>2],i[B+276>>2]=A,A=i[g+108>>2],i[B+248>>2]=i[g+104>>2],i[B+252>>2]=A,A=i[g+100>>2],i[B+240>>2]=i[g+96>>2],i[B+244>>2]=A,A=i[g+124>>2],i[B+232>>2]=i[g+120>>2],i[B+236>>2]=A,A=i[g+116>>2],i[B+224>>2]=i[g+112>>2],i[B+228>>2]=A,AI(I=B+256|0,B+240|0,B+224|0),A=i[B+268>>2],i[g+120>>2]=i[B+264>>2],i[g+124>>2]=A,A=i[B+260>>2],i[g+112>>2]=i[B+256>>2],i[g+116>>2]=A,A=i[g+92>>2],i[B+216>>2]=i[g+88>>2],i[B+220>>2]=A,A=i[g+84>>2],i[B+208>>2]=i[g+80>>2],i[B+212>>2]=A,A=i[g+108>>2],i[B+200>>2]=i[g+104>>2],i[B+204>>2]=A,A=i[g+100>>2],i[B+192>>2]=i[g+96>>2],i[B+196>>2]=A,AI(I,B+208|0,B+192|0),A=i[B+268>>2],i[g+104>>2]=i[B+264>>2],i[g+108>>2]=A,A=i[B+260>>2],i[g+96>>2]=i[B+256>>2],i[g+100>>2]=A,A=i[g+76>>2],i[B+184>>2]=i[g+72>>2],i[B+188>>2]=A,U=i[4+(A=g- -64|0)>>2],i[B+176>>2]=i[A>>2],i[B+180>>2]=U,U=i[g+92>>2],i[B+168>>2]=i[g+88>>2],i[B+172>>2]=U,U=i[g+84>>2],i[B+160>>2]=i[g+80>>2],i[B+164>>2]=U,AI(I,B+176|0,B+160|0),U=i[B+268>>2],i[g+88>>2]=i[B+264>>2],i[g+92>>2]=U,U=i[B+260>>2],i[g+80>>2]=i[B+256>>2],i[g+84>>2]=U,U=i[g+60>>2],i[B+152>>2]=i[g+56>>2],i[B+156>>2]=U,U=i[g+52>>2],i[B+144>>2]=i[g+48>>2],i[B+148>>2]=U,U=i[g+76>>2],i[B+136>>2]=i[g+72>>2],i[B+140>>2]=U,U=i[A+4>>2],i[B+128>>2]=i[A>>2],i[B+132>>2]=U,AI(I,B+144|0,B+128|0),U=i[B+268>>2],i[g+72>>2]=i[B+264>>2],i[g+76>>2]=U,U=i[B+260>>2],i[A>>2]=i[B+256>>2],i[A+4>>2]=U,U=i[g+44>>2],i[B+120>>2]=i[g+40>>2],i[B+124>>2]=U,U=i[g+36>>2],i[B+112>>2]=i[g+32>>2],i[B+116>>2]=U,U=i[g+60>>2],i[B+104>>2]=i[g+56>>2],i[B+108>>2]=U,U=i[g+52>>2],i[B+96>>2]=i[g+48>>2],i[B+100>>2]=U,AI(I,B+112|0,B+96|0),U=i[B+268>>2],i[g+56>>2]=i[B+264>>2],i[g+60>>2]=U,U=i[B+260>>2],i[g+48>>2]=i[B+256>>2],i[g+52>>2]=U,U=i[g+28>>2],i[B+88>>2]=i[g+24>>2],i[B+92>>2]=U,U=i[g+20>>2],i[B+80>>2]=i[g+16>>2],i[B+84>>2]=U,U=i[g+44>>2],i[B+72>>2]=i[g+40>>2],i[B+76>>2]=U,U=i[g+36>>2],i[B+64>>2]=i[g+32>>2],i[B+68>>2]=U,AI(I,B+80|0,B- -64|0),U=i[B+268>>2],i[g+40>>2]=i[B+264>>2],i[g+44>>2]=U,U=i[B+260>>2],i[g+32>>2]=i[B+256>>2],i[g+36>>2]=U,U=i[g+12>>2],i[B+56>>2]=i[g+8>>2],i[B+60>>2]=U,U=i[g+4>>2],i[B+48>>2]=i[g>>2],i[B+52>>2]=U,U=i[g+28>>2],i[B+40>>2]=i[g+24>>2],i[B+44>>2]=U,U=i[g+20>>2],i[B+32>>2]=i[g+16>>2],i[B+36>>2]=U,AI(I,B+48|0,B+32|0),U=i[B+268>>2],i[g+24>>2]=i[B+264>>2],i[g+28>>2]=U,U=i[B+260>>2],i[g+16>>2]=i[B+256>>2],i[g+20>>2]=U,U=i[B+284>>2],i[B+24>>2]=i[B+280>>2],i[B+28>>2]=U,U=i[B+276>>2],i[B+16>>2]=i[B+272>>2],i[B+20>>2]=U,U=i[g+12>>2],i[B+8>>2]=i[g+8>>2],i[B+12>>2]=U,U=i[g+4>>2],i[B>>2]=i[g>>2],i[B+4>>2]=U,AI(I,B+16|0,B),I=i[B+268>>2],i[g+8>>2]=i[B+264>>2],i[g+12>>2]=I,I=i[B+260>>2],i[g>>2]=i[B+256>>2],i[g+4>>2]=I,i[g+12>>2]=J^(o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24),i[g+8>>2]=Y^(o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24),i[g+4>>2]=H^(o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24),i[g>>2]=b^(o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24),i[A>>2]=d^(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24),i[g+68>>2]=m^(o[g+68|0]|o[g+69|0]<<8|o[g+70|0]<<16|o[g+71|0]<<24),i[g+72>>2]=l^(o[g+72|0]|o[g+73|0]<<8|o[g+74|0]<<16|o[g+75|0]<<24),i[g+76>>2]=Q^(o[g+76|0]|o[g+77|0]<<8|o[g+78|0]<<16|o[g+79|0]<<24),s=B+288|0}function m(A,I,g){var B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F,S,N,G,M,K,U,b,H,Y,J,d,m,l=0;s=B=s-288|0,k=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,F=o[g+48|0]|o[g+49|0]<<8|o[g+50|0]<<16|o[g+51|0]<<24,Q=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,S=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,N=o[g+52|0]|o[g+53|0]<<8|o[g+54|0]<<16|o[g+55|0]<<24,E=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,G=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,M=o[g+56|0]|o[g+57|0]<<8|o[g+58|0]<<16|o[g+59|0]<<24,a=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,K=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,U=o[g+60|0]|o[g+61|0]<<8|o[g+62|0]<<16|o[g+63|0]<<24,l=o[g+32|0]|o[g+33|0]<<8|o[g+34|0]<<16|o[g+35|0]<<24,_=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,b=o[g+80|0]|o[g+81|0]<<8|o[g+82|0]<<16|o[g+83|0]<<24,H=o[g+112|0]|o[g+113|0]<<8|o[g+114|0]<<16|o[g+115|0]<<24,c=o[g+96|0]|o[g+97|0]<<8|o[g+98|0]<<16|o[g+99|0]<<24,t=o[g+36|0]|o[g+37|0]<<8|o[g+38|0]<<16|o[g+39|0]<<24,r=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,Y=o[g+84|0]|o[g+85|0]<<8|o[g+86|0]<<16|o[g+87|0]<<24,J=o[g+116|0]|o[g+117|0]<<8|o[g+118|0]<<16|o[g+119|0]<<24,e=o[g+100|0]|o[g+101|0]<<8|o[g+102|0]<<16|o[g+103|0]<<24,y=o[g+40|0]|o[g+41|0]<<8|o[g+42|0]<<16|o[g+43|0]<<24,h=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,d=o[g+88|0]|o[g+89|0]<<8|o[g+90|0]<<16|o[g+91|0]<<24,m=o[g+120|0]|o[g+121|0]<<8|o[g+122|0]<<16|o[g+123|0]<<24,D=o[g+104|0]|o[g+105|0]<<8|o[g+106|0]<<16|o[g+107|0]<<24,f=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=(p=o[g+44|0]|o[g+45|0]<<8|o[g+46|0]<<16|o[g+47|0]<<24)^(w=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24)^(n=o[g+108|0]|o[g+109|0]<<8|o[g+110|0]<<16|o[g+111|0]<<24)&(o[g+124|0]|o[g+125|0]<<8|o[g+126|0]<<16|o[g+127|0]<<24)^(o[g+92|0]|o[g+93|0]<<8|o[g+94|0]<<16|o[g+95|0]<<24),C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=D&m^d^h^y,C[A+24|0]=I,C[A+25|0]=I>>>8,C[A+26|0]=I>>>16,C[A+27|0]=I>>>24,I=e&J^Y^r^t,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=l^c&H^b^_,C[A+16|0]=I,C[A+17|0]=I>>>8,C[A+18|0]=I>>>16,C[A+19|0]=I>>>24,I=U&p^K^a^n,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=y&M^G^E^D,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=t&N^S^Q^e,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=l&F^k^f^c,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,A=i[g+124>>2],i[B+280>>2]=i[g+120>>2],i[B+284>>2]=A,A=i[g+116>>2],i[B+272>>2]=i[g+112>>2],i[B+276>>2]=A,A=i[g+108>>2],i[B+248>>2]=i[g+104>>2],i[B+252>>2]=A,A=i[g+100>>2],i[B+240>>2]=i[g+96>>2],i[B+244>>2]=A,A=i[g+124>>2],i[B+232>>2]=i[g+120>>2],i[B+236>>2]=A,A=i[g+116>>2],i[B+224>>2]=i[g+112>>2],i[B+228>>2]=A,AI(I=B+256|0,B+240|0,B+224|0),A=i[B+268>>2],i[g+120>>2]=i[B+264>>2],i[g+124>>2]=A,A=i[B+260>>2],i[g+112>>2]=i[B+256>>2],i[g+116>>2]=A,A=i[g+92>>2],i[B+216>>2]=i[g+88>>2],i[B+220>>2]=A,A=i[g+84>>2],i[B+208>>2]=i[g+80>>2],i[B+212>>2]=A,A=i[g+108>>2],i[B+200>>2]=i[g+104>>2],i[B+204>>2]=A,A=i[g+100>>2],i[B+192>>2]=i[g+96>>2],i[B+196>>2]=A,AI(I,B+208|0,B+192|0),A=i[B+268>>2],i[g+104>>2]=i[B+264>>2],i[g+108>>2]=A,A=i[B+260>>2],i[g+96>>2]=i[B+256>>2],i[g+100>>2]=A,A=i[g+76>>2],i[B+184>>2]=i[g+72>>2],i[B+188>>2]=A,l=i[4+(A=g- -64|0)>>2],i[B+176>>2]=i[A>>2],i[B+180>>2]=l,l=i[g+92>>2],i[B+168>>2]=i[g+88>>2],i[B+172>>2]=l,l=i[g+84>>2],i[B+160>>2]=i[g+80>>2],i[B+164>>2]=l,AI(I,B+176|0,B+160|0),l=i[B+268>>2],i[g+88>>2]=i[B+264>>2],i[g+92>>2]=l,l=i[B+260>>2],i[g+80>>2]=i[B+256>>2],i[g+84>>2]=l,l=i[g+60>>2],i[B+152>>2]=i[g+56>>2],i[B+156>>2]=l,l=i[g+52>>2],i[B+144>>2]=i[g+48>>2],i[B+148>>2]=l,l=i[g+76>>2],i[B+136>>2]=i[g+72>>2],i[B+140>>2]=l,l=i[A+4>>2],i[B+128>>2]=i[A>>2],i[B+132>>2]=l,AI(I,B+144|0,B+128|0),l=i[B+268>>2],i[g+72>>2]=i[B+264>>2],i[g+76>>2]=l,l=i[B+260>>2],i[A>>2]=i[B+256>>2],i[A+4>>2]=l,l=i[g+44>>2],i[B+120>>2]=i[g+40>>2],i[B+124>>2]=l,l=i[g+36>>2],i[B+112>>2]=i[g+32>>2],i[B+116>>2]=l,l=i[g+60>>2],i[B+104>>2]=i[g+56>>2],i[B+108>>2]=l,l=i[g+52>>2],i[B+96>>2]=i[g+48>>2],i[B+100>>2]=l,AI(I,B+112|0,B+96|0),l=i[B+268>>2],i[g+56>>2]=i[B+264>>2],i[g+60>>2]=l,l=i[B+260>>2],i[g+48>>2]=i[B+256>>2],i[g+52>>2]=l,l=i[g+28>>2],i[B+88>>2]=i[g+24>>2],i[B+92>>2]=l,l=i[g+20>>2],i[B+80>>2]=i[g+16>>2],i[B+84>>2]=l,l=i[g+44>>2],i[B+72>>2]=i[g+40>>2],i[B+76>>2]=l,l=i[g+36>>2],i[B+64>>2]=i[g+32>>2],i[B+68>>2]=l,AI(I,B+80|0,B- -64|0),l=i[B+268>>2],i[g+40>>2]=i[B+264>>2],i[g+44>>2]=l,l=i[B+260>>2],i[g+32>>2]=i[B+256>>2],i[g+36>>2]=l,l=i[g+12>>2],i[B+56>>2]=i[g+8>>2],i[B+60>>2]=l,l=i[g+4>>2],i[B+48>>2]=i[g>>2],i[B+52>>2]=l,l=i[g+28>>2],i[B+40>>2]=i[g+24>>2],i[B+44>>2]=l,l=i[g+20>>2],i[B+32>>2]=i[g+16>>2],i[B+36>>2]=l,AI(I,B+48|0,B+32|0),l=i[B+268>>2],i[g+24>>2]=i[B+264>>2],i[g+28>>2]=l,l=i[B+260>>2],i[g+16>>2]=i[B+256>>2],i[g+20>>2]=l,l=i[B+284>>2],i[B+24>>2]=i[B+280>>2],i[B+28>>2]=l,l=i[B+276>>2],i[B+16>>2]=i[B+272>>2],i[B+20>>2]=l,l=i[g+12>>2],i[B+8>>2]=i[g+8>>2],i[B+12>>2]=l,l=i[g+4>>2],i[B>>2]=i[g>>2],i[B+4>>2]=l,AI(I,B+16|0,B),I=i[B+268>>2],i[g+8>>2]=i[B+264>>2],i[g+12>>2]=I,I=i[B+260>>2],i[g>>2]=i[B+256>>2],i[g+4>>2]=I,i[g+12>>2]=(o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24)^a,i[g+8>>2]=(o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24)^E,i[g+4>>2]=(o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24)^Q,i[g>>2]=(o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24)^f,i[A>>2]=(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24)^_,i[g+68>>2]=(o[g+68|0]|o[g+69|0]<<8|o[g+70|0]<<16|o[g+71|0]<<24)^r,i[g+72>>2]=(o[g+72|0]|o[g+73|0]<<8|o[g+74|0]<<16|o[g+75|0]<<24)^h,i[g+76>>2]=w^(o[g+76|0]|o[g+77|0]<<8|o[g+78|0]<<16|o[g+79|0]<<24),s=B+288|0}function l(A,I,g,B,Q){var E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0;for(s=E=s-224|0,f=(o[Q+60|0]|o[Q+61|0]<<8|o[Q+62|0]<<16|o[Q+63|0]<<24)^B>>>29,p=(o[Q+56|0]|o[Q+57|0]<<8|o[Q+58|0]<<16|o[Q+59|0]<<24)^B<<3,e=(o[Q+52|0]|o[Q+53|0]<<8|o[Q+54|0]<<16|o[Q+55|0]<<24)^g>>>29,h=(o[0|(a=Q+48|0)]|o[a+1|0]<<8|o[a+2|0]<<16|o[a+3|0]<<24)^g<<3,_=Q+16|0,c=Q+32|0,t=Q- -64|0,r=Q+80|0;g=i[r+12>>2],i[E+216>>2]=i[r+8>>2],i[E+220>>2]=g,g=i[r+4>>2],i[E+208>>2]=i[r>>2],i[E+212>>2]=g,g=i[t+12>>2],i[E+184>>2]=i[t+8>>2],i[E+188>>2]=g,g=i[t+4>>2],i[E+176>>2]=i[t>>2],i[E+180>>2]=g,g=i[r+12>>2],i[E+168>>2]=i[r+8>>2],i[E+172>>2]=g,g=i[r+4>>2],i[E+160>>2]=i[r>>2],i[E+164>>2]=g,AI(B=E+192|0,E+176|0,E+160|0),g=i[E+204>>2],i[r+8>>2]=i[E+200>>2],i[r+12>>2]=g,g=i[E+196>>2],i[r>>2]=i[E+192>>2],i[r+4>>2]=g,g=i[a+12>>2],i[E+152>>2]=i[a+8>>2],i[E+156>>2]=g,g=i[a+4>>2],i[E+144>>2]=i[a>>2],i[E+148>>2]=g,g=i[t+12>>2],i[E+136>>2]=i[t+8>>2],i[E+140>>2]=g,g=i[t+4>>2],i[E+128>>2]=i[t>>2],i[E+132>>2]=g,AI(B,E+144|0,E+128|0),g=i[E+204>>2],i[t+8>>2]=i[E+200>>2],i[t+12>>2]=g,g=i[E+196>>2],i[t>>2]=i[E+192>>2],i[t+4>>2]=g,g=i[c+12>>2],i[E+120>>2]=i[c+8>>2],i[E+124>>2]=g,g=i[c+4>>2],i[E+112>>2]=i[c>>2],i[E+116>>2]=g,g=i[a+12>>2],i[E+104>>2]=i[a+8>>2],i[E+108>>2]=g,g=i[a+4>>2],i[E+96>>2]=i[a>>2],i[E+100>>2]=g,AI(B,E+112|0,E+96|0),g=i[E+204>>2],i[a+8>>2]=i[E+200>>2],i[a+12>>2]=g,g=i[E+196>>2],i[a>>2]=i[E+192>>2],i[a+4>>2]=g,g=i[_+12>>2],i[E+88>>2]=i[_+8>>2],i[E+92>>2]=g,g=i[_+4>>2],i[E+80>>2]=i[_>>2],i[E+84>>2]=g,g=i[c+12>>2],i[E+72>>2]=i[c+8>>2],i[E+76>>2]=g,g=i[c+4>>2],i[E+64>>2]=i[c>>2],i[E+68>>2]=g,AI(B,E+80|0,E- -64|0),g=i[E+204>>2],i[c+8>>2]=i[E+200>>2],i[c+12>>2]=g,g=i[E+196>>2],i[c>>2]=i[E+192>>2],i[c+4>>2]=g,g=i[Q+12>>2],i[E+56>>2]=i[Q+8>>2],i[E+60>>2]=g,g=i[Q+4>>2],i[E+48>>2]=i[Q>>2],i[E+52>>2]=g,g=i[_+12>>2],i[E+40>>2]=i[_+8>>2],i[E+44>>2]=g,g=i[_+4>>2],i[E+32>>2]=i[_>>2],i[E+36>>2]=g,AI(B,E+48|0,E+32|0),g=i[E+204>>2],i[_+8>>2]=i[E+200>>2],i[_+12>>2]=g,g=i[E+196>>2],i[_>>2]=i[E+192>>2],i[_+4>>2]=g,g=i[E+220>>2],i[E+24>>2]=i[E+216>>2],i[E+28>>2]=g,g=i[E+212>>2],i[E+16>>2]=i[E+208>>2],i[E+20>>2]=g,g=i[Q+12>>2],i[E+8>>2]=i[Q+8>>2],i[E+12>>2]=g,g=i[Q+4>>2],i[E>>2]=i[Q>>2],i[E+4>>2]=g,AI(B,E+16|0,E),D=i[E+192>>2],B=i[E+196>>2],g=i[E+200>>2],w=f^i[E+204>>2],i[Q+12>>2]=w,n=g^p,i[Q+8>>2]=n,k=B^e,i[Q+4>>2]=k,F=h^D,i[Q>>2]=F,7!=(0|(y=y+1|0)););A:{I:{g:{if(g=I-16|0){if(16==(0|g))break g;break I}S=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,a=o[Q+48|0]|o[Q+49|0]<<8|o[Q+50|0]<<16|o[Q+51|0]<<24,_=o[Q+32|0]|o[Q+33|0]<<8|o[Q+34|0]<<16|o[Q+35|0]<<24,c=o[Q+80|0]|o[Q+81|0]<<8|o[Q+82|0]<<16|o[Q+83|0]<<24,t=o[0|(I=Q- -64|0)]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,r=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,f=o[Q+52|0]|o[Q+53|0]<<8|o[Q+54|0]<<16|o[Q+55|0]<<24,p=o[Q+36|0]|o[Q+37|0]<<8|o[Q+38|0]<<16|o[Q+39|0]<<24,e=o[Q+84|0]|o[Q+85|0]<<8|o[Q+86|0]<<16|o[Q+87|0]<<24,h=o[Q+68|0]|o[Q+69|0]<<8|o[Q+70|0]<<16|o[Q+71|0]<<24,D=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,y=o[Q+56|0]|o[Q+57|0]<<8|o[Q+58|0]<<16|o[Q+59|0]<<24,B=o[Q+40|0]|o[Q+41|0]<<8|o[Q+42|0]<<16|o[Q+43|0]<<24,g=o[Q+88|0]|o[Q+89|0]<<8|o[Q+90|0]<<16|o[Q+91|0]<<24,I=o[Q+72|0]|o[Q+73|0]<<8|o[Q+74|0]<<16|o[Q+75|0]<<24,Q=w^(o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24)^(o[Q+60|0]|o[Q+61|0]<<8|o[Q+62|0]<<16|o[Q+63|0]<<24)^(o[Q+44|0]|o[Q+45|0]<<8|o[Q+46|0]<<16|o[Q+47|0]<<24)^(o[Q+92|0]|o[Q+93|0]<<8|o[Q+94|0]<<16|o[Q+95|0]<<24)^(o[Q+76|0]|o[Q+77|0]<<8|o[Q+78|0]<<16|o[Q+79|0]<<24),C[A+12|0]=Q,C[A+13|0]=Q>>>8,C[A+14|0]=Q>>>16,C[A+15|0]=Q>>>24,I=n^D^I^g^B^y,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=k^r^f^p^e^h,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=F^S^a^_^c^t,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24;break A}h=o[Q+32|0]|o[Q+33|0]<<8|o[Q+34|0]<<16|o[Q+35|0]<<24,D=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,y=o[Q+36|0]|o[Q+37|0]<<8|o[Q+38|0]<<16|o[Q+39|0]<<24,B=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,g=o[Q+40|0]|o[Q+41|0]<<8|o[Q+42|0]<<16|o[Q+43|0]<<24,I=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,e=w^(o[Q+44|0]|o[Q+45|0]<<8|o[Q+46|0]<<16|o[Q+47|0]<<24)^(o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24),C[A+12|0]=e,C[A+13|0]=e>>>8,C[A+14|0]=e>>>16,C[A+15|0]=e>>>24,I=n^I^g,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=k^B^y,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=F^h^D,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,f=o[Q+48|0]|o[Q+49|0]<<8|o[Q+50|0]<<16|o[Q+51|0]<<24,p=o[Q+80|0]|o[Q+81|0]<<8|o[Q+82|0]<<16|o[Q+83|0]<<24,e=o[0|(I=Q- -64|0)]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,h=o[Q+52|0]|o[Q+53|0]<<8|o[Q+54|0]<<16|o[Q+55|0]<<24,D=o[Q+84|0]|o[Q+85|0]<<8|o[Q+86|0]<<16|o[Q+87|0]<<24,y=o[Q+68|0]|o[Q+69|0]<<8|o[Q+70|0]<<16|o[Q+71|0]<<24,B=o[Q+56|0]|o[Q+57|0]<<8|o[Q+58|0]<<16|o[Q+59|0]<<24,g=o[Q+88|0]|o[Q+89|0]<<8|o[Q+90|0]<<16|o[Q+91|0]<<24,I=o[Q+72|0]|o[Q+73|0]<<8|o[Q+74|0]<<16|o[Q+75|0]<<24,Q=(o[Q+60|0]|o[Q+61|0]<<8|o[Q+62|0]<<16|o[Q+63|0]<<24)^(o[Q+92|0]|o[Q+93|0]<<8|o[Q+94|0]<<16|o[Q+95|0]<<24)^(o[Q+76|0]|o[Q+77|0]<<8|o[Q+78|0]<<16|o[Q+79|0]<<24),C[A+28|0]=Q,C[A+29|0]=Q>>>8,C[A+30|0]=Q>>>16,C[A+31|0]=Q>>>24,I=B^I^g,C[A+24|0]=I,C[A+25|0]=I>>>8,C[A+26|0]=I>>>16,C[A+27|0]=I>>>24,I=h^D^y,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=f^e^p,C[A+16|0]=I,C[A+17|0]=I>>>8,C[A+18|0]=I>>>16,C[A+19|0]=I>>>24;break A}bg(A,0,I)}s=E+224|0}function u(A,I,g){var B,Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0;for(s=B=s-4032|0,$A(B+160|0,g),_=i[g+36>>2],i[(a=B+3840|0)>>2]=i[g+32>>2],i[a+4>>2]=_,c=i[g+28>>2],i[(_=B+3832|0)>>2]=i[g+24>>2],i[_+4>>2]=c,r=i[g+20>>2],i[(c=B+3824|0)>>2]=i[g+16>>2],i[c+4>>2]=r,e=i[g+12>>2],i[(r=B+3816|0)>>2]=i[g+8>>2],i[r+4>>2]=e,e=i[g+4>>2],i[B+3808>>2]=i[g>>2],i[B+3812>>2]=e,D=i[g+52>>2],i[(e=B+3856|0)>>2]=i[g+48>>2],i[e+4>>2]=D,w=i[g+60>>2],i[(D=B+3864|0)>>2]=i[g+56>>2],i[D+4>>2]=w,y=i[4+(f=g- -64|0)>>2],i[(w=B+3872|0)>>2]=i[f>>2],i[w+4>>2]=y,y=i[g+76>>2],i[(f=B+3880|0)>>2]=i[g+72>>2],i[f+4>>2]=y,y=i[g+44>>2],i[B+3848>>2]=i[g+40>>2],i[B+3852>>2]=y,n=i[g+92>>2],i[(y=B+3896|0)>>2]=i[g+88>>2],i[y+4>>2]=n,k=i[g+100>>2],i[(n=B+3904|0)>>2]=i[g+96>>2],i[n+4>>2]=k,F=i[g+108>>2],i[(k=B+3912|0)>>2]=i[g+104>>2],i[k+4>>2]=F,S=i[g+116>>2],i[(F=B+3920|0)>>2]=i[g+112>>2],i[F+4>>2]=S,S=i[g+84>>2],i[B+3888>>2]=i[g+80>>2],i[B+3892>>2]=S,KA(Q=B+3528|0,S=B+3808|0),b(E=B+2408|0,Q,t=B+3648|0),b(B+2448|0,h=B+3568|0,p=B+3608|0),b(B+2488|0,p,t),b(B+2528|0,Q,h),$A(t=B+320|0,E),sA(Q=B+3368|0,g,t),b(E=B+2248|0,Q,t=B+3488|0),b(B+2288|0,h=B+3408|0,p=B+3448|0),b(B+2328|0,p,t),b(B+2368|0,Q,h),$A(B+480|0,E),E=i[4+(Q=B+2440|0)>>2],i[a>>2]=i[Q>>2],i[a+4>>2]=E,E=i[4+(Q=B+2432|0)>>2],i[_>>2]=i[Q>>2],i[_+4>>2]=E,E=i[4+(Q=B+2424|0)>>2],i[c>>2]=i[Q>>2],i[c+4>>2]=E,E=i[4+(Q=B+2416|0)>>2],i[r>>2]=i[Q>>2],i[r+4>>2]=E,E=i[4+(Q=B+2456|0)>>2],i[e>>2]=i[Q>>2],i[e+4>>2]=E,E=i[4+(Q=B+2464|0)>>2],i[D>>2]=i[Q>>2],i[D+4>>2]=E,E=i[4+(Q=B+2472|0)>>2],i[w>>2]=i[Q>>2],i[w+4>>2]=E,E=i[4+(Q=B+2480|0)>>2],i[f>>2]=i[Q>>2],i[f+4>>2]=E,Q=i[B+2412>>2],i[B+3808>>2]=i[B+2408>>2],i[B+3812>>2]=Q,Q=i[B+2452>>2],i[B+3848>>2]=i[B+2448>>2],i[B+3852>>2]=Q,E=i[4+(Q=B+2520|0)>>2],i[F>>2]=i[Q>>2],i[F+4>>2]=E,E=i[4+(Q=B+2512|0)>>2],i[k>>2]=i[Q>>2],i[k+4>>2]=E,E=i[4+(Q=B+2504|0)>>2],i[n>>2]=i[Q>>2],i[n+4>>2]=E,E=i[4+(Q=B+2496|0)>>2],i[y>>2]=i[Q>>2],i[y+4>>2]=E,Q=i[B+2492>>2],i[B+3888>>2]=i[B+2488>>2],i[B+3892>>2]=Q,KA(Q=B+3208|0,S),b(E=B+2088|0,Q,t=B+3328|0),b(B+2128|0,h=B+3248|0,p=B+3288|0),b(B+2168|0,p,t),b(B+2208|0,Q,h),$A(t=B+640|0,E),sA(Q=B+3048|0,g,t),b(E=B+1928|0,Q,t=B+3168|0),b(B+1968|0,h=B+3088|0,p=B+3128|0),b(B+2008|0,p,t),b(B+2048|0,Q,h),$A(B+800|0,E),E=i[4+(Q=B+2280|0)>>2],i[a>>2]=i[Q>>2],i[a+4>>2]=E,E=i[4+(Q=B+2272|0)>>2],i[_>>2]=i[Q>>2],i[_+4>>2]=E,E=i[4+(Q=B+2264|0)>>2],i[c>>2]=i[Q>>2],i[c+4>>2]=E,E=i[4+(Q=B+2256|0)>>2],i[r>>2]=i[Q>>2],i[r+4>>2]=E,E=i[4+(Q=B+2296|0)>>2],i[e>>2]=i[Q>>2],i[e+4>>2]=E,E=i[4+(Q=B+2304|0)>>2],i[D>>2]=i[Q>>2],i[D+4>>2]=E,E=i[4+(Q=B+2312|0)>>2],i[w>>2]=i[Q>>2],i[w+4>>2]=E,E=i[4+(Q=B+2320|0)>>2],i[f>>2]=i[Q>>2],i[f+4>>2]=E,Q=i[B+2252>>2],i[B+3808>>2]=i[B+2248>>2],i[B+3812>>2]=Q,Q=i[B+2292>>2],i[B+3848>>2]=i[B+2288>>2],i[B+3852>>2]=Q,E=i[4+(Q=B+2360|0)>>2],i[F>>2]=i[Q>>2],i[F+4>>2]=E,E=i[4+(Q=B+2352|0)>>2],i[k>>2]=i[Q>>2],i[k+4>>2]=E,E=i[4+(Q=B+2344|0)>>2],i[n>>2]=i[Q>>2],i[n+4>>2]=E,E=i[4+(Q=B+2336|0)>>2],i[y>>2]=i[Q>>2],i[y+4>>2]=E,Q=i[B+2332>>2],i[B+3888>>2]=i[B+2328>>2],i[B+3892>>2]=Q,KA(Q=B+2888|0,S),b(E=B+1768|0,Q,t=B+3008|0),b(B+1808|0,h=B+2928|0,p=B+2968|0),b(B+1848|0,p,t),b(B+1888|0,Q,h),$A(t=B+960|0,E),sA(Q=B+2728|0,g,t),b(g=B+1608|0,Q,E=B+2848|0),b(B+1648|0,t=B+2768|0,h=B+2808|0),b(B+1688|0,h,E),b(B+1728|0,Q,t),$A(B+1120|0,g),Q=i[4+(g=B+2120|0)>>2],i[a>>2]=i[g>>2],i[a+4>>2]=Q,a=i[4+(g=B+2112|0)>>2],i[_>>2]=i[g>>2],i[_+4>>2]=a,a=i[4+(g=B+2104|0)>>2],i[c>>2]=i[g>>2],i[c+4>>2]=a,a=i[4+(g=B+2096|0)>>2],i[r>>2]=i[g>>2],i[r+4>>2]=a,a=i[4+(g=B+2136|0)>>2],i[e>>2]=i[g>>2],i[e+4>>2]=a,a=i[4+(g=B+2144|0)>>2],i[D>>2]=i[g>>2],i[D+4>>2]=a,a=i[4+(g=B+2152|0)>>2],i[w>>2]=i[g>>2],i[w+4>>2]=a,a=i[4+(g=B+2160|0)>>2],i[f>>2]=i[g>>2],i[f+4>>2]=a,g=i[B+2092>>2],i[B+3808>>2]=i[B+2088>>2],i[B+3812>>2]=g,g=i[B+2132>>2],i[B+3848>>2]=i[B+2128>>2],i[B+3852>>2]=g,a=i[4+(g=B+2200|0)>>2],i[F>>2]=i[g>>2],i[F+4>>2]=a,a=i[4+(g=B+2192|0)>>2],i[k>>2]=i[g>>2],i[k+4>>2]=a,a=i[4+(g=B+2184|0)>>2],i[n>>2]=i[g>>2],i[n+4>>2]=a,a=i[4+(g=B+2176|0)>>2],i[y>>2]=i[g>>2],i[y+4>>2]=a,g=i[B+2172>>2],i[B+3888>>2]=i[B+2168>>2],i[B+3892>>2]=g,KA(g=B+2568|0,S),b(a=B+1448|0,g,_=B+2688|0),b(B+1488|0,c=B+2608|0,r=B+2648|0),b(B+1528|0,r,_),b(B+1568|0,g,c),$A(B+1280|0,a),a=0,g=0;c=(_=B+3968|0)+(g<<1)|0,r=o[I+g|0],C[c+1|0]=r>>>4,C[0|c]=15&r,_=_+((c=1|g)<<1)|0,c=o[I+c|0],C[_+1|0]=c>>>4,C[0|_]=15&c,32!=(0|(g=g+2|0)););for(I=0;g=8+(_=(g=I)+o[0|(I=(B+3968|0)+a|0)]|0)|0,C[0|I]=_-(240&g),g=8+(_=o[I+1|0]+(g<<24>>24>>4)|0)|0,C[I+1|0]=_-(240&g),g=8+(_=o[I+2|0]+(g<<24>>24>>4)|0)|0,C[I+2|0]=_-(240&g),I=g<<24>>24>>4,63!=(0|(a=a+3|0)););for(C[B+4031|0]=o[B+4031|0]+I,i[A+32>>2]=0,i[A+36>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+16>>2]=0,i[A+20>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0,i[A>>2]=0,i[A+4>>2]=0,i[A+44>>2]=0,i[A+48>>2]=0,i[A+40>>2]=1,i[A+52>>2]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+64>>2]=0,i[A+68>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,i[A+80>>2]=1,bg(A+84|0,0,76),w=A+120|0,f=A+80|0,y=A+40|0,r=B+3768|0,g=B+3888|0,_=B+3848|0,e=B+3728|0,a=B+3928|0,D=63;HA(B,n=B+160|0,C[(B+3968|0)+D|0]),sA(I=B+3808|0,A,B),b(c=B+3688|0,I,a),b(e,_,g),b(r,g,a),KA(I,c),b(c,I,a),b(e,_,g),b(r,g,a),KA(I,c),b(c,I,a),b(e,_,g),b(r,g,a),KA(I,c),b(c,I,a),b(e,_,g),b(r,g,a),KA(I,c),b(A,I,a),b(y,_,g),b(f,g,a),b(w,I,_),D=D-1|0;);HA(B,n,C[B+3968|0]),sA(I,A,B),b(A,I,a),b(y,_,g),b(f,g,a),b(w,I,_),s=B+4032|0}function x(A,I,g,C){var B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F,S,N,G,M,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0;s=B=s-320|0,i[B+280>>2]=0,i[B+284>>2]=0,i[B+272>>2]=0,i[B+276>>2]=0,i[B+264>>2]=0,i[B+268>>2]=0,i[B+256>>2]=0,i[B+260>>2]=0,Ng(U=B+256|0,I,g),m=o[C+16|0]|o[C+17|0]<<8|o[C+18|0]<<16|o[C+19|0]<<24,K=o[C+48|0]|o[C+49|0]<<8|o[C+50|0]<<16|o[C+51|0]<<24,a=o[C+20|0]|o[C+21|0]<<8|o[C+22|0]<<16|o[C+23|0]<<24,_=o[C+52|0]|o[C+53|0]<<8|o[C+54|0]<<16|o[C+55|0]<<24,c=o[C+24|0]|o[C+25|0]<<8|o[C+26|0]<<16|o[C+27|0]<<24,t=o[C+56|0]|o[C+57|0]<<8|o[C+58|0]<<16|o[C+59|0]<<24,r=o[C+28|0]|o[C+29|0]<<8|o[C+30|0]<<16|o[C+31|0]<<24,e=o[C+60|0]|o[C+61|0]<<8|o[C+62|0]<<16|o[C+63|0]<<24,I=o[C+36|0]|o[C+37|0]<<8|o[C+38|0]<<16|o[C+39|0]<<24,y=o[C+84|0]|o[C+85|0]<<8|o[C+86|0]<<16|o[C+87|0]<<24,h=o[C+116|0]|o[C+117|0]<<8|o[C+118|0]<<16|o[C+119|0]<<24,b=o[C+100|0]|o[C+101|0]<<8|o[C+102|0]<<16|o[C+103|0]<<24,H=o[C+44|0]|o[C+45|0]<<8|o[C+46|0]<<16|o[C+47|0]<<24,D=o[C+92|0]|o[C+93|0]<<8|o[C+94|0]<<16|o[C+95|0]<<24,f=o[C+124|0]|o[C+125|0]<<8|o[C+126|0]<<16|o[C+127|0]<<24,Y=o[C+108|0]|o[C+109|0]<<8|o[C+110|0]<<16|o[C+111|0]<<24,J=o[C+32|0]|o[C+33|0]<<8|o[C+34|0]<<16|o[C+35|0]<<24,p=o[C+80|0]|o[C+81|0]<<8|o[C+82|0]<<16|o[C+83|0]<<24,w=o[C+112|0]|o[C+113|0]<<8|o[C+114|0]<<16|o[C+115|0]<<24,d=o[C+96|0]|o[C+97|0]<<8|o[C+98|0]<<16|o[C+99|0]<<24,n=i[B+272>>2],k=i[B+256>>2],F=i[B+260>>2],S=i[B+264>>2],N=i[B+268>>2],G=i[B+276>>2],M=i[B+284>>2],Q=o[C+40|0]|o[C+41|0]<<8|o[C+42|0]<<16|o[C+43|0]<<24,E=o[C+104|0]|o[C+105|0]<<8|o[C+106|0]<<16|o[C+107|0]<<24,i[B+280>>2]=Q^E&(o[C+120|0]|o[C+121|0]<<8|o[C+122|0]<<16|o[C+123|0]<<24)^i[B+280>>2]^(o[C+88|0]|o[C+89|0]<<8|o[C+90|0]<<16|o[C+91|0]<<24),i[B+272>>2]=J^d&w^p^n,i[B+284>>2]=H^Y&f^D^M,i[B+276>>2]=I^b&h^y^G,i[B+268>>2]=Y^H&e^r^N,i[B+264>>2]=t&Q^c^S^E,i[B+260>>2]=b^I&_^a^F,i[B+256>>2]=d^K&J^m^k,bg(g+U|0,0,32-g|0),Ng(A,U,g),g=i[B+280>>2],U=i[B+272>>2],b=i[B+284>>2],H=i[B+276>>2],Y=i[B+256>>2],J=i[B+260>>2],d=i[B+264>>2],m=i[B+268>>2],A=i[C+124>>2],i[B+312>>2]=i[C+120>>2],i[B+316>>2]=A,A=i[C+116>>2],i[B+304>>2]=i[C+112>>2],i[B+308>>2]=A,A=i[C+108>>2],i[B+248>>2]=i[C+104>>2],i[B+252>>2]=A,A=i[C+100>>2],i[B+240>>2]=i[C+96>>2],i[B+244>>2]=A,A=i[C+124>>2],i[B+232>>2]=i[C+120>>2],i[B+236>>2]=A,A=i[C+116>>2],i[B+224>>2]=i[C+112>>2],i[B+228>>2]=A,AI(I=B+288|0,B+240|0,B+224|0),A=i[B+300>>2],i[C+120>>2]=i[B+296>>2],i[C+124>>2]=A,A=i[B+292>>2],i[C+112>>2]=i[B+288>>2],i[C+116>>2]=A,A=i[C+92>>2],i[B+216>>2]=i[C+88>>2],i[B+220>>2]=A,A=i[C+84>>2],i[B+208>>2]=i[C+80>>2],i[B+212>>2]=A,A=i[C+108>>2],i[B+200>>2]=i[C+104>>2],i[B+204>>2]=A,A=i[C+100>>2],i[B+192>>2]=i[C+96>>2],i[B+196>>2]=A,AI(I,B+208|0,B+192|0),A=i[B+300>>2],i[C+104>>2]=i[B+296>>2],i[C+108>>2]=A,A=i[B+292>>2],i[C+96>>2]=i[B+288>>2],i[C+100>>2]=A,A=i[C+76>>2],i[B+184>>2]=i[C+72>>2],i[B+188>>2]=A,K=i[4+(A=C- -64|0)>>2],i[B+176>>2]=i[A>>2],i[B+180>>2]=K,K=i[C+92>>2],i[B+168>>2]=i[C+88>>2],i[B+172>>2]=K,K=i[C+84>>2],i[B+160>>2]=i[C+80>>2],i[B+164>>2]=K,AI(I,B+176|0,B+160|0),K=i[B+300>>2],i[C+88>>2]=i[B+296>>2],i[C+92>>2]=K,K=i[B+292>>2],i[C+80>>2]=i[B+288>>2],i[C+84>>2]=K,K=i[C+60>>2],i[B+152>>2]=i[C+56>>2],i[B+156>>2]=K,K=i[C+52>>2],i[B+144>>2]=i[C+48>>2],i[B+148>>2]=K,K=i[C+76>>2],i[B+136>>2]=i[C+72>>2],i[B+140>>2]=K,K=i[A+4>>2],i[B+128>>2]=i[A>>2],i[B+132>>2]=K,AI(I,B+144|0,B+128|0),K=i[B+300>>2],i[C+72>>2]=i[B+296>>2],i[C+76>>2]=K,K=i[B+292>>2],i[A>>2]=i[B+288>>2],i[A+4>>2]=K,K=i[C+44>>2],i[B+120>>2]=i[C+40>>2],i[B+124>>2]=K,K=i[C+36>>2],i[B+112>>2]=i[C+32>>2],i[B+116>>2]=K,K=i[C+60>>2],i[B+104>>2]=i[C+56>>2],i[B+108>>2]=K,K=i[C+52>>2],i[B+96>>2]=i[C+48>>2],i[B+100>>2]=K,AI(I,B+112|0,B+96|0),K=i[B+300>>2],i[C+56>>2]=i[B+296>>2],i[C+60>>2]=K,K=i[B+292>>2],i[C+48>>2]=i[B+288>>2],i[C+52>>2]=K,K=i[C+28>>2],i[B+88>>2]=i[C+24>>2],i[B+92>>2]=K,K=i[C+20>>2],i[B+80>>2]=i[C+16>>2],i[B+84>>2]=K,K=i[C+44>>2],i[B+72>>2]=i[C+40>>2],i[B+76>>2]=K,K=i[C+36>>2],i[B+64>>2]=i[C+32>>2],i[B+68>>2]=K,AI(I,B+80|0,B- -64|0),K=i[B+300>>2],i[C+40>>2]=i[B+296>>2],i[C+44>>2]=K,K=i[B+292>>2],i[C+32>>2]=i[B+288>>2],i[C+36>>2]=K,K=i[C+12>>2],i[B+56>>2]=i[C+8>>2],i[B+60>>2]=K,K=i[C+4>>2],i[B+48>>2]=i[C>>2],i[B+52>>2]=K,K=i[C+28>>2],i[B+40>>2]=i[C+24>>2],i[B+44>>2]=K,K=i[C+20>>2],i[B+32>>2]=i[C+16>>2],i[B+36>>2]=K,AI(I,B+48|0,B+32|0),K=i[B+300>>2],i[C+24>>2]=i[B+296>>2],i[C+28>>2]=K,K=i[B+292>>2],i[C+16>>2]=i[B+288>>2],i[C+20>>2]=K,K=i[B+316>>2],i[B+24>>2]=i[B+312>>2],i[B+28>>2]=K,K=i[B+308>>2],i[B+16>>2]=i[B+304>>2],i[B+20>>2]=K,K=i[C+12>>2],i[B+8>>2]=i[C+8>>2],i[B+12>>2]=K,K=i[C+4>>2],i[B>>2]=i[C>>2],i[B+4>>2]=K,AI(I,B+16|0,B),I=i[B+300>>2],i[C+8>>2]=i[B+296>>2],i[C+12>>2]=I,I=i[B+292>>2],i[C>>2]=i[B+288>>2],i[C+4>>2]=I,i[C+12>>2]=m^(o[C+12|0]|o[C+13|0]<<8|o[C+14|0]<<16|o[C+15|0]<<24),i[C+8>>2]=d^(o[C+8|0]|o[C+9|0]<<8|o[C+10|0]<<16|o[C+11|0]<<24),i[C+4>>2]=J^(o[C+4|0]|o[C+5|0]<<8|o[C+6|0]<<16|o[C+7|0]<<24),i[C>>2]=Y^(o[0|C]|o[C+1|0]<<8|o[C+2|0]<<16|o[C+3|0]<<24),i[A>>2]=U^(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24),i[C+68>>2]=H^(o[C+68|0]|o[C+69|0]<<8|o[C+70|0]<<16|o[C+71|0]<<24),i[C+72>>2]=g^(o[C+72|0]|o[C+73|0]<<8|o[C+74|0]<<16|o[C+75|0]<<24),i[C+76>>2]=b^(o[C+76|0]|o[C+77|0]<<8|o[C+78|0]<<16|o[C+79|0]<<24),s=B+320|0}function v(A,I){var g,C,B,Q,o,E,_,c,t,r,e,y,s,h,D,p,w,n,k,F,S,N,G,M,K,U,b,H,Y,J,d,m,l,u,x,v,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0,BA=0,QA=0,iA=0,oA=0;R=Ig(C=(D=i[I+12>>2])<<1,E=C>>31,$=(q=i[I+4>>2])<<1,B=$>>31),P=f,F=V=i[I+8>>2],L=(Z=Ig(V,p=V>>31,V,p))+R|0,R=f+P|0,R=L>>>0<Z>>>0?R+1|0:R,P=Ig(j=i[I+16>>2],_=j>>31,Z=(z=i[I>>2])<<1,Q=Z>>31),R=f+R|0,R=(L=P+L|0)>>>0<P>>>0?R+1|0:R,e=i[I+28>>2],P=Ig(BA=a(e,38),w=BA>>31,e,S=e>>31),R=f+R|0,R=(L=P+L|0)>>>0<P>>>0?R+1|0:R,P=L,y=i[I+32>>2],X=Ig(O=a(y,19),c=O>>31,L=(g=i[I+24>>2])<<1,L>>31),L=f+R|0,L=(P=P+X|0)>>>0<X>>>0?L+1|0:L,H=i[I+36>>2],R=Ig(X=a(H,38),o=X>>31,AA=(t=i[I+20>>2])<<1,s=AA>>31),I=f+L|0,J=R=(R>>>0>(P=R+P|0)>>>0?I+1:I)<<1|P>>>31,d=L=33554432+(N=P<<1)|0,m=R=L>>>0<33554432?R+1|0:R,I=R>>26,T=(67108863&R)<<6|L>>>26,R=Ig($,B,j,_),P=f,L=(IA=Ig(V<<=1,h=V>>31,D,G=D>>31))+R|0,R=f+P|0,R=L>>>0<IA>>>0?R+1|0:R,P=(IA=Ig(t,n=t>>31,Z,Q))+L|0,L=f+R|0,L=P>>>0<IA>>>0?L+1|0:L,iA=Ig(O,c,IA=e<<1,M=IA>>31),R=f+L|0,R=(P=iA+P|0)>>>0<iA>>>0?R+1|0:R,L=Ig(X,o,g,r=g>>31),R=f+R|0,I=I+(L=(L>>>0>(P=L+P|0)>>>0?R+1:R)<<1|P>>>31)|0,iA=P=(R=P<<1)+T|0,R=I=R>>>0>P>>>0?I+1|0:I,l=P=P+16777216|0,T=(33554431&(R=P>>>0<16777216?R+1|0:R))<<7|P>>>25,P=R>>25,I=Ig(C,E,D,G),R=f,L=Ig(j,_,V,h),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=Ig($,B,AA,s),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=(gA=Ig(Z,Q,g,r))+I|0,I=f+R|0,I=L>>>0<gA>>>0?I+1|0:I,gA=Ig(O,c,y,k=y>>31),R=f+I|0,R=(L=gA+L|0)>>>0<gA>>>0?R+1|0:R,I=(gA=Ig(X,o,IA,M))+L|0,L=f+R|0,I=((R=I)>>>0<gA>>>0?L+1:L)<<1|R>>>31,L=T,T=R<<1,R=I+P|0,R=(L=L+T|0)>>>0<T>>>0?R+1|0:R,gA=I=L+33554432|0,P=R=I>>>0<33554432?R+1|0:R,i[A+24>>2]=L-(-67108864&I),L=Ig(I=a(t,38),I>>31,t,n),T=f,I=(R=Ig(I=z,R=I>>31,I,R))+L|0,L=f+T|0,L=I>>>0<R>>>0?L+1|0:L,CA=Ig(z=a(g,19),K=z>>31,T=j<<1,U=T>>31),R=f+L|0,R=(I=CA+I|0)>>>0<CA>>>0?R+1|0:R,L=Ig(C,E,BA,w),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=(CA=Ig(O,c,V,h))+I|0,I=f+R|0,I=L>>>0<CA>>>0?I+1|0:I,CA=Ig($,B,X,o),R=f+I|0,CA=R=((L=CA+L|0)>>>0<CA>>>0?R+1:R)<<1|L>>>31,u=I=33554432+(b=L<<1)|0,x=L=I>>>0<33554432?R+1|0:R,QA=(67108863&L)<<6|I>>>26,oA=L>>26,I=Ig(z,K,AA,s),R=f,L=Ig(Z,Q,q,Y=q>>31),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=(W=Ig(j,_,BA,w))+I|0,I=f+R|0,I=L>>>0<W>>>0?I+1|0:I,W=Ig(O,c,C,E),R=f+I|0,R=(L=W+L|0)>>>0<W>>>0?R+1|0:R,W=(I=Ig(X,o,F,p))+L|0,L=f+R|0,R=(I=(I>>>0>W>>>0?L+1:L)<<1|W>>>31)+oA|0,R=(L=(W<<=1)+QA|0)>>>0<W>>>0?R+1|0:R,oA=L,W=L=L+16777216|0,v=(33554431&(R=L>>>0<16777216?R+1|0:R))<<7|L>>>25,QA=R>>25,I=Ig(Z,Q,F,p),R=f,L=Ig($,B,q,Y),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,q=Ig(z,K,g,r),L=f+R|0,L=(I=q+I|0)>>>0<q>>>0?L+1|0:L,q=Ig(AA,s,BA,w),R=f+L|0,R=(I=q+I|0)>>>0<q>>>0?R+1|0:R,L=Ig(O,c,T,U),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=(q=Ig(X,o,C,E))+I|0,I=f+R|0,R=(R=(L>>>0<q>>>0?I+1:I)<<1|L>>>31)+QA|0,z=I=(L<<=1)+v|0,R=I>>>0<L>>>0?R+1|0:R,QA=I=I+33554432|0,q=L=I>>>0<33554432?R+1|0:R,i[A+8>>2]=z-(-67108864&I),I=Ig(V,h,t,n),L=f,R=(z=Ig(j,_,C,E))+I|0,I=f+L|0,I=R>>>0<z>>>0?I+1|0:I,L=(z=Ig($,B,g,r))+R|0,R=f+I|0,R=L>>>0<z>>>0?R+1|0:R,I=(z=Ig(Z,Q,e,S))+L|0,L=f+R|0,L=I>>>0<z>>>0?L+1|0:L,z=Ig(X,o,y,k),R=f+L|0,R=(R=((I=z+I|0)>>>0<z>>>0?R+1:R)<<1|I>>>31)+(L=P>>26)|0,I=(L=P=(z=I<<1)+(I=(67108863&P)<<6|gA>>>26)|0)>>>0<I>>>0?R+1|0:R,z=R=L+16777216|0,P=I=R>>>0<16777216?I+1|0:I,i[A+28>>2]=L-(-33554432&R),I=Ig(Z,Q,D,G),R=f,L=Ig($,B,F,p),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=Ig(g,r,BA,w),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=(O=Ig(O,c,AA,s))+I|0,I=f+R|0,I=L>>>0<O>>>0?I+1|0:I,R=(O=Ig(X,o,j,_))+L|0,L=f+I|0,I=R,R=(R>>>0<O>>>0?L+1:L)<<1|R>>>31,L=I<<1,R=(I=q>>26)+R|0,R=(L=L+(q=(67108863&q)<<6|QA>>>26)|0)>>>0<q>>>0?R+1|0:R,O=I=L+16777216|0,q=R=I>>>0<16777216?R+1|0:R,i[A+12>>2]=L-(-33554432&I),I=Ig(g,r,V,h),R=f,L=Ig(j,_,j,_),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=Ig(C,E,AA,s),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=Ig($,B,IA,M),R=f+R|0,R=(I=L+I|0)>>>0<L>>>0?R+1|0:R,L=(j=Ig(Z,Q,y,k))+I|0,I=f+R|0,I=L>>>0<j>>>0?I+1|0:I,R=(j=Ig(R=X,o,X=H,AA=X>>31))+L|0,L=f+I|0,I=R,R=(R>>>0<j>>>0?L+1:L)<<1|R>>>31,L=I<<1,R=(I=P>>25)+R|0,R=(L=L+(P=(33554431&P)<<7|z>>>25)|0)>>>0<P>>>0?R+1|0:R,j=I=L+33554432|0,P=R=I>>>0<33554432?R+1|0:R,i[A+32>>2]=L-(-67108864&I),R=q>>25,L=(q=(33554431&q)<<7|O>>>25)+(N-(I=-67108864&d)|0)|0,I=R+(J-((I>>>0>N>>>0)+m|0)|0)|0,I=L>>>0<q>>>0?I+1|0:I,q=L,R=I,I=((67108863&(R=(L=L+33554432|0)>>>0<33554432?R+1|0:R))<<6|L>>>26)+(BA=iA-(-33554432&l)|0)|0,i[A+20>>2]=I,i[A+16>>2]=q-(-67108864&L),I=Ig(C,E,g,r),L=f,R=(q=Ig(t,n,T,U))+I|0,I=f+L|0,I=R>>>0<q>>>0?I+1|0:I,L=(q=Ig(V,h,e,S))+R|0,R=f+I|0,R=L>>>0<q>>>0?R+1|0:R,I=(q=Ig($,B,y,k))+L|0,L=f+R|0,L=I>>>0<q>>>0?L+1|0:L,q=Ig(Z,Q,X,AA),R=f+L|0,R=((I=q+I|0)>>>0<q>>>0?R+1:R)<<1|I>>>31,q=I<<1,R=R+(L=P>>26)|0,I=(I=(67108863&P)<<6|j>>>26)>>>0>(P=q+I|0)>>>0?R+1|0:R,I=(R=P+16777216|0)>>>0<16777216?I+1|0:I,i[A+36>>2]=P-(-33554432&R),q=oA-(-33554432&W)|0,P=b-(L=-67108864&u)|0,$=CA-((L>>>0>b>>>0)+x|0)|0,I=Ig((33554431&I)<<7|R>>>25,I>>25,19,0),L=f+$|0,P=R=I+P|0,I=I>>>0>R>>>0?L+1|0:L,I=((67108863&(I=(R=R+33554432|0)>>>0<33554432?I+1|0:I))<<6|R>>>26)+q|0,i[A+4>>2]=I,i[A>>2]=P-(-67108864&R)}function R(A,I){var g,C,B,Q,o,E,_,c,t,r,e,y,s,h,D,p,w,n,k,F,S,N,G,M,K,U,b,H,Y,J,d,m,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0,BA=0;l=Ig(C=(p=i[I+12>>2])<<1,E=C>>31,p,S=p>>31),x=f,u=(z=Ig(R=i[I+16>>2],_=R>>31,c=(v=i[I+8>>2])<<1,y=c>>31))+l|0,l=f+x|0,l=u>>>0<z>>>0?l+1|0:l,x=(j=Ig(W=(t=i[I+20>>2])<<1,s=W>>31,z=(L=i[I+4>>2])<<1,B=z>>31))+u|0,u=f+l|0,u=x>>>0<j>>>0?u+1|0:u,P=Ig(g=i[I+24>>2],r=g>>31,j=(T=i[I>>2])<<1,Q=j>>31),l=f+u|0,l=(x=P+x|0)>>>0<P>>>0?l+1|0:l,u=x,h=i[I+32>>2],x=Ig(X=a(h,19),e=X>>31,h,n=h>>31),l=f+l|0,l=(u=u+x|0)>>>0<x>>>0?l+1|0:l,U=i[I+36>>2],x=Ig(P=a(U,38),o=P>>31,k=(D=i[I+28>>2])<<1,N=k>>31),I=f+l|0,Z=u=x+u|0,x=u>>>0<x>>>0?I+1|0:I,I=Ig(z,B,R,_),l=f,u=Ig(c,y,p,S),l=f+l|0,l=(I=u+I|0)>>>0<u>>>0?l+1|0:l,q=Ig(t,F=t>>31,j,Q),u=f+l|0,u=(I=q+I|0)>>>0<q>>>0?u+1|0:u,q=Ig(X,e,k,N),l=f+u|0,l=(I=q+I|0)>>>0<q>>>0?l+1|0:l,u=Ig(P,o,g,r),l=f+l|0,CA=I=u+I|0,O=I>>>0<u>>>0?l+1|0:l,l=Ig(z,B,C,E),u=f,G=I=v,v=Ig(I,V=I>>31,I,V),I=f+u|0,I=(l=v+l|0)>>>0<v>>>0?I+1|0:I,u=(v=Ig(j,Q,R,_))+l|0,l=f+I|0,l=u>>>0<v>>>0?l+1|0:l,I=(v=Ig(q=a(D,38),w=q>>31,D,M=D>>31))+u|0,u=f+l|0,u=I>>>0<v>>>0?u+1|0:u,I=(l=I)+(v=Ig(X,e,I=g<<1,I>>31))|0,l=f+u|0,l=I>>>0<v>>>0?l+1|0:l,u=I,I=Ig(P,o,W,s),l=f+l|0,b=u=u+I|0,H=l=I>>>0>u>>>0?l+1|0:l,I=l,Y=u=u+33554432|0,J=I=u>>>0<33554432?I+1|0:I,l=(l=I>>26)+O|0,CA=I=(u=(67108863&I)<<6|u>>>26)+CA|0,l=I>>>0<u>>>0?l+1|0:l,d=I=I+16777216|0,l=(l=(u=I>>>0<16777216?l+1|0:l)>>25)+x|0,I=(I=(33554431&u)<<7|I>>>25)>>>0>(u=I+Z|0)>>>0?l+1|0:l,Z=l=u+33554432|0,v=I=l>>>0<33554432?I+1|0:I,i[A+24>>2]=u-(-67108864&l),I=Ig(j,Q,G,V),l=f,x=Ig(z,B,L,$=L>>31),u=f+l|0,u=(I=x+I|0)>>>0<x>>>0?u+1|0:u,O=Ig(x=a(g,19),gA=x>>31,g,r),l=f+u|0,l=(I=O+I|0)>>>0<O>>>0?l+1|0:l,u=(O=Ig(W,s,q,w))+I|0,I=f+l|0,I=u>>>0<O>>>0?I+1|0:I,AA=Ig(X,e,O=R<<1,K=O>>31),l=f+I|0,l=(u=AA+u|0)>>>0<AA>>>0?l+1|0:l,I=u,u=Ig(P,o,C,E),l=f+l|0,IA=I=I+u|0,AA=I>>>0<u>>>0?l+1|0:l,I=Ig(W,s,x,gA),l=f,L=Ig(j,Q,L,$),u=f+l|0,u=(I=L+I|0)>>>0<L>>>0?u+1|0:u,L=Ig(R,_,q,w),l=f+u|0,l=(I=L+I|0)>>>0<L>>>0?l+1|0:l,u=(L=Ig(X,e,C,E))+I|0,I=f+l|0,I=u>>>0<L>>>0?I+1|0:I,L=Ig(P,o,G,V),l=f+I|0,BA=u=L+u|0,$=u>>>0<L>>>0?l+1|0:l,u=Ig(I=a(t,38),I>>31,t,F),L=f,I=T,T=u,u=Ig(I,l=I>>31,I,l),l=f+L|0,l=(I=T+u|0)>>>0<u>>>0?l+1|0:l,x=Ig(x,gA,O,K),u=f+l|0,u=(I=x+I|0)>>>0<x>>>0?u+1|0:u,x=Ig(C,E,q,w),l=f+u|0,l=(I=x+I|0)>>>0<x>>>0?l+1|0:l,u=(x=Ig(X,e,c,y))+I|0,I=f+l|0,I=u>>>0<x>>>0?I+1|0:I,x=Ig(z,B,P,o),l=f+I|0,L=u=x+u|0,T=l=u>>>0<x>>>0?l+1|0:l,gA=u=u+33554432|0,m=l=u>>>0<33554432?l+1|0:l,I=l>>26,l=(67108863&l)<<6|u>>>26,u=I+$|0,$=x=l+BA|0,l=l>>>0>x>>>0?u+1|0:u,BA=u=x+16777216|0,x=(33554431&(l=u>>>0<16777216?l+1|0:l))<<7|u>>>25,l=(l>>25)+AA|0,l=(u=x+IA|0)>>>0<x>>>0?l+1|0:l,AA=I=u+33554432|0,x=l=I>>>0<33554432?l+1|0:l,i[A+8>>2]=u-(-67108864&I),I=Ig(c,y,t,F),l=f,u=Ig(R,_,C,E),l=f+l|0,l=(I=u+I|0)>>>0<u>>>0?l+1|0:l,u=Ig(z,B,g,r),l=f+l|0,l=(I=u+I|0)>>>0<u>>>0?l+1|0:l,u=Ig(j,Q,D,M),l=f+l|0,l=(I=u+I|0)>>>0<u>>>0?l+1|0:l,IA=(u=Ig(P,o,h,n))+I|0,I=f+l|0,u=(l=v>>26)+(u=u>>>0>IA>>>0?I+1|0:I)|0,Z=I=(v=(67108863&v)<<6|Z>>>26)+IA|0,l=I>>>0<v>>>0?u+1|0:u,IA=I=I+16777216|0,v=l=I>>>0<16777216?l+1|0:l,i[A+28>>2]=Z-(-33554432&I),I=Ig(j,Q,p,S),u=f,l=(V=Ig(z,B,G,V))+I|0,I=f+u|0,I=l>>>0<V>>>0?I+1|0:I,l=(q=Ig(g,r,q,w))+l|0,u=f+I|0,I=(X=Ig(X,e,W,s))+l|0,l=f+(l>>>0<q>>>0?u+1|0:u)|0,l=I>>>0<X>>>0?l+1|0:l,u=Ig(P,o,R,_),l=f+l|0,l=(l=(I=u+I|0)>>>0<u>>>0?l+1|0:l)+(u=x>>26)|0,I=(u=x=(Z=I)+(I=(67108863&x)<<6|AA>>>26)|0)>>>0<I>>>0?l+1|0:l,X=l=u+16777216|0,x=I=l>>>0<16777216?I+1|0:I,i[A+12>>2]=u-(-33554432&l),I=Ig(g,r,c,y),l=f,u=Ig(R,_,R,_),l=f+l|0,l=(I=u+I|0)>>>0<u>>>0?l+1|0:l,u=Ig(C,E,W,s),l=f+l|0,l=(I=u+I|0)>>>0<u>>>0?l+1|0:l,u=(R=Ig(z,B,k,N))+I|0,I=f+l|0,I=u>>>0<R>>>0?I+1|0:I,l=(R=Ig(j,Q,h,n))+u|0,u=f+I|0,u=l>>>0<R>>>0?u+1|0:u,I=(R=Ig(I=P,o,P=U,W=P>>31))+l|0,l=f+u|0,l=I>>>0<R>>>0?l+1|0:l,u=I,l=(I=v>>25)+l|0,l=(u=u+(v=(33554431&v)<<7|IA>>>25)|0)>>>0<v>>>0?l+1|0:l,R=I=u+33554432|0,v=l=I>>>0<33554432?l+1|0:l,i[A+32>>2]=u-(-67108864&I),l=x>>25,u=(x=(33554431&x)<<7|X>>>25)+(b-(I=-67108864&Y)|0)|0,I=l+(H-((I>>>0>b>>>0)+J|0)|0)|0,I=u>>>0<x>>>0?I+1|0:I,x=u,I=((67108863&(l=(u=u+33554432|0)>>>0<33554432?I+1|0:I))<<6|u>>>26)+(q=CA-(-33554432&d)|0)|0,i[A+20>>2]=I,i[A+16>>2]=x-(-67108864&u),I=Ig(C,E,g,r),u=f,l=(x=Ig(t,F,O,K))+I|0,I=f+u|0,I=l>>>0<x>>>0?I+1|0:I,u=(x=Ig(c,y,D,M))+l|0,l=f+I|0,l=u>>>0<x>>>0?l+1|0:l,I=(x=Ig(z,B,h,n))+u|0,u=f+l|0,u=I>>>0<x>>>0?u+1|0:u,x=(l=I)+(I=Ig(j,Q,P,W))|0,l=f+u|0,l=(I=I>>>0>x>>>0?l+1|0:l)+(l=v>>26)|0,I=(u=(v=(67108863&v)<<6|R>>>26)+x|0)>>>0<v>>>0?l+1|0:l,I=(l=u+16777216|0)>>>0<16777216?I+1|0:I,i[A+36>>2]=u-(-33554432&l),v=$-(-33554432&BA)|0,x=L-(u=-67108864&gA)|0,z=T-((u>>>0>L>>>0)+m|0)|0,I=Ig((33554431&I)<<7|l>>>25,I>>25,19,0),l=f+z|0,I=I>>>0>(u=I+x|0)>>>0?l+1|0:l,I=((67108863&(I=(l=u+33554432|0)>>>0<33554432?I+1|0:I))<<6|l>>>26)+v|0,i[A+4>>2]=I,i[A>>2]=u-(-67108864&l)}function L(A,I){var g,C,B,Q,E,a,_,c,t,r,e=0,y=0,h=0;s=g=s-416|0,C=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,B=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,Q=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,E=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,h=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,a=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,_=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,c=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,A=i[I+92>>2],i[g+408>>2]=i[I+88>>2],i[g+412>>2]=A,A=i[I+84>>2],i[g+400>>2]=i[I+80>>2],i[g+404>>2]=A,A=i[I+76>>2],i[g+376>>2]=i[I+72>>2],i[g+380>>2]=A,e=i[4+(A=y=I- -64|0)>>2],i[g+368>>2]=i[A>>2],i[g+372>>2]=e,A=i[I+92>>2],i[g+360>>2]=i[I+88>>2],i[g+364>>2]=A,A=i[I+84>>2],i[g+352>>2]=i[I+80>>2],i[g+356>>2]=A,AI(A=g+384|0,g+368|0,g+352|0),e=i[g+396>>2],i[I+88>>2]=i[g+392>>2],i[I+92>>2]=e,e=i[g+388>>2],i[I+80>>2]=i[g+384>>2],i[I+84>>2]=e,e=i[I+60>>2],i[g+344>>2]=i[I+56>>2],i[g+348>>2]=e,e=i[I+52>>2],i[g+336>>2]=i[I+48>>2],i[g+340>>2]=e,e=i[I+76>>2],i[g+328>>2]=i[I+72>>2],i[g+332>>2]=e,e=i[y+4>>2],i[g+320>>2]=i[y>>2],i[g+324>>2]=e,AI(A,g+336|0,g+320|0),e=i[g+396>>2],i[I+72>>2]=i[g+392>>2],i[I+76>>2]=e,e=i[g+388>>2],i[y>>2]=i[g+384>>2],i[y+4>>2]=e,e=i[I+44>>2],i[g+312>>2]=i[I+40>>2],i[g+316>>2]=e,e=i[I+36>>2],i[g+304>>2]=i[I+32>>2],i[g+308>>2]=e,e=i[I+60>>2],i[g+296>>2]=i[I+56>>2],i[g+300>>2]=e,e=i[I+52>>2],i[g+288>>2]=i[I+48>>2],i[g+292>>2]=e,AI(A,g+304|0,g+288|0),e=i[g+396>>2],i[I+56>>2]=i[g+392>>2],i[I+60>>2]=e,e=i[g+388>>2],i[I+48>>2]=i[g+384>>2],i[I+52>>2]=e,e=i[I+28>>2],i[g+280>>2]=i[I+24>>2],i[g+284>>2]=e,e=i[I+20>>2],i[g+272>>2]=i[I+16>>2],i[g+276>>2]=e,e=i[I+44>>2],i[g+264>>2]=i[I+40>>2],i[g+268>>2]=e,e=i[I+36>>2],i[g+256>>2]=i[I+32>>2],i[g+260>>2]=e,AI(A,g+272|0,g+256|0),e=i[g+396>>2],i[I+40>>2]=i[g+392>>2],i[I+44>>2]=e,e=i[g+388>>2],i[I+32>>2]=i[g+384>>2],i[I+36>>2]=e,e=i[I+12>>2],i[g+248>>2]=i[I+8>>2],i[g+252>>2]=e,e=i[I+4>>2],i[g+240>>2]=i[I>>2],i[g+244>>2]=e,e=i[I+28>>2],i[g+232>>2]=i[I+24>>2],i[g+236>>2]=e,e=i[I+20>>2],i[g+224>>2]=i[I+16>>2],i[g+228>>2]=e,AI(A,g+240|0,g+224|0),e=i[g+396>>2],i[I+24>>2]=i[g+392>>2],i[I+28>>2]=e,e=i[g+388>>2],i[I+16>>2]=i[g+384>>2],i[I+20>>2]=e,e=i[g+412>>2],i[g+216>>2]=i[g+408>>2],i[g+220>>2]=e,e=i[g+404>>2],i[g+208>>2]=i[g+400>>2],i[g+212>>2]=e,e=i[I+12>>2],i[g+200>>2]=i[I+8>>2],i[g+204>>2]=e,e=i[I+4>>2],i[g+192>>2]=i[I>>2],i[g+196>>2]=e,AI(A,g+208|0,g+192|0),e=i[g+384>>2],t=i[g+388>>2],r=i[g+392>>2],i[I+12>>2]=i[g+396>>2]^_,i[I+8>>2]=a^r,i[I+4>>2]=h^t,i[I>>2]=e^c,h=i[I+92>>2],i[g+408>>2]=i[I+88>>2],i[g+412>>2]=h,h=i[I+84>>2],i[g+400>>2]=i[I+80>>2],i[g+404>>2]=h,h=i[I+76>>2],i[g+184>>2]=i[I+72>>2],i[g+188>>2]=h,h=i[y+4>>2],i[g+176>>2]=i[y>>2],i[g+180>>2]=h,h=i[I+92>>2],i[g+168>>2]=i[I+88>>2],i[g+172>>2]=h,h=i[I+84>>2],i[g+160>>2]=i[I+80>>2],i[g+164>>2]=h,AI(A,g+176|0,g+160|0),h=i[g+396>>2],i[I+88>>2]=i[g+392>>2],i[I+92>>2]=h,h=i[g+388>>2],i[I+80>>2]=i[g+384>>2],i[I+84>>2]=h,h=i[I+60>>2],i[g+152>>2]=i[I+56>>2],i[g+156>>2]=h,h=i[I+52>>2],i[g+144>>2]=i[I+48>>2],i[g+148>>2]=h,h=i[I+76>>2],i[g+136>>2]=i[I+72>>2],i[g+140>>2]=h,h=i[y+4>>2],i[g+128>>2]=i[y>>2],i[g+132>>2]=h,AI(A,g+144|0,g+128|0),h=i[g+396>>2],i[I+72>>2]=i[g+392>>2],i[I+76>>2]=h,h=i[g+388>>2],i[y>>2]=i[g+384>>2],i[y+4>>2]=h,y=i[I+44>>2],i[g+120>>2]=i[I+40>>2],i[g+124>>2]=y,y=i[I+36>>2],i[g+112>>2]=i[I+32>>2],i[g+116>>2]=y,y=i[I+60>>2],i[g+104>>2]=i[I+56>>2],i[g+108>>2]=y,y=i[I+52>>2],i[g+96>>2]=i[I+48>>2],i[g+100>>2]=y,AI(A,g+112|0,g+96|0),y=i[g+396>>2],i[I+56>>2]=i[g+392>>2],i[I+60>>2]=y,y=i[g+388>>2],i[I+48>>2]=i[g+384>>2],i[I+52>>2]=y,y=i[I+28>>2],i[g+88>>2]=i[I+24>>2],i[g+92>>2]=y,y=i[I+20>>2],i[g+80>>2]=i[I+16>>2],i[g+84>>2]=y,y=i[I+44>>2],i[g+72>>2]=i[I+40>>2],i[g+76>>2]=y,y=i[I+36>>2],i[g+64>>2]=i[I+32>>2],i[g+68>>2]=y,AI(A,g+80|0,g- -64|0),y=i[g+396>>2],i[I+40>>2]=i[g+392>>2],i[I+44>>2]=y,y=i[g+388>>2],i[I+32>>2]=i[g+384>>2],i[I+36>>2]=y,y=i[I+12>>2],i[g+56>>2]=i[I+8>>2],i[g+60>>2]=y,y=i[I+4>>2],i[g+48>>2]=i[I>>2],i[g+52>>2]=y,y=i[I+28>>2],i[g+40>>2]=i[I+24>>2],i[g+44>>2]=y,y=i[I+20>>2],i[g+32>>2]=i[I+16>>2],i[g+36>>2]=y,AI(A,g+48|0,g+32|0),y=i[g+396>>2],i[I+24>>2]=i[g+392>>2],i[I+28>>2]=y,y=i[g+388>>2],i[I+16>>2]=i[g+384>>2],i[I+20>>2]=y,y=i[g+412>>2],i[g+24>>2]=i[g+408>>2],i[g+28>>2]=y,y=i[g+404>>2],i[g+16>>2]=i[g+400>>2],i[g+20>>2]=y,y=i[I+12>>2],i[g+8>>2]=i[I+8>>2],i[g+12>>2]=y,y=i[I+4>>2],i[g>>2]=i[I>>2],i[g+4>>2]=y,AI(A,g+16|0,g),A=i[g+384>>2],y=i[g+388>>2],h=i[g+392>>2],i[I+12>>2]=i[g+396>>2]^E,i[I+8>>2]=h^Q,i[I+4>>2]=y^B,i[I>>2]=A^C,s=g+416|0}function P(A,I,g){var C,B,Q,E,a,_,c,t,r,e,y,h,D,f,p=0,w=0,n=0;for(s=C=s-288|0,y=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,h=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,D=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,c=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,t=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,r=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,f=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=g+112|0,A=33620224^(e=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24),i[I>>2]=A,i[(a=g+96|0)>>2]=1427652059^e,i[(_=g+80|0)>>2]=A,w=e^f,i[(A=g- -64|0)>>2]=w,i[g+56>>2]=1110511904,i[g+60>>2]=-584534669,i[(B=g+48|0)>>2]=1427652059,i[B+4>>2]=-248528275,i[g+40>>2]=1496785429,i[g+44>>2]=1652156816,i[(Q=g+32|0)>>2]=33620224,i[Q+4>>2]=218629379,i[g+24>>2]=1110511904,i[g+28>>2]=-584534669,i[(E=g+16|0)>>2]=1427652059,i[E+4>>2]=-248528275,i[g>>2]=w,w=1652156816^r,i[g+124>>2]=w,n=1496785429^t,i[g+120>>2]=n,p=218629379^c,i[g+116>>2]=p,i[g+108>>2]=-584534669^r,i[g+104>>2]=1110511904^t,i[g+100>>2]=-248528275^c,i[g+92>>2]=w,i[g+88>>2]=n,i[g+84>>2]=p,w=r^D,i[g+76>>2]=w,n=t^h,i[g+72>>2]=n,p=c^y,i[g+68>>2]=p,i[g+12>>2]=w,i[g+8>>2]=n,i[g+4>>2]=p,n=0;w=i[I+12>>2],i[C+280>>2]=i[I+8>>2],i[C+284>>2]=w,w=i[I+4>>2],i[C+272>>2]=i[I>>2],i[C+276>>2]=w,w=i[a+12>>2],i[C+248>>2]=i[a+8>>2],i[C+252>>2]=w,w=i[a+4>>2],i[C+240>>2]=i[a>>2],i[C+244>>2]=w,w=i[I+12>>2],i[C+232>>2]=i[I+8>>2],i[C+236>>2]=w,w=i[I+4>>2],i[C+224>>2]=i[I>>2],i[C+228>>2]=w,AI(w=C+256|0,C+240|0,C+224|0),p=i[C+268>>2],i[I+8>>2]=i[C+264>>2],i[I+12>>2]=p,p=i[C+260>>2],i[I>>2]=i[C+256>>2],i[I+4>>2]=p,p=i[_+12>>2],i[C+216>>2]=i[_+8>>2],i[C+220>>2]=p,p=i[_+4>>2],i[C+208>>2]=i[_>>2],i[C+212>>2]=p,p=i[a+12>>2],i[C+200>>2]=i[a+8>>2],i[C+204>>2]=p,p=i[a+4>>2],i[C+192>>2]=i[a>>2],i[C+196>>2]=p,AI(w,C+208|0,C+192|0),p=i[C+268>>2],i[a+8>>2]=i[C+264>>2],i[a+12>>2]=p,p=i[C+260>>2],i[a>>2]=i[C+256>>2],i[a+4>>2]=p,p=i[A+12>>2],i[C+184>>2]=i[A+8>>2],i[C+188>>2]=p,p=i[A+4>>2],i[C+176>>2]=i[A>>2],i[C+180>>2]=p,p=i[_+12>>2],i[C+168>>2]=i[_+8>>2],i[C+172>>2]=p,p=i[_+4>>2],i[C+160>>2]=i[_>>2],i[C+164>>2]=p,AI(w,C+176|0,C+160|0),p=i[C+268>>2],i[_+8>>2]=i[C+264>>2],i[_+12>>2]=p,p=i[C+260>>2],i[_>>2]=i[C+256>>2],i[_+4>>2]=p,p=i[B+12>>2],i[C+152>>2]=i[B+8>>2],i[C+156>>2]=p,p=i[B+4>>2],i[C+144>>2]=i[B>>2],i[C+148>>2]=p,p=i[A+12>>2],i[C+136>>2]=i[A+8>>2],i[C+140>>2]=p,p=i[A+4>>2],i[C+128>>2]=i[A>>2],i[C+132>>2]=p,AI(w,C+144|0,C+128|0),p=i[C+268>>2],i[A+8>>2]=i[C+264>>2],i[A+12>>2]=p,p=i[C+260>>2],i[A>>2]=i[C+256>>2],i[A+4>>2]=p,p=i[Q+12>>2],i[C+120>>2]=i[Q+8>>2],i[C+124>>2]=p,p=i[Q+4>>2],i[C+112>>2]=i[Q>>2],i[C+116>>2]=p,p=i[B+12>>2],i[C+104>>2]=i[B+8>>2],i[C+108>>2]=p,p=i[B+4>>2],i[C+96>>2]=i[B>>2],i[C+100>>2]=p,AI(w,C+112|0,C+96|0),p=i[C+268>>2],i[B+8>>2]=i[C+264>>2],i[B+12>>2]=p,p=i[C+260>>2],i[B>>2]=i[C+256>>2],i[B+4>>2]=p,p=i[E+12>>2],i[C+88>>2]=i[E+8>>2],i[C+92>>2]=p,p=i[E+4>>2],i[C+80>>2]=i[E>>2],i[C+84>>2]=p,p=i[Q+12>>2],i[C+72>>2]=i[Q+8>>2],i[C+76>>2]=p,p=i[Q+4>>2],i[C+64>>2]=i[Q>>2],i[C+68>>2]=p,AI(w,C+80|0,C- -64|0),p=i[C+268>>2],i[Q+8>>2]=i[C+264>>2],i[Q+12>>2]=p,p=i[C+260>>2],i[Q>>2]=i[C+256>>2],i[Q+4>>2]=p,p=i[g+12>>2],i[C+56>>2]=i[g+8>>2],i[C+60>>2]=p,p=i[g+4>>2],i[C+48>>2]=i[g>>2],i[C+52>>2]=p,p=i[E+12>>2],i[C+40>>2]=i[E+8>>2],i[C+44>>2]=p,p=i[E+4>>2],i[C+32>>2]=i[E>>2],i[C+36>>2]=p,AI(w,C+48|0,C+32|0),p=i[C+268>>2],i[E+8>>2]=i[C+264>>2],i[E+12>>2]=p,p=i[C+260>>2],i[E>>2]=i[C+256>>2],i[E+4>>2]=p,p=i[C+284>>2],i[C+24>>2]=i[C+280>>2],i[C+28>>2]=p,p=i[C+276>>2],i[C+16>>2]=i[C+272>>2],i[C+20>>2]=p,p=i[g+12>>2],i[C+8>>2]=i[g+8>>2],i[C+12>>2]=p,p=i[g+4>>2],i[C>>2]=i[g>>2],i[C+4>>2]=p,AI(w,C+16|0,C),w=i[C+268>>2],i[g+8>>2]=i[C+264>>2],i[g+12>>2]=w,w=i[C+260>>2],i[g>>2]=i[C+256>>2],i[g+4>>2]=w,i[g+12>>2]=(o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24)^D,i[g+8>>2]=(o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24)^h,i[g+4>>2]=(o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24)^y,i[g>>2]=(o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24)^f,i[A>>2]=(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24)^e,i[g+68>>2]=(o[g+68|0]|o[g+69|0]<<8|o[g+70|0]<<16|o[g+71|0]<<24)^c,i[g+72>>2]=(o[g+72|0]|o[g+73|0]<<8|o[g+74|0]<<16|o[g+75|0]<<24)^t,i[g+76>>2]=(o[g+76|0]|o[g+77|0]<<8|o[g+78|0]<<16|o[g+79|0]<<24)^r,10!=(0|(n=n+1|0)););s=C+288|0}function q(A,I){var g,B=0,Q=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0;if(s=g=s-48|0,!((B=nI(A))||(B=-26,I-3>>>0<4294967294))){_=i[A+44>>2],B=i[A+48>>2],i[g+4>>2]=0,Q=i[A+40>>2],i[g+32>>2]=B,i[g+16>>2]=-1,i[g+12>>2]=Q,B=((e=(Q=B<<3)>>>0<_>>>0?_:Q)>>>0)/((_=B<<2)>>>0)|0,i[g+24>>2]=B,i[g+28>>2]=B<<2,i[g+20>>2]=a(B,_),B=i[A+52>>2],i[g+40>>2]=I,i[g+36>>2]=B,h=I=s,s=B=I-1152&-64,I=-25;A:{if(!(!(_=g+4|0)|!A)&&(Q=K(i[_+20>>2]<<3),i[_+4>>2]=Q,I=-22,Q)){I:{if((I=i[_+16>>2])&&1024==(((Q=I<<10)>>>0)/(I>>>0)|0)&&(I=K(12),i[_>>2]=I,I)){if(i[I>>2]=0,i[I+4>>2]=0,I=tI(B+128|0,Q),i[9404]=I,I)i[B+128>>2]=0;else if(I=i[B+128>>2])break I;BA(i[_>>2]),i[_>>2]=0}WI(_,i[A+56>>2]),s=h,I=-22;break A}if(i[i[_>>2]>>2]=I,i[i[_>>2]+4>>2]=I,i[i[_>>2]+8>>2]=Q,D=i[_+36>>2],eA(I=B+128|0,0,0,64),i[B+124>>2]=i[A+48>>2],WA(I,Q=B+124|0,4,0),i[B+124>>2]=i[A+4>>2],WA(I,Q,4,0),i[B+124>>2]=i[A+44>>2],WA(I,Q,4,0),i[B+124>>2]=i[A+40>>2],WA(I,Q,4,0),i[B+124>>2]=19,WA(I,Q,4,0),i[B+124>>2]=D,WA(I,Q,4,0),i[B+124>>2]=i[A+12>>2],WA(I,Q,4,0),(Q=i[A+8>>2])&&(WA(I,Q,i[A+12>>2],0),1&C[A+56|0]&&(XC(i[A+8>>2],i[A+12>>2]),i[A+12>>2]=0)),i[B+124>>2]=i[A+20>>2],WA(I=B+128|0,B+124|0,4,0),(Q=i[A+16>>2])&&WA(I,Q,i[A+20>>2],0),i[B+124>>2]=i[A+28>>2],WA(I=B+128|0,B+124|0,4,0),(Q=i[A+24>>2])&&(WA(I,Q,i[A+28>>2],0),2&o[A+56|0]&&(XC(i[A+24>>2],i[A+28>>2]),i[A+28>>2]=0)),i[B+124>>2]=i[A+36>>2],WA(I=B+128|0,B+124|0,4,0),(Q=i[A+32>>2])&&WA(I,Q,i[A+36>>2],0),Hg(B+128|0,B+48|0,64),XC(B+112|0,8),i[_+28>>2])for(Q=0;;){for(i[B+112>>2]=0,i[B+116>>2]=Q,aA(B+128|0,1024,B+48|0,72),D=i[i[_>>2]+4>>2]+(a(i[_+24>>2],Q)<<10)|0,I=0;c=(r=I<<3)+D|0,t=i[4+(y=(e=B+128|0)+r|0)>>2],i[c>>2]=i[y>>2],i[c+4>>2]=t,y=(c=8|r)+D|0,t=i[4+(c=c+e|0)>>2],i[y>>2]=i[c>>2],i[y+4>>2]=t,y=(c=16|r)+D|0,t=i[4+(c=c+e|0)>>2],i[y>>2]=i[c>>2],i[y+4>>2]=t,c=(r|=24)+D|0,y=i[4+(r=r+e|0)>>2],i[c>>2]=i[r>>2],i[c+4>>2]=y,128!=(0|(I=I+4|0)););for(i[B+112>>2]=1,aA(e,1024,B+48|0,72),D=1024+(i[i[_>>2]+4>>2]+(a(i[_+24>>2],Q)<<10)|0)|0,I=0;c=(r=I<<3)+D|0,t=i[4+(y=(e=B+128|0)+r|0)>>2],i[c>>2]=i[y>>2],i[c+4>>2]=t,y=(c=8|r)+D|0,t=i[4+(c=c+e|0)>>2],i[y>>2]=i[c>>2],i[y+4>>2]=t,y=(c=16|r)+D|0,t=i[4+(c=c+e|0)>>2],i[y>>2]=i[c>>2],i[y+4>>2]=t,c=(r|=24)+D|0,e=i[4+(r=r+e|0)>>2],i[c>>2]=i[r>>2],i[c+4>>2]=e,128!=(0|(I=I+4|0)););if(!((Q=Q+1|0)>>>0<E[_+28>>2]))break}XC(B+128|0,1024),XC(B+48|0,72),I=0}s=h}if(B=I,!I){if(i[g+12>>2])for(;;){if(s=I=s-80|0,!(!(_=g+4|0)|!i[_+28>>2])){for(C[I+72|0]=0,i[I+64>>2]=p,B=0;i[I+76>>2]=0,Q=i[I+76>>2],i[I+56>>2]=i[I+72>>2],i[I+60>>2]=Q,i[I+68>>2]=B,Q=i[I+68>>2],i[I+48>>2]=i[I+64>>2],i[I+52>>2]=Q,F(_,I+48|0),(B=B+1|0)>>>0<(Q=i[_+28>>2])>>>0;);if(C[I+72|0]=1,Q){for(B=0;i[I+76>>2]=0,Q=i[I+76>>2],i[I+40>>2]=i[I+72>>2],i[I+44>>2]=Q,i[I+68>>2]=B,Q=i[I+68>>2],i[I+32>>2]=i[I+64>>2],i[I+36>>2]=Q,F(_,I+32|0),(B=B+1|0)>>>0<(Q=i[_+28>>2])>>>0;);if(C[I+72|0]=2,Q){for(B=0;i[I+76>>2]=0,Q=i[I+76>>2],i[I+24>>2]=i[I+72>>2],i[I+28>>2]=Q,i[I+68>>2]=B,Q=i[I+68>>2],i[I+16>>2]=i[I+64>>2],i[I+20>>2]=Q,F(_,I+16|0),(B=B+1|0)>>>0<(Q=i[_+28>>2])>>>0;);if(C[I+72|0]=3,Q)for(B=0;i[I+76>>2]=0,Q=i[I+76>>2],i[I+8>>2]=i[I+72>>2],i[I+12>>2]=Q,i[I+68>>2]=B,Q=i[I+68>>2],i[I>>2]=i[I+64>>2],i[I+4>>2]=Q,F(_,I),(B=B+1|0)>>>0<E[_+28>>2];);}}}if(s=I+80|0,!((p=p+1|0)>>>0<E[g+12>>2]))break}if(s=I=s-2048|0,!(!A|!(B=g+4|0))){if(p=i[B+24>>2],Ng(I+1024|0,c=(i[i[B>>2]+4>>2]+(p<<10)|0)-1024|0,1024),(y=i[B+28>>2])>>>0>=2)for(D=1;;){for(_=c+(a(D,p)<<10)|0,r=0;t=i[(h=(Q=r<<3)+(e=I+1024|0)|0)>>2],w=i[(f=Q+_|0)>>2],f=i[h+4>>2]^i[f+4>>2],i[h>>2]=t^w,i[h+4>>2]=f,f=i[(h=(t=8|Q)+e|0)>>2],w=i[(t=_+t|0)>>2],t=i[h+4>>2]^i[t+4>>2],i[h>>2]=f^w,i[h+4>>2]=t,f=i[(h=(t=16|Q)+e|0)>>2],w=i[(t=_+t|0)>>2],t=i[h+4>>2]^i[t+4>>2],i[h>>2]=f^w,i[h+4>>2]=t,h=i[(Q=(h=e)+(e=24|Q)|0)>>2],t=i[(e=_+e|0)>>2],e=i[Q+4>>2]^i[e+4>>2],i[Q>>2]=t^h,i[Q+4>>2]=e,128!=(0|(r=r+4|0)););if((0|y)==(0|(D=D+1|0)))break}_=Ng(I,I+1024|0,1024),aA(i[A>>2],i[A+4>>2],_,1024),XC(_+1024|0,1024),XC(_,1024),WI(B,i[A+56>>2])}s=I+2048|0,B=0}}return s=g+48|0,B}function z(A,I,g,B,Q){var E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0;for(E=s+-64|0,a=i[A+60>>2],_=i[A+56>>2],P=i[A+52>>2],L=i[A+48>>2],c=i[A+44>>2],t=i[A+40>>2],r=i[A+36>>2],e=i[A+32>>2],y=i[A+28>>2],h=i[A+24>>2],D=i[A+20>>2],f=i[A+16>>2],p=i[A+12>>2],w=i[A+8>>2],n=i[A+4>>2],k=i[A>>2];;){if(!Q&B>>>0>63|Q)F=g;else{if(i[E+56>>2]=0,i[E+60>>2]=0,i[E+48>>2]=0,i[E+52>>2]=0,i[E+40>>2]=0,i[E+44>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,i[E+24>>2]=0,i[E+28>>2]=0,i[E+16>>2]=0,i[E+20>>2]=0,i[E+8>>2]=0,i[E+12>>2]=0,i[E>>2]=0,i[E+4>>2]=0,N=0,B|Q)for(;C[N+E|0]=o[I+N|0],!Q&(N=N+1|0)>>>0<B>>>0|Q;);I=F=E,O=g}for(q=20,S=k,Y=n,J=w,l=p,N=f,g=D,M=h,K=y,U=e,x=r,d=t,G=a,v=_,u=P,m=L,b=c;H=N,S=Lg((N=S+N|0)^m,16),H=m=Lg(H^(U=S+U|0),12),m=Lg((R=N+m|0)^S,8),N=Lg(H^(U=m+U|0),7),G=Lg((S=K+l|0)^G,16),K=Lg((b=G+b|0)^K,12),l=Lg((J=M+J|0)^v,16),M=Lg((d=l+d|0)^M,12),v=(z=S+K|0)+N|0,j=Lg((J=M+J|0)^l,8),S=Lg(v^j,16),l=Lg((Y=g+Y|0)^u,16),g=Lg((x=l+x|0)^g,12),H=N,u=Lg((Y=g+Y|0)^l,8),H=Lg(H^(N=(X=u+x|0)+S|0),12),v=Lg(S^(l=H+v|0),8),N=Lg((x=v+N|0)^H,7),H=U,U=J,S=Lg(G^z,8),J=Lg((G=S+b|0)^K,7),u=Lg((U=U+J|0)^u,16),b=Lg((K=H+u|0)^J,12),u=Lg(u^(J=b+U|0),8),K=Lg((U=K+u|0)^b,7),b=G,G=Y,Y=Lg((d=d+j|0)^M,7),M=b+(m=Lg((G=G+Y|0)^m,16))|0,b=G,G=Lg(M^Y,12),m=Lg(m^(Y=b+G|0),8),M=Lg((b=M+m|0)^G,7),H=d,G=S,S=Lg(g^X,7),G=Lg(G^(d=S+R|0),16),R=Lg((g=H+G|0)^S,12),G=Lg(G^(S=R+d|0),8),g=Lg((d=g+G|0)^R,7),q=q-2|0;);if(q=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,R=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,z=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,j=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,X=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,H=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,W=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,V=o[I+32|0]|o[I+33|0]<<8|o[I+34|0]<<16|o[I+35|0]<<24,Z=o[I+36|0]|o[I+37|0]<<8|o[I+38|0]<<16|o[I+39|0]<<24,T=o[I+40|0]|o[I+41|0]<<8|o[I+42|0]<<16|o[I+43|0]<<24,$=o[I+44|0]|o[I+45|0]<<8|o[I+46|0]<<16|o[I+47|0]<<24,AA=o[I+48|0]|o[I+49|0]<<8|o[I+50|0]<<16|o[I+51|0]<<24,IA=o[I+52|0]|o[I+53|0]<<8|o[I+54|0]<<16|o[I+55|0]<<24,gA=o[I+56|0]|o[I+57|0]<<8|o[I+58|0]<<16|o[I+59|0]<<24,CA=o[I+60|0]|o[I+61|0]<<8|o[I+62|0]<<16|o[I+63|0]<<24,S=S+k^(o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24),C[0|F]=S,C[F+1|0]=S>>>8,C[F+2|0]=S>>>16,C[F+3|0]=S>>>24,S=G+a^CA,C[F+60|0]=S,C[F+61|0]=S>>>8,C[F+62|0]=S>>>16,C[F+63|0]=S>>>24,S=v+_^gA,C[F+56|0]=S,C[F+57|0]=S>>>8,C[F+58|0]=S>>>16,C[F+59|0]=S>>>24,S=u+P^IA,C[F+52|0]=S,C[F+53|0]=S>>>8,C[F+54|0]=S>>>16,C[F+55|0]=S>>>24,S=m+L^AA,C[F+48|0]=S,C[F+49|0]=S>>>8,C[F+50|0]=S>>>16,C[F+51|0]=S>>>24,S=b+c^$,C[F+44|0]=S,C[F+45|0]=S>>>8,C[F+46|0]=S>>>16,C[F+47|0]=S>>>24,S=d+t^T,C[F+40|0]=S,C[F+41|0]=S>>>8,C[F+42|0]=S>>>16,C[F+43|0]=S>>>24,S=x+r^Z,C[F+36|0]=S,C[F+37|0]=S>>>8,C[F+38|0]=S>>>16,C[F+39|0]=S>>>24,S=U+e^V,C[F+32|0]=S,C[F+33|0]=S>>>8,C[F+34|0]=S>>>16,C[F+35|0]=S>>>24,K=K+y^W,C[F+28|0]=K,C[F+29|0]=K>>>8,C[F+30|0]=K>>>16,C[F+31|0]=K>>>24,M=H^M+h,C[F+24|0]=M,C[F+25|0]=M>>>8,C[F+26|0]=M>>>16,C[F+27|0]=M>>>24,g=X^g+D,C[F+20|0]=g,C[F+21|0]=g>>>8,C[F+22|0]=g>>>16,C[F+23|0]=g>>>24,g=j^N+f,C[F+16|0]=g,C[F+17|0]=g>>>8,C[F+18|0]=g>>>16,C[F+19|0]=g>>>24,g=z^l+p,C[F+12|0]=g,C[F+13|0]=g>>>8,C[F+14|0]=g>>>16,C[F+15|0]=g>>>24,g=R^J+w,C[F+8|0]=g,C[F+9|0]=g>>>8,C[F+10|0]=g>>>16,C[F+11|0]=g>>>24,g=q^Y+n,C[F+4|0]=g,C[F+5|0]=g>>>8,C[F+6|0]=g>>>16,C[F+7|0]=g>>>24,P=!(L=L+1|0)+P|0,!Q&B>>>0<=64){if(!(!(B|Q)|!Q&B>>>0>63|!!(0|Q)))for(N=0;C[N+O|0]=o[F+N|0],B>>>0>(N=N+1|0)>>>0;);i[A+52>>2]=P,i[A+48>>2]=L;break}I=I- -64|0,g=F- -64|0,Q=Q-1|0,Q=(B=B+-64|0)>>>0<4294967232?Q+1|0:Q}}function j(A,I){I|=0;var g,B=0,Q=0,o=0,E=0,a=0,_=0,c=0;return s=g=s-704|0,B=80+((Q=i[72+(A|=0)>>2]>>>3&127)+A|0)|0,Q>>>0>=112?(Ng(B,35056,128-Q|0),k(A,Q=A+80|0,g,g+640|0),bg(Q,0,112)):Ng(B,35056,112-Q|0),_=(o=i[A+64>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+68>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[A+192|0]=B,C[A+193|0]=B>>>8,C[A+194|0]=B>>>16,C[A+195|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[A+196|0]=Q,C[A+197|0]=Q>>>8,C[A+198|0]=Q>>>16,C[A+199|0]=Q>>>24,_=(o=i[A+72>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+76>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[A+200|0]=B,C[A+201|0]=B>>>8,C[A+202|0]=B>>>16,C[A+203|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[A+204|0]=Q,C[A+205|0]=Q>>>8,C[A+206|0]=Q>>>16,C[A+207|0]=Q>>>24,k(A,A+80|0,g,g+640|0),_=(o=i[A>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+4>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[0|I]=B,C[I+1|0]=B>>>8,C[I+2|0]=B>>>16,C[I+3|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+4|0]=Q,C[I+5|0]=Q>>>8,C[I+6|0]=Q>>>16,C[I+7|0]=Q>>>24,_=(o=i[A+8>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+12>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[I+8|0]=B,C[I+9|0]=B>>>8,C[I+10|0]=B>>>16,C[I+11|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+12|0]=Q,C[I+13|0]=Q>>>8,C[I+14|0]=Q>>>16,C[I+15|0]=Q>>>24,_=(o=i[A+16>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+20>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[I+16|0]=B,C[I+17|0]=B>>>8,C[I+18|0]=B>>>16,C[I+19|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+20|0]=Q,C[I+21|0]=Q>>>8,C[I+22|0]=Q>>>16,C[I+23|0]=Q>>>24,_=(o=i[A+24>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+28>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[I+24|0]=B,C[I+25|0]=B>>>8,C[I+26|0]=B>>>16,C[I+27|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+28|0]=Q,C[I+29|0]=Q>>>8,C[I+30|0]=Q>>>16,C[I+31|0]=Q>>>24,_=(o=i[A+32>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+36>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[I+32|0]=B,C[I+33|0]=B>>>8,C[I+34|0]=B>>>16,C[I+35|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+36|0]=Q,C[I+37|0]=Q>>>8,C[I+38|0]=Q>>>16,C[I+39|0]=Q>>>24,_=(o=i[A+40>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+44>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[I+40|0]=B,C[I+41|0]=B>>>8,C[I+42|0]=B>>>16,C[I+43|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+44|0]=Q,C[I+45|0]=Q>>>8,C[I+46|0]=Q>>>16,C[I+47|0]=Q>>>24,_=(o=i[A+48>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,c=E<<24,E=(a=-16777216&o)>>>24|0,B=c|a<<8|-16777216&((255&(B=i[A+52>>2]))<<24|o>>>8)|16711680&((16777215&B)<<8|o>>>24)|B>>>8&65280|B>>>24,C[I+48|0]=B,C[I+49|0]=B>>>8,C[I+50|0]=B>>>16,C[I+51|0]=B>>>24,B=Q|E|_,Q=0,Q|=B,C[I+52|0]=Q,C[I+53|0]=Q>>>8,C[I+54|0]=Q>>>16,C[I+55|0]=Q>>>24,_=(o=i[A+56>>2])<<24|(65280&o)<<8,Q=(E=16711680&o)>>>8|0,B=I,c=E<<24,E=(a=-16777216&o)>>>24|0,I=c|a<<8|-16777216&((255&(I=i[A+60>>2]))<<24|o>>>8)|16711680&((16777215&I)<<8|o>>>24)|I>>>8&65280|I>>>24,C[B+56|0]=I,C[B+57|0]=I>>>8,C[B+58|0]=I>>>16,C[B+59|0]=I>>>24,I=Q|E|_,I|=Q=0,C[B+60|0]=I,C[B+61|0]=I>>>8,C[B+62|0]=I>>>16,C[B+63|0]=I>>>24,XC(g,704),XC(A,208),s=g+704|0,0}function X(A,I,g){var B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F,S,N,G=0;s=B=s-224|0,c=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,t=o[0|(G=g- -64|0)]|o[G+1|0]<<8|o[G+2|0]<<16|o[G+3|0]<<24,r=o[g+80|0]|o[g+81|0]<<8|o[g+82|0]<<16|o[g+83|0]<<24,e=o[g+32|0]|o[g+33|0]<<8|o[g+34|0]<<16|o[g+35|0]<<24,y=o[g+48|0]|o[g+49|0]<<8|o[g+50|0]<<16|o[g+51|0]<<24,Q=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,h=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,D=o[g+68|0]|o[g+69|0]<<8|o[g+70|0]<<16|o[g+71|0]<<24,f=o[g+84|0]|o[g+85|0]<<8|o[g+86|0]<<16|o[g+87|0]<<24,p=o[g+36|0]|o[g+37|0]<<8|o[g+38|0]<<16|o[g+39|0]<<24,w=o[g+52|0]|o[g+53|0]<<8|o[g+54|0]<<16|o[g+55|0]<<24,E=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,n=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,k=o[g+72|0]|o[g+73|0]<<8|o[g+74|0]<<16|o[g+75|0]<<24,F=o[g+88|0]|o[g+89|0]<<8|o[g+90|0]<<16|o[g+91|0]<<24,S=o[g+40|0]|o[g+41|0]<<8|o[g+42|0]<<16|o[g+43|0]<<24,N=o[g+56|0]|o[g+57|0]<<8|o[g+58|0]<<16|o[g+59|0]<<24,a=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=(_=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24)^(o[g+44|0]|o[g+45|0]<<8|o[g+46|0]<<16|o[g+47|0]<<24)&(o[g+60|0]|o[g+61|0]<<8|o[g+62|0]<<16|o[g+63|0]<<24)^(o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24)^(o[g+92|0]|o[g+93|0]<<8|o[g+94|0]<<16|o[g+95|0]<<24)^(o[g+76|0]|o[g+77|0]<<8|o[g+78|0]<<16|o[g+79|0]<<24),C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=S&N^k^F^n^E,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=p&w^D^f^h^Q,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=e&y^c^t^r^a,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,A=i[g+92>>2],i[B+216>>2]=i[g+88>>2],i[B+220>>2]=A,A=i[g+84>>2],i[B+208>>2]=i[g+80>>2],i[B+212>>2]=A,A=i[g+76>>2],i[B+184>>2]=i[g+72>>2],i[B+188>>2]=A,A=i[G+4>>2],i[B+176>>2]=i[G>>2],i[B+180>>2]=A,A=i[g+92>>2],i[B+168>>2]=i[g+88>>2],i[B+172>>2]=A,A=i[g+84>>2],i[B+160>>2]=i[g+80>>2],i[B+164>>2]=A,AI(A=B+192|0,B+176|0,B+160|0),I=i[B+204>>2],i[g+88>>2]=i[B+200>>2],i[g+92>>2]=I,I=i[B+196>>2],i[g+80>>2]=i[B+192>>2],i[g+84>>2]=I,I=i[g+60>>2],i[B+152>>2]=i[g+56>>2],i[B+156>>2]=I,I=i[g+52>>2],i[B+144>>2]=i[g+48>>2],i[B+148>>2]=I,I=i[g+76>>2],i[B+136>>2]=i[g+72>>2],i[B+140>>2]=I,I=i[G+4>>2],i[B+128>>2]=i[G>>2],i[B+132>>2]=I,AI(A,B+144|0,B+128|0),I=i[B+204>>2],i[g+72>>2]=i[B+200>>2],i[g+76>>2]=I,I=i[B+196>>2],i[G>>2]=i[B+192>>2],i[G+4>>2]=I,I=i[g+44>>2],i[B+120>>2]=i[g+40>>2],i[B+124>>2]=I,I=i[g+36>>2],i[B+112>>2]=i[g+32>>2],i[B+116>>2]=I,I=i[g+60>>2],i[B+104>>2]=i[g+56>>2],i[B+108>>2]=I,I=i[g+52>>2],i[B+96>>2]=i[g+48>>2],i[B+100>>2]=I,AI(A,B+112|0,B+96|0),I=i[B+204>>2],i[g+56>>2]=i[B+200>>2],i[g+60>>2]=I,I=i[B+196>>2],i[g+48>>2]=i[B+192>>2],i[g+52>>2]=I,I=i[g+28>>2],i[B+88>>2]=i[g+24>>2],i[B+92>>2]=I,I=i[g+20>>2],i[B+80>>2]=i[g+16>>2],i[B+84>>2]=I,I=i[g+44>>2],i[B+72>>2]=i[g+40>>2],i[B+76>>2]=I,I=i[g+36>>2],i[B+64>>2]=i[g+32>>2],i[B+68>>2]=I,AI(A,B+80|0,B- -64|0),I=i[B+204>>2],i[g+40>>2]=i[B+200>>2],i[g+44>>2]=I,I=i[B+196>>2],i[g+32>>2]=i[B+192>>2],i[g+36>>2]=I,I=i[g+12>>2],i[B+56>>2]=i[g+8>>2],i[B+60>>2]=I,I=i[g+4>>2],i[B+48>>2]=i[g>>2],i[B+52>>2]=I,I=i[g+28>>2],i[B+40>>2]=i[g+24>>2],i[B+44>>2]=I,I=i[g+20>>2],i[B+32>>2]=i[g+16>>2],i[B+36>>2]=I,AI(A,B+48|0,B+32|0),I=i[B+204>>2],i[g+24>>2]=i[B+200>>2],i[g+28>>2]=I,I=i[B+196>>2],i[g+16>>2]=i[B+192>>2],i[g+20>>2]=I,I=i[B+220>>2],i[B+24>>2]=i[B+216>>2],i[B+28>>2]=I,I=i[B+212>>2],i[B+16>>2]=i[B+208>>2],i[B+20>>2]=I,I=i[g+12>>2],i[B+8>>2]=i[g+8>>2],i[B+12>>2]=I,I=i[g+4>>2],i[B>>2]=i[g>>2],i[B+4>>2]=I,AI(A,B+16|0,B),A=i[B+192>>2],I=i[B+196>>2],G=i[B+200>>2],i[g+12>>2]=_^i[B+204>>2],i[g+8>>2]=G^E,i[g+4>>2]=I^Q,i[g>>2]=A^a,s=B+224|0}function O(A,I,g){var B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n=0,k=0,F=0,S=0,N=0;s=B=s-224|0,F=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,k=o[0|(n=g- -64|0)]|o[n+1|0]<<8|o[n+2|0]<<16|o[n+3|0]<<24,Q=o[g+80|0]|o[g+81|0]<<8|o[g+82|0]<<16|o[g+83|0]<<24,E=o[g+32|0]|o[g+33|0]<<8|o[g+34|0]<<16|o[g+35|0]<<24,a=o[g+48|0]|o[g+49|0]<<8|o[g+50|0]<<16|o[g+51|0]<<24,S=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,_=o[g+68|0]|o[g+69|0]<<8|o[g+70|0]<<16|o[g+71|0]<<24,c=o[g+84|0]|o[g+85|0]<<8|o[g+86|0]<<16|o[g+87|0]<<24,t=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,r=o[g+36|0]|o[g+37|0]<<8|o[g+38|0]<<16|o[g+39|0]<<24,e=o[g+52|0]|o[g+53|0]<<8|o[g+54|0]<<16|o[g+55|0]<<24,N=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,y=o[g+72|0]|o[g+73|0]<<8|o[g+74|0]<<16|o[g+75|0]<<24,h=o[g+88|0]|o[g+89|0]<<8|o[g+90|0]<<16|o[g+91|0]<<24,D=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,f=o[g+40|0]|o[g+41|0]<<8|o[g+42|0]<<16|o[g+43|0]<<24,p=o[g+56|0]|o[g+57|0]<<8|o[g+58|0]<<16|o[g+59|0]<<24,w=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=(o[g+44|0]|o[g+45|0]<<8|o[g+46|0]<<16|o[g+47|0]<<24)&(o[g+60|0]|o[g+61|0]<<8|o[g+62|0]<<16|o[g+63|0]<<24)^(o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24)^(o[g+76|0]|o[g+77|0]<<8|o[g+78|0]<<16|o[g+79|0]<<24)^(o[g+92|0]|o[g+93|0]<<8|o[g+94|0]<<16|o[g+95|0]<<24)^(o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24),C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,N=f&p^N^h^D^y,C[A+8|0]=N,C[A+9|0]=N>>>8,C[A+10|0]=N>>>16,C[A+11|0]=N>>>24,S=r&e^S^c^t^_,C[A+4|0]=S,C[A+5|0]=S>>>8,C[A+6|0]=S>>>16,C[A+7|0]=S>>>24,F=E&a^F^k^Q^w,C[0|A]=F,C[A+1|0]=F>>>8,C[A+2|0]=F>>>16,C[A+3|0]=F>>>24,A=i[g+92>>2],i[B+216>>2]=i[g+88>>2],i[B+220>>2]=A,A=i[g+84>>2],i[B+208>>2]=i[g+80>>2],i[B+212>>2]=A,A=i[g+76>>2],i[B+184>>2]=i[g+72>>2],i[B+188>>2]=A,A=i[n+4>>2],i[B+176>>2]=i[n>>2],i[B+180>>2]=A,A=i[g+92>>2],i[B+168>>2]=i[g+88>>2],i[B+172>>2]=A,A=i[g+84>>2],i[B+160>>2]=i[g+80>>2],i[B+164>>2]=A,AI(A=B+192|0,B+176|0,B+160|0),k=i[B+204>>2],i[g+88>>2]=i[B+200>>2],i[g+92>>2]=k,k=i[B+196>>2],i[g+80>>2]=i[B+192>>2],i[g+84>>2]=k,k=i[g+60>>2],i[B+152>>2]=i[g+56>>2],i[B+156>>2]=k,k=i[g+52>>2],i[B+144>>2]=i[g+48>>2],i[B+148>>2]=k,k=i[g+76>>2],i[B+136>>2]=i[g+72>>2],i[B+140>>2]=k,k=i[n+4>>2],i[B+128>>2]=i[n>>2],i[B+132>>2]=k,AI(A,B+144|0,B+128|0),k=i[B+204>>2],i[g+72>>2]=i[B+200>>2],i[g+76>>2]=k,k=i[B+196>>2],i[n>>2]=i[B+192>>2],i[n+4>>2]=k,n=i[g+44>>2],i[B+120>>2]=i[g+40>>2],i[B+124>>2]=n,n=i[g+36>>2],i[B+112>>2]=i[g+32>>2],i[B+116>>2]=n,n=i[g+60>>2],i[B+104>>2]=i[g+56>>2],i[B+108>>2]=n,n=i[g+52>>2],i[B+96>>2]=i[g+48>>2],i[B+100>>2]=n,AI(A,B+112|0,B+96|0),n=i[B+204>>2],i[g+56>>2]=i[B+200>>2],i[g+60>>2]=n,n=i[B+196>>2],i[g+48>>2]=i[B+192>>2],i[g+52>>2]=n,n=i[g+28>>2],i[B+88>>2]=i[g+24>>2],i[B+92>>2]=n,n=i[g+20>>2],i[B+80>>2]=i[g+16>>2],i[B+84>>2]=n,n=i[g+44>>2],i[B+72>>2]=i[g+40>>2],i[B+76>>2]=n,n=i[g+36>>2],i[B+64>>2]=i[g+32>>2],i[B+68>>2]=n,AI(A,B+80|0,B- -64|0),n=i[B+204>>2],i[g+40>>2]=i[B+200>>2],i[g+44>>2]=n,n=i[B+196>>2],i[g+32>>2]=i[B+192>>2],i[g+36>>2]=n,n=i[g+12>>2],i[B+56>>2]=i[g+8>>2],i[B+60>>2]=n,n=i[g+4>>2],i[B+48>>2]=i[g>>2],i[B+52>>2]=n,n=i[g+28>>2],i[B+40>>2]=i[g+24>>2],i[B+44>>2]=n,n=i[g+20>>2],i[B+32>>2]=i[g+16>>2],i[B+36>>2]=n,AI(A,B+48|0,B+32|0),n=i[B+204>>2],i[g+24>>2]=i[B+200>>2],i[g+28>>2]=n,n=i[B+196>>2],i[g+16>>2]=i[B+192>>2],i[g+20>>2]=n,n=i[B+220>>2],i[B+24>>2]=i[B+216>>2],i[B+28>>2]=n,n=i[B+212>>2],i[B+16>>2]=i[B+208>>2],i[B+20>>2]=n,n=i[g+12>>2],i[B+8>>2]=i[g+8>>2],i[B+12>>2]=n,n=i[g+4>>2],i[B>>2]=i[g>>2],i[B+4>>2]=n,AI(A,B+16|0,B),A=i[B+192>>2],n=i[B+196>>2],k=i[B+200>>2],i[g+12>>2]=I^i[B+204>>2],i[g+8>>2]=k^N,i[g+4>>2]=n^S,i[g>>2]=A^F,s=B+224|0}function W(A,I){var g,B,Q,E,a,_,c,t,r,e,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0;s=g=s-800|0,y=i[I+44>>2],D=i[I+84>>2],f=i[I+48>>2],p=i[I+88>>2],w=i[I+52>>2],h=i[I+92>>2],S=i[I+56>>2],n=i[I+96>>2],K=i[I+60>>2],N=i[I+100>>2],H=i[(U=I- -64|0)>>2],Y=i[I+104>>2],J=i[I+68>>2],d=i[I+108>>2],m=i[I+72>>2],l=i[I+112>>2],u=i[I+40>>2],x=i[I+80>>2],k=i[I+76>>2],F=i[I+116>>2],i[g+324>>2]=k+F,i[g+320>>2]=m+l,i[g+316>>2]=J+d,i[g+312>>2]=H+Y,i[g+308>>2]=N+K,i[g+304>>2]=n+S,i[g+300>>2]=h+w,i[g+296>>2]=f+p,i[g+292>>2]=y+D,i[g+288>>2]=u+x,i[g+36>>2]=F-k,i[g+32>>2]=l-m,i[g+28>>2]=d-J,i[g+24>>2]=Y-H,i[g+20>>2]=N-K,i[g+16>>2]=n-S,i[g+12>>2]=h-w,i[g+8>>2]=p-f,i[g+4>>2]=D-y,i[g>>2]=x-u,b(y=g+288|0,y,g),b(f=g+240|0,I,w=I+40|0),R(D=g+192|0,f),b(D,y,D),i[g+452>>2]=0,i[g+456>>2]=0,i[g+460>>2]=0,i[g+464>>2]=0,i[g+468>>2]=0,i[g+436>>2]=0,i[g+440>>2]=0,i[g+444>>2]=0,i[g+448>>2]=0,i[g+432>>2]=1,GA(p=g+576|0,g+432|0,D),b(D=g+720|0,p,y),b(K=g+672|0,p,f),b(n=g+48|0,D,K),b(n,n,y=I+120|0),b(g+528|0,I,1632),b(g+480|0,w,1632),b(g+624|0,D,2944),b(D=g+336|0,y,n),QI(S=g+384|0,D),h=o[g+384|0],D=i[I+36>>2],y=i[I+32>>2],i[g+176>>2]=y,i[g+180>>2]=D,f=i[I+28>>2],D=i[I+24>>2],i[g+168>>2]=D,i[g+172>>2]=f,p=i[I+20>>2],f=i[I+16>>2],i[g+160>>2]=f,i[g+164>>2]=p,w=i[I+12>>2],p=i[I+8>>2],i[g+152>>2]=p,i[g+156>>2]=w,N=i[I+4>>2],w=i[I>>2],i[g+144>>2]=w,i[g+148>>2]=N,N=i[I+44>>2],H=i[I+48>>2],Y=i[I+52>>2],J=i[I+56>>2],d=i[I+60>>2],m=i[U>>2],l=i[I+68>>2],u=i[I+72>>2],x=i[I+76>>2],U=i[I+40>>2],P=i[g+484>>2],k=i[g+148>>2],q=i[g+492>>2],F=i[g+156>>2],z=i[g+500>>2],G=i[g+164>>2],j=i[g+508>>2],M=i[g+172>>2],X=i[g+516>>2],v=i[g+180>>2],O=i[g+480>>2],W=i[g+488>>2],V=i[g+496>>2],Z=i[g+504>>2],h=0-(1&h)|0,i[g+176>>2]=y^h&(y^i[g+512>>2]),i[g+168>>2]=D^h&(D^Z),i[g+160>>2]=f^h&(f^V),i[g+152>>2]=p^h&(p^W),i[g+144>>2]=w^h&(w^O),i[g+180>>2]=v^h&(v^X),i[g+172>>2]=M^h&(M^j),i[g+164>>2]=G^h&(G^z),i[g+156>>2]=F^h&(F^q),i[g+148>>2]=k^h&(k^P),v=i[g+528>>2],P=i[g+532>>2],q=i[g+536>>2],z=i[g+540>>2],j=i[g+544>>2],X=i[g+548>>2],O=i[g+552>>2],W=i[g+556>>2],V=i[g+560>>2],Z=i[g+564>>2],y=i[g+672>>2],B=i[g+624>>2],D=i[g+676>>2],Q=i[g+628>>2],f=i[g+680>>2],E=i[g+632>>2],p=i[g+684>>2],a=i[g+636>>2],w=i[g+688>>2],_=i[g+640>>2],k=i[g+692>>2],c=i[g+644>>2],F=i[g+696>>2],t=i[g+648>>2],G=i[g+700>>2],r=i[g+652>>2],M=i[g+704>>2],e=i[g+656>>2],L=i[g+708>>2],i[g+708>>2]=L^h&(i[g+660>>2]^L),i[g+704>>2]=M^h&(M^e),i[g+700>>2]=G^h&(G^r),i[g+696>>2]=F^h&(F^t),i[g+692>>2]=k^h&(k^c),i[g+688>>2]=w^h&(w^_),i[g+684>>2]=p^h&(p^a),i[g+680>>2]=f^h&(f^E),i[g+676>>2]=D^h&(D^Q),i[g+672>>2]=y^h&(y^B),b(y=g+96|0,g+144|0,n),QI(S,y),D=i[I+84>>2],f=i[I+88>>2],p=i[I+92>>2],w=i[I+96>>2],n=i[I+100>>2],k=i[I+104>>2],F=i[I+108>>2],G=i[I+112>>2],M=i[I+80>>2],L=i[I+116>>2],I=0-(1&C[g+384|0])|0,y=x^h&(x^Z),i[g+420>>2]=L-(I&(0-y^y)^y),y=u^h&(u^V),i[g+416>>2]=G-(I&(0-y^y)^y),y=l^h&(l^W),i[g+412>>2]=F-(I&(0-y^y)^y),y=m^h&(m^O),i[g+408>>2]=k-(I&(0-y^y)^y),y=d^h&(d^X),i[g+404>>2]=n-(I&(0-y^y)^y),y=J^h&(J^j),i[g+400>>2]=w-(I&(0-y^y)^y),y=Y^h&(Y^z),i[g+396>>2]=p-(I&(0-y^y)^y),y=H^h&(H^q),i[g+392>>2]=f-(I&(0-y^y)^y),y=N^h&(N^P),i[g+388>>2]=D-(I&(0-y^y)^y),y=I,I=U^h&(U^v),i[g+384>>2]=M-(y&(0-I^I)^I),b(S,K,S),QI(g+768|0,S),I=0-(1&C[g+768|0])|0,y=i[g+384>>2],i[g+384>>2]=I&(0-y^y)^y,y=i[g+388>>2],i[g+388>>2]=I&(0-y^y)^y,y=i[g+392>>2],i[g+392>>2]=I&(0-y^y)^y,y=i[g+396>>2],i[g+396>>2]=I&(0-y^y)^y,y=i[g+400>>2],i[g+400>>2]=I&(0-y^y)^y,y=i[g+404>>2],i[g+404>>2]=I&(0-y^y)^y,y=i[g+408>>2],i[g+408>>2]=I&(0-y^y)^y,y=i[g+412>>2],i[g+412>>2]=I&(0-y^y)^y,y=i[g+416>>2],i[g+416>>2]=I&(0-y^y)^y,y=I,I=i[g+420>>2],i[g+420>>2]=y&(0-I^I)^I,QI(A,S),s=g+800|0}function V(A,I){var g,C,B,Q,E,a,_,c,t,r=0,e=0;s=g=s-288|0,C=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,B=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,Q=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,E=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,a=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,_=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,c=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,t=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,A=i[I+124>>2],i[g+280>>2]=i[I+120>>2],i[g+284>>2]=A,A=i[I+116>>2],i[g+272>>2]=i[I+112>>2],i[g+276>>2]=A,A=i[I+108>>2],i[g+248>>2]=i[I+104>>2],i[g+252>>2]=A,A=i[I+100>>2],i[g+240>>2]=i[I+96>>2],i[g+244>>2]=A,A=i[I+124>>2],i[g+232>>2]=i[I+120>>2],i[g+236>>2]=A,A=i[I+116>>2],i[g+224>>2]=i[I+112>>2],i[g+228>>2]=A,AI(e=g+256|0,g+240|0,g+224|0),A=i[g+268>>2],i[I+120>>2]=i[g+264>>2],i[I+124>>2]=A,A=i[g+260>>2],i[I+112>>2]=i[g+256>>2],i[I+116>>2]=A,A=i[I+92>>2],i[g+216>>2]=i[I+88>>2],i[g+220>>2]=A,A=i[I+84>>2],i[g+208>>2]=i[I+80>>2],i[g+212>>2]=A,A=i[I+108>>2],i[g+200>>2]=i[I+104>>2],i[g+204>>2]=A,A=i[I+100>>2],i[g+192>>2]=i[I+96>>2],i[g+196>>2]=A,AI(e,g+208|0,g+192|0),A=i[g+268>>2],i[I+104>>2]=i[g+264>>2],i[I+108>>2]=A,A=i[g+260>>2],i[I+96>>2]=i[g+256>>2],i[I+100>>2]=A,A=i[I+76>>2],i[g+184>>2]=i[I+72>>2],i[g+188>>2]=A,r=i[4+(A=I- -64|0)>>2],i[g+176>>2]=i[A>>2],i[g+180>>2]=r,r=i[I+92>>2],i[g+168>>2]=i[I+88>>2],i[g+172>>2]=r,r=i[I+84>>2],i[g+160>>2]=i[I+80>>2],i[g+164>>2]=r,AI(e,g+176|0,g+160|0),r=i[g+268>>2],i[I+88>>2]=i[g+264>>2],i[I+92>>2]=r,r=i[g+260>>2],i[I+80>>2]=i[g+256>>2],i[I+84>>2]=r,r=i[I+60>>2],i[g+152>>2]=i[I+56>>2],i[g+156>>2]=r,r=i[I+52>>2],i[g+144>>2]=i[I+48>>2],i[g+148>>2]=r,r=i[I+76>>2],i[g+136>>2]=i[I+72>>2],i[g+140>>2]=r,r=i[A+4>>2],i[g+128>>2]=i[A>>2],i[g+132>>2]=r,AI(e,g+144|0,g+128|0),r=i[g+268>>2],i[I+72>>2]=i[g+264>>2],i[I+76>>2]=r,r=i[g+260>>2],i[A>>2]=i[g+256>>2],i[A+4>>2]=r,r=i[I+44>>2],i[g+120>>2]=i[I+40>>2],i[g+124>>2]=r,r=i[I+36>>2],i[g+112>>2]=i[I+32>>2],i[g+116>>2]=r,r=i[I+60>>2],i[g+104>>2]=i[I+56>>2],i[g+108>>2]=r,r=i[I+52>>2],i[g+96>>2]=i[I+48>>2],i[g+100>>2]=r,AI(e,g+112|0,g+96|0),r=i[g+268>>2],i[I+56>>2]=i[g+264>>2],i[I+60>>2]=r,r=i[g+260>>2],i[I+48>>2]=i[g+256>>2],i[I+52>>2]=r,r=i[I+28>>2],i[g+88>>2]=i[I+24>>2],i[g+92>>2]=r,r=i[I+20>>2],i[g+80>>2]=i[I+16>>2],i[g+84>>2]=r,r=i[I+44>>2],i[g+72>>2]=i[I+40>>2],i[g+76>>2]=r,r=i[I+36>>2],i[g+64>>2]=i[I+32>>2],i[g+68>>2]=r,AI(e,g+80|0,g- -64|0),r=i[g+268>>2],i[I+40>>2]=i[g+264>>2],i[I+44>>2]=r,r=i[g+260>>2],i[I+32>>2]=i[g+256>>2],i[I+36>>2]=r,r=i[I+12>>2],i[g+56>>2]=i[I+8>>2],i[g+60>>2]=r,r=i[I+4>>2],i[g+48>>2]=i[I>>2],i[g+52>>2]=r,r=i[I+28>>2],i[g+40>>2]=i[I+24>>2],i[g+44>>2]=r,r=i[I+20>>2],i[g+32>>2]=i[I+16>>2],i[g+36>>2]=r,AI(e,g+48|0,g+32|0),r=i[g+268>>2],i[I+24>>2]=i[g+264>>2],i[I+28>>2]=r,r=i[g+260>>2],i[I+16>>2]=i[g+256>>2],i[I+20>>2]=r,r=i[g+284>>2],i[g+24>>2]=i[g+280>>2],i[g+28>>2]=r,r=i[g+276>>2],i[g+16>>2]=i[g+272>>2],i[g+20>>2]=r,r=i[I+12>>2],i[g+8>>2]=i[I+8>>2],i[g+12>>2]=r,r=i[I+4>>2],i[g>>2]=i[I>>2],i[g+4>>2]=r,AI(e,g+16|0,g),e=i[g+268>>2],i[I+8>>2]=i[g+264>>2],i[I+12>>2]=e,e=i[g+260>>2],i[I>>2]=i[g+256>>2],i[I+4>>2]=e,i[I+12>>2]=(o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24)^c,i[I+8>>2]=(o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24)^_,i[I+4>>2]=(o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24)^a,i[I>>2]=(o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24)^t,i[A>>2]=(o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24)^E,i[I+68>>2]=(o[I+68|0]|o[I+69|0]<<8|o[I+70|0]<<16|o[I+71|0]<<24)^Q,i[I+72>>2]=(o[I+72|0]|o[I+73|0]<<8|o[I+74|0]<<16|o[I+75|0]<<24)^B,i[I+76>>2]=(o[I+76|0]|o[I+77|0]<<8|o[I+78|0]<<16|o[I+79|0]<<24)^C,s=g+288|0}function Z(A,I,g,C){var B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k=0,F=0,S=0,N=0;s=B=s-240|0,i[B+200>>2]=0,i[B+204>>2]=0,i[B+192>>2]=0,i[B+196>>2]=0,Ng(F=B+192|0,I,g),S=o[C+16|0]|o[C+17|0]<<8|o[C+18|0]<<16|o[C+19|0]<<24,N=o[0|(I=C- -64|0)]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,k=o[C+80|0]|o[C+81|0]<<8|o[C+82|0]<<16|o[C+83|0]<<24,Q=o[C+32|0]|o[C+33|0]<<8|o[C+34|0]<<16|o[C+35|0]<<24,E=o[C+48|0]|o[C+49|0]<<8|o[C+50|0]<<16|o[C+51|0]<<24,a=o[C+20|0]|o[C+21|0]<<8|o[C+22|0]<<16|o[C+23|0]<<24,_=o[C+68|0]|o[C+69|0]<<8|o[C+70|0]<<16|o[C+71|0]<<24,c=o[C+84|0]|o[C+85|0]<<8|o[C+86|0]<<16|o[C+87|0]<<24,t=o[C+36|0]|o[C+37|0]<<8|o[C+38|0]<<16|o[C+39|0]<<24,r=o[C+52|0]|o[C+53|0]<<8|o[C+54|0]<<16|o[C+55|0]<<24,e=o[C+24|0]|o[C+25|0]<<8|o[C+26|0]<<16|o[C+27|0]<<24,y=o[C+72|0]|o[C+73|0]<<8|o[C+74|0]<<16|o[C+75|0]<<24,h=o[C+88|0]|o[C+89|0]<<8|o[C+90|0]<<16|o[C+91|0]<<24,D=o[C+40|0]|o[C+41|0]<<8|o[C+42|0]<<16|o[C+43|0]<<24,f=o[C+56|0]|o[C+57|0]<<8|o[C+58|0]<<16|o[C+59|0]<<24,p=i[B+192>>2],w=i[B+196>>2],n=i[B+200>>2],i[B+204>>2]=(o[C+44|0]|o[C+45|0]<<8|o[C+46|0]<<16|o[C+47|0]<<24)&(o[C+60|0]|o[C+61|0]<<8|o[C+62|0]<<16|o[C+63|0]<<24)^(o[C+28|0]|o[C+29|0]<<8|o[C+30|0]<<16|o[C+31|0]<<24)^(o[C+76|0]|o[C+77|0]<<8|o[C+78|0]<<16|o[C+79|0]<<24)^i[B+204>>2]^(o[C+92|0]|o[C+93|0]<<8|o[C+94|0]<<16|o[C+95|0]<<24),i[B+200>>2]=D&f^h^n^y^e,i[B+196>>2]=t&r^c^w^_^a,i[B+192>>2]=Q&E^S^N^k^p,bg(g+F|0,0,16-g|0),Ng(A,F,g),g=i[B+192>>2],F=i[B+196>>2],S=i[B+200>>2],N=i[B+204>>2],A=i[C+92>>2],i[B+232>>2]=i[C+88>>2],i[B+236>>2]=A,A=i[C+84>>2],i[B+224>>2]=i[C+80>>2],i[B+228>>2]=A,A=i[C+76>>2],i[B+184>>2]=i[C+72>>2],i[B+188>>2]=A,A=i[I+4>>2],i[B+176>>2]=i[I>>2],i[B+180>>2]=A,A=i[C+92>>2],i[B+168>>2]=i[C+88>>2],i[B+172>>2]=A,A=i[C+84>>2],i[B+160>>2]=i[C+80>>2],i[B+164>>2]=A,AI(A=B+208|0,B+176|0,B+160|0),k=i[B+220>>2],i[C+88>>2]=i[B+216>>2],i[C+92>>2]=k,k=i[B+212>>2],i[C+80>>2]=i[B+208>>2],i[C+84>>2]=k,k=i[C+60>>2],i[B+152>>2]=i[C+56>>2],i[B+156>>2]=k,k=i[C+52>>2],i[B+144>>2]=i[C+48>>2],i[B+148>>2]=k,k=i[C+76>>2],i[B+136>>2]=i[C+72>>2],i[B+140>>2]=k,k=i[I+4>>2],i[B+128>>2]=i[I>>2],i[B+132>>2]=k,AI(A,B+144|0,B+128|0),k=i[B+220>>2],i[C+72>>2]=i[B+216>>2],i[C+76>>2]=k,k=i[B+212>>2],i[I>>2]=i[B+208>>2],i[I+4>>2]=k,I=i[C+44>>2],i[B+120>>2]=i[C+40>>2],i[B+124>>2]=I,I=i[C+36>>2],i[B+112>>2]=i[C+32>>2],i[B+116>>2]=I,I=i[C+60>>2],i[B+104>>2]=i[C+56>>2],i[B+108>>2]=I,I=i[C+52>>2],i[B+96>>2]=i[C+48>>2],i[B+100>>2]=I,AI(A,B+112|0,B+96|0),I=i[B+220>>2],i[C+56>>2]=i[B+216>>2],i[C+60>>2]=I,I=i[B+212>>2],i[C+48>>2]=i[B+208>>2],i[C+52>>2]=I,I=i[C+28>>2],i[B+88>>2]=i[C+24>>2],i[B+92>>2]=I,I=i[C+20>>2],i[B+80>>2]=i[C+16>>2],i[B+84>>2]=I,I=i[C+44>>2],i[B+72>>2]=i[C+40>>2],i[B+76>>2]=I,I=i[C+36>>2],i[B+64>>2]=i[C+32>>2],i[B+68>>2]=I,AI(A,B+80|0,B- -64|0),I=i[B+220>>2],i[C+40>>2]=i[B+216>>2],i[C+44>>2]=I,I=i[B+212>>2],i[C+32>>2]=i[B+208>>2],i[C+36>>2]=I,I=i[C+12>>2],i[B+56>>2]=i[C+8>>2],i[B+60>>2]=I,I=i[C+4>>2],i[B+48>>2]=i[C>>2],i[B+52>>2]=I,I=i[C+28>>2],i[B+40>>2]=i[C+24>>2],i[B+44>>2]=I,I=i[C+20>>2],i[B+32>>2]=i[C+16>>2],i[B+36>>2]=I,AI(A,B+48|0,B+32|0),I=i[B+220>>2],i[C+24>>2]=i[B+216>>2],i[C+28>>2]=I,I=i[B+212>>2],i[C+16>>2]=i[B+208>>2],i[C+20>>2]=I,I=i[B+236>>2],i[B+24>>2]=i[B+232>>2],i[B+28>>2]=I,I=i[B+228>>2],i[B+16>>2]=i[B+224>>2],i[B+20>>2]=I,I=i[C+12>>2],i[B+8>>2]=i[C+8>>2],i[B+12>>2]=I,I=i[C+4>>2],i[B>>2]=i[C>>2],i[B+4>>2]=I,AI(A,B+16|0,B),A=i[B+208>>2],I=i[B+212>>2],k=i[B+216>>2],i[C+12>>2]=N^i[B+220>>2],i[C+8>>2]=k^S,i[C+4>>2]=I^F,i[C>>2]=A^g,s=B+240|0}function T(A,I,g,B,Q){A|=0,I|=0,g|=0,B|=0;var i=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,p=0,w=0,n=0,k=0;if(a=1886610805^(B=o[0|(Q|=0)]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24),E=1936682341^(i=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24),c=1852142177^B,_=1819895653^i,i=1852075885^(B=o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24),Q=1685025377^(r=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24),t=2037671283^B,r^=1952801890,(0|(h=(I+g|0)-(y=7&g)|0))!=(0|I))for(;t=c=c+(B=t^(w=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24))|0,_=_+(r^=n=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24)|0,_=B>>>0>c>>>0?_+1|0:_,E=Q+E|0,E=(s=a)>>>0>(a=i+a|0)>>>0?E+1|0:E,Q=c+(i=UI(i,Q,13)^a)|0,c=_+(e=f^E)|0,e=UI(i,e,17)^Q,D=UI(e,c=(s=Q>>>0<i>>>0?c+1|0:c)^f,13),p=f,B=UI(B,r,16),i=_^f,_=B^t,a=UI(a,E,32),t=c,c=f+i|0,t=1+(a=t+(E=(B=_+a|0)>>>0<a>>>0?c+1|0:c)|0)|0,c=a,c=(a=B+e|0)>>>0<B>>>0?t:c,D=UI(t=a^D,r=c^p,17),p=f,i=UI(_,i,21),E^=f,k=B^i,Q=UI(Q,s,32),i=f+E|0,Q=r+(s=(B=k+Q|0)>>>0<Q>>>0?i+1|0:i)|0,i=(_=B+t|0)^D,Q=(e=_>>>0<B>>>0?Q+1|0:Q)^p,E=UI(k,E,16),r=t=s^f,E=UI(B^=E,t,21),s=f,t=(B=(a=UI(a,c,32))+B|0)^E,c=f+r|0,r=(E=B>>>0<a>>>0?c+1|0:c)^s,c=UI(_,e,32),_=f,a=B^w,E^=n,(0|h)!=(0|(I=I+8|0)););switch(g<<=24,B=0,y-1|0){case 6:g|=o[I+6|0]<<16;case 5:g|=o[I+5|0]<<8;case 4:g|=o[I+4|0];case 3:e=(B=o[I+3|0])>>>8|0,B<<=24,g|=e;case 2:B|=(e=o[I+2|0])<<16,g|=y=e>>>16|0;case 1:B|=(e=o[I+1|0])<<8,g|=y=e>>>24|0;case 0:B=o[0|I]|B}return r=UI(I=B^t,t=g^r,16),_=_+t|0,c=(I=I+c|0)>>>0<c>>>0?_+1|0:_,r=UI(_=I^r,t=c^f,21),e=f,s=1+(E=Q+E|0)|0,y=E,y=a=a>>>0>(E=i+a|0)>>>0?s:y,h=UI(E,a,32),t=f+t|0,e=UI(_=r^(a=_+h|0),r=e^(t=a>>>0<h>>>0?t+1|0:t),16),h=f,Q=UI(i,Q,13)^E,i=(i=c)+(c=f^y)|0,y=UI(I=I+Q|0,E=I>>>0<Q>>>0?i+1|0:i,32),r=f+r|0,y=UI(_=e^(i=_+y|0),e=(r=i>>>0<y>>>0?r+1|0:r)^h,21),h=f,I=a+(Q=c=UI(Q,c,17)^I)|0,a=(E^=f)+t|0,t=Q=I>>>0<Q>>>0?a+1|0:a,s=y,a=_+(y=UI(I,Q,32))|0,_=f+e|0,y=UI(Q=s^a,e=(_=a>>>0<y>>>0?_+1|0:_)^h,16),h=f,s=i,E=UI(c,E,13)^I,c=(t^=f)+r|0,r=i=(I=s+(i=E)|0)>>>0<i>>>0?c+1|0:c,i=UI(I,i,32),c=e+f|0,e=(s=Q)>>>0>(Q=Q+(255^i)|0)>>>0?c+1|0:c,y=UI(c=Q^y,i=h^e,21),h=f,E=UI(E,t,17)^I,g=(t=r^f)+(g^_)|0,_=g=(I=E+(B^=a)|0)>>>0<B>>>0?g+1|0:g,g=UI(I,g,32),B=i+f|0,c=UI(a=(g=g+c|0)^y,B=(i=g>>>0<c>>>0?B+1|0:B)^h,16),r=f,E=UI(E,t,13)^I,t=e+(_^=f)|0,t=Q=(I=Q+E|0)>>>0<Q>>>0?t+1|0:t,Q=UI(I,Q,32),y=r,s=1+(B=B+f|0)|0,r=B,r=(B=Q+a|0)>>>0<a>>>0?s:r,c=UI(a=B^c,Q=y^r,21),e=f,E=UI(E,_,17),s=1+(i=i+(_=t^f)|0)|0,t=i,E=I=(y=g)>>>0>(g=g+(i=I^E)|0)>>>0?s:t,I=UI(g,I,32),Q=Q+f|0,t=(I=I+a|0)>>>0<a>>>0?Q+1|0:Q,c=UI(a=I^c,Q=t^e,16),e=f,i=UI(i,_,13),_=r+(E^=f)|0,_=g=(r=B)>>>0>(B=B+(i^=g)|0)>>>0?_+1|0:_,g=UI(B,g,32),Q=Q+f|0,r=(g=g+a|0)>>>0<a>>>0?Q+1|0:Q,c=UI(a=g^c,Q=r^e,21),e=f,i=UI(i,E,17),y=1+(_=t+(E=_^f)|0)|0,t=_,I=UI(B=I+(_=B^i)|0,i=B>>>0<I>>>0?y:t,32),Q=Q+f|0,t=(I=I+a|0)>>>0<a>>>0?Q+1|0:Q,c=UI(a=I^c,Q=t^e,16),e=f,E=UI(_,E,13),_=r+(i^=f)|0,_=g=(B=g+(E^=B)|0)>>>0<g>>>0?_+1|0:_,g=UI(B,g,32),Q=Q+f|0,a=UI((g=g+a|0)^c,(Q=g>>>0<a>>>0?Q+1|0:Q)^e,21),c=f,B=UI(E,i,17)^B,E=UI(B,i=_^f,13),i=i+t|0,I=f^(I>>>0>(B=I+B|0)>>>0?i+1:i),a=UI(B^=E,I,17)^a,i=f^c,_=1+(I=I+Q|0)|0,Q=I,I=UI(I=g+B|0,g=g>>>0>I>>>0?_:Q,32)^a^I,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,I=g^f^i,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,0}function $(A,I){var g,C,B,Q,E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,L=0;s=g=s-624|0,R(a=g+480|0,I),b(a,1632,a),c=i[g+516>>2],i[g+276>>2]=c,t=i[g+512>>2],i[g+272>>2]=t,r=i[g+508>>2],i[g+268>>2]=r,e=i[g+504>>2],i[g+264>>2]=e,y=i[g+500>>2],i[g+260>>2]=y,h=i[g+496>>2],i[g+256>>2]=h,D=i[g+492>>2],i[g+252>>2]=D,f=i[g+488>>2],i[g+248>>2]=f,p=i[g+484>>2],i[g+244>>2]=p,n=i[g+480>>2],i[g+240>>2]=n+1,b(_=g+240|0,_,33968),i[g+468>>2]=c-12055116,i[g+464>>2]=t-18696448,i[g+460>>2]=r-3247719,i[g+456>>2]=e-6275908,i[g+452>>2]=y-8787816,i[g+448>>2]=h+114729,i[g+444>>2]=D+6949391,i[g+440>>2]=f-15372611,i[g+436>>2]=p+13857413,i[g+432>>2]=n-10913610,b(w=g+192|0,a,1584),i[g+228>>2]=0-i[g+228>>2],i[g+224>>2]=0-i[g+224>>2],i[g+220>>2]=0-i[g+220>>2],i[g+216>>2]=0-i[g+216>>2],i[g+212>>2]=0-i[g+212>>2],i[g+208>>2]=0-i[g+208>>2],i[g+204>>2]=0-i[g+204>>2],i[g+200>>2]=0-i[g+200>>2],i[g+196>>2]=0-i[g+196>>2],i[g+192>>2]=~i[g+192>>2],b(w,w,g+432|0),a=GA(C=g+384|0,_,w),b(_=g+336|0,C,I),QI(B=g+576|0,_),E=o[g+576|0],Y=i[g+420>>2],_=i[g+372>>2],J=i[g+416>>2],k=i[g+368>>2],d=i[g+412>>2],F=i[g+364>>2],m=i[g+408>>2],S=i[g+360>>2],l=i[g+404>>2],N=i[g+356>>2],u=i[g+400>>2],G=i[g+352>>2],x=i[g+396>>2],M=i[g+348>>2],v=i[g+392>>2],K=i[g+344>>2],L=i[g+388>>2],U=i[g+340>>2],Q=i[g+384>>2],H=i[g+336>>2],I=a-1|0,i[g+612>>2]=I&c,i[g+608>>2]=I&t,i[g+604>>2]=I&r,i[g+600>>2]=I&e,i[g+596>>2]=I&y,i[g+592>>2]=I&h,i[g+588>>2]=I&D,i[g+584>>2]=I&f,i[g+580>>2]=I&p,i[g+576>>2]=n|0-a,H=I&(0-(H^(a=0-(1&E)|0)&(H^0-H))^Q)^Q,i[g+384>>2]=H,U=L^I&(L^0-(U^a&(U^0-U))),i[g+388>>2]=U,K=v^I&(v^0-(K^a&(K^0-K))),i[g+392>>2]=K,M=x^I&(x^0-(M^a&(M^0-M))),i[g+396>>2]=M,G=u^I&(u^0-(G^a&(G^0-G))),i[g+400>>2]=G,N=l^I&(l^0-(N^a&(N^0-N))),i[g+404>>2]=N,S=m^I&(m^0-(S^a&(S^0-S))),i[g+408>>2]=S,F=d^I&(d^0-(F^a&(F^0-F))),i[g+412>>2]=F,k=J^I&(J^0-(k^a&(k^0-k))),i[g+416>>2]=k,a=Y^I&(Y^0-(_^a&(_^0-_))),i[g+420>>2]=a,i[g+564>>2]=c,i[g+560>>2]=t,i[g+556>>2]=r,i[g+552>>2]=e,i[g+548>>2]=y,i[g+544>>2]=h,i[g+540>>2]=D,i[g+536>>2]=f,i[g+532>>2]=p,i[g+528>>2]=n-1,b(I=g+528|0,I,B),b(I,I,34016),c=i[g+192>>2],t=i[g+528>>2],r=i[g+196>>2],e=i[g+532>>2],y=i[g+200>>2],h=i[g+536>>2],D=i[g+204>>2],f=i[g+540>>2],p=i[g+208>>2],n=i[g+544>>2],_=i[g+212>>2],Y=i[g+548>>2],J=i[g+216>>2],d=i[g+552>>2],m=i[g+220>>2],l=i[g+556>>2],u=i[g+224>>2],x=i[g+560>>2],v=i[g+228>>2],L=i[g+564>>2],i[g+180>>2]=a<<1,i[g+176>>2]=k<<1,i[g+172>>2]=F<<1,i[g+168>>2]=S<<1,i[g+164>>2]=N<<1,i[g+160>>2]=G<<1,i[g+156>>2]=M<<1,i[g+152>>2]=K<<1,i[g+148>>2]=U<<1,i[g+144>>2]=H<<1,i[g+564>>2]=L-v,i[g+560>>2]=x-u,i[g+556>>2]=l-m,i[g+552>>2]=d-J,i[g+548>>2]=Y-_,i[g+544>>2]=n-p,i[g+540>>2]=f-D,i[g+536>>2]=h-y,i[g+532>>2]=e-r,i[g+528>>2]=t-c,b(a=g+144|0,a,w),b(w=g+96|0,I,34064),R(g+288|0,C),I=i[g+324>>2],i[g+84>>2]=0-I,c=i[g+320>>2],i[g+80>>2]=0-c,t=i[g+316>>2],i[g+76>>2]=0-t,r=i[g+312>>2],i[g+72>>2]=0-r,e=i[g+308>>2],i[g+68>>2]=0-e,y=i[g+304>>2],i[g+64>>2]=0-y,h=i[g+300>>2],i[g+60>>2]=0-h,D=i[g+296>>2],i[g+56>>2]=0-D,f=i[g+292>>2],i[g+52>>2]=0-f,p=i[g+288>>2],i[g+48>>2]=1-p,i[g+36>>2]=I,i[g+32>>2]=c,i[g+28>>2]=t,i[g+24>>2]=r,i[g+20>>2]=e,i[g+16>>2]=y,i[g+12>>2]=h,i[g+8>>2]=D,i[g+4>>2]=f,i[g>>2]=p+1,b(A,a,g),b(A+40|0,I=g+48|0,w),b(A+80|0,w,g),b(A+120|0,a,I),s=g+624|0}function AA(A,I,g){var B,E=0,a=0,_=0,c=0,t=0;s=B=s+-64|0;A:{if((g-65&255)>>>0>191){if(a=-1,!(o[A+80|0]|o[A+81|0]<<8|o[A+82|0]<<16|o[A+83|0]<<24|o[A+84|0]|o[A+85|0]<<8|o[A+86|0]<<16|o[A+87|0]<<24)){if((_=o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)>>>0>=129){if(c=E=o[A+68|0]|o[A+69|0]<<8|o[A+70|0]<<16|o[A+71|0]<<24,E=(_=128+(a=o[A+64|0]|o[A+65|0]<<8|o[A+66|0]<<16|o[A+67|0]<<24)|0)>>>0<128?E+1|0:E,C[A+64|0]=_,C[A+65|0]=_>>>8,C[A+66|0]=_>>>16,C[A+67|0]=_>>>24,C[A+68|0]=E,C[A+69|0]=E>>>8,C[A+70|0]=E>>>16,C[A+71|0]=E>>>24,E=o[A+76|0]|o[A+77|0]<<8|o[A+78|0]<<16|o[A+79|0]<<24,E=(t=a=-1==(0|c)&a>>>0>4294967167)>>>0>(a=a+(o[A+72|0]|o[A+73|0]<<8|o[A+74|0]<<16|o[A+75|0]<<24)|0)>>>0?E+1|0:E,C[A+72|0]=a,C[A+73|0]=a>>>8,C[A+74|0]=a>>>16,C[A+75|0]=a>>>24,C[A+76|0]=E,C[A+77|0]=E>>>8,C[A+78|0]=E>>>16,C[A+79|0]=E>>>24,p(A,E=A+96|0),a=(o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)-128|0,C[A+352|0]=a,C[A+353|0]=a>>>8,C[A+354|0]=a>>>16,C[A+355|0]=a>>>24,a>>>0>=129)break A;Ng(E,A+224|0,a),_=o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24}a=t=o[A+68|0]|o[A+69|0]<<8|o[A+70|0]<<16|o[A+71|0]<<24,a=(c=_+(E=o[A+64|0]|o[A+65|0]<<8|o[A+66|0]<<16|o[A+67|0]<<24)|0)>>>0<_>>>0?a+1|0:a,C[A+64|0]=c,C[A+65|0]=c>>>8,C[A+66|0]=c>>>16,C[A+67|0]=c>>>24,C[A+68|0]=a,C[A+69|0]=a>>>8,C[A+70|0]=a>>>16,C[A+71|0]=a>>>24,a=(0|a)==(0|t)&E>>>0>c>>>0|a>>>0<t>>>0,E=o[A+76|0]|o[A+77|0]<<8|o[A+78|0]<<16|o[A+79|0]<<24,E=(t=a)>>>0>(a=a+(o[A+72|0]|o[A+73|0]<<8|o[A+74|0]<<16|o[A+75|0]<<24)|0)>>>0?E+1|0:E,C[A+72|0]=a,C[A+73|0]=a>>>8,C[A+74|0]=a>>>16,C[A+75|0]=a>>>24,C[A+76|0]=E,C[A+77|0]=E>>>8,C[A+78|0]=E>>>16,C[A+79|0]=E>>>24,o[A+356|0]&&(C[A+88|0]=255,C[A+89|0]=255,C[A+90|0]=255,C[A+91|0]=255,C[A+92|0]=255,C[A+93|0]=255,C[A+94|0]=255,C[A+95|0]=255),C[A+80|0]=255,C[A+81|0]=255,C[A+82|0]=255,C[A+83|0]=255,C[A+84|0]=255,C[A+85|0]=255,C[A+86|0]=255,C[A+87|0]=255,bg((a=A+96|0)+_|0,0,256-_|0),p(A,a),E=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,i[B>>2]=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,i[B+4>>2]=E,E=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,i[B+8>>2]=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,i[B+12>>2]=E,E=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,i[B+16>>2]=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,i[B+20>>2]=E,E=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,i[B+24>>2]=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,i[B+28>>2]=E,E=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24,i[B+32>>2]=o[A+32|0]|o[A+33|0]<<8|o[A+34|0]<<16|o[A+35|0]<<24,i[B+36>>2]=E,E=o[A+44|0]|o[A+45|0]<<8|o[A+46|0]<<16|o[A+47|0]<<24,i[B+40>>2]=o[A+40|0]|o[A+41|0]<<8|o[A+42|0]<<16|o[A+43|0]<<24,i[B+44>>2]=E,E=o[A+52|0]|o[A+53|0]<<8|o[A+54|0]<<16|o[A+55|0]<<24,i[B+48>>2]=o[A+48|0]|o[A+49|0]<<8|o[A+50|0]<<16|o[A+51|0]<<24,i[B+52>>2]=E,E=o[A+60|0]|o[A+61|0]<<8|o[A+62|0]<<16|o[A+63|0]<<24,i[B+56>>2]=o[A+56|0]|o[A+57|0]<<8|o[A+58|0]<<16|o[A+59|0]<<24,i[B+60>>2]=E,Ng(I,B,g),XC(A,64),XC(a,256),a=0}return s=B- -64|0,a}rC(),Q()}r(1386,1234,306,1142),Q()}function IA(A,I,g){A|=0,I|=0,g|=0;var B,Q,E,a=0,_=0;s=B=s-192|0,i[B+144>>2]=0,i[B+148>>2]=0,i[B+152>>2]=0,i[B+156>>2]=0,i[B+104>>2]=0,i[B+108>>2]=0,i[B+112>>2]=0,i[B+116>>2]=0,i[B+120>>2]=0,i[B+124>>2]=0,a=i[8799],i[B+168>>2]=i[8798],i[B+172>>2]=a,a=i[8801],i[B+176>>2]=i[8800],i[B+180>>2]=a,a=i[8803],i[B+184>>2]=i[8802],i[B+188>>2]=a,i[B+128>>2]=0,i[B+132>>2]=0,i[B+136>>2]=0,i[B+140>>2]=0,i[B+96>>2]=0,i[B+100>>2]=0,a=i[8797],i[B+160>>2]=i[8796],i[B+164>>2]=a,a=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,i[B+80>>2]=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,i[B+84>>2]=a,a=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,i[B+88>>2]=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,i[B+92>>2]=a,a=o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24,i[B+64>>2]=o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24,i[B+68>>2]=a,a=o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24,i[B+72>>2]=o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24,i[B+76>>2]=a,Eg(g=B+128|0,a=B- -64|0),S(g),_=i[B+156>>2],i[B+24>>2]=i[B+152>>2],i[B+28>>2]=_,_=i[B+148>>2],i[B+16>>2]=i[B+144>>2],i[B+20>>2]=_,_=i[B+140>>2],i[B+8>>2]=i[B+136>>2],i[B+12>>2]=_,_=i[B+132>>2],i[B>>2]=i[B+128>>2],i[B+4>>2]=_,i[B+120>>2]=0,i[B+124>>2]=0,i[B+112>>2]=0,i[B+116>>2]=0,i[B+104>>2]=0,i[B+108>>2]=0,i[B+96>>2]=0,i[B+100>>2]=0,_=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[B+80>>2]=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[B+84>>2]=_,_=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[B+88>>2]=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,i[B+92>>2]=_,_=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,Q=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,E=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,i[B+56>>2]=0,i[B+60>>2]=0,i[B+48>>2]=0,i[B+52>>2]=0,i[B+40>>2]=0,i[B+44>>2]=0,i[B+64>>2]=E,i[B+68>>2]=I,i[B+72>>2]=_,i[B+76>>2]=Q,i[B+32>>2]=0,i[B+36>>2]=0,og(a,B),I=i[B+124>>2],i[B+184>>2]=i[B+120>>2],i[B+188>>2]=I,I=i[B+116>>2],i[B+176>>2]=i[B+112>>2],i[B+180>>2]=I,I=i[B+108>>2],i[B+168>>2]=i[B+104>>2],i[B+172>>2]=I,I=i[B+100>>2],i[B+160>>2]=i[B+96>>2],i[B+164>>2]=I,I=i[B+92>>2],i[B+152>>2]=i[B+88>>2],i[B+156>>2]=I,I=i[B+84>>2],i[B+144>>2]=i[B+80>>2],i[B+148>>2]=I,I=i[B+76>>2],i[B+136>>2]=i[B+72>>2],i[B+140>>2]=I,I=i[B+68>>2],i[B+128>>2]=i[B+64>>2],i[B+132>>2]=I,S(g),I=i[B+156>>2],a=i[B+152>>2],C[A+24|0]=a,C[A+25|0]=a>>>8,C[A+26|0]=a>>>16,C[A+27|0]=a>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[B+148>>2],a=i[B+144>>2],C[A+16|0]=a,C[A+17|0]=a>>>8,C[A+18|0]=a>>>16,C[A+19|0]=a>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[B+140>>2],a=i[B+136>>2],C[A+8|0]=a,C[A+9|0]=a>>>8,C[A+10|0]=a>>>16,C[A+11|0]=a>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[B+132>>2],a=i[B+128>>2],C[0|A]=a,C[A+1|0]=a>>>8,C[A+2|0]=a>>>16,C[A+3|0]=a>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,XC(g,64),s=B+192|0}function gA(A){var I,g,B,Q,o,E,_,c,t,r,e=0,y=0,h=0,D=0,f=0;for(s=I=s-2048|0,$A(D=I+640|0,A),e=i[A+36>>2],i[I+352>>2]=i[A+32>>2],i[I+356>>2]=e,e=i[A+28>>2],i[I+344>>2]=i[A+24>>2],i[I+348>>2]=e,e=i[A+20>>2],i[I+336>>2]=i[A+16>>2],i[I+340>>2]=e,e=i[A+12>>2],i[I+328>>2]=i[A+8>>2],i[I+332>>2]=e,e=i[A+4>>2],i[I+320>>2]=i[A>>2],i[I+324>>2]=e,e=i[A+52>>2],i[I+368>>2]=i[A+48>>2],i[I+372>>2]=e,e=i[A+60>>2],i[I+376>>2]=i[A+56>>2],i[I+380>>2]=e,e=i[4+(h=A- -64|0)>>2],i[I+384>>2]=i[h>>2],i[I+388>>2]=e,e=i[A+76>>2],i[I+392>>2]=i[A+72>>2],i[I+396>>2]=e,e=i[A+44>>2],i[I+360>>2]=i[A+40>>2],i[I+364>>2]=e,e=i[A+92>>2],i[I+408>>2]=i[A+88>>2],i[I+412>>2]=e,e=i[A+100>>2],i[I+416>>2]=i[A+96>>2],i[I+420>>2]=e,e=i[A+108>>2],i[I+424>>2]=i[A+104>>2],i[I+428>>2]=e,e=i[A+116>>2],i[I+432>>2]=i[A+112>>2],i[I+436>>2]=e,e=i[A+84>>2],i[I+400>>2]=i[A+80>>2],i[I+404>>2]=e,KA(y=I+480|0,h=I+320|0),b(e=I+160|0,y,g=I+600|0),b(I+200|0,B=I+520|0,Q=I+560|0),b(I+240|0,Q,g),b(I+280|0,y,B),sA(y,e,D),b(h,y,g),b(_=I+360|0,B,Q),b(c=I+400|0,Q,g),b(t=I+440|0,y,B),$A(A=I+800|0,h),sA(y,e,A),b(h,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),$A(A=I+960|0,h),sA(y,e,A),b(h,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),$A(A=I+1120|0,h),sA(y,e,A),b(h,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),$A(A=I+1280|0,h),sA(y,e,A),b(h,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),$A(A=I+1440|0,h),sA(y,e,A),b(h,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),$A(A=I+1600|0,h),sA(y,e,A),b(h,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),$A(I+1760|0,h),i[I+32>>2]=0,i[I+36>>2]=0,i[I+24>>2]=0,i[I+28>>2]=0,i[I+16>>2]=0,i[I+20>>2]=0,i[I+8>>2]=0,i[I+12>>2]=0,i[I+52>>2]=0,i[I+56>>2]=0,i[I+60>>2]=0,i[I+64>>2]=0,i[I+68>>2]=0,i[I+72>>2]=0,i[I+76>>2]=0,i[I+80>>2]=1,i[I>>2]=0,i[I+4>>2]=0,i[I+44>>2]=0,i[I+48>>2]=0,i[I+40>>2]=1,bg(I+84|0,0,76),r=I+120|0,o=I+2008|0,E=I+1968|0,D=I+80|0,h=I+40|0,A=252;e=i[I+36>>2],i[(y=I+1960|0)>>2]=i[I+32>>2],i[y+4>>2]=e,e=i[I+28>>2],i[(y=I+1952|0)>>2]=i[I+24>>2],i[y+4>>2]=e,e=i[I+20>>2],i[(y=I+1944|0)>>2]=i[I+16>>2],i[y+4>>2]=e,e=i[I+12>>2],i[(y=I+1936|0)>>2]=i[I+8>>2],i[y+4>>2]=e,e=i[I+4>>2],i[I+1928>>2]=i[I>>2],i[I+1932>>2]=e,e=i[h+36>>2],i[E+32>>2]=i[h+32>>2],i[E+36>>2]=e,e=i[h+28>>2],i[E+24>>2]=i[h+24>>2],i[E+28>>2]=e,e=i[h+20>>2],i[E+16>>2]=i[h+16>>2],i[E+20>>2]=e,e=i[h+12>>2],i[E+8>>2]=i[h+8>>2],i[E+12>>2]=e,e=i[h+4>>2],i[E>>2]=i[h>>2],i[E+4>>2]=e,e=i[D+36>>2],i[o+32>>2]=i[D+32>>2],i[o+36>>2]=e,e=i[D+28>>2],i[o+24>>2]=i[D+24>>2],i[o+28>>2]=e,e=i[D+20>>2],i[o+16>>2]=i[D+16>>2],i[o+20>>2]=e,e=i[D+12>>2],i[o+8>>2]=i[D+8>>2],i[o+12>>2]=e,e=i[D+4>>2],i[o>>2]=i[D>>2],i[o+4>>2]=e,e=A,f=C[A+33712|0],KA(y=I+480|0,I+1928|0),(0|f)>0?(b(A=I+320|0,y,g),b(_,B,Q),b(c,Q,g),b(t,y,B),sA(y,A,(I+640|0)+a((254&f)>>>1|0,160)|0)):(0|f)>=0||(b(A=I+320|0,y=I+480|0,g),b(_,B,Q),b(c,Q,g),b(t,y,B),hA(y,A,(I+640|0)+a((0-f&254)>>>1|0,160)|0)),b(I,A=I+480|0,g),b(h,B,Q),b(D,Q,g),b(r,A,B),A=e-1|0,e;);return QI(A=I+640|0,I),A=GI(A,32),s=I+2048|0,A}function CA(A,I,g,B,Q){var i,E,a,_,c,t,r,e,y,s,h,D,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0;if(B?(d=o[B+12|0]|o[B+13|0]<<8|o[B+14|0]<<16|o[B+15|0]<<24,l=o[B+8|0]|o[B+9|0]<<8|o[B+10|0]<<16|o[B+11|0]<<24,m=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,u=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24):(d=1797285236,m=1634760805,l=2036477234,u=857760878),B=i=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,N=E=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,U=a=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,w=d,S=_=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,G=l,b=c=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,M=t=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,n=r=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,I=e=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,K=u,f=y=o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24,p=s=o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24,k=h=o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24,g=D=o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24,F=m,(0|Q)>0)for(;H=Lg(g+K|0,7)^b,x=Lg(H+K|0,9)^N,Y=Lg(B+F|0,7)^f,v=Lg(Y+F|0,9)^M,R=Lg(Y+v|0,13)^B,J=Lg(w+S|0,7)^p,n=Lg(J+w|0,9)^n,p=Lg(n+J|0,13)^S,w=Lg(n+p|0,18)^w,f=Lg(I+G|0,7)^U,B=R^Lg(w+f|0,7),N=Lg(B+w|0,9)^x,U=Lg(B+N|0,13)^f,w=Lg(N+U|0,18)^w,k=Lg(f+G|0,9)^k,f=Lg(k+f|0,13)^I,I=Lg(f+k|0,18)^G,S=Lg(I+H|0,7)^p,M=Lg(S+I|0,9)^v,b=Lg(S+M|0,13)^H,G=Lg(M+b|0,18)^I,g=Lg(H+x|0,13)^g,p=Lg(g+x|0,18)^K,I=Lg(p+Y|0,7)^f,n=Lg(I+p|0,9)^n,f=Lg(I+n|0,13)^Y,K=Lg(n+f|0,18)^p,F=Lg(v+R|0,18)^F,g=Lg(F+J|0,7)^g,k=Lg(g+F|0,9)^k,p=Lg(g+k|0,13)^J,F=Lg(k+p|0,18)^F,(0|(L=L+2|0))<(0|Q););Q=w+d|0,C[A+60|0]=Q,C[A+61|0]=Q>>>8,C[A+62|0]=Q>>>16,C[A+63|0]=Q>>>24,Q=U+a|0,C[A+56|0]=Q,C[A+57|0]=Q>>>8,C[A+58|0]=Q>>>16,C[A+59|0]=Q>>>24,Q=N+E|0,C[A+52|0]=Q,C[A+53|0]=Q>>>8,C[A+54|0]=Q>>>16,C[A+55|0]=Q>>>24,B=B+i|0,C[A+48|0]=B,C[A+49|0]=B>>>8,C[A+50|0]=B>>>16,C[A+51|0]=B>>>24,B=S+_|0,C[A+44|0]=B,C[A+45|0]=B>>>8,C[A+46|0]=B>>>16,C[A+47|0]=B>>>24,B=G+l|0,C[A+40|0]=B,C[A+41|0]=B>>>8,C[A+42|0]=B>>>16,C[A+43|0]=B>>>24,B=b+c|0,C[A+36|0]=B,C[A+37|0]=B>>>8,C[A+38|0]=B>>>16,C[A+39|0]=B>>>24,B=M+t|0,C[A+32|0]=B,C[A+33|0]=B>>>8,C[A+34|0]=B>>>16,C[A+35|0]=B>>>24,B=n+r|0,C[A+28|0]=B,C[A+29|0]=B>>>8,C[A+30|0]=B>>>16,C[A+31|0]=B>>>24,I=I+e|0,C[A+24|0]=I,C[A+25|0]=I>>>8,C[A+26|0]=I>>>16,C[A+27|0]=I>>>24,I=K+u|0,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=f+y|0,C[A+16|0]=I,C[A+17|0]=I>>>8,C[A+18|0]=I>>>16,C[A+19|0]=I>>>24,I=p+s|0,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=k+h|0,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=g+D|0,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=F+m|0,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24}function BA(A){var I=0,g=0,C=0,B=0,Q=0,o=0,a=0,c=0,t=0;A:if(A|=0){Q=(C=A-8|0)+(A=-8&(I=i[A-4>>2]))|0;I:if(!(1&I)){if(!(2&I))break A;if((C=C-(I=i[C>>2])|0)>>>0<E[9409])break A;A=A+I|0;g:{C:{B:{if(i[9410]!=(0|C)){if(g=i[C+12>>2],I>>>0<=255){if((0|(B=i[C+8>>2]))!=(0|g))break B;c=37620,t=i[9405]&Lg(-2,I>>>3|0),i[c>>2]=t;break I}if(a=i[C+24>>2],(0|g)!=(0|C)){I=i[C+8>>2],i[I+12>>2]=g,i[g+8>>2]=I;break g}if(B=i[C+20>>2])I=C+20|0;else{if(!(B=i[C+16>>2]))break C;I=C+16|0}for(;o=I,I=(g=B)+20|0,(B=i[g+20>>2])||(I=g+16|0,B=i[g+16>>2]););i[o>>2]=0;break g}if(3&~(I=i[Q+4>>2]))break I;return i[9407]=A,i[Q+4>>2]=-2&I,i[C+4>>2]=1|A,void(i[Q>>2]=A)}i[B+12>>2]=g,i[g+8>>2]=B;break I}g=0}if(a){I=i[C+28>>2];g:{if(i[(B=37924+(I<<2)|0)>>2]==(0|C)){if(i[B>>2]=g,g)break g;c=37624,t=i[9406]&Lg(-2,I),i[c>>2]=t;break I}if(i[a+(i[a+16>>2]==(0|C)?16:20)>>2]=g,!g)break I}i[g+24>>2]=a,(I=i[C+16>>2])&&(i[g+16>>2]=I,i[I+24>>2]=g),(I=i[C+20>>2])&&(i[g+20>>2]=I,i[I+24>>2]=g)}}if(!(C>>>0>=Q>>>0)&&1&(I=i[Q+4>>2])){I:{g:{C:{B:{if(!(2&I)){if((0|Q)==i[9411]){if(i[9411]=C,A=i[9408]+A|0,i[9408]=A,i[C+4>>2]=1|A,i[9410]!=(0|C))break A;return i[9407]=0,void(i[9410]=0)}if((0|Q)==i[9410])return i[9410]=C,A=i[9407]+A|0,i[9407]=A,i[C+4>>2]=1|A,void(i[A+C>>2]=A);if(A=(-8&I)+A|0,g=i[Q+12>>2],I>>>0<=255){if((0|(B=i[Q+8>>2]))==(0|g)){c=37620,t=i[9405]&Lg(-2,I>>>3|0),i[c>>2]=t;break g}i[B+12>>2]=g,i[g+8>>2]=B;break g}if(a=i[Q+24>>2],(0|g)!=(0|Q)){I=i[Q+8>>2],i[I+12>>2]=g,i[g+8>>2]=I;break C}if(B=i[Q+20>>2])I=Q+20|0;else{if(!(B=i[Q+16>>2]))break B;I=Q+16|0}for(;o=I,I=(g=B)+20|0,(B=i[g+20>>2])||(I=g+16|0,B=i[g+16>>2]););i[o>>2]=0;break C}i[Q+4>>2]=-2&I,i[C+4>>2]=1|A,i[A+C>>2]=A;break I}g=0}if(a){I=i[Q+28>>2];C:{if((0|Q)==i[(B=37924+(I<<2)|0)>>2]){if(i[B>>2]=g,g)break C;c=37624,t=i[9406]&Lg(-2,I),i[c>>2]=t;break g}if(i[a+((0|Q)==i[a+16>>2]?16:20)>>2]=g,!g)break g}i[g+24>>2]=a,(I=i[Q+16>>2])&&(i[g+16>>2]=I,i[I+24>>2]=g),(I=i[Q+20>>2])&&(i[g+20>>2]=I,i[I+24>>2]=g)}}if(i[C+4>>2]=1|A,i[A+C>>2]=A,i[9410]==(0|C))return void(i[9407]=A)}if(A>>>0<=255)return I=37660+(-8&A)|0,(B=i[9405])&(A=1<<(A>>>3))?A=i[I+8>>2]:(i[9405]=A|B,A=I),i[I+8>>2]=C,i[A+12>>2]=C,i[C+12>>2]=I,void(i[C+8>>2]=A);g=31,A>>>0<=16777215&&(g=62+((A>>>38-(I=_(A>>>8|0))&1)-(I<<1)|0)|0),i[C+28>>2]=g,i[C+16>>2]=0,i[C+20>>2]=0,o=37924+(g<<2)|0;I:{g:{if((I=i[9406])&(B=1<<g)){for(g=A<<(31!=(0|g)?25-(g>>>1|0):0),I=i[o>>2];;){if(B=I,(-8&i[I+4>>2])==(0|A))break g;if(I=g>>>29|0,g<<=1,!(I=i[(o=16+((4&I)+B|0)|0)>>2]))break}g=24,I=B}else i[9406]=I|B,g=24,I=o;B=C,Q=C,A=8;break I}I=i[B+8>>2],i[I+12>>2]=C,g=8,o=B+8|0,Q=0,A=24}i[o>>2]=C,i[g+C>>2]=I,i[C+12>>2]=B,i[A+C>>2]=Q,A=i[9413]-1|0,i[9413]=A||-1}}}function QA(A,I,g,C,B,E,a,_,c){var t=0,r=0,e=0,y=0,h=0,D=0,f=0,w=0;if(I-65>>>0<4294967232|a>>>0>64)A=-1;else{w=t=s,s=t=t-512&-64;A:{I:if(!(!(!(C|B)|g)|!A|((D=255&I)-65&255)>>>0<=191|!(!(I=255&a)||E)|I>>>0>=65)){if(I){if(!E)break I;_?(r=725511199^(o[_+8|0]|o[_+9|0]<<8|o[_+10|0]<<16|o[_+11|0]<<24),e=-1694144372^(o[_+12|0]|o[_+13|0]<<8|o[_+14|0]<<16|o[_+15|0]<<24),a=-1377402159^(o[0|_]|o[_+1|0]<<8|o[_+2|0]<<16|o[_+3|0]<<24),_=1359893119^(o[_+4|0]|o[_+5|0]<<8|o[_+6|0]<<16|o[_+7|0]<<24)):(r=725511199,e=-1694144372,a=-1377402159,_=1359893119),c?(y=327033209^(o[c+8|0]|o[c+9|0]<<8|o[c+10|0]<<16|o[c+11|0]<<24),h=1541459225^(o[c+12|0]|o[c+13|0]<<8|o[c+14|0]<<16|o[c+15|0]<<24),f=-79577749^(o[0|c]|o[c+1|0]<<8|o[c+2|0]<<16|o[c+3|0]<<24),c=528734635^(o[c+4|0]|o[c+5|0]<<8|o[c+6|0]<<16|o[c+7|0]<<24)):(y=327033209,h=1541459225,f=-79577749,c=528734635),bg(t- -64|0,0,293),i[t+56>>2]=y,i[t+60>>2]=h,i[t+48>>2]=f,i[t+52>>2]=c,i[t+40>>2]=r,i[t+44>>2]=e,i[t+32>>2]=a,i[t+36>>2]=_,i[t+24>>2]=1595750129,i[t+28>>2]=-1521486534,i[t+16>>2]=-23791573,i[t+20>>2]=1013904242,i[t+8>>2]=-2067093701,i[t+12>>2]=-1150833019,i[t>>2]=-222443256^(I<<8|D),i[t+4>>2]=I>>>24^1779033703,bg((a=t+384|0)+I|0,0,128-I|0),Ng(a,E,I),Ng(t+96|0,a,128),i[t+352>>2]=128,XC(a,128),I=128}else _?(r=725511199^(o[_+8|0]|o[_+9|0]<<8|o[_+10|0]<<16|o[_+11|0]<<24),e=-1694144372^(o[_+12|0]|o[_+13|0]<<8|o[_+14|0]<<16|o[_+15|0]<<24),E=1359893119^(o[_+4|0]|o[_+5|0]<<8|o[_+6|0]<<16|o[_+7|0]<<24),I=-1377402159^(o[0|_]|o[_+1|0]<<8|o[_+2|0]<<16|o[_+3|0]<<24)):(r=725511199,e=-1694144372,E=1359893119,I=-1377402159),c?(y=327033209^(o[c+8|0]|o[c+9|0]<<8|o[c+10|0]<<16|o[c+11|0]<<24),h=1541459225^(o[c+12|0]|o[c+13|0]<<8|o[c+14|0]<<16|o[c+15|0]<<24),_=528734635^(o[c+4|0]|o[c+5|0]<<8|o[c+6|0]<<16|o[c+7|0]<<24),a=-79577749^(o[0|c]|o[c+1|0]<<8|o[c+2|0]<<16|o[c+3|0]<<24)):(y=327033209,h=1541459225,_=528734635,a=-79577749),bg(t- -64|0,0,293),i[t+56>>2]=y,i[t+60>>2]=h,i[t+48>>2]=a,i[t+52>>2]=_,i[t+40>>2]=r,i[t+44>>2]=e,i[t+32>>2]=I,i[t+36>>2]=E,i[t+24>>2]=1595750129,i[t+28>>2]=-1521486534,i[t+16>>2]=-23791573,i[t+20>>2]=1013904242,i[t+8>>2]=-2067093701,i[t+12>>2]=-1150833019,i[t>>2]=-222443256^D,i[t+4>>2]=1779033703,I=0;g:if(C|B)for(c=t+224|0,_=t+96|0;;){if(a=I+_|0,!B&C>>>0<=(E=256-I|0)>>>0){Ng(a,g,C),i[t+352>>2]=C+i[t+352>>2];break g}if(Ng(a,g,E),i[t+352>>2]=E+i[t+352>>2],r=I=i[t+68>>2],I=(e=(a=i[t+64>>2])+128|0)>>>0<128?I+1|0:I,i[t+64>>2]=e,i[t+68>>2]=I,I=i[t+76>>2],I=(r=a=-1==(0|r)&a>>>0>4294967167)>>>0>(a=a+i[t+72>>2]|0)>>>0?I+1|0:I,i[t+72>>2]=a,i[t+76>>2]=I,p(t,_),Ng(_,c,128),I=i[t+352>>2]-128|0,i[t+352>>2]=I,g=g+E|0,!((B=B-(C>>>0<E>>>0)|0)|(C=C-E|0)))break}AA(t,A,D),s=w;break A}rC(),Q()}A=0}return A}function iA(A,I,g,B,Q,E,_){var c,t,r=0,e=0,y=0;if(s=c=s+-64|0,t=K(32)){i[c+36>>2]=0,i[c+40>>2]=0,i[c+28>>2]=0,i[c+32>>2]=0,i[c+24>>2]=16,i[c+20>>2]=Q,i[c+16>>2]=B,i[c+12>>2]=g,i[c+8>>2]=32,i[c+4>>2]=t,i[c+60>>2]=0,i[c+56>>2]=1,i[c+52>>2]=1,i[c+48>>2]=I,i[c+44>>2]=A;A:if(A=q(c+4|0,_))XC(t,32);else{if(E){r=c+4|0,s=Q=s-32|0,A=-31;I:{g:{C:switch(_-1|0){case 1:A=o[1434]|o[1435]<<8|o[1436]<<16|o[1437]<<24,I=o[1430]|o[1431]<<8|o[1432]<<16|o[1433]<<24,C[0|E]=I,C[E+1|0]=I>>>8,C[E+2|0]=I>>>16,C[E+3|0]=I>>>24,C[E+4|0]=A,C[E+5|0]=A>>>8,C[E+6|0]=A>>>16,C[E+7|0]=A>>>24,A=o[1439]|o[1440]<<8|o[1441]<<16|o[1442]<<24,I=o[1435]|o[1436]<<8|o[1437]<<16|o[1438]<<24,C[E+5|0]=I,C[E+6|0]=I>>>8,C[E+7|0]=I>>>16,C[E+8|0]=I>>>24,C[E+9|0]=A,C[E+10|0]=A>>>8,C[E+11|0]=A>>>16,C[E+12|0]=A>>>24,g=-12,I=12;break g;case 0:break C;default:break I}A=o[1422]|o[1423]<<8|o[1424]<<16|o[1425]<<24,I=o[1418]|o[1419]<<8|o[1420]<<16|o[1421]<<24,C[0|E]=I,C[E+1|0]=I>>>8,C[E+2|0]=I>>>16,C[E+3|0]=I>>>24,C[E+4|0]=A,C[E+5|0]=A>>>8,C[E+6|0]=A>>>16,C[E+7|0]=A>>>24,A=o[1426]|o[1427]<<8|o[1428]<<16|o[1429]<<24,C[E+8|0]=A,C[E+9|0]=A>>>8,C[E+10|0]=A>>>16,C[E+11|0]=A>>>24,g=-11,I=11}if(!(A=nI(r)))if(C[Q+13|0]=0,C[Q+11|0]=49,C[Q+12|0]=57,(g=g+128|0)>>>0<=(A=RI(Q+11|0))>>>0)A=-31;else if(I=Ng(I+E|0,Q+11|0,A+1|0),(e=g-A|0)>>>0<4)A=-31;else{for(C[0|(_=A+I|0)]=36,C[_+1|0]=109,C[_+2|0]=61,C[_+3|0]=0,A=i[r+44>>2],I=10;g=I,B=(A>>>0)/10|0,C[0|(y=(I=I-1|0)+(Q+22|0)|0)]=A-a(B,10)|48,!(A>>>0<10)&&(A=B,I););if(Ng(A=Q+11|0,y,I=11-g|0),C[A+I|0]=0,(I=e-3|0)>>>0<=(A=RI(A))>>>0)A=-31;else if(g=Ng(_+3|0,Q+11|0,A+1|0),(e=I-A|0)>>>0<4)A=-31;else{for(C[0|(_=A+g|0)]=44,C[_+1|0]=116,C[_+2|0]=61,C[_+3|0]=0,A=i[r+40>>2],I=10;g=I,B=(A>>>0)/10|0,C[0|(y=(I=I-1|0)+(Q+22|0)|0)]=A-a(B,10)|48,!(A>>>0<10)&&(A=B,I););if(Ng(A=Q+11|0,y,I=11-g|0),C[A+I|0]=0,(I=e-3|0)>>>0<=(A=RI(A))>>>0)A=-31;else if(g=Ng(_+3|0,Q+11|0,A+1|0),(e=I-A|0)>>>0<4)A=-31;else{for(C[0|(_=A+g|0)]=44,C[_+1|0]=112,C[_+2|0]=61,C[_+3|0]=0,A=i[r+48>>2],I=10;g=I,B=(A>>>0)/10|0,C[0|(y=(I=I-1|0)+(Q+22|0)|0)]=A-a(B,10)|48,!(A>>>0<10)&&(A=B,I););Ng(A=Q+11|0,y,I=11-g|0),C[A+I|0]=0,(I=e-3|0)>>>0<=(A=RI(A))>>>0?A=-31:(g=Ng(_+3|0,Q+11|0,A+1|0),(B=I-A|0)>>>0<2?A=-31:(C[0|(A=A+g|0)]=36,C[A+1|0]=0,XA(I=A+1|0,g=B-1|0,i[r+16>>2],i[r+20>>2],3)?(A=-31,(B=(B=g)-(g=RI(I))|0)>>>0<2||(C[0|(A=I+g|0)]=36,C[A+1|0]=0,A=XA(A+1|0,B-1|0,i[r>>2],i[r+4>>2],3)?0:-31)):A=-31))}}}}if(s=Q+32|0,A){XC(t,32),XC(E,128),A=-31;break A}}XC(t,32),A=0}BA(t)}else A=-22;return s=c- -64|0,A}function oA(A,I){var g,C=0,B=0,Q=0,o=0,E=0,a=0,c=0;g=A+I|0;A:{I:if(!(1&(C=i[A+4>>2]))){if(!(2&C))break A;I=(C=i[A>>2])+I|0;g:{C:{B:{if((0|(A=A-C|0))!=i[9410]){if(B=i[A+12>>2],C>>>0<=255){if((0|(Q=i[A+8>>2]))!=(0|B))break B;a=37620,c=i[9405]&Lg(-2,C>>>3|0),i[a>>2]=c;break I}if(o=i[A+24>>2],(0|A)!=(0|B)){C=i[A+8>>2],i[C+12>>2]=B,i[B+8>>2]=C;break g}if(Q=i[A+20>>2])C=A+20|0;else{if(!(Q=i[A+16>>2]))break C;C=A+16|0}for(;E=C,C=(B=Q)+20|0,(Q=i[B+20>>2])||(C=B+16|0,Q=i[B+16>>2]););i[E>>2]=0;break g}if(3&~(C=i[g+4>>2]))break I;return i[9407]=I,i[g+4>>2]=-2&C,i[A+4>>2]=1|I,void(i[g>>2]=I)}i[Q+12>>2]=B,i[B+8>>2]=Q;break I}B=0}if(o){C=i[A+28>>2];g:{if(i[(Q=37924+(C<<2)|0)>>2]==(0|A)){if(i[Q>>2]=B,B)break g;a=37624,c=i[9406]&Lg(-2,C),i[a>>2]=c;break I}if(i[o+(i[o+16>>2]==(0|A)?16:20)>>2]=B,!B)break I}i[B+24>>2]=o,(C=i[A+16>>2])&&(i[B+16>>2]=C,i[C+24>>2]=B),(C=i[A+20>>2])&&(i[B+20>>2]=C,i[C+24>>2]=B)}}I:{g:{C:{B:{if(!(2&(C=i[g+4>>2]))){if(i[9411]==(0|g)){if(i[9411]=A,I=i[9408]+I|0,i[9408]=I,i[A+4>>2]=1|I,i[9410]!=(0|A))break A;return i[9407]=0,void(i[9410]=0)}if(i[9410]==(0|g))return i[9410]=A,I=i[9407]+I|0,i[9407]=I,i[A+4>>2]=1|I,void(i[A+I>>2]=I);if(I=(-8&C)+I|0,B=i[g+12>>2],C>>>0<=255){if((0|(Q=i[g+8>>2]))==(0|B)){a=37620,c=i[9405]&Lg(-2,C>>>3|0),i[a>>2]=c;break g}i[Q+12>>2]=B,i[B+8>>2]=Q;break g}if(o=i[g+24>>2],(0|B)!=(0|g)){C=i[g+8>>2],i[C+12>>2]=B,i[B+8>>2]=C;break C}if(Q=i[g+20>>2])C=g+20|0;else{if(!(Q=i[g+16>>2]))break B;C=g+16|0}for(;E=C,C=(B=Q)+20|0,(Q=i[B+20>>2])||(C=B+16|0,Q=i[B+16>>2]););i[E>>2]=0;break C}i[g+4>>2]=-2&C,i[A+4>>2]=1|I,i[A+I>>2]=I;break I}B=0}if(o){C=i[g+28>>2];C:{if(i[(Q=37924+(C<<2)|0)>>2]==(0|g)){if(i[Q>>2]=B,B)break C;a=37624,c=i[9406]&Lg(-2,C),i[a>>2]=c;break g}if(i[o+(i[o+16>>2]==(0|g)?16:20)>>2]=B,!B)break g}i[B+24>>2]=o,(C=i[g+16>>2])&&(i[B+16>>2]=C,i[C+24>>2]=B),(C=i[g+20>>2])&&(i[B+20>>2]=C,i[C+24>>2]=B)}}if(i[A+4>>2]=1|I,i[A+I>>2]=I,i[9410]==(0|A))return void(i[9407]=I)}if(I>>>0<=255)return C=37660+(-8&I)|0,(B=i[9405])&(I=1<<(I>>>3))?I=i[C+8>>2]:(i[9405]=I|B,I=C),i[C+8>>2]=A,i[I+12>>2]=A,i[A+12>>2]=C,void(i[A+8>>2]=I);B=31,I>>>0<=16777215&&(B=62+((I>>>38-(C=_(I>>>8|0))&1)-(C<<1)|0)|0),i[A+28>>2]=B,i[A+16>>2]=0,i[A+20>>2]=0,C=37924+(B<<2)|0;I:{if((Q=i[9406])&(E=1<<B)){for(B=I<<(31!=(0|B)?25-(B>>>1|0):0),C=i[C>>2];;){if(Q=C,(-8&i[C+4>>2])==(0|I))break I;if(C=B>>>29|0,B<<=1,!(C=i[16+(E=Q+(4&C)|0)>>2]))break}i[E+16>>2]=A,i[A+24>>2]=Q}else i[9406]=Q|E,i[C>>2]=A,i[A+24>>2]=C;return i[A+12>>2]=A,void(i[A+8>>2]=A)}I=i[Q+8>>2],i[I+12>>2]=A,i[Q+8>>2]=A,i[A+24>>2]=0,i[A+12>>2]=Q,i[A+8>>2]=I}}function EA(A,I){var g,B=0,Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0;return s=g=s-512|0,B=-1,E=o[I+31|0],Q=o[0|I],1&(((255&(127&~E|~(o[I+1|0]&o[I+2|0]&o[I+3|0]&o[I+4|0]&o[I+5|0]&o[I+6|0]&o[I+7|0]&o[I+8|0]&o[I+9|0]&o[I+10|0]&o[I+11|0]&o[I+12|0]&o[I+13|0]&o[I+14|0]&o[I+15|0]&o[I+16|0]&o[I+17|0]&o[I+18|0]&o[I+19|0]&o[I+20|0]&o[I+21|0]&o[I+22|0]&o[I+23|0]&o[I+24|0]&o[I+25|0]&o[I+26|0]&o[I+27|0]&o[I+28|0]&o[I+29|0]&o[I+30|0])))-1&236-Q)>>>8|Q|E>>>7)||(fA(E=g+336|0,I),R(g+288|0,E),I=i[g+324>>2],i[g+276>>2]=0-I,B=i[g+320>>2],i[g+272>>2]=0-B,Q=i[g+316>>2],i[g+268>>2]=0-Q,a=i[g+312>>2],i[g+264>>2]=0-a,_=i[g+308>>2],i[g+260>>2]=0-_,c=i[g+304>>2],i[g+256>>2]=0-c,t=i[g+300>>2],i[g+252>>2]=0-t,r=i[g+296>>2],i[g+248>>2]=0-r,e=i[g+292>>2],i[g+244>>2]=0-e,y=i[g+288>>2],i[g+240>>2]=1-y,R(h=g+144|0,p=g+240|0),i[g+228>>2]=I,i[g+224>>2]=B,i[g+220>>2]=Q,i[g+216>>2]=a,i[g+212>>2]=_,i[g+208>>2]=c,i[g+204>>2]=t,i[g+200>>2]=r,i[g+196>>2]=e,i[g+192>>2]=y+1,R(B=g+96|0,a=g+192|0),b(I=g+48|0,1584,h),Q=i[g+96>>2],_=i[g+48>>2],c=i[g+100>>2],t=i[g+52>>2],r=i[g+104>>2],e=i[g+56>>2],y=i[g+108>>2],h=i[g+60>>2],D=i[g+112>>2],f=i[g+64>>2],w=i[g+116>>2],n=i[g+68>>2],k=i[g+120>>2],F=i[g+72>>2],S=i[g+124>>2],N=i[g+76>>2],G=i[g+128>>2],M=i[g+80>>2],i[g+84>>2]=0-(i[g+84>>2]+i[g+132>>2]|0),i[g+80>>2]=0-(G+M|0),i[g+76>>2]=0-(S+N|0),i[g+72>>2]=0-(k+F|0),i[g+68>>2]=0-(w+n|0),i[g+64>>2]=0-(D+f|0),i[g+60>>2]=0-(y+h|0),i[g+56>>2]=0-(r+e|0),i[g+52>>2]=0-(c+t|0),i[g+48>>2]=0-(Q+_|0),b(g,I,B),i[g+404>>2]=0,i[g+408>>2]=0,i[g+412>>2]=0,i[g+416>>2]=0,i[g+420>>2]=0,i[g+388>>2]=0,i[g+392>>2]=0,i[g+384>>2]=1,i[g+396>>2]=0,i[g+400>>2]=0,f=GA(Q=g+432|0,g+384|0,g),b(A,Q,a),b(B=A+40|0,Q,A),b(B,B,I),b(A,A,E),E=i[A+36>>2]<<1,i[A+36>>2]=E,Q=i[A+32>>2]<<1,i[A+32>>2]=Q,a=i[A+28>>2]<<1,i[A+28>>2]=a,_=i[A+24>>2]<<1,i[A+24>>2]=_,c=i[A+20>>2]<<1,i[A+20>>2]=c,t=i[A+16>>2]<<1,i[A+16>>2]=t,r=i[A+12>>2]<<1,i[A+12>>2]=r,e=i[A+8>>2]<<1,i[A+8>>2]=e,y=i[A+4>>2]<<1,i[A+4>>2]=y,h=i[A>>2]<<1,i[A>>2]=h,QI(D=g+480|0,A),I=0-(1&C[g+480|0])|0,i[A+36>>2]=E^I&(E^0-E),i[A+32>>2]=Q^I&(Q^0-Q),i[A+28>>2]=a^I&(a^0-a),i[A+24>>2]=_^I&(_^0-_),i[A+20>>2]=c^I&(c^0-c),i[A+16>>2]=t^I&(t^0-t),i[A+12>>2]=r^I&(r^0-r),i[A+8>>2]=e^I&(e^0-e),i[A+4>>2]=y^I&(y^0-y),i[A>>2]=h^I&(h^0-h),b(B,p,B),i[A+84>>2]=0,i[A+88>>2]=0,i[A+80>>2]=1,i[A+92>>2]=0,i[A+96>>2]=0,i[A+100>>2]=0,i[A+104>>2]=0,i[A+108>>2]=0,i[A+112>>2]=0,i[A+116>>2]=0,b(I=A+120|0,A,B),QI(D,I),A=o[g+480|0],QI(D,B),B=0-(GI(D,32)|1-f|1&A)|0),s=g+512|0,B}function aA(A,I,g,B){var Q,o=0,E=0;Q=o=s,s=o=o-576&-64,i[o+188>>2]=I;A:if(I>>>0<=64){if((0|eA(E=o+192|0,0,0,I))<0)break A;if((0|WA(E,o+188|0,4,0))<0)break A;if((0|WA(E,g,B,0))<0)break A;Hg(E,A,I)}else if(!((0|eA(E=o+192|0,0,0,64))<0||(0|WA(E,o+188|0,4,0))<0||(0|WA(E,g,B,0))<0||(0|Hg(E,o+112|0,64))<0)){if(g=i[o+116>>2],B=i[o+112>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[o+124>>2],B=i[o+120>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[o+140>>2],B=i[o+136>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[o+132>>2],B=i[o+128>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,A=A+32|0,(I=I-32|0)>>>0>=65)for(;;){if(g=i[o+172>>2],i[o+104>>2]=i[o+168>>2],i[o+108>>2]=g,g=i[o+164>>2],i[o+96>>2]=i[o+160>>2],i[o+100>>2]=g,g=i[o+156>>2],i[o+88>>2]=i[o+152>>2],i[o+92>>2]=g,g=i[o+148>>2],i[o+80>>2]=i[o+144>>2],i[o+84>>2]=g,g=i[o+140>>2],i[o+72>>2]=i[o+136>>2],i[o+76>>2]=g,B=i[o+132>>2],i[(g=o- -64|0)>>2]=i[o+128>>2],i[g+4>>2]=B,g=i[o+124>>2],i[o+56>>2]=i[o+120>>2],i[o+60>>2]=g,g=i[o+116>>2],i[o+48>>2]=i[o+112>>2],i[o+52>>2]=g,(0|lA(o+112|0,64,o+48|0,64,0,0,0))<0)break A;if(g=i[o+116>>2],B=i[o+112>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[o+124>>2],B=i[o+120>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[o+140>>2],B=i[o+136>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[o+132>>2],B=i[o+128>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,A=A+32|0,!((I=I-32|0)>>>0>64))break}g=i[o+172>>2],i[o+104>>2]=i[o+168>>2],i[o+108>>2]=g,g=i[o+164>>2],i[o+96>>2]=i[o+160>>2],i[o+100>>2]=g,g=i[o+156>>2],i[o+88>>2]=i[o+152>>2],i[o+92>>2]=g,g=i[o+148>>2],i[o+80>>2]=i[o+144>>2],i[o+84>>2]=g,g=i[o+140>>2],i[o+72>>2]=i[o+136>>2],i[o+76>>2]=g,B=i[o+132>>2],i[(g=o- -64|0)>>2]=i[o+128>>2],i[g+4>>2]=B,g=i[o+124>>2],i[o+56>>2]=i[o+120>>2],i[o+60>>2]=g,g=i[o+116>>2],i[o+48>>2]=i[o+112>>2],i[o+52>>2]=g,(0|lA(g=o+112|0,I,o+48|0,64,0,0,0))<0||Ng(A,g,I)}XC(o+192|0,384),s=Q}function _A(A,I,g,B,Q,_,c,t,r,e,y){var h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0;if(h=Ig(r,0,t,0),!(n=f)&h>>>0>=1073741824|n)return i[9404]=22,-1;if(1==(0|c)|c>>>0>1)return i[9404]=22,-1;if(h=c,!(!(_&(n=_-1|0)|c&(h=-1!=(0|n)?h+1|0:h))&(!c&_>>>0>=2|!!(0|c))))return i[9404]=28,-1;if(!r||!t)return i[9404]=28,-1;if(!(33554431/(r>>>0)>>>0<t>>>0|t>>>0>16777215)&&!c&33554431/(t>>>0)>>>0>=_>>>0&&!((M=a(G=t<<7,r))>>>0>(h=(k=a(_,G))+M|0)>>>0||(D=h)>>>0>(h=((F=t<<8)+h|0)- -64|0)>>>0)){A:{if(h>>>0>E[A+8>>2]){if(w=-1,Rg(A))break A;if(s=n=s-16|0,D=tI(n+12|0,h),i[9404]=D,D=D?0:i[n+12>>2],i[A+4>>2]=D,i[A>>2]=D,i[A+8>>2]=D?h:0,s=n+16|0,!D)break A}for(DI(I,g,B,Q,U=i[A+4>>2],M),Y=((k=(D=(K=M+U|0)+k|0)+(t<<7)|0)+G|0)-64|0,Q=_-1|0,N=t<<5,b=D+F|0,J=(D+G|0)-64|0;;){for(F=a(G,H)+U|0,w=0;B=(A=w<<2)+F|0,i[A+D>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,h=(B=4|A)+D|0,B=B+F|0,i[h>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,h=(B=8|A)+D|0,B=B+F|0,i[h>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,B=(A|=12)+D|0,A=A+F|0,i[B>>2]=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,n=0,h=0,(0|N)!=(0|(w=w+4|0)););for(B=0,A=0;Ng(K+(a(B,N)<<2)|0,D,G),tA(D,k,b,t),Ng(K+(a(N,1|B)<<2)|0,k,G),tA(k,D,b,t),(0|c)==(0|(A=(B=B+2|0)>>>0<2?A+1|0:A))&B>>>0<_>>>0|A>>>0<c>>>0;);for(;;){for(A=K+(a(N,Q&i[J>>2])<<2)|0,w=0;i[(p=(B=w<<2)+D|0)>>2]=i[p>>2]^i[A+B>>2],i[(S=(p=4|B)+D|0)>>2]=i[S>>2]^i[A+p>>2],i[(S=(p=8|B)+D|0)>>2]=i[S>>2]^i[A+p>>2],i[(p=(B|=12)+D|0)>>2]=i[p>>2]^i[A+B>>2],(0|N)!=(0|(w=w+4|0)););for(tA(D,k,b,t),A=K+(a(N,Q&i[Y>>2])<<2)|0,w=0;i[(p=(B=w<<2)+k|0)>>2]=i[p>>2]^i[A+B>>2],i[(S=(p=4|B)+k|0)>>2]=i[S>>2]^i[A+p>>2],i[(S=(p=8|B)+k|0)>>2]=i[S>>2]^i[A+p>>2],i[(p=(B|=12)+k|0)>>2]=i[p>>2]^i[A+B>>2],(0|N)!=(0|(w=w+4|0)););if(tA(k,D,b,t),w=0,!((0|c)==(0|(h=(n=n+2|0)>>>0<2?h+1|0:h))&_>>>0>n>>>0|c>>>0>h>>>0))break}for(;B=(A=w<<2)+F|0,h=i[A+D>>2],C[0|B]=h,C[B+1|0]=h>>>8,C[B+2|0]=h>>>16,C[B+3|0]=h>>>24,B=(h=4|A)+F|0,h=i[h+D>>2],C[0|B]=h,C[B+1|0]=h>>>8,C[B+2|0]=h>>>16,C[B+3|0]=h>>>24,B=(h=8|A)+F|0,h=i[h+D>>2],C[0|B]=h,C[B+1|0]=h>>>8,C[B+2|0]=h>>>16,C[B+3|0]=h>>>24,A=(B=12|A)+F|0,B=i[B+D>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,(0|N)!=(0|(w=w+4|0)););if((0|(H=H+1|0))==(0|r))break}DI(I,g,U,M,e,y),w=0}return w}return i[9404]=48,-1}function cA(A,I,g){A|=0,I|=0,g|=0;var B,Q,E,a=0;s=B=s-192|0,i[B+96>>2]=0,i[B+100>>2]=0,i[B+104>>2]=0,i[B+108>>2]=0,i[B+112>>2]=0,i[B+116>>2]=0,i[B+120>>2]=0,i[B+124>>2]=0,a=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[B+80>>2]=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[B+84>>2]=a,a=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[B+88>>2]=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,i[B+92>>2]=a,Q=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,E=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,a=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,I=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,i[B+40>>2]=0,i[B+44>>2]=0,i[B+48>>2]=0,i[B+52>>2]=0,i[B+56>>2]=0,i[B+60>>2]=0,i[B+64>>2]=a,i[B+68>>2]=I,i[B+72>>2]=Q,i[B+76>>2]=E,i[B+32>>2]=0,i[B+36>>2]=0,I=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,i[B+16>>2]=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,i[B+20>>2]=I,I=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,i[B+24>>2]=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,i[B+28>>2]=I,I=o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24,i[B>>2]=o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24,i[B+4>>2]=I,I=o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24,i[B+8>>2]=o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24,i[B+12>>2]=I,og(B- -64|0,B),g=i[B+124>>2],i[B+184>>2]=i[B+120>>2],i[B+188>>2]=g,I=i[B+116>>2],i[B+176>>2]=i[B+112>>2],i[B+180>>2]=I,I=i[B+108>>2],i[B+168>>2]=i[B+104>>2],i[B+172>>2]=I,I=i[B+100>>2],i[B+160>>2]=i[B+96>>2],i[B+164>>2]=I,I=i[B+92>>2],i[B+152>>2]=i[B+88>>2],i[B+156>>2]=I,I=i[B+84>>2],i[B+144>>2]=i[B+80>>2],i[B+148>>2]=I,I=i[B+76>>2],i[B+136>>2]=i[B+72>>2],i[B+140>>2]=I,I=i[B+68>>2],i[B+128>>2]=i[B+64>>2],i[B+132>>2]=I,S(I=B+128|0),a=i[B+156>>2],g=i[B+152>>2],C[A+24|0]=g,C[A+25|0]=g>>>8,C[A+26|0]=g>>>16,C[A+27|0]=g>>>24,C[A+28|0]=a,C[A+29|0]=a>>>8,C[A+30|0]=a>>>16,C[A+31|0]=a>>>24,a=i[B+148>>2],g=i[B+144>>2],C[A+16|0]=g,C[A+17|0]=g>>>8,C[A+18|0]=g>>>16,C[A+19|0]=g>>>24,C[A+20|0]=a,C[A+21|0]=a>>>8,C[A+22|0]=a>>>16,C[A+23|0]=a>>>24,a=i[B+140>>2],g=i[B+136>>2],C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=a,C[A+13|0]=a>>>8,C[A+14|0]=a>>>16,C[A+15|0]=a>>>24,a=i[B+132>>2],g=i[B+128>>2],C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=a,C[A+5|0]=a>>>8,C[A+6|0]=a>>>16,C[A+7|0]=a>>>24,XC(I,64),s=B+192|0}function tA(A,I,g,C){var B=0,Q=0,o=0,E=0,a=0;if(Q=i[4+(B=((C<<7)+A|0)-64|0)>>2],i[g>>2]=i[B>>2],i[g+4>>2]=Q,Q=i[B+60>>2],i[g+56>>2]=i[B+56>>2],i[g+60>>2]=Q,Q=i[B+52>>2],i[g+48>>2]=i[B+48>>2],i[g+52>>2]=Q,Q=i[B+44>>2],i[g+40>>2]=i[B+40>>2],i[g+44>>2]=Q,Q=i[B+36>>2],i[g+32>>2]=i[B+32>>2],i[g+36>>2]=Q,Q=i[B+28>>2],i[g+24>>2]=i[B+24>>2],i[g+28>>2]=Q,Q=i[B+20>>2],i[g+16>>2]=i[B+16>>2],i[g+20>>2]=Q,Q=i[B+12>>2],i[g+8>>2]=i[B+8>>2],i[g+12>>2]=Q,C)for(Q=C<<1,a=C<<6;C=(E<<6)+A|0,i[g>>2]=i[g>>2]^i[C>>2],i[g+4>>2]=i[g+4>>2]^i[C+4>>2],i[g+8>>2]=i[g+8>>2]^i[C+8>>2],i[g+12>>2]=i[g+12>>2]^i[C+12>>2],i[g+16>>2]=i[g+16>>2]^i[C+16>>2],i[g+20>>2]=i[g+20>>2]^i[C+20>>2],i[g+24>>2]=i[g+24>>2]^i[C+24>>2],i[g+28>>2]=i[g+28>>2]^i[C+28>>2],i[g+32>>2]=i[g+32>>2]^i[C+32>>2],i[g+36>>2]=i[g+36>>2]^i[C+36>>2],i[g+40>>2]=i[g+40>>2]^i[C+40>>2],i[g+44>>2]=i[g+44>>2]^i[C+44>>2],i[g+48>>2]=i[g+48>>2]^i[C+48>>2],i[g+52>>2]=i[g+52>>2]^i[C+52>>2],i[g+56>>2]=i[g+56>>2]^i[C+56>>2],i[g+60>>2]=i[g+60>>2]^i[C+60>>2],VA(g),o=i[g+60>>2],i[56+(B=(E<<5)+I|0)>>2]=i[g+56>>2],i[B+60>>2]=o,o=i[g+52>>2],i[B+48>>2]=i[g+48>>2],i[B+52>>2]=o,o=i[g+44>>2],i[B+40>>2]=i[g+40>>2],i[B+44>>2]=o,o=i[g+36>>2],i[B+32>>2]=i[g+32>>2],i[B+36>>2]=o,o=i[g+28>>2],i[B+24>>2]=i[g+24>>2],i[B+28>>2]=o,o=i[g+20>>2],i[B+16>>2]=i[g+16>>2],i[B+20>>2]=o,o=i[g+12>>2],i[B+8>>2]=i[g+8>>2],i[B+12>>2]=o,o=i[g+4>>2],i[B>>2]=i[g>>2],i[B+4>>2]=o,i[g>>2]=i[g>>2]^i[C- -64>>2],i[g+4>>2]=i[g+4>>2]^i[C+68>>2],i[g+8>>2]=i[g+8>>2]^i[C+72>>2],i[g+12>>2]=i[g+12>>2]^i[C+76>>2],i[g+16>>2]=i[g+16>>2]^i[C+80>>2],i[g+20>>2]=i[g+20>>2]^i[C+84>>2],i[g+24>>2]=i[g+24>>2]^i[C+88>>2],i[g+28>>2]=i[g+28>>2]^i[C+92>>2],i[g+32>>2]=i[g+32>>2]^i[C+96>>2],i[g+36>>2]=i[g+36>>2]^i[C+100>>2],i[g+40>>2]=i[g+40>>2]^i[C+104>>2],i[g+44>>2]=i[g+44>>2]^i[C+108>>2],i[g+48>>2]=i[g+48>>2]^i[C+112>>2],i[g+52>>2]=i[g+52>>2]^i[C+116>>2],i[g+56>>2]=i[g+56>>2]^i[C+120>>2],i[g+60>>2]=i[g+60>>2]^i[C+124>>2],VA(g),C=B+a|0,B=i[g+60>>2],i[C+56>>2]=i[g+56>>2],i[C+60>>2]=B,B=i[g+52>>2],i[C+48>>2]=i[g+48>>2],i[C+52>>2]=B,B=i[g+44>>2],i[C+40>>2]=i[g+40>>2],i[C+44>>2]=B,B=i[g+36>>2],i[C+32>>2]=i[g+32>>2],i[C+36>>2]=B,B=i[g+28>>2],i[C+24>>2]=i[g+24>>2],i[C+28>>2]=B,B=i[g+20>>2],i[C+16>>2]=i[g+16>>2],i[C+20>>2]=B,B=i[g+12>>2],i[C+8>>2]=i[g+8>>2],i[C+12>>2]=B,B=i[g+4>>2],i[C>>2]=i[g>>2],i[C+4>>2]=B,Q>>>0>(E=E+2|0)>>>0;);}function rA(A,I,g,C){var B=0,Q=0,E=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0;if(h=i[A+36>>2],y=i[A+32>>2],s=i[A+28>>2],r=i[A+24>>2],e=i[A+20>>2],!C&g>>>0>=16|C)for(M=!o[A+80|0]<<24,p=i[A+4>>2],K=a(p,5),n=i[A+8>>2],N=a(n,5),F=i[A+12>>2],S=a(F,5),G=i[A+16>>2],k=a(G,5),w=i[A>>2];B=Ig(E=((o[I+3|0]|o[I+4|0]<<8|o[I+5|0]<<16|o[I+6|0]<<24)>>>2&67108863)+r|0,0,F,0),c=f,e=(_=Ig(r=(67108863&(o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24))+e|0,0,G,0))+B|0,B=f+c|0,B=_>>>0>e>>>0?B+1|0:B,c=Ig(s=((o[I+6|0]|o[I+7|0]<<8|o[I+8|0]<<16|o[I+9|0]<<24)>>>4&67108863)+s|0,0,n,0),B=f+B|0,B=c>>>0>(e=c+e|0)>>>0?B+1|0:B,c=Ig(y=((o[I+9|0]|o[I+10|0]<<8|o[I+11|0]<<16|o[I+12|0]<<24)>>>6|0)+y|0,0,p,0),B=f+B|0,B=c>>>0>(e=c+e|0)>>>0?B+1|0:B,c=Ig(h=h+M+((o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24)>>>8)|0,0,w,0),B=f+B|0,U=e=c+e|0,e=c>>>0>e>>>0?B+1|0:B,B=Ig(E,0,n,0),c=f,_=Ig(r,0,F,0),Q=f+c|0,Q=(B=_+B|0)>>>0<_>>>0?Q+1|0:Q,c=(_=Ig(s,0,p,0))+B|0,B=f+Q|0,B=_>>>0>c>>>0?B+1|0:B,_=Ig(y,0,w,0),B=f+B|0,B=_>>>0>(c=_+c|0)>>>0?B+1|0:B,_=Ig(h,0,k,0),B=f+B|0,b=c=_+c|0,c=_>>>0>c>>>0?B+1|0:B,B=Ig(E,0,p,0),t=f,_=(Q=Ig(r,0,n,0))+B|0,B=f+t|0,B=Q>>>0>_>>>0?B+1|0:B,t=Ig(s,0,w,0),Q=f+B|0,Q=(_=t+_|0)>>>0<t>>>0?Q+1|0:Q,t=Ig(y,0,k,0),B=f+Q|0,B=(_=t+_|0)>>>0<t>>>0?B+1|0:B,t=Ig(h,0,S,0),B=f+B|0,H=_=t+_|0,_=_>>>0<t>>>0?B+1|0:B,B=Ig(E,0,w,0),Q=f,t=(D=Ig(r,0,p,0))+B|0,B=f+Q|0,B=t>>>0<D>>>0?B+1|0:B,Q=Ig(s,0,k,0),B=f+B|0,B=Q>>>0>(t=Q+t|0)>>>0?B+1|0:B,D=Ig(y,0,S,0),Q=f+B|0,Q=(t=D+t|0)>>>0<D>>>0?Q+1|0:Q,D=Ig(h,0,N,0),B=f+Q|0,B=(t=D+t|0)>>>0<D>>>0?B+1|0:B,D=t,t=B,B=Ig(E,0,k,0),Q=f,E=(r=Ig(r,0,w,0))+B|0,B=f+Q|0,B=E>>>0<r>>>0?B+1|0:B,r=Ig(s,0,S,0),B=f+B|0,B=(E=r+E|0)>>>0<r>>>0?B+1|0:B,r=Ig(y,0,N,0),B=f+B|0,B=(E=r+E|0)>>>0<r>>>0?B+1|0:B,r=Ig(h,0,K,0),Q=f+B|0,Q=(E=r+E|0)>>>0<r>>>0?Q+1|0:Q,r=E,B=t,B=(E=(s=(67108863&Q)<<6|E>>>26)+D|0)>>>0<s>>>0?B+1|0:B,s=E,y=(67108863&B)<<6|E>>>26,B=_,B=(E=y+H|0)>>>0<y>>>0?B+1|0:B,y=E,Q=c,h=B=(E=(67108863&B)<<6|E>>>26)+b|0,c=(67108863&(Q=B>>>0<E>>>0?Q+1|0:Q))<<6|B>>>26,B=e,r=(67108863&s)+((B=a((67108863&((E=c+U|0)>>>0<c>>>0?B+1:B))<<6|E>>>26,5)+(67108863&r)|0)>>>26|0)|0,s=67108863&y,y=67108863&h,h=67108863&E,e=67108863&B,I=I+16|0,!(C=C-(g>>>0<16)|0)&(g=g-16|0)>>>0>15|C;);i[A+20>>2]=e,i[A+36>>2]=h,i[A+32>>2]=y,i[A+28>>2]=s,i[A+24>>2]=r}function eA(A,I,g,B){A|=0,I|=0;var i=0;return i=-1,(B|=0)-65>>>0<4294967232|(g|=0)>>>0>64||(g&&I?(s=i=s-128|0,!I|((B&=255)-65&255)>>>0<=191|((g&=255)-65&255)>>>0<=191?(rC(),Q()):(bg(A- -64|0,0,293),C[A+56|0]=121,C[A+57|0]=33,C[A+58|0]=126,C[A+59|0]=19,C[A+60|0]=25,C[A+61|0]=205,C[A+62|0]=224,C[A+63|0]=91,C[A+48|0]=107,C[A+49|0]=189,C[A+50|0]=65,C[A+51|0]=251,C[A+52|0]=171,C[A+53|0]=217,C[A+54|0]=131,C[A+55|0]=31,C[A+40|0]=31,C[A+41|0]=108,C[A+42|0]=62,C[A+43|0]=43,C[A+44|0]=140,C[A+45|0]=104,C[A+46|0]=5,C[A+47|0]=155,C[A+32|0]=209,C[A+33|0]=130,C[A+34|0]=230,C[A+35|0]=173,C[A+36|0]=127,C[A+37|0]=82,C[A+38|0]=14,C[A+39|0]=81,C[A+24|0]=241,C[A+25|0]=54,C[A+26|0]=29,C[A+27|0]=95,C[A+28|0]=58,C[A+29|0]=245,C[A+30|0]=79,C[A+31|0]=165,C[A+16|0]=43,C[A+17|0]=248,C[A+18|0]=148,C[A+19|0]=254,C[A+20|0]=114,C[A+21|0]=243,C[A+22|0]=110,C[A+23|0]=60,C[A+8|0]=59,C[A+9|0]=167,C[A+10|0]=202,C[A+11|0]=132,C[A+12|0]=133,C[A+13|0]=174,C[A+14|0]=103,C[A+15|0]=187,B=-222443256^(g<<8|B),C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,B=g>>>24^1779033703,C[A+4|0]=B,C[A+5|0]=B>>>8,C[A+6|0]=B>>>16,C[A+7|0]=B>>>24,g=Ng(bg(i,0,128),I,g),Ng(A+96|0,g,128),I=128+(o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)|0,C[A+352|0]=I,C[A+353|0]=I>>>8,C[A+354|0]=I>>>16,C[A+355|0]=I>>>24,XC(g,128),s=g+128|0)):(((I=255&B)-65&255)>>>0<=191&&(rC(),Q()),bg(A- -64|0,0,293),C[A+56|0]=121,C[A+57|0]=33,C[A+58|0]=126,C[A+59|0]=19,C[A+60|0]=25,C[A+61|0]=205,C[A+62|0]=224,C[A+63|0]=91,C[A+48|0]=107,C[A+49|0]=189,C[A+50|0]=65,C[A+51|0]=251,C[A+52|0]=171,C[A+53|0]=217,C[A+54|0]=131,C[A+55|0]=31,C[A+40|0]=31,C[A+41|0]=108,C[A+42|0]=62,C[A+43|0]=43,C[A+44|0]=140,C[A+45|0]=104,C[A+46|0]=5,C[A+47|0]=155,C[A+32|0]=209,C[A+33|0]=130,C[A+34|0]=230,C[A+35|0]=173,C[A+36|0]=127,C[A+37|0]=82,C[A+38|0]=14,C[A+39|0]=81,C[A+24|0]=241,C[A+25|0]=54,C[A+26|0]=29,C[A+27|0]=95,C[A+28|0]=58,C[A+29|0]=245,C[A+30|0]=79,C[A+31|0]=165,C[A+16|0]=43,C[A+17|0]=248,C[A+18|0]=148,C[A+19|0]=254,C[A+20|0]=114,C[A+21|0]=243,C[A+22|0]=110,C[A+23|0]=60,C[A+8|0]=59,C[A+9|0]=167,C[A+10|0]=202,C[A+11|0]=132,C[A+12|0]=133,C[A+13|0]=174,C[A+14|0]=103,C[A+15|0]=187,I^=-222443256,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,C[A+4|0]=103,C[A+5|0]=230,C[A+6|0]=9,C[A+7|0]=106),i=0),0|i}function yA(A,I,g,B){A|=0,I|=0,g|=0;var Q=0,i=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0;for((B|=0)?(i=o[B+8|0]|o[B+9|0]<<8|o[B+10|0]<<16|o[B+11|0]<<24,E=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,Q=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,t=o[B+12|0]|o[B+13|0]<<8|o[B+14|0]<<16|o[B+15|0]<<24):(i=2036477234,E=857760878,Q=1634760805,t=1797285236),a=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,e=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,_=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,y=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,c=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,w=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,s=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,B=o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24,h=o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24,D=o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24,I=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,g=o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24;r=g,g=Lg((f=I)^(I=g+Q|0),16),r=s=Lg(r^(Q=g+s|0),12),p=Lg((f=I+s|0)^g,8),I=Lg(r^(s=p+Q|0),7),a=Lg((g=B+t|0)^a,16),B=Lg((y=a+y|0)^B,12),r=h,i=Lg((t=i+h|0)^e,16),Q=Lg(r^(h=i+c|0),12),c=Lg((c=i)^(i=Q+t|0),8),g=Lg(c^(t=(n=g+B|0)+I|0),16),e=Lg((E=E+D|0)^_,16),D=Lg((_=e+w|0)^D,12),r=I,I=Lg((E=D+E|0)^e,8),r=Lg(r^(_=(k=I+_|0)+g|0),12),e=Lg(g^(t=r+t|0),8),g=Lg((w=e+_|0)^r,7),a=Lg(a^n,8),B=Lg((y=a+y|0)^B,7),_=Lg((i=B+i|0)^I,16),B=Lg((I=_+s|0)^B,12),_=Lg(_^(i=B+i|0),8),B=Lg((s=I+_|0)^B,7),I=Lg((c=c+h|0)^Q,7),h=Lg((E=I+E|0)^p,16),p=Lg(I^(Q=h+y|0),12),I=Lg(h^(E=p+E|0),8),h=Lg((y=Q+I|0)^p,7),r=c,c=a,Q=Lg(D^k,7),c=Lg(c^(a=Q+f|0),16),f=Lg(Q^(D=r+c|0),12),a=Lg(c^(Q=f+a|0),8),D=Lg((c=D+a|0)^f,7),10!=(0|(F=F+1|0)););return C[0|A]=Q,C[A+1|0]=Q>>>8,C[A+2|0]=Q>>>16,C[A+3|0]=Q>>>24,C[A+28|0]=a,C[A+29|0]=a>>>8,C[A+30|0]=a>>>16,C[A+31|0]=a>>>24,C[A+24|0]=e,C[A+25|0]=e>>>8,C[A+26|0]=e>>>16,C[A+27|0]=e>>>24,C[A+20|0]=_,C[A+21|0]=_>>>8,C[A+22|0]=_>>>16,C[A+23|0]=_>>>24,C[A+16|0]=I,C[A+17|0]=I>>>8,C[A+18|0]=I>>>16,C[A+19|0]=I>>>24,C[A+12|0]=t,C[A+13|0]=t>>>8,C[A+14|0]=t>>>16,C[A+15|0]=t>>>24,C[A+8|0]=i,C[A+9|0]=i>>>8,C[A+10|0]=i>>>16,C[A+11|0]=i>>>24,C[A+4|0]=E,C[A+5|0]=E>>>8,C[A+6|0]=E>>>16,C[A+7|0]=E>>>24,0}function sA(A,I,g){var C,B,Q,o,E,a,_,c,t,r,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0;y=i[I+4>>2],e=i[I+44>>2],h=i[I+8>>2],D=i[I+48>>2],f=i[I+12>>2],p=i[I+52>>2],w=i[I+16>>2],n=i[I+56>>2],k=i[I+20>>2],F=i[I+60>>2],S=i[I+24>>2],N=i[(s=I- -64|0)>>2],G=i[I+28>>2],M=i[I+68>>2],K=i[I+32>>2],U=i[I+72>>2],H=i[I+36>>2],Y=i[I+76>>2],i[A>>2]=i[I>>2]+i[I+40>>2],i[A+36>>2]=H+Y,i[A+32>>2]=K+U,i[A+28>>2]=G+M,i[A+24>>2]=S+N,i[A+20>>2]=k+F,i[A+16>>2]=w+n,i[A+12>>2]=f+p,i[A+8>>2]=h+D,i[A+4>>2]=e+y,e=i[I+4>>2],h=i[I+44>>2],D=i[I+8>>2],f=i[I+48>>2],p=i[I+12>>2],w=i[I+52>>2],n=i[I+16>>2],k=i[I+56>>2],F=i[I+20>>2],S=i[I+60>>2],N=i[I+24>>2],s=i[s>>2],y=i[I+28>>2],G=i[I+68>>2],M=i[I+32>>2],K=i[I+72>>2],U=i[I>>2],H=i[I+40>>2],i[A+76>>2]=i[I+76>>2]-i[I+36>>2],i[A+72>>2]=K-M,i[A+68>>2]=G-y,i[(y=A- -64|0)>>2]=s-N,i[A+60>>2]=S-F,i[A+56>>2]=k-n,i[A+52>>2]=w-p,i[A+48>>2]=f-D,i[A+44>>2]=h-e,i[A+40>>2]=H-U,b(A+80|0,A,g),b(e=A+40|0,e,g+40|0),b(A+120|0,g+120|0,I+120|0),b(A,I+80|0,g+80|0),H=i[A+4>>2],Y=i[A+8>>2],Q=i[A+12>>2],o=i[A+16>>2],E=i[A+20>>2],a=i[A+24>>2],_=i[A+28>>2],c=i[A+32>>2],t=i[A+36>>2],I=i[A+44>>2],g=i[A+84>>2],e=i[A+48>>2],h=i[A+88>>2],D=i[A+52>>2],f=i[A+92>>2],p=i[A+56>>2],w=i[A+96>>2],n=i[A+60>>2],k=i[A+100>>2],F=i[y>>2],S=i[A+104>>2],s=i[A+68>>2],N=i[A+108>>2],G=i[A+72>>2],M=i[A+112>>2],r=i[A>>2],K=i[A+40>>2],U=i[A+80>>2],C=i[A+76>>2],B=i[A+116>>2],i[A+76>>2]=C+B,i[A+72>>2]=G+M,i[A+68>>2]=s+N,i[y>>2]=F+S,i[A+60>>2]=n+k,i[A+56>>2]=p+w,i[A+52>>2]=D+f,i[A+48>>2]=e+h,i[A+44>>2]=I+g,i[A+40>>2]=K+U,i[A+36>>2]=B-C,i[A+32>>2]=M-G,i[A+28>>2]=N-s,i[A+24>>2]=S-F,i[A+20>>2]=k-n,i[A+16>>2]=w-p,i[A+12>>2]=f-D,i[A+8>>2]=h-e,i[A+4>>2]=g-I,i[A>>2]=U-K,I=t<<1,g=i[A+156>>2],i[A+156>>2]=I-g,y=c<<1,e=i[A+152>>2],i[A+152>>2]=y-e,h=_<<1,D=i[A+148>>2],i[A+148>>2]=h-D,f=a<<1,p=i[A+144>>2],i[A+144>>2]=f-p,w=E<<1,n=i[A+140>>2],i[A+140>>2]=w-n,k=o<<1,F=i[A+136>>2],i[A+136>>2]=k-F,S=Q<<1,s=i[A+132>>2],i[A+132>>2]=S-s,N=Y<<1,G=i[A+128>>2],i[A+128>>2]=N-G,M=H<<1,K=i[A+124>>2],i[A+124>>2]=M-K,U=r<<1,H=i[A+120>>2],i[A+120>>2]=U-H,i[A+112>>2]=e+y,i[A+108>>2]=h+D,i[A+104>>2]=f+p,i[A+100>>2]=w+n,i[A+96>>2]=k+F,i[A+92>>2]=S+s,i[A+88>>2]=N+G,i[A+84>>2]=M+K,i[A+80>>2]=U+H,i[A+116>>2]=I+g}function hA(A,I,g){var C,B,Q,o,E,a,_,c,t,r,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0;y=i[I+4>>2],e=i[I+44>>2],h=i[I+8>>2],D=i[I+48>>2],f=i[I+12>>2],p=i[I+52>>2],w=i[I+16>>2],n=i[I+56>>2],k=i[I+20>>2],F=i[I+60>>2],S=i[I+24>>2],N=i[(s=I- -64|0)>>2],G=i[I+28>>2],M=i[I+68>>2],K=i[I+32>>2],U=i[I+72>>2],H=i[I+36>>2],Y=i[I+76>>2],i[A>>2]=i[I>>2]+i[I+40>>2],i[A+36>>2]=H+Y,i[A+32>>2]=K+U,i[A+28>>2]=G+M,i[A+24>>2]=S+N,i[A+20>>2]=k+F,i[A+16>>2]=w+n,i[A+12>>2]=f+p,i[A+8>>2]=h+D,i[A+4>>2]=e+y,e=i[I+4>>2],h=i[I+44>>2],D=i[I+8>>2],f=i[I+48>>2],p=i[I+12>>2],w=i[I+52>>2],n=i[I+16>>2],k=i[I+56>>2],F=i[I+20>>2],S=i[I+60>>2],N=i[I+24>>2],s=i[s>>2],y=i[I+28>>2],G=i[I+68>>2],M=i[I+32>>2],K=i[I+72>>2],U=i[I>>2],H=i[I+40>>2],i[A+76>>2]=i[I+76>>2]-i[I+36>>2],i[A+72>>2]=K-M,i[A+68>>2]=G-y,i[(y=A- -64|0)>>2]=s-N,i[A+60>>2]=S-F,i[A+56>>2]=k-n,i[A+52>>2]=w-p,i[A+48>>2]=f-D,i[A+44>>2]=h-e,i[A+40>>2]=H-U,b(A+80|0,A,g+40|0),b(e=A+40|0,e,g),b(A+120|0,g+120|0,I+120|0),b(A,I+80|0,g+80|0),H=i[A+4>>2],Y=i[A+8>>2],Q=i[A+12>>2],o=i[A+16>>2],E=i[A+20>>2],a=i[A+24>>2],_=i[A+28>>2],c=i[A+32>>2],t=i[A+36>>2],I=i[A+44>>2],g=i[A+84>>2],e=i[A+48>>2],h=i[A+88>>2],D=i[A+52>>2],f=i[A+92>>2],p=i[A+56>>2],w=i[A+96>>2],n=i[A+60>>2],k=i[A+100>>2],F=i[y>>2],S=i[A+104>>2],s=i[A+68>>2],N=i[A+108>>2],G=i[A+72>>2],M=i[A+112>>2],r=i[A>>2],K=i[A+40>>2],U=i[A+80>>2],C=i[A+76>>2],B=i[A+116>>2],i[A+76>>2]=C+B,i[A+72>>2]=G+M,i[A+68>>2]=s+N,i[y>>2]=F+S,i[A+60>>2]=n+k,i[A+56>>2]=p+w,i[A+52>>2]=D+f,i[A+48>>2]=e+h,i[A+44>>2]=I+g,i[A+40>>2]=K+U,i[A+36>>2]=B-C,i[A+32>>2]=M-G,i[A+28>>2]=N-s,i[A+24>>2]=S-F,i[A+20>>2]=k-n,i[A+16>>2]=w-p,i[A+12>>2]=f-D,i[A+8>>2]=h-e,i[A+4>>2]=g-I,i[A>>2]=U-K,I=i[A+156>>2],g=t<<1,i[A+156>>2]=I+g,y=i[A+152>>2],e=c<<1,i[A+152>>2]=y+e,h=i[A+148>>2],D=_<<1,i[A+148>>2]=h+D,f=i[A+144>>2],p=a<<1,i[A+144>>2]=f+p,w=i[A+140>>2],n=E<<1,i[A+140>>2]=w+n,k=i[A+136>>2],F=o<<1,i[A+136>>2]=k+F,S=i[A+132>>2],s=Q<<1,i[A+132>>2]=S+s,N=i[A+128>>2],G=Y<<1,i[A+128>>2]=N+G,M=i[A+124>>2],K=H<<1,i[A+124>>2]=M+K,U=i[A+120>>2],H=r<<1,i[A+120>>2]=U+H,i[A+112>>2]=e-y,i[A+108>>2]=D-h,i[A+104>>2]=p-f,i[A+100>>2]=n-w,i[A+96>>2]=F-k,i[A+92>>2]=s-S,i[A+88>>2]=G-N,i[A+84>>2]=K-M,i[A+80>>2]=H-U,i[A+116>>2]=g-I}function DA(A,I,g){var C,B,Q,o,E,a,_,c,t,r,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0;y=i[I+4>>2],e=i[I+44>>2],h=i[I+8>>2],D=i[I+48>>2],f=i[I+12>>2],p=i[I+52>>2],w=i[I+16>>2],n=i[I+56>>2],k=i[I+20>>2],F=i[I+60>>2],S=i[I+24>>2],N=i[(s=I- -64|0)>>2],G=i[I+28>>2],M=i[I+68>>2],K=i[I+32>>2],U=i[I+72>>2],H=i[I+36>>2],Y=i[I+76>>2],i[A>>2]=i[I>>2]+i[I+40>>2],i[A+36>>2]=H+Y,i[A+32>>2]=K+U,i[A+28>>2]=G+M,i[A+24>>2]=S+N,i[A+20>>2]=k+F,i[A+16>>2]=w+n,i[A+12>>2]=f+p,i[A+8>>2]=h+D,i[A+4>>2]=e+y,e=i[I+4>>2],h=i[I+44>>2],D=i[I+8>>2],f=i[I+48>>2],p=i[I+12>>2],w=i[I+52>>2],n=i[I+16>>2],k=i[I+56>>2],F=i[I+20>>2],S=i[I+60>>2],N=i[I+24>>2],s=i[s>>2],y=i[I+28>>2],G=i[I+68>>2],M=i[I+32>>2],K=i[I+72>>2],U=i[I>>2],H=i[I+40>>2],i[A+76>>2]=i[I+76>>2]-i[I+36>>2],i[A+72>>2]=K-M,i[A+68>>2]=G-y,i[(y=A- -64|0)>>2]=s-N,i[A+60>>2]=S-F,i[A+56>>2]=k-n,i[A+52>>2]=w-p,i[A+48>>2]=f-D,i[A+44>>2]=h-e,i[A+40>>2]=H-U,b(A+80|0,A,g),b(e=A+40|0,e,g+40|0),b(A+120|0,g+80|0,I+120|0),H=i[I+84>>2],Y=i[I+88>>2],Q=i[I+92>>2],o=i[I+96>>2],E=i[I+100>>2],a=i[I+104>>2],_=i[I+108>>2],c=i[I+112>>2],t=i[I+116>>2],g=i[A+44>>2],e=i[A+84>>2],h=i[A+48>>2],D=i[A+88>>2],f=i[A+52>>2],p=i[A+92>>2],w=i[A+56>>2],n=i[A+96>>2],k=i[A+60>>2],F=i[A+100>>2],S=i[y>>2],s=i[A+104>>2],N=i[A+68>>2],G=i[A+108>>2],M=i[A+72>>2],K=i[A+112>>2],r=i[I+80>>2],I=i[A+40>>2],U=i[A+80>>2],C=i[A+76>>2],B=i[A+116>>2],i[A+76>>2]=C+B,i[A+72>>2]=M+K,i[A+68>>2]=N+G,i[y>>2]=S+s,i[A+60>>2]=k+F,i[A+56>>2]=w+n,i[A+52>>2]=f+p,i[A+48>>2]=h+D,i[A+44>>2]=g+e,i[A+40>>2]=I+U,i[A+36>>2]=B-C,i[A+32>>2]=K-M,i[A+28>>2]=G-N,i[A+24>>2]=s-S,i[A+20>>2]=F-k,i[A+16>>2]=n-w,i[A+12>>2]=p-f,i[A+8>>2]=D-h,i[A+4>>2]=e-g,i[A>>2]=U-I,I=t<<1,g=i[A+156>>2],i[A+156>>2]=I-g,y=c<<1,e=i[A+152>>2],i[A+152>>2]=y-e,h=_<<1,D=i[A+148>>2],i[A+148>>2]=h-D,f=a<<1,p=i[A+144>>2],i[A+144>>2]=f-p,w=E<<1,n=i[A+140>>2],i[A+140>>2]=w-n,k=o<<1,F=i[A+136>>2],i[A+136>>2]=k-F,S=Q<<1,s=i[A+132>>2],i[A+132>>2]=S-s,N=Y<<1,G=i[A+128>>2],i[A+128>>2]=N-G,M=H<<1,K=i[A+124>>2],i[A+124>>2]=M-K,U=r<<1,H=i[A+120>>2],i[A+120>>2]=U-H,i[A+112>>2]=e+y,i[A+108>>2]=h+D,i[A+104>>2]=f+p,i[A+100>>2]=w+n,i[A+96>>2]=k+F,i[A+92>>2]=S+s,i[A+88>>2]=N+G,i[A+84>>2]=M+K,i[A+80>>2]=U+H,i[A+116>>2]=I+g}function fA(A,I){var g,C,B,Q,E,a,_,c,t,r,e,y,s,h,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0;s=o[I+31|0],g=o[I+30|0],C=o[I+29|0],B=o[I+6|0],Q=o[I+5|0],E=o[I+4|0],a=o[I+9|0],_=o[I+8|0],c=o[I+7|0],t=o[I+12|0],K=o[I+11|0],U=o[I+10|0],r=o[I+15|0],b=o[I+14|0],e=o[I+13|0],S=o[I+28|0],M=o[I+27|0],N=o[I+26|0],F=o[I+25|0],n=o[I+24|0],w=o[I+23|0],h=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,k=(p=o[I+21|0])<<15,p=D=p>>>17|0,G=k,G|=(k=o[I+20|0])<<7,k=(D=k>>>25|0)|p,p=(D=o[I+22|0])>>>9|0,D=D<<23|G,p|=k,y=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,I=0,k=D,D=(33554431&(I=(G=y+16777216|0)>>>0<16777216?1:I))<<7|G>>>25,I=(I>>>25|0)+p|0,D=(p=k=k+D|0)>>>0<D>>>0?I+1|0:I,I=(k=p+33554432|0)>>>0<33554432?D+1|0:D,i[A+24>>2]=p-(-67108864&k),D=(p=w>>>27|0)|n>>>19|F>>>11,p=w=(n=F<<21|(w=n<<13|w<<5))+(p=(67108863&(p=I))<<6|k>>>26)|0,I=D,D=(w=n+16777216|0)>>>0<16777216?I+1|0:I,i[A+28>>2]=p-(1040187392&w),p=(D=(I=D)>>>25|0)+(p=M>>>20|N>>>28|S>>>12)|0,I=p=(D=w=(I=(33554431&I)<<7|w>>>25)+(M<<12|N<<4|S<<20)|0)>>>0<I>>>0?p+1|0:p,w=(S=D+33554432|0)>>>0<33554432?I+1|0:I,i[A+32>>2]=D-(-67108864&S),p=t>>>13|(D=K>>>21|U>>>29),I=(p=(M=16777216+(K=K<<11|U<<3|t<<19)|0)>>>0<16777216?p+1|0:p)>>>25|0,p=(D=n=b<<10|e<<2|r<<18)+(n=(33554431&p)<<7|M>>>25)|0,D=I+(F=b>>>22|e>>>30|r>>>14)|0,I=D=p>>>0<n>>>0?D+1|0:D,n=((67108863&(I=(n=p+33554432|0)>>>0<33554432?I+1|0:I))<<6|(D=n)>>>26)+(N=y-(-33554432&G)|0)|0,i[A+20>>2]=n,i[A+16>>2]=p-(-67108864&D),D=Q>>>18|E>>>26|B>>>10,p=(D=(N=16777216+(U=Q<<14|E<<6|B<<22)|0)>>>0<16777216?D+1|0:D)>>>25|0,D=(I=n=_<<13|c<<5|a<<21)+(n=(33554431&D)<<7|N>>>25)|0,I=p+(F=_>>>19|c>>>27|a>>>11)|0,I=D>>>0<n>>>0?I+1|0:I,p=(F=D+33554432|0)>>>0<33554432?I+1|0:I,i[A+8>>2]=D-(-67108864&F),S=(w=(67108863&w)<<6|S>>>26)+(b=s<<18&33292288|g<<10|C<<2)|0,I=D=g>>>22|C>>>30,D=(w=b+16777216|0)>>>0<16777216?I+1|0:I,i[A+36>>2]=S-(33554432&w),p=K+((67108863&p)<<6|F>>>26)|0,i[A+12>>2]=p-(234881024&M),n=U-(2113929216&N)|0,p=Ig((33554431&(I=D))<<7|w>>>25,D=I>>>25|0,19,0),I=f,p=(D=p+h|0)>>>0<p>>>0?I+1|0:I,w=((67108863&(p=(I=D+33554432|0)>>>0<33554432?p+1|0:p))<<6|I>>>26)+n|0,i[A+4>>2]=w,i[A>>2]=D-(-67108864&I)}function pA(A,I,g,B,E,a,_,c){A|=0,I|=0,g|=0,B|=0,E|=0,a|=0,_|=0;var t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0;if(1==(-7&(c|=0))){A:{I:{g:{C:{B:{Q:{i:{if(B){o:{E:{if(c>>>0<=3){for(;;){y=r;a:{_:{c:{t:{for(;;){if(t=(t=(e=C[g+y|0])-65|0)&(~(90-e)&~t)>>>8&255|e+4&(~(e+65488)&~(57-e))>>>8&255|e+185&(~(e+65439)&~(122-e))>>>8&255|~(1+(16336^e))>>>8&63|~(1+(16340^e))>>>8&62,255!=(0|(t|=(t-1&1+(65470^e))>>>8&255)))break t;if(t=0,!E)break o;if(!kI(E,e))break;if((y=y+1|0)>>>0>=B>>>0)break c}r=y;break o}if(D=t+(D<<6)|0,s>>>0>1)break _;s=s+6|0;break a}r=(A=r+1|0)>>>0<B>>>0?B:A;break o}if(s=s-2|0,I>>>0<=h>>>0)break E;C[A+h|0]=D>>>s,h=h+1|0}if(t=0,!((r=y+1|0)>>>0<B>>>0))break}break o}for(;;){a:{if(t=(t=(e=C[g+y|0])-65|0)&(~(90-e)&~t)>>>8&255|e+4&(~(e+65488)&~(57-e))>>>8&255|e+185&(~(e+65439)&~(122-e))>>>8&255|~(1+(16288^e))>>>8&63|~(1+(16338^e))>>>8&62,255==(0|(t|=(t-1&1+(65470^e))>>>8&255))){if(t=0,!E)break o;if(kI(E,e)){if((y=y+1|0)>>>0>=B>>>0)break a;continue}r=y;break o}if(D=t+(D<<6)|0,s>>>0<2)s=s+6|0;else{if(s=s-2|0,I>>>0<=h>>>0)break E;C[A+h|0]=D>>>s,h=h+1|0}if(t=0,(r=y+1|0)>>>0>=B>>>0)break o;y=r;continue}break}r=(A=r+1|0)>>>0<B>>>0?B:A;break o}r=y,i[9404]=68,t=1}if(s>>>0>4)break i;A=r}else A=0;if(I=-1,t){r=A;break A}if(~(-1<<s)&D){r=A;break A}if(2&c){c=A;break B}if(s>>>0<2){c=A;break B}if(r=A>>>0>B>>>0?A:B,y=s>>>1|0,!E)break Q;for(c=A;;){if((0|c)==(0|r)){t=68;break C}if(61!=(0|(A=C[g+c|0]))){if(!kI(E,A)){t=28,r=c;break C}}else y=y-1|0;if(c=c+1|0,!y)break}break B}I=-1;break A}if(t=68,A>>>0>=B>>>0)break C;if(61!=o[A+g|0]){r=A,t=28;break C}if(c=A+y|0,1!=(0|y)){if((0|(s=A+1|0))==(0|r))break C;if(61!=o[g+s|0]){r=s,t=28;break C}if(2!=(0|y)){if((0|(A=A+2|0))==(0|r))break C;if(t=28,r=A,61!=o[A+g|0])break C}}}if(I=0,E)break g;break I}i[9404]=t;break A}if(!(B>>>0<=c>>>0)){for(;;){if(!kI(E,C[g+c|0]))break I;if((0|(c=c+1|0))==(0|B))break}c=B}}r=c,f=h}return _?i[_>>2]=g+r:(0|B)!=(0|r)&&(i[9404]=28,I=-1),a&&(i[a>>2]=f),0|I}rC(),Q()}function wA(A,I,g,B){A|=0,I|=0,g|=0;var Q=0,i=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0;for((B|=0)?(Q=o[B+12|0]|o[B+13|0]<<8|o[B+14|0]<<16|o[B+15|0]<<24,_=o[B+8|0]|o[B+9|0]<<8|o[B+10|0]<<16|o[B+11|0]<<24,c=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,B=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24):(Q=1797285236,_=2036477234,c=857760878,B=1634760805),i=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,a=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,E=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,f=o[g+28|0]|o[g+29|0]<<8|o[g+30|0]<<16|o[g+31|0]<<24,D=o[g+24|0]|o[g+25|0]<<8|o[g+26|0]<<16|o[g+27|0]<<24,p=20,s=o[g+20|0]|o[g+21|0]<<8|o[g+22|0]<<16|o[g+23|0]<<24,h=o[g+16|0]|o[g+17|0]<<8|o[g+18|0]<<16|o[g+19|0]<<24,r=o[g+12|0]|o[g+13|0]<<8|o[g+14|0]<<16|o[g+15|0]<<24,e=o[g+8|0]|o[g+9|0]<<8|o[g+10|0]<<16|o[g+11|0]<<24,y=o[g+4|0]|o[g+5|0]<<8|o[g+6|0]<<16|o[g+7|0]<<24,I=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,g=o[0|g]|o[g+1|0]<<8|o[g+2|0]<<16|o[g+3|0]<<24;t=Lg(g+c|0,7)^i,w=Lg(t+c|0,9)^D,r=Lg(B+s|0,7)^r,n=Lg(r+B|0,9)^a,k=Lg(n+r|0,13)^s,e=Lg(Q+h|0,7)^e,E=Lg(e+Q|0,9)^E,a=Lg(E+e|0,13)^h,Q=Lg(E+a|0,18)^Q,i=Lg(I+_|0,7)^f,s=k^Lg(Q+i|0,7),D=w^Lg(s+Q|0,9),f=Lg(s+D|0,13)^i,Q=Lg(D+f|0,18)^Q,y=Lg(i+_|0,9)^y,F=Lg(y+i|0,13)^I,I=Lg(F+y|0,18)^_,h=Lg(I+t|0,7)^a,a=Lg(h+I|0,9)^n,i=Lg(a+h|0,13)^t,_=Lg(i+a|0,18)^I,t=Lg(t+w|0,13)^g,g=Lg(t+w|0,18)^c,I=Lg(g+r|0,7)^F,E=Lg(I+g|0,9)^E,r=Lg(I+E|0,13)^r,c=Lg(E+r|0,18)^g,B=Lg(n+k|0,18)^B,g=Lg(B+e|0,7)^t,y=Lg(g+B|0,9)^y,e=Lg(g+y|0,13)^e,B=Lg(y+e|0,18)^B,t=p>>>0>2,p=p-2|0,t;);return C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+28|0]=i,C[A+29|0]=i>>>8,C[A+30|0]=i>>>16,C[A+31|0]=i>>>24,C[A+24|0]=a,C[A+25|0]=a>>>8,C[A+26|0]=a>>>16,C[A+27|0]=a>>>24,C[A+20|0]=E,C[A+21|0]=E>>>8,C[A+22|0]=E>>>16,C[A+23|0]=E>>>24,C[A+16|0]=I,C[A+17|0]=I>>>8,C[A+18|0]=I>>>16,C[A+19|0]=I>>>24,C[A+12|0]=Q,C[A+13|0]=Q>>>8,C[A+14|0]=Q>>>16,C[A+15|0]=Q>>>24,C[A+8|0]=_,C[A+9|0]=_>>>8,C[A+10|0]=_>>>16,C[A+11|0]=_>>>24,C[A+4|0]=c,C[A+5|0]=c>>>8,C[A+6|0]=c>>>16,C[A+7|0]=c>>>24,0}function nA(A,I){var g,B,Q,E,a=0,_=0,c=0,t=0,r=0,e=0;for(s=g=s-480|0;c=(_=g+288|0)+(a<<1)|0,t=o[I+a|0],C[c+1|0]=t>>>4,C[0|c]=15&t,_=_+((c=1|a)<<1)|0,c=o[I+c|0],C[_+1|0]=c>>>4,C[0|_]=15&c,32!=(0|(a=a+2|0)););for(I=0;a=8+(_=(a=I)+o[0|(I=(g+288|0)+r|0)]|0)|0,C[0|I]=_-(240&a),a=8+(_=o[I+1|0]+(a<<24>>24>>4)|0)|0,C[I+1|0]=_-(240&a),a=8+(_=o[I+2|0]+(a<<24>>24>>4)|0)|0,C[I+2|0]=_-(240&a),I=a<<24>>24>>4,63!=(0|(r=r+3|0)););for(C[g+351|0]=o[g+351|0]+I,i[A+32>>2]=0,i[A+36>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+16>>2]=0,i[A+20>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0,i[A>>2]=0,i[A+4>>2]=0,i[A+44>>2]=0,i[A+48>>2]=0,i[A+40>>2]=1,i[A+52>>2]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+64>>2]=0,i[A+68>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,i[A+80>>2]=1,bg(A+84|0,0,76),Q=A+120|0,r=A+80|0,I=A+40|0,_=g+208|0,B=g+168|0,c=g+248|0,a=1;zA(e=g+8|0,a>>>1|0,C[(g+288|0)+a|0]),DA(t=g+128|0,A,e),b(A,t,c),b(I,B,_),b(r,_,c),b(Q,t,B),e=a>>>0<62,a=a+2|0,e;);for(a=i[A+36>>2],i[g+392>>2]=i[A+32>>2],i[g+396>>2]=a,a=i[A+28>>2],i[g+384>>2]=i[A+24>>2],i[g+388>>2]=a,a=i[A+20>>2],i[g+376>>2]=i[A+16>>2],i[g+380>>2]=a,a=i[A+12>>2],i[g+368>>2]=i[A+8>>2],i[g+372>>2]=a,a=i[A+4>>2],i[g+360>>2]=i[A>>2],i[g+364>>2]=a,a=i[I+12>>2],i[g+408>>2]=i[I+8>>2],i[g+412>>2]=a,a=i[I+20>>2],i[g+416>>2]=i[I+16>>2],i[g+420>>2]=a,a=i[I+28>>2],i[g+424>>2]=i[I+24>>2],i[g+428>>2]=a,a=i[I+36>>2],i[g+432>>2]=i[I+32>>2],i[g+436>>2]=a,a=i[I+4>>2],i[g+400>>2]=i[I>>2],i[g+404>>2]=a,a=i[r+12>>2],i[g+448>>2]=i[r+8>>2],i[g+452>>2]=a,a=i[r+20>>2],i[g+456>>2]=i[r+16>>2],i[g+460>>2]=a,a=i[r+28>>2],i[g+464>>2]=i[r+24>>2],i[g+468>>2]=a,a=i[r+36>>2],i[g+472>>2]=i[r+32>>2],i[g+476>>2]=a,a=i[r+4>>2],i[g+440>>2]=i[r>>2],i[g+444>>2]=a,KA(t,a=g+360|0),b(a,t,c),b(e=g+400|0,B,_),b(E=g+440|0,_,c),KA(t,a),b(a,t,c),b(e,B,_),b(E,_,c),KA(t,a),b(a,t,c),b(e,B,_),b(E,_,c),KA(t,a),b(A,t,c),b(I,B,_),b(r,_,c),b(Q,t,B),a=0;zA(e=g+8|0,a>>>1|0,C[(g+288|0)+a|0]),DA(t=g+128|0,A,e),b(A,t,c),b(I,B,_),b(r,_,c),b(Q,t,B),t=a>>>0<62,a=a+2|0,t;);s=g+480|0}function kA(A,I){A|=0;var g,C,B,Q,i,o=0,E=0,a=0,_=0,c=0,t=0;for(s=g=s-736|0,n(c=g+704|0,I|=0,I),n(E=g+224|0,I,c),n(_=g+672|0,I,E),n(a=g+640|0,_,_),n(C=g+416|0,c,a),n(c=g+320|0,I,C),n(o=g+608|0,a,a),n(a=g+288|0,c,c),n(t=g+576|0,C,a),n(i=g+448|0,o,a),n(B=g+544|0,t,t),n(t=g+384|0,o,B),n(Q=g+352|0,E,t),n(E=g+192|0,o,Q),n(o=g+160|0,_,E),n(g+96|0,_,o),n(E=g+512|0,B,Q),n(o=g+480|0,_,E),n(E=g+256|0,i,o),n(g+128|0,a,E),n(a=g- -64|0,t,o),n(o=g+32|0,_,a),n(g,C,o),n(A,c,g),_=0;n(A,A,A),126!=(0|(_=_+1|0)););return n(A,A,g+352|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+704|0),n(A,A,g),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+160|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+256|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g- -64|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+96|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+320|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+512|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+192|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+480|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+128|0),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,A),n(A,A,g+32|0),s=g+736|0,0-GI(I,32)|0}function FA(A,I,g){A|=0;var B,Q,i,E,a=0,_=0,c=0,t=0,r=0;return s=i=s-160|0,FI(I|=0,g|=0,32,0),C[0|I]=248&o[0|I],C[I+31|0]=63&o[I+31|0]|64,nA(i,I),tg(A,i),_=o[(Q=g)+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24,a=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,c=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,t=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,r=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,g=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,E=o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24,B=I,I=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,C[B+24|0]=I,C[B+25|0]=I>>>8,C[B+26|0]=I>>>16,C[B+27|0]=I>>>24,C[B+28|0]=E,C[B+29|0]=E>>>8,C[B+30|0]=E>>>16,C[B+31|0]=E>>>24,C[B+16|0]=c,C[B+17|0]=c>>>8,C[B+18|0]=c>>>16,C[B+19|0]=c>>>24,C[B+20|0]=t,C[B+21|0]=t>>>8,C[B+22|0]=t>>>16,C[B+23|0]=t>>>24,C[B+8|0]=_,C[B+9|0]=_>>>8,C[B+10|0]=_>>>16,C[B+11|0]=_>>>24,C[B+12|0]=a,C[B+13|0]=a>>>8,C[B+14|0]=a>>>16,C[B+15|0]=a>>>24,C[0|B]=r,C[B+1|0]=r>>>8,C[B+2|0]=r>>>16,C[B+3|0]=r>>>24,C[B+4|0]=g,C[B+5|0]=g>>>8,C[B+6|0]=g>>>16,C[B+7|0]=g>>>24,c=o[(a=A)+8|0]|o[a+9|0]<<8|o[a+10|0]<<16|o[a+11|0]<<24,t=o[a+12|0]|o[a+13|0]<<8|o[a+14|0]<<16|o[a+15|0]<<24,r=o[a+16|0]|o[a+17|0]<<8|o[a+18|0]<<16|o[a+19|0]<<24,g=o[a+20|0]|o[a+21|0]<<8|o[a+22|0]<<16|o[a+23|0]<<24,I=o[0|a]|o[a+1|0]<<8|o[a+2|0]<<16|o[a+3|0]<<24,A=o[a+4|0]|o[a+5|0]<<8|o[a+6|0]<<16|o[a+7|0]<<24,_=o[a+28|0]|o[a+29|0]<<8|o[a+30|0]<<16|o[a+31|0]<<24,a=o[a+24|0]|o[a+25|0]<<8|o[a+26|0]<<16|o[a+27|0]<<24,C[B+56|0]=a,C[B+57|0]=a>>>8,C[B+58|0]=a>>>16,C[B+59|0]=a>>>24,C[B+60|0]=_,C[B+61|0]=_>>>8,C[B+62|0]=_>>>16,C[B+63|0]=_>>>24,C[B+48|0]=r,C[B+49|0]=r>>>8,C[B+50|0]=r>>>16,C[B+51|0]=r>>>24,C[B+52|0]=g,C[B+53|0]=g>>>8,C[B+54|0]=g>>>16,C[B+55|0]=g>>>24,C[B+40|0]=c,C[B+41|0]=c>>>8,C[B+42|0]=c>>>16,C[B+43|0]=c>>>24,C[B+44|0]=t,C[B+45|0]=t>>>8,C[B+46|0]=t>>>16,C[B+47|0]=t>>>24,C[B+32|0]=I,C[B+33|0]=I>>>8,C[B+34|0]=I>>>16,C[B+35|0]=I>>>24,C[B+36|0]=A,C[B+37|0]=A>>>8,C[B+38|0]=A>>>16,C[B+39|0]=A>>>24,s=i+160|0,0}function SA(A,I,g,B){var Q,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0;if(s=Q=s-704|0,g|B)if(E=(B<<3|g>>>29)+(a=c=i[A+76>>2])|0,_=(r=i[A+72>>2])+(t=g<<3)|0,i[A+72>>2]=_,E=_>>>0<t>>>0?E+1|0:E,i[A+76>>2]=E,c=i[A+68>>2],E=(E=_=(0|E)==(0|a)&_>>>0<r>>>0|E>>>0<a>>>0)>>>0>(_=_+i[A+64>>2]|0)>>>0?c+1|0:c,_=(t=B>>>29|0)+_|0,i[A+64>>2]=_,i[A+68>>2]=_>>>0<t>>>0?E+1|0:E,_=A+80|0,(0|B)==(0|(c=f=0-((E=0)+((t=127&((7&a)<<29|r>>>3))>>>0>128)|0)|0))&g>>>0>=(r=128-t|0)>>>0|B>>>0>c>>>0){if(a=0,c=0,!E&(127^t)>>>0>=3|E)for(p=252&r;C[(E=a+t|0)+_|0]=o[I+a|0],C[_+(t+(E=1|a)|0)|0]=o[I+E|0],C[_+(t+(E=2|a)|0)|0]=o[I+E|0],C[_+(t+(E=3|a)|0)|0]=o[I+E|0],E=c,c=(a=a+4|0)>>>0<4?E+1|0:E,E=h,h=E=(e=e+4|0)>>>0<4?E+1|0:E,(0|e)!=(0|p)|(0|D)!=(0|E););if(h=E=0,E|(e=3&r))for(;C[(E=a+t|0)+_|0]=o[I+a|0],E=c,c=(a=a+1|0)?E:E+1|0,E=D,D=E=(y=y+1|0)?E:E+1|0,(0|e)!=(0|y)|(0|h)!=(0|E););if(k(A,_,Q,a=Q+640|0),I=I+r|0,!(B=B-((g>>>0<r>>>0)+f|0)|0)&(g=g-r|0)>>>0>127|B)for(;k(A,I,Q,a),I=I+128|0,!(B=B-(g>>>0<128)|0)&(g=g-128|0)>>>0>127|B;);if(g|B){if(A=3&g,y=0,D=0,a=0,c=0,!B&g>>>0>=4|B)for(e=124&g,r=0,g=0,B=0;C[a+_|0]=o[I+a|0],C[(E=1|a)+_|0]=o[I+E|0],C[(E=2|a)+_|0]=o[I+E|0],C[(E=3|a)+_|0]=o[I+E|0],E=c,c=(a=a+4|0)>>>0<4?E+1|0:E,E=B,B=E=(g=g+4|0)>>>0<4?E+1|0:E,(0|g)!=(0|e)|(0|r)!=(0|E););if(A|h)for(;C[a+_|0]=o[I+a|0],c=(a=a+1|0)?c:c+1|0,E=D,D=E=(y=y+1|0)?E:E+1|0,(0|A)!=(0|y)|(0|h)!=(0|E););}XC(Q,704)}else{if(a=0,c=0,!B&g>>>0>=4|B)for(A=-4&g;C[(E=a+t|0)+_|0]=o[I+a|0],C[_+(r=t+(E=1|a)|0)|0]=o[I+E|0],C[_+(r=t+(E=2|a)|0)|0]=o[I+E|0],C[_+(r=t+(E=3|a)|0)|0]=o[I+E|0],E=c,c=(a=a+4|0)>>>0<4?E+1|0:E,E=h,h=E=(e=e+4|0)>>>0<4?E+1|0:E,(0|A)!=(0|e)|(0|B)!=(0|E););if((g&=3)|(A=0))for(;C[(B=a+t|0)+_|0]=o[I+a|0],c=(a=a+1|0)?c:c+1|0,E=D,D=E=(y=y+1|0)?E:E+1|0,(0|g)!=(0|y)|(0|A)!=(0|E););}return s=Q+704|0,0}function NA(A,I,g){var C,B=0,Q=0,o=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0;s=i[I+4>>2],B=i[A+4>>2],h=i[I+8>>2],Q=i[A+8>>2],D=i[I+12>>2],o=i[A+12>>2],f=i[I+16>>2],E=i[A+16>>2],p=i[I+20>>2],a=i[A+20>>2],y=i[I+24>>2],_=i[A+24>>2],w=i[I+28>>2],c=i[A+28>>2],n=i[I+32>>2],t=i[A+32>>2],k=i[I+36>>2],r=i[A+36>>2],g=0-g|0,e=i[A>>2],i[A>>2]=g&(e^i[I>>2])^e,i[A+36>>2]=r^g&(r^k),i[A+32>>2]=t^g&(t^n),i[A+28>>2]=c^g&(c^w),i[A+24>>2]=_^g&(_^y),i[A+20>>2]=a^g&(a^p),i[A+16>>2]=E^g&(E^f),i[A+12>>2]=o^g&(o^D),i[A+8>>2]=Q^g&(Q^h),i[A+4>>2]=B^g&(B^s),B=i[A+44>>2],s=i[I+44>>2],Q=i[A+48>>2],h=i[I+48>>2],o=i[A+52>>2],D=i[I+52>>2],E=i[A+56>>2],f=i[I+56>>2],a=i[A+60>>2],p=i[I+60>>2],_=i[(y=A- -64|0)>>2],w=i[I- -64>>2],c=i[A+68>>2],n=i[I+68>>2],t=i[A+72>>2],k=i[I+72>>2],r=i[A+40>>2],e=i[I+40>>2],C=i[A+76>>2],i[A+76>>2]=C^g&(i[I+76>>2]^C),i[A+72>>2]=t^g&(t^k),i[A+68>>2]=c^g&(c^n),i[y>>2]=_^g&(_^w),i[A+60>>2]=a^g&(a^p),i[A+56>>2]=E^g&(E^f),i[A+52>>2]=o^g&(o^D),i[A+48>>2]=Q^g&(Q^h),i[A+44>>2]=B^g&(B^s),i[A+40>>2]=r^g&(r^e),B=i[A+84>>2],s=i[I+84>>2],Q=i[A+88>>2],h=i[I+88>>2],o=i[A+92>>2],D=i[I+92>>2],E=i[A+96>>2],f=i[I+96>>2],a=i[A+100>>2],p=i[I+100>>2],_=i[A+104>>2],y=i[I+104>>2],c=i[A+108>>2],w=i[I+108>>2],t=i[A+112>>2],n=i[I+112>>2],r=i[A+80>>2],k=i[I+80>>2],e=i[A+116>>2],i[A+116>>2]=g&(e^i[I+116>>2])^e,i[A+112>>2]=t^g&(t^n),i[A+108>>2]=c^g&(c^w),i[A+104>>2]=_^g&(_^y),i[A+100>>2]=a^g&(a^p),i[A+96>>2]=E^g&(E^f),i[A+92>>2]=o^g&(o^D),i[A+88>>2]=Q^g&(Q^h),i[A+84>>2]=B^g&(B^s),i[A+80>>2]=r^g&(r^k),B=i[A+124>>2],s=i[I+124>>2],Q=i[A+128>>2],h=i[I+128>>2],o=i[A+132>>2],D=i[I+132>>2],E=i[A+136>>2],f=i[I+136>>2],a=i[A+140>>2],p=i[I+140>>2],_=i[A+144>>2],y=i[I+144>>2],c=i[A+148>>2],w=i[I+148>>2],t=i[A+152>>2],n=i[I+152>>2],r=i[A+120>>2],k=i[I+120>>2],e=i[I+156>>2],I=i[A+156>>2],i[A+156>>2]=g&(e^I)^I,i[A+152>>2]=t^g&(t^n),i[A+148>>2]=c^g&(c^w),i[A+144>>2]=_^g&(_^y),i[A+140>>2]=a^g&(a^p),i[A+136>>2]=E^g&(E^f),i[A+132>>2]=o^g&(o^D),i[A+128>>2]=Q^g&(Q^h),i[A+124>>2]=B^g&(B^s),i[A+120>>2]=r^g&(r^k)}function GA(A,I,g){var B,Q,o=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0;return s=B=s-320|0,R(o=B+240|0,g),b(o,o,g),R(A,o),b(A,A,g),b(A,A,I),PA(A,A),b(A,A,o),b(A,A,I),R(o=B+192|0,A),b(o,o,g),E=i[I+4>>2],h=i[I+8>>2],f=i[I+12>>2],p=i[I+16>>2],w=i[I+20>>2],n=i[I+24>>2],k=i[I+28>>2],F=i[I+32>>2],S=i[I>>2],g=i[B+192>>2],o=i[B+196>>2],a=i[B+200>>2],_=i[B+204>>2],c=i[B+208>>2],t=i[B+212>>2],r=i[B+216>>2],e=i[B+220>>2],y=i[B+224>>2],D=i[B+228>>2],N=i[I+36>>2],i[B+180>>2]=D-N,i[B+176>>2]=y-F,i[B+172>>2]=e-k,i[B+168>>2]=r-n,i[B+164>>2]=t-w,i[B+160>>2]=c-p,i[B+156>>2]=_-f,i[B+152>>2]=a-h,i[B+148>>2]=o-E,i[B+144>>2]=g-S,i[B+132>>2]=D+N,i[B+128>>2]=y+F,i[B+124>>2]=e+k,i[B+120>>2]=r+n,i[B+116>>2]=t+w,i[B+112>>2]=c+p,i[B+108>>2]=_+f,i[B+104>>2]=a+h,i[B+100>>2]=o+E,i[B+96>>2]=g+S,b(E=B+48|0,I,1632),i[B+84>>2]=D+i[B+84>>2],i[B+80>>2]=y+i[B+80>>2],i[B+76>>2]=e+i[B+76>>2],i[B+72>>2]=r+i[B+72>>2],i[B+68>>2]=t+i[B+68>>2],i[B+64>>2]=c+i[B+64>>2],i[B+60>>2]=_+i[B+60>>2],i[B+56>>2]=a+i[B+56>>2],i[B+52>>2]=o+i[B+52>>2],i[B+48>>2]=g+i[B+48>>2],QI(B,B+144|0),f=GI(B,32),QI(B,B+96|0),h=GI(B,32),QI(B,E),I=GI(B,32),b(B,A,1632),y=i[A+4>>2],e=i[A+8>>2],r=i[A+12>>2],t=i[A+16>>2],c=i[A+20>>2],_=i[A+24>>2],a=i[A+28>>2],o=i[A+32>>2],E=i[A>>2],p=i[B>>2],w=i[B+4>>2],n=i[B+8>>2],k=i[B+12>>2],F=i[B+16>>2],S=i[B+20>>2],D=i[B+24>>2],N=i[B+28>>2],Q=i[B+32>>2],g=(I=0-(I|h)|0)&((g=i[A+36>>2])^i[B+36>>2])^g,i[A+36>>2]=g,o^=I&(o^Q),i[A+32>>2]=o,a^=I&(a^N),i[A+28>>2]=a,_^=I&(_^D),i[A+24>>2]=_,c^=I&(c^S),i[A+20>>2]=c,t^=I&(t^F),i[A+16>>2]=t,r^=I&(r^k),i[A+12>>2]=r,e^=I&(e^n),i[A+8>>2]=e,y^=I&(y^w),i[A+4>>2]=y,E^=I&(E^p),i[A>>2]=E,QI(B+288|0,A),I=0-(1&C[B+288|0])|0,i[A+36>>2]=g^I&(g^0-g),i[A+32>>2]=o^I&(o^0-o),i[A+28>>2]=a^I&(a^0-a),i[A+24>>2]=_^I&(_^0-_),i[A+20>>2]=c^I&(c^0-c),i[A+16>>2]=t^I&(t^0-t),i[A+12>>2]=r^I&(r^0-r),i[A+8>>2]=e^I&(e^0-e),i[A+4>>2]=y^I&(y^0-y),i[A>>2]=E^I&(E^0-E),s=B+320|0,h|f}function MA(A,I){var g,B,Q,E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0;return s=g=s-320|0,fA(B=A+40|0,I),i[A+84>>2]=0,i[A+88>>2]=0,i[A+80>>2]=1,i[A+92>>2]=0,i[A+96>>2]=0,i[A+100>>2]=0,i[A+104>>2]=0,i[A+108>>2]=0,i[A+112>>2]=0,i[A+116>>2]=0,R(a=g+240|0,B),b(_=g+192|0,a,1584),i[g+192>>2]=i[g+192>>2]+1,c=i[g+240>>2]-1|0,i[g+240>>2]=c,t=i[g+244>>2],r=i[g+248>>2],e=i[g+252>>2],y=i[g+256>>2],h=i[g+260>>2],D=i[g+264>>2],f=i[g+268>>2],p=i[g+272>>2],w=i[g+276>>2],b(A,a,_),PA(A,A),b(A,a,A),R(a=g+144|0,A),b(a,a,_),a=i[g+180>>2],i[g+132>>2]=a-w,_=i[g+176>>2],i[g+128>>2]=_-p,n=i[g+172>>2],i[g+124>>2]=n-f,k=i[g+168>>2],i[g+120>>2]=k-D,F=i[g+164>>2],i[g+116>>2]=F-h,S=i[g+160>>2],i[g+112>>2]=S-y,N=i[g+156>>2],i[g+108>>2]=N-e,G=i[g+152>>2],i[g+104>>2]=G-r,M=i[g+148>>2],i[g+100>>2]=M-t,K=i[g+144>>2],i[g+96>>2]=K-c,i[g+84>>2]=a+w,i[g+80>>2]=_+p,i[g+76>>2]=f+n,i[g+72>>2]=D+k,i[g+68>>2]=h+F,i[g+64>>2]=y+S,i[g+60>>2]=e+N,i[g+56>>2]=r+G,i[g+52>>2]=t+M,i[g+48>>2]=c+K,QI(g,g+96|0),p=GI(g,32),QI(g,g+48|0),n=GI(g,32),b(g,A,1632),f=i[A+4>>2],D=i[A+8>>2],h=i[A+12>>2],y=i[A+16>>2],e=i[A+20>>2],r=i[A+24>>2],t=i[A+28>>2],c=i[A+32>>2],w=i[A>>2],k=i[g>>2],F=i[g+4>>2],S=i[g+8>>2],N=i[g+12>>2],G=i[g+16>>2],M=i[g+20>>2],K=i[g+24>>2],Q=i[g+28>>2],E=i[g+32>>2],_=(a=p-1|0)&((_=i[A+36>>2])^i[g+36>>2])^_,i[A+36>>2]=_,c^=a&(c^E),i[A+32>>2]=c,t^=a&(t^Q),i[A+28>>2]=t,r^=a&(r^K),i[A+24>>2]=r,e^=a&(e^M),i[A+20>>2]=e,y^=a&(y^G),i[A+16>>2]=y,h^=a&(h^N),i[A+12>>2]=h,D^=a&(D^S),i[A+8>>2]=D,f^=a&(f^F),i[A+4>>2]=f,a=w^a&(w^k),i[A>>2]=a,QI(g+288|0,A),I=0-(1&C[g+288|0]^o[I+31|0]>>>7^o[38144]>>>2)|0,i[A+36>>2]=_^I&(_^0-_),i[A+32>>2]=c^I&(c^0-c),i[A+28>>2]=t^I&(t^0-t),i[A+24>>2]=r^I&(r^0-r),i[A+20>>2]=e^I&(e^0-e),i[A+16>>2]=y^I&(y^0-y),i[A+12>>2]=h^I&(h^0-h),i[A+8>>2]=D^I&(D^0-D),i[A+4>>2]=f^I&(f^0-f),i[A>>2]=a^I&(a^0-a),b(A+120|0,A,B),s=g+320|0,(p|n)-1|0}function KA(A,I){var g,C,B,Q,o,E,a,_,c,t,r,e,y,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0;s=g=s-48|0,R(A,I),R(A+80|0,I+40|0),v(A+120|0,I+80|0),h=i[I+44>>2],D=i[I+4>>2],n=i[I+48>>2],f=i[I+8>>2],k=i[I+52>>2],p=i[I+12>>2],F=i[I+56>>2],w=i[I+16>>2],K=i[I+60>>2],S=i[I+20>>2],U=i[I- -64>>2],N=i[I+24>>2],b=i[I+68>>2],G=i[I+28>>2],H=i[I+72>>2],Y=i[I+32>>2],J=i[I+40>>2],M=i[I>>2],i[A+76>>2]=i[I+76>>2]+i[I+36>>2],i[A+72>>2]=H+Y,i[A+68>>2]=b+G,i[(C=A- -64|0)>>2]=U+N,i[A+60>>2]=K+S,i[A+56>>2]=F+w,i[A+52>>2]=k+p,i[A+48>>2]=n+f,i[A+44>>2]=h+D,i[A+40>>2]=J+M,R(g,A+40|0),I=i[A+4>>2],h=i[A+84>>2],D=i[A+8>>2],n=i[A+88>>2],f=i[A+12>>2],k=i[A+92>>2],p=i[A+16>>2],F=i[A+96>>2],w=i[A+20>>2],K=i[A+100>>2],S=i[A+24>>2],U=i[A+104>>2],N=i[A+28>>2],b=i[A+108>>2],G=i[A+32>>2],H=i[A+112>>2],Y=i[A>>2],J=i[A+80>>2],Q=(M=i[A+116>>2])-(B=i[A+36>>2])|0,i[A+116>>2]=Q,o=H-G|0,i[A+112>>2]=o,E=b-N|0,i[A+108>>2]=E,a=U-S|0,i[A+104>>2]=a,_=K-w|0,i[A+100>>2]=_,c=F-p|0,i[A+96>>2]=c,t=k-f|0,i[A+92>>2]=t,r=n-D|0,i[A+88>>2]=r,e=h-I|0,i[A+84>>2]=e,y=J-Y|0,i[A+80>>2]=y,M=M+B|0,i[A+76>>2]=M,G=G+H|0,i[A+72>>2]=G,N=N+b|0,i[A+68>>2]=N,S=S+U|0,i[C>>2]=S,w=w+K|0,i[A+60>>2]=w,p=p+F|0,i[A+56>>2]=p,f=f+k|0,i[A+52>>2]=f,D=D+n|0,i[A+48>>2]=D,I=I+h|0,i[A+44>>2]=I,h=Y+J|0,i[A+40>>2]=h,n=i[g>>2],k=i[g+4>>2],F=i[g+8>>2],K=i[g+12>>2],U=i[g+16>>2],b=i[g+20>>2],H=i[g+24>>2],Y=i[g+28>>2],J=i[g+32>>2],i[A+36>>2]=i[g+36>>2]-M,i[A+32>>2]=J-G,i[A+28>>2]=Y-N,i[A+24>>2]=H-S,i[A+20>>2]=b-w,i[A+16>>2]=U-p,i[A+12>>2]=K-f,i[A+8>>2]=F-D,i[A+4>>2]=k-I,i[A>>2]=n-h,I=i[A+124>>2],h=i[A+128>>2],D=i[A+132>>2],n=i[A+136>>2],f=i[A+140>>2],k=i[A+144>>2],p=i[A+148>>2],F=i[A+152>>2],w=i[A+120>>2],i[A+156>>2]=i[A+156>>2]-Q,i[A+152>>2]=F-o,i[A+148>>2]=p-E,i[A+144>>2]=k-a,i[A+140>>2]=f-_,i[A+136>>2]=n-c,i[A+132>>2]=D-t,i[A+128>>2]=h-r,i[A+124>>2]=I-e,i[A+120>>2]=w-y,s=g+48|0}function UA(A,I,g,B){var Q,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0;if(s=Q=s-288|0,g|B)if(E=(B<<3|g>>>29)+(a=c=i[A+36>>2])|0,_=(t=i[A+32>>2])+(r=g<<3)|0,i[A+32>>2]=_,i[A+36>>2]=_>>>0<r>>>0?E+1|0:E,c=A+40|0,(0|B)==(0|(_=f=0-((E=0)+((r=63&((7&a)<<29|t>>>3))>>>0>64)|0)|0))&g>>>0>=(t=64-r|0)>>>0|B>>>0>_>>>0){if(a=0,_=0,!E&(63^r)>>>0>=3|E)for(p=124&t;C[(E=a+r|0)+c|0]=o[I+a|0],C[c+(r+(E=1|a)|0)|0]=o[I+E|0],C[c+(r+(E=2|a)|0)|0]=o[I+E|0],C[c+(r+(E=3|a)|0)|0]=o[I+E|0],E=_,_=(a=a+4|0)>>>0<4?E+1|0:E,E=h,h=E=(e=e+4|0)>>>0<4?E+1|0:E,(0|e)!=(0|p)|(0|D)!=(0|E););if(h=E=0,E|(e=3&t))for(;C[(E=a+r|0)+c|0]=o[I+a|0],E=_,_=(a=a+1|0)?E:E+1|0,E=D,D=E=(y=y+1|0)?E:E+1|0,(0|e)!=(0|y)|(0|h)!=(0|E););if(J(A,c,Q,a=Q+256|0),I=I+t|0,!(B=B-((g>>>0<t>>>0)+f|0)|0)&(g=g-t|0)>>>0>63|B)for(;J(A,I,Q,a),I=I- -64|0,E=B-1|0,!(B=(g=g+-64|0)>>>0<4294967232?E+1|0:E)&g>>>0>63|B;);if(g|B){if(A=3&g,y=0,D=0,a=0,_=0,!B&g>>>0>=4|B)for(e=60&g,t=0,g=0,B=0;C[a+c|0]=o[I+a|0],C[(E=1|a)+c|0]=o[I+E|0],C[(E=2|a)+c|0]=o[I+E|0],C[(E=3|a)+c|0]=o[I+E|0],E=_,_=(a=a+4|0)>>>0<4?E+1|0:E,E=B,B=E=(g=g+4|0)>>>0<4?E+1|0:E,(0|g)!=(0|e)|(0|t)!=(0|E););if(A|h)for(;C[a+c|0]=o[I+a|0],_=(a=a+1|0)?_:_+1|0,E=D,D=E=(y=y+1|0)?E:E+1|0,(0|A)!=(0|y)|(0|h)!=(0|E););}XC(Q,288)}else{if(a=0,_=0,!B&g>>>0>=4|B)for(A=-4&g;C[(E=a+r|0)+c|0]=o[I+a|0],C[c+(t=r+(E=1|a)|0)|0]=o[I+E|0],C[c+(t=r+(E=2|a)|0)|0]=o[I+E|0],C[c+(t=r+(E=3|a)|0)|0]=o[I+E|0],E=_,_=(a=a+4|0)>>>0<4?E+1|0:E,E=h,h=E=(e=e+4|0)>>>0<4?E+1|0:E,(0|A)!=(0|e)|(0|B)!=(0|E););if((g&=3)|(A=0))for(;C[(B=a+r|0)+c|0]=o[I+a|0],_=(a=a+1|0)?_:_+1|0,E=D,D=E=(y=y+1|0)?E:E+1|0,(0|g)!=(0|y)|(0|A)!=(0|E););}return s=Q+288|0,0}function bA(A,I,g,C,B,Q){var o=0;i[Q>>2]=8;A:{I:{o=A,o=(A=!I&A>>>0<=32768)?32768:o;g:{C:{if(!(A=A?0:I)&g>>>5>>>0<=o>>>0|A){if(g>>>0>=4096)break C;I=1;break g}if(i[B>>2]=1,A=1,(I=(o>>>0)/(i[Q>>2]<<2>>>0)|0)>>>0<4)break A;if(A=2,I>>>0<8)break A;if(I>>>0<16)return void(i[C>>2]=3);if(I>>>0<32)return void(i[C>>2]=4);if(I>>>0<64)return void(i[C>>2]=5);if(I>>>0<128)return void(i[C>>2]=6);if(I>>>0<256)return void(i[C>>2]=7);if(I>>>0<512)return void(i[C>>2]=8);if(I>>>0<1024)return void(i[C>>2]=9);if(I>>>0<2048)return void(i[C>>2]=10);if(I>>>0<4096)return void(i[C>>2]=11);if(I>>>0<8192)return void(i[C>>2]=12);if(I>>>0<16384)return void(i[C>>2]=13);if(I>>>0<32768)return void(i[C>>2]=14);if(I>>>0<65536)return void(i[C>>2]=15);if(I>>>0<131072)return void(i[C>>2]=16);if(I>>>0<262144)return void(i[C>>2]=17);if(I>>>0<524288)return void(i[C>>2]=18);if(I>>>0<1048576)return void(i[C>>2]=19);if(I>>>0<2097152)return void(i[C>>2]=20);if(I>>>0<4194304)return void(i[C>>2]=21);if(I>>>0<8388608)return void(i[C>>2]=22);if(I>>>0<16777216)return void(i[C>>2]=23);if(I>>>0>=33554432)break I;return void(i[C>>2]=24)}I=2,g>>>0<8192||(I=3,g>>>0<16384||(I=4,g>>>0<32768||(I=5,g>>>0<65536||(I=6,g>>>0<131072||(I=7,g>>>0<262144||(I=8,g>>>0<524288||(I=9,g>>>0<1048576||(I=10,g>>>0<2097152||(I=11,g>>>0<4194304||(I=12,g>>>0<8388608||(I=13,g>>>0<16777216||(I=14,g>>>0<33554432||(I=15,g>>>0<67108864||(I=16,g>>>0<134217728||(I=17,g>>>0<268435456||(I=18,g>>>0<536870912||(I=19,g>>>0<1073741824||(I=(0|g)>=0?20:21))))))))))))))))))}return g=I,i[C>>2]=g,A=(I=A)>>>2|0,I=(3&I)<<30|o>>>2,C=31&g,(63&g)>>>0>=32?(g=0,A=A>>>C|0):(g=A>>>C|0,A=((1<<C)-1&A)<<32-C|I>>>C),void(i[B>>2]=((!g&A>>>0>=1073741823|g?1073741823:A)>>>0)/E[Q>>2])}A=I>>>0<67108864?25:26}i[C>>2]=A}function HA(A,I,g){var C,B,Q,o,E,a,_,c,t=0;s=C=s-160|0,i[A>>2]=1,i[A+4>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0,i[A+16>>2]=0,i[A+20>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+44>>2]=0,i[A+48>>2]=0,i[A+36>>2]=0,i[A+40>>2]=1,i[A+52>>2]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+64>>2]=0,i[A+68>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,i[A+80>>2]=1,bg(A+84|0,0,76),NA(A,I,(255&(1^(t=g-((g>>31&g)<<1)|0)))-1>>>31|0),NA(A,I+160|0,(255&(2^t))-1>>>31|0),NA(A,I+320|0,(255&(3^t))-1>>>31|0),NA(A,I+480|0,(255&(4^t))-1>>>31|0),NA(A,I+640|0,(255&(5^t))-1>>>31|0),NA(A,I+800|0,(255&(6^t))-1>>>31|0),NA(A,I+960|0,(255&(7^t))-1>>>31|0),NA(A,I+1120|0,(255&(8^t))-1>>>31|0),I=i[A+76>>2],i[C+32>>2]=i[A+72>>2],i[C+36>>2]=I,t=i[4+(I=A- -64|0)>>2],i[C+24>>2]=i[I>>2],i[C+28>>2]=t,I=i[A+60>>2],i[C+16>>2]=i[A+56>>2],i[C+20>>2]=I,I=i[A+52>>2],i[C+8>>2]=i[A+48>>2],i[C+12>>2]=I,I=i[A+44>>2],i[C>>2]=i[A+40>>2],i[C+4>>2]=I,I=i[A+36>>2],i[C+72>>2]=i[A+32>>2],i[C+76>>2]=I,t=i[A+28>>2],i[(I=C- -64|0)>>2]=i[A+24>>2],i[I+4>>2]=t,I=i[A+20>>2],i[C+56>>2]=i[A+16>>2],i[C+60>>2]=I,I=i[A+12>>2],i[C+48>>2]=i[A+8>>2],i[C+52>>2]=I,I=i[A+4>>2],i[C+40>>2]=i[A>>2],i[C+44>>2]=I,I=i[A+92>>2],i[C+88>>2]=i[A+88>>2],i[C+92>>2]=I,I=i[A+100>>2],i[C+96>>2]=i[A+96>>2],i[C+100>>2]=I,I=i[A+108>>2],i[C+104>>2]=i[A+104>>2],i[C+108>>2]=I,I=i[A+116>>2],i[C+112>>2]=i[A+112>>2],i[C+116>>2]=I,I=i[A+84>>2],i[C+80>>2]=i[A+80>>2],i[C+84>>2]=I,I=i[A+124>>2],t=i[A+128>>2],B=i[A+132>>2],Q=i[A+136>>2],o=i[A+140>>2],E=i[A+144>>2],a=i[A+148>>2],_=i[A+152>>2],c=i[A+120>>2],i[C+156>>2]=0-i[A+156>>2],i[C+152>>2]=0-_,i[C+148>>2]=0-a,i[C+144>>2]=0-E,i[C+140>>2]=0-o,i[C+136>>2]=0-Q,i[C+132>>2]=0-B,i[C+128>>2]=0-t,i[C+124>>2]=0-I,i[C+120>>2]=0-c,NA(A,C,(128&g)>>>7|0),s=C+160|0}function YA(A,I){A|=0,I|=0;var g,B,Q,E,a,_=0,c=0,t=0;return s=c=s-192|0,ag(c,32),FI(I,c,32,0),C[0|I]=248&o[0|I],C[I+31|0]=63&o[I+31|0]|64,nA(t=c+32|0,I),tg(A,t),g=c,t=i[c+28>>2],c=i[c+24>>2],C[I+24|0]=c,C[I+25|0]=c>>>8,C[I+26|0]=c>>>16,C[I+27|0]=c>>>24,C[I+28|0]=t,C[I+29|0]=t>>>8,C[I+30|0]=t>>>16,C[I+31|0]=t>>>24,t=i[g+20>>2],c=i[g+16>>2],C[I+16|0]=c,C[I+17|0]=c>>>8,C[I+18|0]=c>>>16,C[I+19|0]=c>>>24,C[I+20|0]=t,C[I+21|0]=t>>>8,C[I+22|0]=t>>>16,C[I+23|0]=t>>>24,t=i[g+12>>2],c=i[g+8>>2],C[I+8|0]=c,C[I+9|0]=c>>>8,C[I+10|0]=c>>>16,C[I+11|0]=c>>>24,C[I+12|0]=t,C[I+13|0]=t>>>8,C[I+14|0]=t>>>16,C[I+15|0]=t>>>24,t=i[g+4>>2],c=i[g>>2],C[0|I]=c,C[I+1|0]=c>>>8,C[I+2|0]=c>>>16,C[I+3|0]=c>>>24,C[I+4|0]=t,C[I+5|0]=t>>>8,C[I+6|0]=t>>>16,C[I+7|0]=t>>>24,B=o[(_=A)+8|0]|o[_+9|0]<<8|o[_+10|0]<<16|o[_+11|0]<<24,Q=o[_+12|0]|o[_+13|0]<<8|o[_+14|0]<<16|o[_+15|0]<<24,E=o[_+16|0]|o[_+17|0]<<8|o[_+18|0]<<16|o[_+19|0]<<24,t=o[_+20|0]|o[_+21|0]<<8|o[_+22|0]<<16|o[_+23|0]<<24,c=o[0|_]|o[_+1|0]<<8|o[_+2|0]<<16|o[_+3|0]<<24,A=o[_+4|0]|o[_+5|0]<<8|o[_+6|0]<<16|o[_+7|0]<<24,a=o[_+28|0]|o[_+29|0]<<8|o[_+30|0]<<16|o[_+31|0]<<24,_=o[_+24|0]|o[_+25|0]<<8|o[_+26|0]<<16|o[_+27|0]<<24,C[I+56|0]=_,C[I+57|0]=_>>>8,C[I+58|0]=_>>>16,C[I+59|0]=_>>>24,C[I+60|0]=a,C[I+61|0]=a>>>8,C[I+62|0]=a>>>16,C[I+63|0]=a>>>24,C[I+48|0]=E,C[I+49|0]=E>>>8,C[I+50|0]=E>>>16,C[I+51|0]=E>>>24,C[I+52|0]=t,C[I+53|0]=t>>>8,C[I+54|0]=t>>>16,C[I+55|0]=t>>>24,C[I+40|0]=B,C[I+41|0]=B>>>8,C[I+42|0]=B>>>16,C[I+43|0]=B>>>24,C[I+44|0]=Q,C[I+45|0]=Q>>>8,C[I+46|0]=Q>>>16,C[I+47|0]=Q>>>24,C[I+32|0]=c,C[I+33|0]=c>>>8,C[I+34|0]=c>>>16,C[I+35|0]=c>>>24,C[I+36|0]=A,C[I+37|0]=A>>>8,C[I+38|0]=A>>>16,C[I+39|0]=A>>>24,XC(g,32),s=g+192|0,0}function JA(A,I){I|=0;var g,B,Q=0,o=0,E=0,a=0;return s=g=s-288|0,o=40+((Q=i[32+(A|=0)>>2]>>>3&63)+A|0)|0,Q>>>0>=56?(Ng(o,35520,64-Q|0),J(A,A+40|0,g,g+256|0),i[A+88>>2]=0,i[A+92>>2]=0,i[A+80>>2]=0,i[A+84>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,i[(Q=A- -64|0)>>2]=0,i[Q+4>>2]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+48>>2]=0,i[A+52>>2]=0,i[A+40>>2]=0,i[A+44>>2]=0):Ng(o,35520,56-Q|0),E=(Q=16711680&(o=i[A+32>>2]))>>>8|0,a=Q<<24,B=(Q=-16777216&o)>>>24|0,Q=(a|=Q<<8)|-16777216&((255&(Q=i[A+36>>2]))<<24|o>>>8)|16711680&((16777215&Q)<<8|o>>>24)|Q>>>8&65280|Q>>>24,C[A+96|0]=Q,C[A+97|0]=Q>>>8,C[A+98|0]=Q>>>16,C[A+99|0]=Q>>>24,Q=E|B|o<<24|(65280&o)<<8,Q|=E=0,C[A+100|0]=Q,C[A+101|0]=Q>>>8,C[A+102|0]=Q>>>16,C[A+103|0]=Q>>>24,J(A,A+40|0,g,g+256|0),Q=(Q=i[A>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[0|I]=Q,C[I+1|0]=Q>>>8,C[I+2|0]=Q>>>16,C[I+3|0]=Q>>>24,Q=(Q=i[A+4>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+4|0]=Q,C[I+5|0]=Q>>>8,C[I+6|0]=Q>>>16,C[I+7|0]=Q>>>24,Q=(Q=i[A+8>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+8|0]=Q,C[I+9|0]=Q>>>8,C[I+10|0]=Q>>>16,C[I+11|0]=Q>>>24,Q=(Q=i[A+12>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+12|0]=Q,C[I+13|0]=Q>>>8,C[I+14|0]=Q>>>16,C[I+15|0]=Q>>>24,Q=(Q=i[A+16>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+16|0]=Q,C[I+17|0]=Q>>>8,C[I+18|0]=Q>>>16,C[I+19|0]=Q>>>24,Q=(Q=i[A+20>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+20|0]=Q,C[I+21|0]=Q>>>8,C[I+22|0]=Q>>>16,C[I+23|0]=Q>>>24,Q=(Q=i[A+24>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+24|0]=Q,C[I+25|0]=Q>>>8,C[I+26|0]=Q>>>16,C[I+27|0]=Q>>>24,Q=(Q=i[A+28>>2])<<24|(65280&Q)<<8|Q>>>8&65280|Q>>>24,C[I+28|0]=Q,C[I+29|0]=Q>>>8,C[I+30|0]=Q>>>16,C[I+31|0]=Q>>>24,XC(g,288),XC(A,104),s=g+288|0,0}function dA(A,I){A|=0;var g,B=0;s=g=s+-64|0,B=o[60+(I|=0)|0]|o[I+61|0]<<8|o[I+62|0]<<16|o[I+63|0]<<24,i[g+56>>2]=o[I+56|0]|o[I+57|0]<<8|o[I+58|0]<<16|o[I+59|0]<<24,i[g+60>>2]=B,B=o[I+52|0]|o[I+53|0]<<8|o[I+54|0]<<16|o[I+55|0]<<24,i[g+48>>2]=o[I+48|0]|o[I+49|0]<<8|o[I+50|0]<<16|o[I+51|0]<<24,i[g+52>>2]=B,B=o[I+44|0]|o[I+45|0]<<8|o[I+46|0]<<16|o[I+47|0]<<24,i[g+40>>2]=o[I+40|0]|o[I+41|0]<<8|o[I+42|0]<<16|o[I+43|0]<<24,i[g+44>>2]=B,B=o[I+36|0]|o[I+37|0]<<8|o[I+38|0]<<16|o[I+39|0]<<24,i[g+32>>2]=o[I+32|0]|o[I+33|0]<<8|o[I+34|0]<<16|o[I+35|0]<<24,i[g+36>>2]=B,B=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[g+24>>2]=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,i[g+28>>2]=B,B=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[g+16>>2]=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[g+20>>2]=B,B=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,i[g>>2]=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,i[g+4>>2]=B,B=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,i[g+8>>2]=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,i[g+12>>2]=B,S(g),I=i[g+28>>2],B=i[g+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[g+20>>2],B=i[g+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[g+12>>2],B=i[g+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[g+4>>2],B=i[g>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,XC(g,64),s=g- -64|0}function mA(A,I,g){A|=0,I|=0;var B,Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0;if(s=B=s-96|0,(g|=0)>>>0>=65&&($I(A),UA(A,I,g,0),JA(A,B),g=32,I=B),$I(A),i[B+88>>2]=909522486,i[B+92>>2]=909522486,i[B+80>>2]=909522486,i[B+84>>2]=909522486,i[B+72>>2]=909522486,i[B+76>>2]=909522486,i[(a=r=B- -64|0)>>2]=909522486,i[a+4>>2]=909522486,i[B+56>>2]=909522486,i[B+60>>2]=909522486,i[B+48>>2]=909522486,i[B+52>>2]=909522486,i[B+40>>2]=909522486,i[B+44>>2]=909522486,i[B+32>>2]=909522486,i[B+36>>2]=909522486,g){if(g>>>0>=4)for(_=124&g;C[0|(E=(a=B+32|0)+Q|0)]=o[0|E]^o[I+Q|0],C[0|(e=(E=1|Q)+a|0)]=o[0|e]^o[I+E|0],C[0|(e=(E=2|Q)+a|0)]=o[0|e]^o[I+E|0],C[0|(E=(E=a)+(a=3|Q)|0)]=o[0|E]^o[I+a|0],Q=Q+4|0,(0|_)!=(0|(c=c+4|0)););if(c=3&g)for(;C[0|(a=(B+32|0)+Q|0)]=o[0|a]^o[I+Q|0],Q=Q+1|0,(0|c)!=(0|(t=t+1|0)););}if(UA(A,B+32|0,64,0),$I(a=A+104|0),i[B+88>>2]=1549556828,i[B+92>>2]=1549556828,i[B+80>>2]=1549556828,i[B+84>>2]=1549556828,i[B+72>>2]=1549556828,i[B+76>>2]=1549556828,i[r>>2]=1549556828,i[r+4>>2]=1549556828,i[B+56>>2]=1549556828,i[B+60>>2]=1549556828,i[B+48>>2]=1549556828,i[B+52>>2]=1549556828,i[B+40>>2]=1549556828,i[B+44>>2]=1549556828,i[B+32>>2]=1549556828,i[B+36>>2]=1549556828,g){if(t=0,Q=0,g>>>0>=4)for(r=124&g,c=0;C[0|(_=(A=B+32|0)+Q|0)]=o[0|_]^o[I+Q|0],C[0|(E=(_=1|Q)+A|0)]=o[0|E]^o[I+_|0],C[0|(E=(_=2|Q)+A|0)]=o[0|E]^o[I+_|0],C[0|(_=(E=A)+(A=3|Q)|0)]=o[0|_]^o[A+I|0],Q=Q+4|0,(0|r)!=(0|(c=c+4|0)););if(A=3&g)for(;C[0|(g=(B+32|0)+Q|0)]=o[0|g]^o[I+Q|0],Q=Q+1|0,(0|A)!=(0|(t=t+1|0)););}return UA(a,A=B+32|0,64,0),XC(A,64),XC(B,32),s=B+96|0,0}function lA(A,I,g,C,B,o,E){var a=0,_=0,c=0,t=0,r=0,e=0,y=0;if(I-65>>>0<4294967232|E>>>0>64)A=-1;else{e=a=s,s=a=a-512&-64;A:{I:if(!(!(!(C|B)|g)|!A|((_=255&I)-65&255)>>>0<=191|!(!(I=255&E)||o)|I>>>0>=65)){if(I){if(!o)break I;bg(a- -64|0,0,293),i[a+56>>2]=327033209,i[a+60>>2]=1541459225,i[a+48>>2]=-79577749,i[a+52>>2]=528734635,i[a+40>>2]=725511199,i[a+44>>2]=-1694144372,i[a+32>>2]=-1377402159,i[a+36>>2]=1359893119,i[a+24>>2]=1595750129,i[a+28>>2]=-1521486534,i[a+16>>2]=-23791573,i[a+20>>2]=1013904242,i[a+8>>2]=-2067093701,i[a+12>>2]=-1150833019,i[a>>2]=-222443256^(I<<8|_),i[a+4>>2]=I>>>24^1779033703,bg((E=a+384|0)+I|0,0,128-I|0),Ng(E,o,I),Ng(a+96|0,E,128),i[a+352>>2]=128,XC(E,128),I=128}else bg(a- -64|0,0,293),i[a+56>>2]=327033209,i[a+60>>2]=1541459225,i[a+48>>2]=-79577749,i[a+52>>2]=528734635,i[a+40>>2]=725511199,i[a+44>>2]=-1694144372,i[a+32>>2]=-1377402159,i[a+36>>2]=1359893119,i[a+24>>2]=1595750129,i[a+28>>2]=-1521486534,i[a+16>>2]=-23791573,i[a+20>>2]=1013904242,i[a+8>>2]=-2067093701,i[a+12>>2]=-1150833019,i[a>>2]=-222443256^_,i[a+4>>2]=1779033703,I=0;g:if(C|B)for(y=a+224|0,c=a+96|0;;){if(E=I+c|0,!B&C>>>0<=(o=256-I|0)>>>0){Ng(E,g,C),i[a+352>>2]=C+i[a+352>>2];break g}if(Ng(E,g,o),i[a+352>>2]=o+i[a+352>>2],t=I=i[a+68>>2],I=(r=(E=i[a+64>>2])+128|0)>>>0<128?I+1|0:I,i[a+64>>2]=r,i[a+68>>2]=I,I=i[a+76>>2],I=(t=E=-1==(0|t)&E>>>0>4294967167)>>>0>(E=E+i[a+72>>2]|0)>>>0?I+1|0:I,i[a+72>>2]=E,i[a+76>>2]=I,p(a,c),Ng(c,y,128),I=i[a+352>>2]-128|0,i[a+352>>2]=I,g=g+o|0,!((B=B-(C>>>0<o>>>0)|0)|(C=C-o|0)))break}AA(a,A,_),s=e;break A}rC(),Q()}A=0}return A}function uA(A,I){A|=0,I|=0;var g,B=0;s=g=s-128|0,i[g+80>>2]=0,i[g+84>>2]=0,i[g+88>>2]=0,i[g+92>>2]=0,i[g+40>>2]=0,i[g+44>>2]=0,i[g+48>>2]=0,i[g+52>>2]=0,i[g+56>>2]=0,i[g+60>>2]=0,B=i[8799],i[g+104>>2]=i[8798],i[g+108>>2]=B,B=i[8801],i[g+112>>2]=i[8800],i[g+116>>2]=B,B=i[8803],i[g+120>>2]=i[8802],i[g+124>>2]=B,i[g+64>>2]=0,i[g+68>>2]=0,i[g+72>>2]=0,i[g+76>>2]=0,C[g+64|0]=1,i[g+32>>2]=0,i[g+36>>2]=0,B=i[8797],i[g+96>>2]=i[8796],i[g+100>>2]=B,B=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[g+24>>2]=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,i[g+28>>2]=B,B=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[g+16>>2]=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[g+20>>2]=B,B=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,i[g+8>>2]=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,i[g+12>>2]=B,B=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,i[g>>2]=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,i[g+4>>2]=B,Eg(I=g- -64|0,g),S(I),I=i[g+92>>2],B=i[g+88>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[g+84>>2],B=i[g+80>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[g+76>>2],B=i[g+72>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[g+68>>2],B=i[g+64>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,s=g+128|0}function xA(A,I){A|=0,I|=0;var g,B=0;s=g=s-128|0,i[g+80>>2]=0,i[g+84>>2]=0,i[g+88>>2]=0,i[g+92>>2]=0,i[g+40>>2]=0,i[g+44>>2]=0,i[g+48>>2]=0,i[g+52>>2]=0,i[g+56>>2]=0,i[g+60>>2]=0,B=i[8799],i[g+104>>2]=i[8798],i[g+108>>2]=B,B=i[8801],i[g+112>>2]=i[8800],i[g+116>>2]=B,B=i[8803],i[g+120>>2]=i[8802],i[g+124>>2]=B,i[g+64>>2]=0,i[g+68>>2]=0,i[g+72>>2]=0,i[g+76>>2]=0,i[g+32>>2]=0,i[g+36>>2]=0,B=i[8797],i[g+96>>2]=i[8796],i[g+100>>2]=B,B=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[g+16>>2]=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[g+20>>2]=B,B=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[g+24>>2]=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,i[g+28>>2]=B,B=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24,i[g>>2]=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24,i[g+4>>2]=B,B=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,i[g+8>>2]=o[I+8|0]|o[I+9|0]<<8|o[I+10|0]<<16|o[I+11|0]<<24,i[g+12>>2]=B,Eg(I=g- -64|0,g),S(I),I=i[g+92>>2],B=i[g+88>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[g+84>>2],B=i[g+80>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[g+76>>2],B=i[g+72>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[g+68>>2],B=i[g+64>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,s=g+128|0}function vA(A,I,g,B){var Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0;A:{if((E=i[A+56>>2])|(Q=i[A+60>>2])){if(e=_=16-E|0,t=(_=(0|(a=0-((E>>>0>16)+Q|0)|0))==(0|B)&g>>>0>_>>>0|B>>>0>a>>>0)?e:g,e=_=_?a:B,_|t){if(_=A- -64|0,a=0,E=0,!e&t>>>0>=4|e)for(r=-4&t;Q=a+i[A+56>>2]|0,C[Q+_|0]=o[I+a|0],Q=(y=1|a)+i[A+56>>2]|0,C[Q+_|0]=o[I+y|0],Q=(y=2|a)+i[A+56>>2]|0,C[Q+_|0]=o[I+y|0],Q=(y=3|a)+i[A+56>>2]|0,C[Q+_|0]=o[I+y|0],Q=E,E=(a=a+4|0)>>>0<4?Q+1|0:Q,Q=h,h=Q=(c=c+4|0)>>>0<4?Q+1|0:Q,(0|c)!=(0|r)|(0|e)!=(0|Q););if(h=Q=0,Q|(c=3&t))for(;Q=a+i[A+56>>2]|0,C[Q+_|0]=o[I+a|0],E=(a=a+1|0)?E:E+1|0,Q=D,D=Q=(s=s+1|0)?Q:Q+1|0,(0|c)!=(0|s)|(0|h)!=(0|Q););E=i[A+56>>2],Q=i[A+60>>2]}if(Q=Q+e|0,Q=(E=E+t|0)>>>0<t>>>0?Q+1|0:Q,i[A+56>>2]=E,i[A+60>>2]=Q,!Q&E>>>0<16)break A;rA(A,A- -64|0,16,0),i[A+56>>2]=0,i[A+60>>2]=0,g=(E=g)-t|0,B=B-((E>>>0<t>>>0)+e|0)|0,I=I+t|0}if(!B&g>>>0>=16|B&&(rA(A,I,E=-16&g,B),g&=15,B=0,I=I+E|0),g|B){if(_=A- -64|0,s=0,D=0,a=0,E=0,!B&g>>>0>=4|B)for(t=12&g,e=0,c=0;Q=a+i[A+56>>2]|0,C[Q+_|0]=o[I+a|0],Q=(r=1|a)+i[A+56>>2]|0,C[Q+_|0]=o[I+r|0],Q=(r=2|a)+i[A+56>>2]|0,C[Q+_|0]=o[I+r|0],Q=(r=3|a)+i[A+56>>2]|0,C[Q+_|0]=o[I+r|0],E=(a=a+4|0)>>>0<4?E+1|0:E,Q=h,h=Q=(c=c+4|0)>>>0<4?Q+1|0:Q,(0|t)!=(0|c)|(0|e)!=(0|Q););if(h=Q=0,Q|(c=3&g))for(;Q=a+i[A+56>>2]|0,C[Q+_|0]=o[I+a|0],E=(a=a+1|0)?E:E+1|0,Q=D,D=Q=(s=s+1|0)?Q:Q+1|0,(0|c)!=(0|s)|(0|h)!=(0|Q););E=B+i[A+60>>2]|0,E=(I=g+i[A+56>>2]|0)>>>0<g>>>0?E+1|0:E,i[A+56>>2]=I,i[A+60>>2]=E}}}function RA(A,I,g){var C,B=0,Q=0,o=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0;s=i[I+4>>2],B=i[A+4>>2],h=i[I+8>>2],Q=i[A+8>>2],D=i[I+12>>2],o=i[A+12>>2],f=i[I+16>>2],E=i[A+16>>2],p=i[I+20>>2],a=i[A+20>>2],e=i[I+24>>2],_=i[A+24>>2],w=i[I+28>>2],c=i[A+28>>2],n=i[I+32>>2],t=i[A+32>>2],k=i[I+36>>2],r=i[A+36>>2],g=0-g|0,y=i[A>>2],i[A>>2]=g&(y^i[I>>2])^y,i[A+36>>2]=r^g&(r^k),i[A+32>>2]=t^g&(t^n),i[A+28>>2]=c^g&(c^w),i[A+24>>2]=_^g&(_^e),i[A+20>>2]=a^g&(a^p),i[A+16>>2]=E^g&(E^f),i[A+12>>2]=o^g&(o^D),i[A+8>>2]=Q^g&(Q^h),i[A+4>>2]=B^g&(B^s),B=i[A+44>>2],s=i[I+44>>2],Q=i[A+48>>2],h=i[I+48>>2],o=i[A+52>>2],D=i[I+52>>2],E=i[A+56>>2],f=i[I+56>>2],a=i[A+60>>2],p=i[I+60>>2],_=i[(e=A- -64|0)>>2],w=i[I- -64>>2],c=i[A+68>>2],n=i[I+68>>2],t=i[A+72>>2],k=i[I+72>>2],r=i[A+40>>2],y=i[I+40>>2],C=i[A+76>>2],i[A+76>>2]=C^g&(i[I+76>>2]^C),i[A+72>>2]=t^g&(t^k),i[A+68>>2]=c^g&(c^n),i[e>>2]=_^g&(_^w),i[A+60>>2]=a^g&(a^p),i[A+56>>2]=E^g&(E^f),i[A+52>>2]=o^g&(o^D),i[A+48>>2]=Q^g&(Q^h),i[A+44>>2]=B^g&(B^s),i[A+40>>2]=r^g&(r^y),B=i[A+84>>2],s=i[I+84>>2],Q=i[A+88>>2],h=i[I+88>>2],o=i[A+92>>2],D=i[I+92>>2],E=i[A+96>>2],f=i[I+96>>2],a=i[A+100>>2],p=i[I+100>>2],_=i[A+104>>2],e=i[I+104>>2],c=i[A+108>>2],w=i[I+108>>2],t=i[A+112>>2],n=i[I+112>>2],r=i[A+80>>2],k=i[I+80>>2],y=i[I+116>>2],I=i[A+116>>2],i[A+116>>2]=g&(y^I)^I,i[A+112>>2]=t^g&(t^n),i[A+108>>2]=c^g&(c^w),i[A+104>>2]=_^g&(_^e),i[A+100>>2]=a^g&(a^p),i[A+96>>2]=E^g&(E^f),i[A+92>>2]=o^g&(o^D),i[A+88>>2]=Q^g&(Q^h),i[A+84>>2]=B^g&(B^s),i[A+80>>2]=r^g&(r^k)}function LA(A,I){var g,C,B=0;for(s=g=s-192|0,R(C=g+144|0,I),R(B=g+96|0,C),R(B,B),b(B,I,B),b(C,C,B),R(I=g+48|0,C),b(B,B,I),R(I,B),R(I,I),R(I,I),R(I,I),R(I,I),b(B,I,B),R(I,B),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),b(I,I,B),R(g,I),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),b(I,g,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),b(B,I,B),R(I,B),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),b(I,I,B),R(g,I),I=1;R(g,g),100!=(0|(I=I+1|0)););b(I=g+48|0,g,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),R(I,I),b(B=g+96|0,I,B),R(B,B),R(B,B),R(B,B),R(B,B),R(B,B),b(A,B,g+144|0),s=g+192|0}function PA(A,I){var g,C=0,B=0;for(s=g=s-144|0,R(B=g+96|0,I),R(C=g+48|0,B),R(C,C),b(C,I,C),b(B,B,C),R(B,B),b(B,C,B),R(C,B),R(C,C),R(C,C),R(C,C),R(C,C),b(B,C,B),R(C,B),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),b(C,C,B),R(g,C),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),R(g,g),b(C,g,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),b(B,C,B),R(C,B),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),b(C,C,B),R(g,C),C=1;R(g,g),100!=(0|(C=C+1|0)););b(C=g+48|0,g,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),R(C,C),b(B=g+96|0,C,B),R(B,B),R(B,B),b(A,B,I),s=g+144|0}function qA(A,I){var g,B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F,S=0,N=0,G=0,M=0;s=g=s-320|0,fA(B=A+40|0,I),i[A+84>>2]=0,i[A+88>>2]=0,i[A+80>>2]=1,i[A+92>>2]=0,i[A+96>>2]=0,i[A+100>>2]=0,i[A+104>>2]=0,i[A+108>>2]=0,i[A+112>>2]=0,i[A+116>>2]=0,R(G=g+240|0,B),b(N=g+192|0,G,1584),M=-1,Q=i[g+240>>2]-1|0,i[g+240>>2]=Q,i[g+192>>2]=i[g+192>>2]+1,E=i[g+244>>2],a=i[g+248>>2],_=i[g+252>>2],c=i[g+256>>2],t=i[g+260>>2],r=i[g+264>>2],e=i[g+268>>2],y=i[g+272>>2],h=i[g+276>>2],R(S=g+144|0,N),b(S,S,N),R(A,S),b(A,A,N),b(A,A,G),PA(A,A),b(A,A,S),b(A,A,G),R(S=g+96|0,A),b(S,S,N),N=i[g+132>>2],i[g+84>>2]=N-h,S=i[g+128>>2],i[g+80>>2]=S-y,G=i[g+124>>2],i[g+76>>2]=G-e,D=i[g+120>>2],i[g+72>>2]=D-r,f=i[g+116>>2],i[g+68>>2]=f-t,p=i[g+112>>2],i[g+64>>2]=p-c,w=i[g+108>>2],i[g+60>>2]=w-_,n=i[g+104>>2],i[g+56>>2]=n-a,k=i[g+100>>2],i[g+52>>2]=k-E,F=i[g+96>>2],i[g+48>>2]=F-Q,QI(g,g+48|0);A:{if(!GI(g,32)){if(i[g+36>>2]=N+h,i[g+32>>2]=S+y,i[g+28>>2]=G+e,i[g+24>>2]=r+D,i[g+20>>2]=t+f,i[g+16>>2]=c+p,i[g+12>>2]=_+w,i[g+8>>2]=a+n,i[g+4>>2]=E+k,i[g>>2]=Q+F,QI(N=g+288|0,g),!GI(N,32))break A;b(A,A,1632)}QI(g+288|0,A),(1&C[g+288|0])==(o[I+31|0]>>>7|0)&&(i[A>>2]=0-i[A>>2],i[A+36>>2]=0-i[A+36>>2],i[A+32>>2]=0-i[A+32>>2],i[A+28>>2]=0-i[A+28>>2],i[A+24>>2]=0-i[A+24>>2],i[A+20>>2]=0-i[A+20>>2],i[A+16>>2]=0-i[A+16>>2],i[A+12>>2]=0-i[A+12>>2],i[A+8>>2]=0-i[A+8>>2],i[A+4>>2]=0-i[A+4>>2]),b(A+120|0,A,B),M=0}return s=g+320|0,M}function zA(A,I,g){var C,B,Q,o,E,_,c,t,r=0;s=C=s-128|0,i[A>>2]=1,i[A+4>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0,i[A+16>>2]=0,i[A+20>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+36>>2]=0,i[A+40>>2]=1,bg(A+44|0,0,76),RA(A,I=a(I,960)+2992|0,(255&(1^(r=g-((g>>31&g)<<1)|0)))-1>>>31|0),RA(A,I+120|0,(255&(2^r))-1>>>31|0),RA(A,I+240|0,(255&(3^r))-1>>>31|0),RA(A,I+360|0,(255&(4^r))-1>>>31|0),RA(A,I+480|0,(255&(5^r))-1>>>31|0),RA(A,I+600|0,(255&(6^r))-1>>>31|0),RA(A,I+720|0,(255&(7^r))-1>>>31|0),RA(A,I+840|0,(255&(8^r))-1>>>31|0),I=i[A+76>>2],i[C+40>>2]=i[A+72>>2],i[C+44>>2]=I,r=i[4+(I=A- -64|0)>>2],i[C+32>>2]=i[I>>2],i[C+36>>2]=r,I=i[A+60>>2],i[C+24>>2]=i[A+56>>2],i[C+28>>2]=I,I=i[A+52>>2],i[C+16>>2]=i[A+48>>2],i[C+20>>2]=I,I=i[A+44>>2],i[C+8>>2]=i[A+40>>2],i[C+12>>2]=I,I=i[A+12>>2],i[C+56>>2]=i[A+8>>2],i[C+60>>2]=I,r=i[A+20>>2],i[(I=C- -64|0)>>2]=i[A+16>>2],i[I+4>>2]=r,I=i[A+28>>2],i[C+72>>2]=i[A+24>>2],i[C+76>>2]=I,I=i[A+36>>2],i[C+80>>2]=i[A+32>>2],i[C+84>>2]=I,I=i[A+4>>2],i[C+48>>2]=i[A>>2],i[C+52>>2]=I,I=i[A+84>>2],r=i[A+88>>2],B=i[A+92>>2],Q=i[A+96>>2],o=i[A+100>>2],E=i[A+104>>2],_=i[A+108>>2],c=i[A+112>>2],t=i[A+80>>2],i[C+124>>2]=0-i[A+116>>2],i[C+120>>2]=0-c,i[C+116>>2]=0-_,i[C+112>>2]=0-E,i[C+108>>2]=0-o,i[C+104>>2]=0-Q,i[C+100>>2]=0-B,i[C+96>>2]=0-r,i[C+92>>2]=0-I,i[C+88>>2]=0-t,RA(A,C+8|0,(128&g)>>>7|0),s=C+128|0}function jA(A){var I,g,C,B,Q,o,E,a,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0;return s=I=s-320|0,R(c=I+240|0,A),R(t=I+192|0,A+40|0),R(_=I+144|0,A+80|0),A=i[I+240>>2],r=i[I+192>>2],e=i[I+244>>2],y=i[I+196>>2],h=i[I+248>>2],D=i[I+200>>2],f=i[I+252>>2],p=i[I+204>>2],w=i[I+256>>2],n=i[I+208>>2],k=i[I+260>>2],F=i[I+212>>2],S=i[I+264>>2],N=i[I+216>>2],G=i[I+268>>2],M=i[I+220>>2],K=i[I+272>>2],U=i[I+224>>2],i[I+84>>2]=i[I+228>>2]-i[I+276>>2],i[I+80>>2]=U-K,i[I+76>>2]=M-G,i[I+72>>2]=N-S,i[I+68>>2]=F-k,i[I+64>>2]=n-w,i[I+60>>2]=p-f,i[I+56>>2]=D-h,i[I+52>>2]=y-e,i[I+48>>2]=r-A,b(A=I+48|0,A,_),b(I,c,t),b(I,I,1584),R(I+96|0,_),_=i[I+48>>2],c=i[I+96>>2],t=i[I>>2],r=i[I+52>>2],e=i[I+100>>2],y=i[I+4>>2],h=i[I+56>>2],D=i[I+104>>2],f=i[I+8>>2],p=i[I+60>>2],w=i[I+108>>2],n=i[I+12>>2],k=i[I+64>>2],F=i[I+112>>2],S=i[I+16>>2],N=i[I+68>>2],G=i[I+116>>2],M=i[I+20>>2],K=i[I+72>>2],U=i[I+120>>2],g=i[I+24>>2],C=i[I+76>>2],B=i[I+124>>2],Q=i[I+28>>2],o=i[I+80>>2],E=i[I+128>>2],a=i[I+32>>2],i[I+84>>2]=i[I+84>>2]-(i[I+132>>2]+i[I+36>>2]|0),i[I+80>>2]=o-(E+a|0),i[I+76>>2]=C-(B+Q|0),i[I+72>>2]=K-(U+g|0),i[I+68>>2]=N-(G+M|0),i[I+64>>2]=k-(F+S|0),i[I+60>>2]=p-(w+n|0),i[I+56>>2]=h-(D+f|0),i[I+52>>2]=r-(e+y|0),i[I+48>>2]=_-(c+t|0),QI(_=I+288|0,A),A=GI(_,32),s=I+320|0,A}function XA(A,I,g,B,i){A|=0,I|=0,g|=0,B|=0;var E=0,_=0,c=0,t=0,e=0,y=0,s=0;A:{I:{g:{C:{B:{Q:{i:{if(1==(-7&(i|=0))&&(c=(E=(B>>>0)/3|0)<<2,(E=a(E,-3)+B|0)&&(c=2&i?2+((E>>>1|0)+c|0)|0:c+4|0),!(I>>>0<=c>>>0))){if(!(i>>>0>=4)){if(!B){i=0;break C}E=0,i=0;break i}if(!B){i=0;break C}for(E=0,i=0;;){for(e=o[g+t|0]|e<<8,E|=8;y=65510+(_=e>>>(E=E-6|0)&63)>>>8|0,s=_+65484>>>8|0,C[A+i|0]=~(1+(16321^_))>>>8&45|_+252&_+65474>>>8&~s|~(_+32705)>>>8&95|y&_+65|s&_+71&~y,i=i+1|0,E>>>0>5;);if((0|(t=t+1|0))==(0|B))break}if(!E)break B;t=45,_=32705,B=95;break Q}rC(),Q()}for(;;){for(e=o[g+t|0]|e<<8,E|=8;y=65510+(_=e>>>(E=E-6|0)&63)>>>8|0,s=_+65484>>>8|0,C[A+i|0]=~(1+(16321^_))>>>8&43|_+252&_+65474>>>8&~s|~(_+16321)>>>8&47|y&_+65|s&_+71&~y,i=i+1|0,E>>>0>5;);if((0|(t=t+1|0))==(0|B))break}if(!E)break B;t=43,_=16321,B=47}_=~((g=e<<6-E&63)+_)>>>8&B|(E=g+65510>>>8|0)&g+65,B=g+65484>>>8|0,C[A+i|0]=~(1+(16321^g))>>>8&t|_|g+252&g+65474>>>8&~B|B&g+71&~E,i=i+1|0}if(i>>>0>c>>>0)break g}if(i>>>0<c>>>0)break I;c=i;break A}r(1104,1218,231,1503),Q()}bg(A+i|0,61,c-i|0)}return bg(A+c|0,0,(I>>>0>(g=c+1|0)>>>0?I:g)-c|0),0|A}function OA(A,I,g){var C,B,Q,E=0,_=0,c=0,t=0,r=0;s=C=s-16|0,B=i[A+20>>2],i[A+20>>2]=0,Q=i[A+4>>2],i[A+4>>2]=0,c=-26;A:{I:{g:{C:switch(g-1|0){case 1:if(gg(I,1182,9))break I;I=I+9|0;break g;case 0:break C;default:break A}if(gg(I,1173,8))break I;I=I+8|0}if(36!=o[0|I]|118!=o[I+1|0]||(E=61==o[I+2|0]),E&&!(((t=o[0|(g=I+3|0)])-58&255)>>>0<246)){for(r=E?g:I,I=0,E=t;;){if(_=g,I>>>0>429496729)break I;if((g=(255&E)-48|0)>>>0>~(I=a(I,10))>>>0)break I;if(I=I+g|0,!(((E=o[0|(g=_+1|0)])-58&255)>>>0>245))break}if(!(48==(0|t)&(0|_)!=(0|r)|(0|g)==(0|r))){if(19!=(0|I))break A;if(!(36!=(255&E)|109!=o[_+2|0]|61!=o[_+3|0])&&(g=lI(_+4|0,I=C+12|0))&&(i[A+44>>2]=i[C+12>>2],!(44!=o[0|g]|116!=o[g+1|0]|61!=o[g+2|0])&&(g=lI(g+3|0,I))&&(i[A+40>>2]=i[C+12>>2],!(44!=o[0|g]|112!=o[g+1|0]|61!=o[g+2|0])&&(g=lI(g+3|0,I))&&(E=i[C+12>>2],i[A+48>>2]=E,i[A+52>>2]=E,36==o[0|g]&&(i[C+12>>2]=B,!pA(_=i[A+16>>2],B,E=g=g+1|0,t=RI(g),0,I,g=C+8|0,3)&&(i[A+20>>2]=i[C+12>>2],E=i[C+8>>2],36==o[0|E]&&(i[C+12>>2]=Q,E=E+1|0,!pA(i[A>>2],Q,E,RI(E),0,I,g,3)))))))){if(i[A+4>>2]=i[C+12>>2],I=i[C+8>>2],c=nI(A))break A;c=o[0|I]?-32:0;break A}}}}c=-32}return s=C+16|0,c}function WA(A,I,g,B){var Q=0,i=0,E=0,a=0,_=0,c=0,t=0;if(g|B)A:for(t=A+224|0,_=A+96|0,i=o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24;;){if(Q=i+_|0,!B&g>>>0<=(E=256-i|0)>>>0){Ng(Q,I,g),I=g+(o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)|0,C[A+352|0]=I,C[A+353|0]=I>>>8,C[A+354|0]=I>>>16,C[A+355|0]=I>>>24;break A}if(Ng(Q,I,E),Q=(o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)+E|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,c=i=o[A+68|0]|o[A+69|0]<<8|o[A+70|0]<<16|o[A+71|0]<<24,i=(a=128+(Q=o[A+64|0]|o[A+65|0]<<8|o[A+66|0]<<16|o[A+67|0]<<24)|0)>>>0<128?i+1|0:i,C[A+64|0]=a,C[A+65|0]=a>>>8,C[A+66|0]=a>>>16,C[A+67|0]=a>>>24,C[A+68|0]=i,C[A+69|0]=i>>>8,C[A+70|0]=i>>>16,C[A+71|0]=i>>>24,i=o[A+76|0]|o[A+77|0]<<8|o[A+78|0]<<16|o[A+79|0]<<24,i=(c=Q=-1==(0|c)&Q>>>0>4294967167)>>>0>(Q=Q+(o[A+72|0]|o[A+73|0]<<8|o[A+74|0]<<16|o[A+75|0]<<24)|0)>>>0?i+1|0:i,C[A+72|0]=Q,C[A+73|0]=Q>>>8,C[A+74|0]=Q>>>16,C[A+75|0]=Q>>>24,C[A+76|0]=i,C[A+77|0]=i>>>8,C[A+78|0]=i>>>16,C[A+79|0]=i>>>24,p(A,_),Ng(_,t,128),Q=i=(o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)-128|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,I=I+E|0,!((B=B-(g>>>0<E>>>0)|0)|(g=g-E|0)))break}return 0}function VA(A){var I=0,g=0,C=0,B=0,Q=0,o=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0,n=0;for(g=i[A+60>>2],h=i[A+56>>2],s=i[A+52>>2],e=i[A+48>>2],I=i[A+44>>2],C=i[A+40>>2],D=i[A+36>>2],r=i[A+32>>2],B=i[A+28>>2],Q=i[A+24>>2],o=i[A+20>>2],E=i[A+16>>2],a=i[A+12>>2],_=i[A+8>>2],c=i[A+4>>2],t=i[A>>2];y=Lg(o+c|0,7)^D,f=Lg(y+o|0,9)^s,E=Lg(t+e|0,7)^E,p=Lg(E+t|0,9)^r,w=Lg(p+E|0,13)^e,a=Lg(I+g|0,7)^a,B=Lg(a+g|0,9)^B,r=Lg(B+a|0,13)^I,g=Lg(B+r|0,18)^g,I=Lg(C+Q|0,7)^h,e=w^Lg(g+I|0,7),s=f^Lg(e+g|0,9),h=Lg(e+s|0,13)^I,g=Lg(s+h|0,18)^g,_=Lg(I+C|0,9)^_,Q=Lg(_+I|0,13)^Q,C=Lg(Q+_|0,18)^C,I=Lg(C+y|0,7)^r,r=Lg(I+C|0,9)^p,D=Lg(I+r|0,13)^y,C=Lg(r+D|0,18)^C,c=Lg(y+f|0,13)^c,o=Lg(c+f|0,18)^o,Q=Lg(o+E|0,7)^Q,B=Lg(Q+o|0,9)^B,E=Lg(B+Q|0,13)^E,o=Lg(E+B|0,18)^o,t=Lg(p+w|0,18)^t,c=Lg(t+a|0,7)^c,_=Lg(c+t|0,9)^_,a=Lg(_+c|0,13)^a,t=Lg(a+_|0,18)^t,y=n>>>0<6,n=n+2|0,y;);i[A>>2]=i[A>>2]+t,i[A+4>>2]=i[A+4>>2]+c,i[A+8>>2]=i[A+8>>2]+_,i[A+12>>2]=i[A+12>>2]+a,i[A+16>>2]=i[A+16>>2]+E,i[A+20>>2]=i[A+20>>2]+o,i[A+24>>2]=i[A+24>>2]+Q,i[A+28>>2]=i[A+28>>2]+B,i[A+32>>2]=i[A+32>>2]+r,i[A+36>>2]=i[A+36>>2]+D,i[A+40>>2]=i[A+40>>2]+C,i[A+44>>2]=i[A+44>>2]+I,i[A+48>>2]=i[A+48>>2]+e,i[A+52>>2]=i[A+52>>2]+s,i[A+56>>2]=i[A+56>>2]+h,i[A+60>>2]=i[A+60>>2]+g}function ZA(A,I,g,B){var Q,i=0;return s=Q=s-320|0,i=-1,NI(g)&&(KI(g)||MA(Q,g)||gA(Q)&&(C[0|A]=o[0|I],C[A+1|0]=o[I+1|0],C[A+2|0]=o[I+2|0],C[A+3|0]=o[I+3|0],C[A+4|0]=o[I+4|0],C[A+5|0]=o[I+5|0],C[A+6|0]=o[I+6|0],C[A+7|0]=o[I+7|0],C[A+8|0]=o[I+8|0],C[A+9|0]=o[I+9|0],C[A+10|0]=o[I+10|0],C[A+11|0]=o[I+11|0],C[A+12|0]=o[I+12|0],C[A+13|0]=o[I+13|0],C[A+14|0]=o[I+14|0],C[A+15|0]=o[I+15|0],C[A+16|0]=o[I+16|0],C[A+17|0]=o[I+17|0],C[A+18|0]=o[I+18|0],C[A+19|0]=o[I+19|0],C[A+20|0]=o[I+20|0],C[A+21|0]=o[I+21|0],C[A+22|0]=o[I+22|0],C[A+23|0]=o[I+23|0],C[A+24|0]=o[I+24|0],C[A+25|0]=o[I+25|0],C[A+26|0]=o[I+26|0],C[A+27|0]=o[I+27|0],C[A+28|0]=o[I+28|0],C[A+29|0]=o[I+29|0],C[A+30|0]=o[I+30|0],g=o[I+31|0],B&&(C[0|A]=248&o[0|A],g|=64),C[A+31|0]=127&g,u(g=Q+160|0,A,Q),tg(A,g),(127&o[A+31|0]|o[A+30|0]|o[A+29|0]|o[A+28|0]|o[A+27|0]|o[A+26|0]|o[A+25|0]|o[A+24|0]|o[A+23|0]|o[A+22|0]|o[A+21|0]|o[A+20|0]|o[A+19|0]|o[A+18|0]|o[A+17|0]|o[A+16|0]|o[A+15|0]|o[A+14|0]|o[A+13|0]|o[A+12|0]|o[A+11|0]|o[A+10|0]|o[A+9|0]|o[A+8|0]|o[A+7|0]|o[A+6|0]|o[A+5|0]|o[A+4|0]|o[A+3|0]|o[A+2|0]|o[A+1|0]|1^o[0|A])-1&256||(i=GI(I,32)?-1:0))),s=Q+320|0,i}function TA(A,I,g,B,Q){var E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0;if(s=E=s-48|0,Q&&ag(Q,102),!(36!=o[0|B]|55!=o[B+1|0]|36!=o[B+2|0])&&(r=uI(o[B+3|0]))&&(a=PI(E+12|0,B+4|0))&&(t=PI(E+8|0,a))){for(_=RI(t)+1|0;a=0,_&&36!=o[0|(a=t+(_=_-1|0)|0)];);if(c=a-t|0,a||(c=RI(t)),!((c=45+(_=(a=c)+(t-B|0)|0)|0)>>>0>102|a>>>0>c>>>0||(c=A,y=I,h=g,A=31&(r=r-1024|0),(63&r)>>>0>=32?(I=1<<A,g=0):I=(g=1<<A)-1&1>>>32-A,_A(c,y,h,t,a,g,I,i[E+12>>2],i[E+8>>2],E+16|0,32)))){for(a=Ng(Q,B,_),C[0|(A=a+_|0)]=36,e=(c=a+102|0)-(Q=A+1|0)|0,g=0;;){A:if((I=g)>>>0>31)B=Q;else if(A=Q,g=(_=I+1|0)+(y=(g=31-I|0)>>>0>=2?2:g)|0,B=0,t=0,Q=o[(r=E+16|0)+I|0],y&&(Q=o[_+r|0]<<8|Q,(0|(I=I+2|0))!=(0|g)&&(t=1,Q=o[I+r|0]<<16|Q)),e&&(C[0|A]=o[1024+(63&Q)|0],1!=(0|e))){if(C[A+1|0]=o[1024+(Q>>>6&63)|0],y=A+e|0,I=A+2|0,(0|g)!=(0|_)){if(2==(0|e))break A;if(C[A+2|0]=o[1024+(Q>>>12&63)|0],I=A+3|0,t){if(3==(0|e))break A;C[A+3|0]=o[1024+(Q>>>18|0)|0],I=A+4|0}}if(e=y-(Q=I)|0,Q)continue}break}XC(E+16|0,32),e=0,!B|B>>>0>=c>>>0||(C[0|B]=0,e=a)}}return s=E+48|0,e}function $A(A,I){var g,C=0,B=0,Q=0,o=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0,p=0,w=0;C=i[I+4>>2],Q=i[I+44>>2],o=i[I+8>>2],E=i[I+48>>2],a=i[I+12>>2],_=i[I+52>>2],c=i[I+16>>2],t=i[I+56>>2],r=i[I+20>>2],e=i[I+60>>2],y=i[I+24>>2],s=i[(B=I- -64|0)>>2],h=i[I+28>>2],D=i[I+68>>2],f=i[I+32>>2],p=i[I+72>>2],w=i[I+36>>2],g=i[I+76>>2],i[A>>2]=i[I>>2]+i[I+40>>2],i[A+36>>2]=w+g,i[A+32>>2]=f+p,i[A+28>>2]=h+D,i[A+24>>2]=y+s,i[A+20>>2]=r+e,i[A+16>>2]=c+t,i[A+12>>2]=a+_,i[A+8>>2]=o+E,i[A+4>>2]=C+Q,C=i[I+4>>2],Q=i[I+44>>2],o=i[I+8>>2],E=i[I+48>>2],a=i[I+12>>2],_=i[I+52>>2],c=i[I+16>>2],t=i[I+56>>2],r=i[I+20>>2],e=i[I+60>>2],y=i[I+24>>2],B=i[B>>2],s=i[I+28>>2],h=i[I+68>>2],D=i[I+32>>2],f=i[I+72>>2],p=i[I>>2],w=i[I+40>>2],i[A+76>>2]=i[I+76>>2]-i[I+36>>2],i[A+72>>2]=f-D,i[A+68>>2]=h-s,i[A- -64>>2]=B-y,i[A+60>>2]=e-r,i[A+56>>2]=t-c,i[A+52>>2]=_-a,i[A+48>>2]=E-o,i[A+44>>2]=Q-C,i[A+40>>2]=w-p,C=i[I+84>>2],i[A+80>>2]=i[I+80>>2],i[A+84>>2]=C,C=i[I+92>>2],i[A+88>>2]=i[I+88>>2],i[A+92>>2]=C,C=i[I+100>>2],i[A+96>>2]=i[I+96>>2],i[A+100>>2]=C,C=i[I+108>>2],i[A+104>>2]=i[I+104>>2],i[A+108>>2]=C,C=i[I+116>>2],i[A+112>>2]=i[I+112>>2],i[A+116>>2]=C,b(A+120|0,I+120|0,1680)}function AI(A,I,g){var C,B,Q,o,E,a,_,c,t,r,e,y,h=0,D=0,f=0,p=0,w=0;h=i[I+12>>2],D=i[I+8>>2],f=i[I+4>>2],C=s+-64&-64,I=i[I>>2],i[C>>2]=i[35744+((255&I)<<2)>>2],i[C+4>>2]=i[35744+(f>>>6&1020)>>2],i[C+8>>2]=i[35744+(D>>>14&1020)>>2],i[C+12>>2]=i[35744+(h>>>22&1020)>>2],i[C+16>>2]=i[35744+((255&f)<<2)>>2],i[C+20>>2]=i[35744+(D>>>6&1020)>>2],i[C+24>>2]=i[35744+(h>>>14&1020)>>2],i[C+28>>2]=i[35744+(I>>>22&1020)>>2],i[C+32>>2]=i[35744+((255&D)<<2)>>2],i[C+36>>2]=i[35744+(h>>>6&1020)>>2],i[C+40>>2]=i[35744+(I>>>14&1020)>>2],i[C+44>>2]=i[35744+(f>>>22&1020)>>2],i[C+48>>2]=i[35744+((255&h)<<2)>>2],i[C+52>>2]=i[35744+(I>>>6&1020)>>2],i[C+56>>2]=i[35744+(f>>>14&1020)>>2],i[C+60>>2]=i[35744+(D>>>22&1020)>>2],I=i[C+12>>2],h=i[C>>2],D=i[C+4>>2],f=i[C+8>>2],B=i[C+28>>2],Q=i[C+16>>2],o=i[C+20>>2],E=i[C+24>>2],a=i[C+44>>2],_=i[C+32>>2],c=i[C+36>>2],t=i[C+40>>2],r=i[g>>2],e=i[g+4>>2],y=i[g+8>>2],p=A,w=i[g+12>>2]^i[C+48>>2]^Lg(i[C+52>>2],8)^Lg(i[C+56>>2],16)^Lg(i[C+60>>2],24),i[p+12>>2]=w,p=A,w=Lg(c,8)^_^Lg(t,16)^Lg(a,24)^y,i[p+8>>2]=w,p=A,w=Lg(o,8)^Q^Lg(E,16)^Lg(B,24)^e,i[p+4>>2]=w,p=A,w=Lg(D,8)^h^Lg(f,16)^Lg(I,24)^r,i[p>>2]=w}function II(A,I,g){var B,Q=0;return s=B=s-160|0,C[0|A]=o[0|I],C[A+1|0]=o[I+1|0],C[A+2|0]=o[I+2|0],C[A+3|0]=o[I+3|0],C[A+4|0]=o[I+4|0],C[A+5|0]=o[I+5|0],C[A+6|0]=o[I+6|0],C[A+7|0]=o[I+7|0],C[A+8|0]=o[I+8|0],C[A+9|0]=o[I+9|0],C[A+10|0]=o[I+10|0],C[A+11|0]=o[I+11|0],C[A+12|0]=o[I+12|0],C[A+13|0]=o[I+13|0],C[A+14|0]=o[I+14|0],C[A+15|0]=o[I+15|0],C[A+16|0]=o[I+16|0],C[A+17|0]=o[I+17|0],C[A+18|0]=o[I+18|0],C[A+19|0]=o[I+19|0],C[A+20|0]=o[I+20|0],C[A+21|0]=o[I+21|0],C[A+22|0]=o[I+22|0],C[A+23|0]=o[I+23|0],C[A+24|0]=o[I+24|0],C[A+25|0]=o[I+25|0],C[A+26|0]=o[I+26|0],C[A+27|0]=o[I+27|0],C[A+28|0]=o[I+28|0],C[A+29|0]=o[I+29|0],C[A+30|0]=o[I+30|0],Q=o[I+31|0],g&&(C[0|A]=248&o[0|A],Q|=64),C[A+31|0]=127&Q,nA(B,A),tg(A,B),g=-1,(127&o[A+31|0]|o[A+30|0]|o[A+29|0]|o[A+28|0]|o[A+27|0]|o[A+26|0]|o[A+25|0]|o[A+24|0]|o[A+23|0]|o[A+22|0]|o[A+21|0]|o[A+20|0]|o[A+19|0]|o[A+18|0]|o[A+17|0]|o[A+16|0]|o[A+15|0]|o[A+14|0]|o[A+13|0]|o[A+12|0]|o[A+11|0]|o[A+10|0]|o[A+9|0]|o[A+8|0]|o[A+7|0]|o[A+6|0]|o[A+5|0]|o[A+4|0]|o[A+3|0]|o[A+2|0]|o[A+1|0]|1^o[0|A])-1&256||(g=GI(I,32)?-1:0),s=B+160|0,g}function gI(A,I){var g,B,Q,o,E,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,f=0;(_=i[A+56>>2])|(c=i[A+60>>2])&&(C[(r=A- -64|0)+_|0]=1,!((f=_+1|0)?c:c+1|0)&f>>>0<=15&&bg(65+(A+_|0)|0,0,15-_|0),C[A+80|0]=1,rA(A,r,16,0)),f=i[A+52>>2],h=i[A+48>>2],r=i[A+44>>2],_=i[A+24>>2],e=i[A+28>>2]+(_>>>26|0)|0,t=i[A+32>>2]+(e>>>26|0)|0,g=i[A+36>>2]+(t>>>26|0)|0,c=(s=(_=(_=(67108863&_)+((y=i[A+20>>2]+a(g>>>26|0,5)|0)>>>26|0)|0)&(e=(t=(E=(67108863&g)+((o=(B=67108863&t)+((Q=(D=67108863&e)+((y=_+((c=5+(s=67108863&y)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)-67108864|0)>>31)|y&(t=67108863&(y=(t>>>31|0)-1|0)))<<26|c&t|e&s)+i[A+40>>2]|0,C[0|I]=c,C[I+1|0]=c>>>8,C[I+2|0]=c>>>16,C[I+3|0]=c>>>24,s=c>>>0<s>>>0,c=0,c=(_=(D=e&D|t&Q)<<20|_>>>6)>>>0>(_=_+r|0)>>>0?1:c,c=(r=_)>>>0>(_=_+s|0)>>>0?c+1|0:c,C[I+4|0]=_,C[I+5|0]=_>>>8,C[I+6|0]=_>>>16,C[I+7|0]=_>>>24,_=0,r=(r=(t=e&B|t&o)<<14|D>>>12)>>>0>(h=r+h|0)>>>0?1:_,_=h,h=c,_=_+c|0,c=r,c=_>>>0<h>>>0?c+1|0:c,C[I+8|0]=_,C[I+9|0]=_>>>8,C[I+10|0]=_>>>16,C[I+11|0]=_>>>24,c=(_=(_=(y&E|e&g)<<8|t>>>18)+f|0)+c|0,C[I+12|0]=c,C[I+13|0]=c>>>8,C[I+14|0]=c>>>16,C[I+15|0]=c>>>24,XC(A,88)}function CI(A,I,g){A|=0,I|=0,g|=0;var B,Q=0;return s=B=s-16|0,C[B+15|0]=0,Q=-1,0|pB[i[8930]](A,I,g)||(C[B+15|0]=o[0|A]|o[B+15|0],C[B+15|0]=o[A+1|0]|o[B+15|0],C[B+15|0]=o[A+2|0]|o[B+15|0],C[B+15|0]=o[A+3|0]|o[B+15|0],C[B+15|0]=o[A+4|0]|o[B+15|0],C[B+15|0]=o[A+5|0]|o[B+15|0],C[B+15|0]=o[A+6|0]|o[B+15|0],C[B+15|0]=o[A+7|0]|o[B+15|0],C[B+15|0]=o[A+8|0]|o[B+15|0],C[B+15|0]=o[A+9|0]|o[B+15|0],C[B+15|0]=o[A+10|0]|o[B+15|0],C[B+15|0]=o[A+11|0]|o[B+15|0],C[B+15|0]=o[A+12|0]|o[B+15|0],C[B+15|0]=o[A+13|0]|o[B+15|0],C[B+15|0]=o[A+14|0]|o[B+15|0],C[B+15|0]=o[A+15|0]|o[B+15|0],C[B+15|0]=o[A+16|0]|o[B+15|0],C[B+15|0]=o[A+17|0]|o[B+15|0],C[B+15|0]=o[A+18|0]|o[B+15|0],C[B+15|0]=o[A+19|0]|o[B+15|0],C[B+15|0]=o[A+20|0]|o[B+15|0],C[B+15|0]=o[A+21|0]|o[B+15|0],C[B+15|0]=o[A+22|0]|o[B+15|0],C[B+15|0]=o[A+23|0]|o[B+15|0],C[B+15|0]=o[A+24|0]|o[B+15|0],C[B+15|0]=o[A+25|0]|o[B+15|0],C[B+15|0]=o[A+26|0]|o[B+15|0],C[B+15|0]=o[A+27|0]|o[B+15|0],C[B+15|0]=o[A+28|0]|o[B+15|0],C[B+15|0]=o[A+29|0]|o[B+15|0],C[B+15|0]=o[A+30|0]|o[B+15|0],C[B+15|0]=o[A+31|0]|o[B+15|0],Q=(o[B+15|0]<<23)-8388608>>31),s=B+16|0,0|Q}function BI(A,I,g,C,B){var Q=0,o=0,E=0,a=0,_=0,c=0,t=0;A:{if(1==(0|C)|C>>>0>1)i[9404]=22;else{s=C=s-128|0,i[C- -64>>2]=0,i[C+56>>2]=0,i[C+60>>2]=0,i[C+48>>2]=0,i[C+52>>2]=0,i[C+40>>2]=0,i[C+44>>2]=0,i[C+32>>2]=0,i[C+36>>2]=0,i[C+24>>2]=0,i[C+28>>2]=0,i[C+16>>2]=0,i[C+20>>2]=0,Q=RI(A),i[C+28>>2]=Q,i[C+44>>2]=Q,i[C+12>>2]=Q,o=K(Q),i[C+40>>2]=o,E=K(Q),i[C+24>>2]=E,a=K(Q),i[C+8>>2]=a;I:if(!a|!o|!E||!(Q=K(Q)))BA(o),BA(E),BA(a),A=-22;else{if(A=OA(C+8|0,A,B)){BA(i[C+40>>2]),BA(i[C+24>>2]),BA(i[C+8>>2]),BA(Q);break I}a=i[C+28>>2],_=i[C+24>>2],A=i[C+60>>2],c=i[C+52>>2],t=i[C+48>>2],ag(Q,o=i[C+12>>2]),(E=K(o))?(i[C+100>>2]=0,i[C+104>>2]=0,i[C+92>>2]=0,i[C+96>>2]=0,i[C+88>>2]=a,i[C+84>>2]=_,i[C+80>>2]=g,i[C+76>>2]=I,i[C+72>>2]=o,i[C+68>>2]=E,i[C+124>>2]=0,i[C+120>>2]=A,i[C+116>>2]=A,i[C+112>>2]=c,i[C+108>>2]=t,(A=q(C+68|0,B))||Ng(Q,E,o),XC(E,o),BA(E)):A=-22,BA(i[C+40>>2]),BA(i[C+24>>2]),A||(A=MI(Q,i[C+8>>2],i[C+12>>2])?-35:0),BA(Q),BA(i[C+8>>2])}if(s=C+128|0,I=A,!A)break A;-35==(0|A)&&(i[9404]=28)}I=-1}return I}function QI(A,I){var g,B,Q,o,E,_,c,t=0,r=0;B=i[I+32>>2],Q=i[I+28>>2],o=i[I+24>>2],E=i[I+20>>2],_=i[I+16>>2],c=i[I+12>>2],t=i[I+4>>2],r=i[I>>2],g=i[I+36>>2],I=i[I+8>>2],r=a((B+(Q+(o+(E+(_+(c+((t+(r+(a(g,19)+16777216>>>25|0)>>26)>>25)+I>>26)>>25)>>26)>>25)>>26)>>25)>>26)+g>>25,19)+r|0,C[0|A]=r,C[A+2|0]=r>>>16,C[A+1|0]=r>>>8,t=t+(r>>26)|0,C[A+5|0]=t>>>14,C[A+4|0]=t>>>6,C[A+3|0]=r>>>24&3|t<<2,I=I+(t>>25)|0,C[A+8|0]=I>>>13,C[A+7|0]=I>>>5,C[A+6|0]=I<<3|(29360128&t)>>>22,r=(I>>26)+c|0,C[A+11|0]=r>>>11,C[A+10|0]=r>>>3,C[A+9|0]=r<<5|(65011712&I)>>>21,t=(r>>25)+_|0,C[A+15|0]=t>>>18,C[A+14|0]=t>>>10,C[A+13|0]=t>>>2,I=(t>>26)+E|0,C[A+16|0]=I,C[A+12|0]=t<<6|(33030144&r)>>>19,C[A+18|0]=I>>>16,C[A+17|0]=I>>>8,t=(I>>25)+o|0,C[A+21|0]=t>>>15,C[A+20|0]=t>>>7,C[A+19|0]=I>>>24&1|t<<1,I=(t>>26)+Q|0,C[A+24|0]=I>>>13,C[A+23|0]=I>>>5,C[A+22|0]=I<<3|(58720256&t)>>>23,t=(I>>25)+B|0,C[A+27|0]=t>>>12,C[A+26|0]=t>>>4,C[A+25|0]=t<<4|(31457280&I)>>>21,I=g+(t>>26)|0,C[A+30|0]=I>>>10,C[A+29|0]=I>>>2,C[A+31|0]=(33292288&I)>>>18,C[A+28|0]=I<<6|(66060288&t)>>>20}function iI(A,I,g){A|=0,I|=0;var B,Q=0,i=0,E=0,a=0,_=0,c=0,t=0;if(s=B=s-192|0,(g|=0)>>>0>=129&&(SI(A),SA(A,I,g,0),j(A,B),g=64,I=B),SI(A),bg(B- -64|0,54,128),g){if(g>>>0>=4)for(t=252&g;C[0|(Q=(E=B- -64|0)+i|0)]=o[0|Q]^o[I+i|0],C[0|(a=(Q=1|i)+E|0)]=o[0|a]^o[I+Q|0],C[0|(a=(Q=2|i)+E|0)]=o[0|a]^o[I+Q|0],C[0|(Q=(Q=E)+(E=3|i)|0)]=o[0|Q]^o[I+E|0],i=i+4|0,(0|t)!=(0|(_=_+4|0)););if(_=3&g)for(;C[0|(E=(B- -64|0)+i|0)]=o[0|E]^o[I+i|0],i=i+1|0,(0|_)!=(0|(c=c+1|0)););}if(SA(A,i=B- -64|0,128,0),SI(E=A+208|0),bg(i,92,128),g){if(c=0,i=0,g>>>0>=4)for(t=252&g,_=0;C[0|(Q=(A=B- -64|0)+i|0)]=o[0|Q]^o[I+i|0],C[0|(a=(Q=1|i)+A|0)]=o[0|a]^o[I+Q|0],C[0|(a=(Q=2|i)+A|0)]=o[0|a]^o[I+Q|0],C[0|(Q=(Q=A)+(A=3|i)|0)]=o[0|Q]^o[A+I|0],i=i+4|0,(0|t)!=(0|(_=_+4|0)););if(A=3&g)for(;C[0|(g=(B- -64|0)+i|0)]=o[0|g]^o[I+i|0],i=i+1|0,(0|A)!=(0|(c=c+1|0)););}return SA(E,A=B- -64|0,128,0),XC(A,128),XC(B,64),s=B+192|0,0}function oI(A,I){var g;return A|=0,I|=0,i[12+(g=s-16|0)>>2]=A,i[g+8>>2]=I,i[g+4>>2]=0,i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]]^o[i[g+8>>2]],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+1|0]^o[i[g+8>>2]+1|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+2|0]^o[i[g+8>>2]+2|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+3|0]^o[i[g+8>>2]+3|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+4|0]^o[i[g+8>>2]+4|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+5|0]^o[i[g+8>>2]+5|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+6|0]^o[i[g+8>>2]+6|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+7|0]^o[i[g+8>>2]+7|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+8|0]^o[i[g+8>>2]+8|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+9|0]^o[i[g+8>>2]+9|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+10|0]^o[i[g+8>>2]+10|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+11|0]^o[i[g+8>>2]+11|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+12|0]^o[i[g+8>>2]+12|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+13|0]^o[i[g+8>>2]+13|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+14|0]^o[i[g+8>>2]+14|0],i[g+4>>2]=i[g+4>>2]|o[i[g+12>>2]+15|0]^o[i[g+8>>2]+15|0],(i[g+4>>2]-1>>>8&1)-1|0}function EI(A,I,g,C,B,Q,o){var E,a,_,c=0,t=0,r=0,e=0;s=E=s-352|0,yA(E,Q,o,0);A:{if(!(((c=!!(0|B))|!B&C>>>0>A-g>>>0)&A>>>0>g>>>0)&(!B&g-A>>>0>=C>>>0|A>>>0>=g>>>0)){if(i[E+56>>2]=0,i[E+60>>2]=0,i[E+48>>2]=0,i[E+52>>2]=0,i[E+40>>2]=0,i[E+44>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,t=(o=(c=!!(0|B))|!B&C>>>0>=32)?32:C,r=o?0:B,o=c|!B&C>>>0>32,!(C|B)){e=1;break A}}else g=yg(A,g,C),i[E+56>>2]=0,i[E+60>>2]=0,i[E+48>>2]=0,i[E+52>>2]=0,i[E+40>>2]=0,i[E+44>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,t=(o=c|!B&C>>>0>=32)?32:C,r=o?0:B,o=c|!B&C>>>0>32;Ng(E- -64|0,g,t),e=0}return c=r,ug(a=E+32|0,a,_=t+32|0,c=_>>>0<32?c+1|0:c,c=Q+16|0,E),wC(E+96|0,a),e||Ng(A,E- -64|0,t),XC(E+32|0,64),o&&mg(A+t|0,g+t|0,C-t|0,B-((C>>>0<t>>>0)+r|0)|0,c,1,0,E),XC(E,32),SC(g=E+96|0,A,C,B),nC(g,I),XC(g,256),s=E+352|0,0}function aI(A,I,g,C,B,Q,o){var E,a,_,c=0,t=0,r=0,e=0;s=E=s-352|0,wA(E,Q,o,0);A:{if(!(((c=!!(0|B))|!B&C>>>0>A-g>>>0)&A>>>0>g>>>0)&(!B&g-A>>>0>=C>>>0|A>>>0>=g>>>0)){if(i[E+56>>2]=0,i[E+60>>2]=0,i[E+48>>2]=0,i[E+52>>2]=0,i[E+40>>2]=0,i[E+44>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,t=(o=(c=!!(0|B))|!B&C>>>0>=32)?32:C,r=o?0:B,o=c|!B&C>>>0>32,!(C|B)){e=1;break A}}else g=yg(A,g,C),i[E+56>>2]=0,i[E+60>>2]=0,i[E+48>>2]=0,i[E+52>>2]=0,i[E+40>>2]=0,i[E+44>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,t=(o=c|!B&C>>>0>=32)?32:C,r=o?0:B,o=c|!B&C>>>0>32;Ng(E- -64|0,g,t),e=0}return c=r,aC(a=E+32|0,a,_=t+32|0,c=_>>>0<32?c+1|0:c,c=Q+16|0,E),wC(E+96|0,a),e||Ng(A,E- -64|0,t),XC(E+32|0,64),o&&oC(A+t|0,g+t|0,C-t|0,B-((C>>>0<t>>>0)+r|0)|0,c,1,0,E),XC(E,32),SC(g=E+96|0,A,C,B),nC(g,I),XC(g,256),s=E+352|0,0}function _I(A,I,g,B,Q){var o;return A|=0,I|=0,g|=0,B|=0,s=o=s-480|0,iI(o,Q|=0,32),dC(o,I,g,B),wg(o,o+416|0),I=i[o+444>>2],g=i[o+440>>2],C[A+24|0]=g,C[A+25|0]=g>>>8,C[A+26|0]=g>>>16,C[A+27|0]=g>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[o+436>>2],g=i[o+432>>2],C[A+16|0]=g,C[A+17|0]=g>>>8,C[A+18|0]=g>>>16,C[A+19|0]=g>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[o+428>>2],g=i[o+424>>2],C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[o+420>>2],g=i[o+416>>2],C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,s=o+480|0,0}function cI(A,I,g){A|=0,I|=0;var B,Q=0;return s=B=s+-64|0,FI(B,g|=0,32,0),g=i[B+28>>2],Q=i[B+24>>2],C[I+24|0]=Q,C[I+25|0]=Q>>>8,C[I+26|0]=Q>>>16,C[I+27|0]=Q>>>24,C[I+28|0]=g,C[I+29|0]=g>>>8,C[I+30|0]=g>>>16,C[I+31|0]=g>>>24,g=i[B+20>>2],Q=i[B+16>>2],C[I+16|0]=Q,C[I+17|0]=Q>>>8,C[I+18|0]=Q>>>16,C[I+19|0]=Q>>>24,C[I+20|0]=g,C[I+21|0]=g>>>8,C[I+22|0]=g>>>16,C[I+23|0]=g>>>24,g=i[B+12>>2],Q=i[B+8>>2],C[I+8|0]=Q,C[I+9|0]=Q>>>8,C[I+10|0]=Q>>>16,C[I+11|0]=Q>>>24,C[I+12|0]=g,C[I+13|0]=g>>>8,C[I+14|0]=g>>>16,C[I+15|0]=g>>>24,g=i[B+4>>2],Q=i[B>>2],C[0|I]=Q,C[I+1|0]=Q>>>8,C[I+2|0]=Q>>>16,C[I+3|0]=Q>>>24,C[I+4|0]=g,C[I+5|0]=g>>>8,C[I+6|0]=g>>>16,C[I+7|0]=g>>>24,XC(B,64),A=pC(A,I),s=B- -64|0,0|A}function tI(A,I){var g=0,C=0,B=0,Q=0,o=0,E=0;return I>>>0>4294967168?48:(I>>>0>=4294967168?(i[9404]=48,g=0):(g=0,(I=K(76+(Q=I>>>0<11?16:I+11&-8)|0))&&(g=I-8|0,63&I?(B=(-8&(E=i[(o=I-4|0)>>2]))-(C=(I=((I=(I+63&-64)-8|0)-g>>>0<=15?64:0)+I|0)-g|0)|0,3&E?(i[I+4>>2]=B|1&i[I+4>>2]|2,i[4+(B=I+B|0)>>2]=1|i[B+4>>2],i[o>>2]=C|1&i[o>>2]|2,i[4+(B=g+C|0)>>2]=1|i[B+4>>2],oA(g,C)):(g=i[g>>2],i[I+4>>2]=B,i[I>>2]=g+C)):I=g,3&(g=i[I+4>>2])&&((C=-8&g)>>>0<=Q+16>>>0||(i[I+4>>2]=Q|1&g|2,g=I+Q|0,Q=C-Q|0,i[g+4>>2]=3|Q,i[4+(C=I+C|0)>>2]=1|i[C+4>>2],oA(g,Q))),g=I+8|0)),g?(i[A>>2]=g,0):48)}function rI(A,I,g,C,B,Q,o,E,a,_,c){var t;if(t=bg(A,0,I),1==(0|g)|g>>>0>1)return i[9404]=22,-1;if(!(!g&I>>>0<=15)){if(!(!(Q|a)&_>>>0<2147483649))return i[9404]=22,-1;if(!(!((!a&E>>>0>=3|!!(0|a))&_>>>0>8191)|(0|C)==(0|t)))return 1==(0|c)?(Q=_>>>10|0,s=A=s+-64|0,t&&ag(t,I),(g=K(I))?(i[A+36>>2]=0,i[A+40>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+24>>2]=16,i[A+20>>2]=o,i[A+16>>2]=B,i[A+12>>2]=C,i[A+8>>2]=I,i[A+4>>2]=g,i[A+60>>2]=0,i[A+56>>2]=1,i[A+52>>2]=1,i[A+48>>2]=Q,i[A+44>>2]=E,(C=q(A+4|0,1))|!t||Ng(t,g,I),XC(g,I),BA(g)):C=-22,s=A- -64|0,C?-1:0):(i[9404]=28,-1)}return i[9404]=28,-1}function eI(A,I,g,C,B,Q,i){var o,E,a=0,_=0,c=0;s=o=s-96|0,wA(o,Q,i,0),DC(i=o+32|0,32,0,E=Q+16|0,o),Q=-1;A:{I:if(!fC(g,I,C,B,i)){if(Q=0,!A)break A;g:{if(!(((g=!!(0|B))|!B&C>>>0>I-A>>>0)&A>>>0<I>>>0)&(!B&C>>>0<=A-I>>>0|A>>>0<=I>>>0)){if(!(C|B))break g;g=(Q=!B&C>>>0>=32|!!(0|B))?32:C,a=Q?0:B}else I=yg(A,I,C),g=(Q=g|!B&C>>>0>=32)?32:C,a=Q?0:B;if(Q=a,c=Ng(o- -64|0,I,g),aC(i=o+32|0,i,_=g+32|0,Q=_>>>0<32?Q+1|0:Q,E,o),A=Ng(A,c,g),XC(i,64),Q=0,!B&C>>>0<33)break I;oC(A+g|0,I+g|0,C-g|0,B-(a+(g>>>0>C>>>0)|0)|0,E,1,0,o);break I}aC(A=o+32|0,A,32,0,E,o),XC(A,64)}XC(o,32)}return s=o+96|0,Q}function yI(A,I,g,C,B,Q,o,E,a,_,c){var t;if(t=bg(A,0,I),1==(0|g)|g>>>0>1)return i[9404]=22,-1;if(!(!g&I>>>0<=15)){if(!(!(Q|a)&_>>>0<2147483649))return i[9404]=22,-1;if(!(!(!!(E|a)&_>>>0>8191)|(0|C)==(0|t)))return 2==(0|c)?(Q=_>>>10|0,s=A=s+-64|0,t&&ag(t,I),(g=K(I))?(i[A+36>>2]=0,i[A+40>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+24>>2]=16,i[A+20>>2]=o,i[A+16>>2]=B,i[A+12>>2]=C,i[A+8>>2]=I,i[A+4>>2]=g,i[A+60>>2]=0,i[A+56>>2]=1,i[A+52>>2]=1,i[A+48>>2]=Q,i[A+44>>2]=E,(C=q(A+4|0,2))|!t||Ng(t,g,I),XC(g,I),BA(g)):C=-22,s=A- -64|0,C?-1:0):(i[9404]=28,-1)}return i[9404]=28,-1}function sI(A,I,g,C,B,Q,i){var o,E,a=0,_=0;s=o=s-96|0,yA(o,Q,i,0),Xg(i=o+32|0,32,0,E=Q+16|0,o),Q=-1;A:{I:if(!fC(g,I,C,B,i)){if(Q=0,!A)break A;g:{if(!(((g=!!(0|B))|!B&C>>>0>I-A>>>0)&A>>>0<I>>>0)&(!B&C>>>0<=A-I>>>0|A>>>0<=I>>>0)){if(!(C|B))break g;g=(Q=!B&C>>>0>=32|!!(0|B))?32:C,i=Q?0:B}else I=yg(A,I,C),g=(Q=g|!B&C>>>0>=32)?32:C,i=Q?0:B;if(a=g,_=Ng(o- -64|0,I,g),ug(g=o+32|0,g,Q=a+32|0,Q>>>0<32?i+1|0:i,E,o),g=Ng(A,_,a),Q=0,!B&C>>>0<33)break I;mg(g+a|0,I+a|0,C-a|0,B-(i+(C>>>0<a>>>0)|0)|0,E,1,0,o);break I}ug(A=o+32|0,A,32,0,E,o)}XC(o,32)}return s=o+96|0,Q}function hI(A,I,g,C,B,Q,E,a,_,c){var t,r;return s=t=s-400|0,i[t+4>>2]=0,yA(r=t+16|0,_,c,0),c=o[_+20|0]|o[_+21|0]<<8|o[_+22|0]<<16|o[_+23|0]<<24,i[t+8>>2]=o[_+16|0]|o[_+17|0]<<8|o[_+18|0]<<16|o[_+19|0]<<24,i[t+12>>2]=c,jg(c=t+80|0,64,0,t+4|0,r),wC(_=t+144|0,c),XC(c,64),SC(_,Q,E,a),SC(_,35680,0-E&15,0),SC(_,I,g,C),SC(_,35680,0-g&15,0),i[t+72>>2]=E,i[t+76>>2]=a,SC(_,Q=t+72|0,8,0),i[t+72>>2]=g,i[t+76>>2]=C,SC(_,Q,8,0),nC(_,Q=t+48|0),XC(_,256),_=oI(Q,B),XC(Q,16),A&&(_?(bg(A,0,g),_=-1):(Og(A,I,g,C,t+4|0,t+16|0),_=0)),XC(t+16|0,32),s=t+400|0,_}function DI(A,I,g,B,Q,o){var E,a;if(s=E=s-496|0,mA(a=E+288|0,A,I),mC(a,g,B,0),o)for(A=0,I=0;g=(I=I+1|0)<<24|(65280&I)<<8|I>>>8&65280|I>>>24,C[E+76|0]=g,C[E+77|0]=g>>>8,C[E+78|0]=g>>>16,C[E+79|0]=g>>>24,Ng(g=E+80|0,E+288|0,208),mC(g,E+76|0,4,0),Sg(g,E+32|0),g=i[E+60>>2],i[E+24>>2]=i[E+56>>2],i[E+28>>2]=g,g=i[E+52>>2],i[E+16>>2]=i[E+48>>2],i[E+20>>2]=g,g=i[E+44>>2],i[E+8>>2]=i[E+40>>2],i[E+12>>2]=g,g=i[E+36>>2],i[E>>2]=i[E+32>>2],i[E+4>>2]=g,Ng(g=A+Q|0,E,(A=o-A|0)>>>0>=32?32:A),o>>>0>(A=I<<5)>>>0;);XC(E+288|0,208),s=E+496|0}function fI(A,I,g,B,Q,i){var o,E,a=0;return s=o=s-32|0,a=-1,(E=g>>>0<32)&!B||(Ug(o,32,0,Q,i),fC(I+16|0,I+32|0,g-32|0,B-E|0,o)||(Gg(A,I,g,B,Q,i),C[A+24|0]=0,C[A+25|0]=0,C[A+26|0]=0,C[A+27|0]=0,C[A+28|0]=0,C[A+29|0]=0,C[A+30|0]=0,C[A+31|0]=0,C[A+16|0]=0,C[A+17|0]=0,C[A+18|0]=0,C[A+19|0]=0,C[A+20|0]=0,C[A+21|0]=0,C[A+22|0]=0,C[A+23|0]=0,C[A+8|0]=0,C[A+9|0]=0,C[A+10|0]=0,C[A+11|0]=0,C[A+12|0]=0,C[A+13|0]=0,C[A+14|0]=0,C[A+15|0]=0,C[0|A]=0,C[A+1|0]=0,C[A+2|0]=0,C[A+3|0]=0,C[A+4|0]=0,C[A+5|0]=0,C[A+6|0]=0,C[A+7|0]=0,a=0)),s=o+32|0,a}function pI(A,I,g,C,B,Q,E,a,_,c,t){var r,e,y;return s=r=s-384|0,i[r+4>>2]=0,yA(e=r+16|0,c,t,0),t=o[c+20|0]|o[c+21|0]<<8|o[c+22|0]<<16|o[c+23|0]<<24,i[r+8>>2]=o[c+16|0]|o[c+17|0]<<8|o[c+18|0]<<16|o[c+19|0]<<24,i[r+12>>2]=t,jg(t=r- -64|0,64,0,y=r+4|0,e),wC(c=r+128|0,t),XC(t,64),SC(c,E,a,_),SC(c,35680,0-a&15,0),Og(A,C,B,Q,y,e),SC(c,A,B,Q),SC(c,35680,0-B&15,0),i[r+56>>2]=a,i[r+60>>2]=_,SC(c,A=r+56|0,8,0),i[r+56>>2]=B,i[r+60>>2]=Q,SC(c,A,8,0),nC(c,I),XC(c,256),g&&(i[g>>2]=16,i[g+4>>2]=0),XC(r+16|0,32),s=r+384|0,0}function wI(A,I,g,C,B){var Q,E,a=0;return s=Q=s+-64|0,!g&(E=RI(A))>>>0<128?(i[Q+60>>2]=0,i[Q+52>>2]=0,i[Q+56>>2]=0,i[Q+44>>2]=0,i[Q+48>>2]=0,g=0,E&&(g=E,(1|E)>>>0<65536||(g=E)),!(a=K(g))|!(3&o[a-4|0])||bg(a,0,g),a?(i[Q+36>>2]=0,i[Q+40>>2]=0,i[Q+12>>2]=a,i[Q+20>>2]=a,i[Q+24>>2]=E,i[Q+4>>2]=a,i[Q+16>>2]=E,i[Q+28>>2]=0,i[Q+32>>2]=0,i[Q+8>>2]=E,OA(Q+4|0,A,B)?(i[9404]=28,A=-1):A=i[Q+44>>2]!=(0|I)|i[Q+48>>2]!=(C>>>10|0),BA(a)):A=-1):(i[9404]=28,A=-1),s=Q- -64|0,A}function nI(A){var I,g=0,C=0;if(!A)return-25;if(!i[A>>2])return-1;if(E[A+4>>2]<16)return-2;if(!(i[A+8>>2]|!i[A+12>>2]))return-18;if(g=i[A+20>>2],!i[A+16>>2])return g?-19:-6;if(g>>>0<8)return-6;if(!(i[A+24>>2]|!i[A+28>>2]))return-20;if(!(i[A+32>>2]|!i[A+36>>2]))return-21;if(!(g=i[A+48>>2]))return-16;if(g>>>0>16777215)return-17;if(C=-14,!((I=i[A+44>>2])>>>0<8)){if(I>>>0>2097152)return-15;if(!(g<<3>>>0>I>>>0)){if(!i[A+40>>2])return-12;if(!(A=i[A+52>>2]))return-28;C=A>>>0>16777215?-29:0}}return C}function kI(A,I){var g,C=0,B=0;g=I;A:{I:{g:{if(I&=255){if(3&A)for(;;){if(!(C=o[0|A])|(0|I)==(0|C))break A;if(!(3&(A=A+1|0)))break}if(-2139062144!=(-2139062144&((C=i[A>>2])|16843008-C)))break g;for(B=a(I,16843009);;){if(-2139062144!=(-2139062144&(16843008-(I=C^B)|I)))break g;if(C=i[A+4>>2],A=I=A+4|0,-2139062144!=(-2139062144&(16843008-C|C)))break}break I}A=RI(A)+A|0;break A}I=A}for(;;){if(!(C=o[0|(A=I)]))break A;if(I=A+1|0,(0|C)==(255&g))break}}return o[0|A]==(255&g)?A:0}function FI(A,I,g,C){var B,Q=0;return s=B=s-208|0,i[B+72>>2]=0,i[B+76>>2]=0,Q=i[8591],i[B+8>>2]=i[8590],i[B+12>>2]=Q,Q=i[8593],i[B+16>>2]=i[8592],i[B+20>>2]=Q,Q=i[8595],i[B+24>>2]=i[8594],i[B+28>>2]=Q,Q=i[8597],i[B+32>>2]=i[8596],i[B+36>>2]=Q,Q=i[8599],i[B+40>>2]=i[8598],i[B+44>>2]=Q,Q=i[8601],i[B+48>>2]=i[8600],i[B+52>>2]=Q,Q=i[8603],i[B+56>>2]=i[8602],i[B+60>>2]=Q,i[B+64>>2]=0,i[B+68>>2]=0,Q=i[8589],i[B>>2]=i[8588],i[B+4>>2]=Q,SA(B,I,g,C),j(B,A),s=B+208|0,0}function SI(A){var I=0;return i[64+(A|=0)>>2]=0,i[A+68>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,I=i[8589],i[A>>2]=i[8588],i[A+4>>2]=I,I=i[8591],i[A+8>>2]=i[8590],i[A+12>>2]=I,I=i[8593],i[A+16>>2]=i[8592],i[A+20>>2]=I,I=i[8595],i[A+24>>2]=i[8594],i[A+28>>2]=I,I=i[8597],i[A+32>>2]=i[8596],i[A+36>>2]=I,I=i[8599],i[A+40>>2]=i[8598],i[A+44>>2]=I,I=i[8601],i[A+48>>2]=i[8600],i[A+52>>2]=I,I=i[8603],i[A+56>>2]=i[8602],i[A+60>>2]=I,0}function NI(A){return~((127&~o[A+31|0]|o[A+1|0]&o[A+2|0]&o[A+3|0]&o[A+4|0]&o[A+5|0]&o[A+6|0]&o[A+7|0]&o[A+8|0]&o[A+9|0]&o[A+10|0]&o[A+11|0]&o[A+12|0]&o[A+13|0]&o[A+14|0]&o[A+15|0]&o[A+16|0]&o[A+17|0]&o[A+18|0]&o[A+19|0]&o[A+20|0]&o[A+21|0]&o[A+22|0]&o[A+23|0]&o[A+24|0]&o[A+25|0]&o[A+26|0]&o[A+27|0]&o[A+28|0]&o[A+30|0]&o[A+29|0]^255)-1&236-o[0|A])>>>8&1}function GI(A,I){var g,B=0,Q=0,i=0,E=0;if(C[15+(g=s-16|0)|0]=0,I){if(I>>>0>=4)for(E=-4&I;B=A+Q|0,C[g+15|0]=o[0|B]|o[g+15|0],C[g+15|0]=o[B+1|0]|o[g+15|0],C[g+15|0]=o[B+2|0]|o[g+15|0],C[g+15|0]=o[B+3|0]|o[g+15|0],Q=Q+4|0,(0|E)!=(0|(i=i+4|0)););if(B=3&I)for(I=0;C[g+15|0]=o[A+Q|0]|o[g+15|0],Q=Q+1|0,(0|B)!=(0|(I=I+1|0)););}return o[g+15|0]-1>>>8&1}function MI(A,I,g){var B,Q=0,E=0;if(i[12+(B=s-16|0)>>2]=A,i[B+8>>2]=I,A=0,C[B+7|0]=0,g){if(I=1&g,1!=(0|g))for(E=-2&g,g=0;C[B+7|0]=o[B+7|0]|o[i[B+12>>2]+A|0]^o[i[B+8>>2]+A|0],Q=1|A,C[B+7|0]=o[B+7|0]|o[Q+i[B+12>>2]|0]^o[i[B+8>>2]+Q|0],A=A+2|0,(0|E)!=(0|(g=g+2|0)););I&&(C[B+7|0]=o[B+7|0]|o[i[B+12>>2]+A|0]^o[i[B+8>>2]+A|0])}return(o[B+7|0]-1>>>8&1)-1|0}function KI(A){for(var I=0,g=0,C=0,B=0,Q=0,i=0,E=0,a=0,_=0,c=0;B=(g=o[A+C|0])^o[0|(I=C+2688|0)]|B,Q=g^o[I+192|0]|Q,i=g^o[I+160|0]|i,E=g^o[I+128|0]|E,a=g^o[I+96|0]|a,_=g^o[I- -64|0]|_,c=g^o[I+32|0]|c,31!=(0|(C=C+1|0)););return((255&((I=127^(A=127&o[A+31|0]))|Q))-1|(255&(I|i))-1|(255&(I|E))-1|(255&(122^A|a))-1|(255&(5^A|_))-1|(255&(A|c))-1|(255&(A|B))-1)>>>8&1}function UI(A,I,g){var C=0,B=0,Q=0,i=0;return B=31&(Q=i=63&g),Q=Q>>>0>=32?-1>>>B|0:(C=-1>>>B|0)|(1<<B)-1<<32-B,Q&=A,C&=I,B=31&i,i>>>0>=32?(C=Q<<B,i=0):(C=(1<<B)-1&Q>>>32-B|C<<B,i=Q<<B),Q=C,C=31&(B=0-g&63),B>>>0>=32?(C=-1<<C,g=0):C=(g=-1<<C)|(1<<C)-1&-1>>>32-C,A&=g,I&=C,C=31&B,B>>>0>=32?(g=0,A=I>>>C|0):(g=I>>>C|0,A=((1<<C)-1&I)<<32-C|A>>>C),f=g|Q,A|i}function bI(A,I,g,C,B,Q){A|=0,I|=0,g|=0;var o=0,E=0;A:I:{g:{if(!(!(B|=0)&(C|=0)>>>0<64||(E=1+(B=B-1|0)|0,o=B,!(C=(B=C+-64|0)>>>0<4294967232?E:o)&B>>>0>4294967231|C))){if(!U(o=g,g=g- -64|0,B,C,Q|=0,0))break g;A&&bg(A,0,B)}if(C=-1,!I)break I;i[I>>2]=0,i[I+4>>2]=0,C=-1;break A}I&&(i[I>>2]=B,i[I+4>>2]=C),C=0,A&&yg(A,g,B)}return 0|C}function HI(A,I,g,C,B,Q,o,E,a,_){var c,t,r;return s=c=s-352|0,jg(r=c+32|0,64,0,a,_),wC(t=c+96|0,r),XC(r,64),SC(t,Q,o,E),SC(t,35648,0-o&15,0),SC(t,I,g,C),SC(t,35648,0-g&15,0),i[c+24>>2]=o,i[c+28>>2]=E,SC(t,Q=c+24|0,8,0),i[c+24>>2]=g,i[c+28>>2]=C,SC(t,Q,8,0),nC(t,c),XC(t,256),Q=oI(c,B),XC(c,16),A&&(Q?(bg(A,0,g),Q=-1):(Cg(A,I,g,C,a,1,_),Q=0)),s=c+352|0,Q}function YI(A,I,g,C,B,Q){var E,a;return A|=0,I|=0,g|=0,C|=0,Q|=0,s=E=s-32|0,a=o[0|(B|=0)]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,B=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[E+24>>2]=0,i[E+28>>2]=0,i[E+16>>2]=a,i[E+20>>2]=B,i[E+8>>2]=0,i[E+12>>2]=0,i[E>>2]=g,i[E+4>>2]=C,I-65>>>0<=4294967246?(i[9404]=28,A=-1):A=QA(A,I,0,0,0,Q,32,E,E+16|0),s=E+32|0,0|A}function JI(A,I,g,C,B){var Q,o;return A|=0,I|=0,g|=0,C|=0,s=Q=s-512|0,iI(o=Q+32|0,B|=0,32),dC(o,I,g,C),wg(o,Q+448|0),I=i[Q+476>>2],i[Q+24>>2]=i[Q+472>>2],i[Q+28>>2]=I,I=i[Q+468>>2],i[Q+16>>2]=i[Q+464>>2],i[Q+20>>2]=I,I=i[Q+460>>2],i[Q+8>>2]=i[Q+456>>2],i[Q+12>>2]=I,I=i[Q+452>>2],i[Q>>2]=i[Q+448>>2],i[Q+4>>2]=I,I=NC(A,Q),g=MI(Q,A,32),s=Q+512|0,((0|A)==(0|Q)?-1:I)|g}function dI(A,I,g,C,B,Q,o,E,a,_){var c,t,r;return s=c=s-352|0,Xg(r=c+32|0,64,0,a,_),wC(t=c+96|0,r),XC(r,64),SC(t,Q,o,E),i[c+24>>2]=o,i[c+28>>2]=E,SC(t,Q=c+24|0,8,0),SC(t,I,g,C),i[c+24>>2]=g,i[c+28>>2]=C,SC(t,Q,8,0),nC(t,c),XC(t,256),Q=oI(c,B),XC(c,16),A&&(Q?(bg(A,0,g),Q=-1):(mg(A,I,g,C,a,1,0,_),Q=0)),s=c+352|0,Q}function mI(A,I,g,C,B,Q,o,E,a,_,c){var t,r,e;return s=t=s-336|0,jg(e=t+16|0,64,0,_,c),wC(r=t+80|0,e),XC(e,64),SC(r,o,E,a),SC(r,35648,0-E&15,0),Cg(A,C,B,Q,_,1,c),SC(r,A,B,Q),SC(r,35648,0-B&15,0),i[t+8>>2]=E,i[t+12>>2]=a,SC(r,A=t+8|0,8,0),i[t+8>>2]=B,i[t+12>>2]=Q,SC(r,A,8,0),nC(r,I),XC(r,256),g&&(i[g>>2]=16,i[g+4>>2]=0),s=t+336|0,0}function lI(A,I){var g,C=0,B=0,Q=0,E=0,_=0;A:if(!(((g=o[0|A])-58&255)>>>0<246)){for(C=g,B=A;;){if(E=B,Q>>>0>429496729)break A;if((C=(255&C)-48|0)>>>0>~(Q=a(Q,10))>>>0)break A;if(Q=Q+C|0,!(((C=o[0|(B=B+1|0)])-58&255)>>>0>245))break}48==(0|g)&(0|A)!=(0|E)|(0|A)==(0|B)||(i[I>>2]=Q,_=B)}return _}function uI(A){var I=0,g=0,C=0,B=0;I=65,g=1024;A:{I:{if((0|(C=255&A))!=o[1024])for(C=a(C,16843009);;){if(-2139062144!=(-2139062144&((B=C^i[g>>2])|16843008-B)))break I;if(g=g+4|0,!((I=I-4|0)>>>0>3))break}if(!I)break A}for(A&=255;;){if((0|A)==o[0|g])return g;if(g=g+1|0,!(I=I-1|0))break}}return 0}function xI(A,I,g,C,B,Q,o,E,a,_,c){var t,r,e;return s=t=s-336|0,Xg(e=t+16|0,64,0,_,c),wC(r=t+80|0,e),XC(e,64),SC(r,o,E,a),i[t+8>>2]=E,i[t+12>>2]=a,SC(r,o=t+8|0,8,0),mg(A,C,B,Q,_,1,0,c),SC(r,A,B,Q),i[t+8>>2]=B,i[t+12>>2]=Q,SC(r,o,8,0),nC(r,I),XC(r,256),g&&(i[g>>2]=16,i[g+4>>2]=0),s=t+336|0,0}function vI(A,I,g,B,Q,i){return!B&g>>>0>=32|B?(Gg(A,I,g,B,Q,i),hC(A+16|0,A+32|0,g-32|0,B-(g>>>0<32)|0,A),C[A+8|0]=0,C[A+9|0]=0,C[A+10|0]=0,C[A+11|0]=0,C[A+12|0]=0,C[A+13|0]=0,C[A+14|0]=0,C[A+15|0]=0,C[0|A]=0,C[A+1|0]=0,C[A+2|0]=0,C[A+3|0]=0,C[A+4|0]=0,C[A+5|0]=0,C[A+6|0]=0,C[A+7|0]=0,A=0):A=-1,A}function RI(A){var I=0,g=0,C=0;A:{I:if(3&(I=A)){if(!o[0|I])return 0;for(;;){if(!(3&(I=I+1|0)))break I;if(!o[0|I])break}break A}for(;g=I,I=I+4|0,-2139062144==(-2139062144&((C=i[g>>2])|16843008-C)););for(;g=(I=g)+1|0,o[0|I];);}return I-A|0}function LI(A,I,g,C,B,Q){I|=0,B|=0,Q|=0;var o,E=0;return s=o=s-16|0,w(A|=0,o+8|0,yg(A- -64|0,g|=0,C|=0),C,B,Q,0),i[o+12>>2]|64!=i[o+8>>2]?(I&&(i[I>>2]=0,i[I+4>>2]=0),bg(A,0,C- -64|0),E=-1):I&&(i[I>>2]=C- -64,i[I+4>>2]=B-((C>>>0<4294967232)-1|0)),s=o+16|0,0|E}function PI(A,I){var g,C=0,B=0,Q=0,E=0;return(g=uI(o[0|I]))&&(C=uI(o[I+1|0]))&&(B=uI(o[I+2|0]))&&(Q=uI(o[I+3|0]))&&(E=uI(o[I+4|0]))?(i[A>>2]=g-1024|C-1024<<6|B-1024<<12|Q-1024<<18|E-1024<<24,I+5|0):(i[A>>2]=0,0)}function qI(A,I,g){var C;for(i[12+(C=s-16|0)>>2]=A,i[C+8>>2]=I,A=0,i[C+4>>2]=0;i[C+4>>2]=i[C+4>>2]|o[i[C+12>>2]+A|0]^o[i[C+8>>2]+A|0],I=1|A,i[C+4>>2]=i[C+4>>2]|o[I+i[C+12>>2]|0]^o[I+i[C+8>>2]|0],(0|g)!=(0|(A=A+2|0)););return(i[C+4>>2]-1>>>8&1)-1|0}function zI(A,I,g,C,B,Q,o,E,a,_,c){var t=0,r=0,e=0;return r=-1,(t=C>>>0<32)&!B||!(t=B-t|0)&(e=C-32|0)>>>0>4294967263|t|!E&o>>>0>4294967263|E||(r=0|pB[i[c>>2]](A,g,e,(g+C|0)-32|0,32,Q,o,a,_)),I&&(i[I>>2]=r?0:C-32|0,i[I+4>>2]=r?0:B-(C>>>0<32)|0),r}function jI(A,I){var g,C=0,B=0,Q=0;s=g=s-896|0,fA(C=g+848|0,I),fA(B=g+800|0,I+32|0),$(Q=g+320|0,C),$(I=g+160|0,B),$A(C=g+640|0,I),sA(I=g+480|0,Q,C),b(g,I,C=g+600|0),b(g+40|0,B=g+520|0,Q=g+560|0),b(g+80|0,Q,C),b(g+120|0,I,B),W(A,g),s=g+896|0}function XI(A){var I=0,g=0,B=0,Q=0,i=0;for(I=1;g=(B=I)+o[0|(I=A+Q|0)]|0,C[0|I]=g,g=o[I+1|0]+(g>>>8|0)|0,C[I+1|0]=g,g=o[I+2|0]+(g>>>8|0)|0,C[I+2|0]=g,B=I,I=o[I+3|0]+(g>>>8|0)|0,C[B+3|0]=I,I=I>>>8|0,Q=Q+4|0,4!=(0|(i=i+4|0)););}function OI(A,I,g,C,B,Q,o){var E;return s=E=s-16|0,A=bg(A,0,128),!(C|Q)&o>>>0<2147483649?(!Q&B>>>0>=3|!!(0|Q))&o>>>0>8191?(ag(E,16),A=iA(B,o>>>10|0,I,g,E,A,1)?-1:0):(i[9404]=28,A=-1):(i[9404]=22,A=-1),s=E+16|0,A}function WI(A,I){var g=0;4&I&&((I=i[A>>2])&&XC(i[I+4>>2],i[A+16>>2]<<10),(I=i[A+4>>2])&&XC(I,i[A+20>>2]<<3)),BA(i[A+4>>2]),i[A+4>>2]=0,(I=i[A>>2])&&(g=i[I>>2])&&BA(g),BA(I),i[A>>2]=0}function VI(A,I,g,C,B,o,E,a,_,c,t){return!B&C>>>0>4294967263|!!(0|B)|!a&E>>>0>=4294967264|!!(0|a)?(rC(),Q()):(A=0|pB[i[t>>2]](A,A+C|0,32,g,C,o,E,_,c),I&&(C=(g=C+32|0)>>>0<32?B+1|0:B,i[I>>2]=A?0:g,i[I+4>>2]=A?0:C)),A}function ZI(A){var I=0,g=0,C=0,B=0,Q=0,i=0,E=0,a=0;for(I=32,g=1;a|=(B=o[(C=I-2|0)+A|0])-(Q=o[C+2912|0])>>8&(I=((i=o[2912+(I=I-1|0)|0])^(E=o[A+I|0]))-1>>8&g)|E-i>>8&g,g=I&(B^Q)-1>>8,I=C;);return!!(255&a)}function TI(A,I,g,C,B,Q,o){var E;return s=E=s-16|0,A=bg(A,0,128),!(C|Q)&o>>>0<2147483649?!!(B|Q)&o>>>0>8191?(ag(E,16),A=iA(B,o>>>10|0,I,g,E,A,2)?-1:0):(i[9404]=28,A=-1):(i[9404]=22,A=-1),s=E+16|0,A}function $I(A){var I=0;return i[32+(A|=0)>>2]=0,i[A+36>>2]=0,I=i[8809],i[A>>2]=i[8808],i[A+4>>2]=I,I=i[8811],i[A+8>>2]=i[8810],i[A+12>>2]=I,I=i[8813],i[A+16>>2]=i[8812],i[A+20>>2]=I,I=i[8815],i[A+24>>2]=i[8814],i[A+28>>2]=I,0}function Ag(A,I,g,C,B,Q,i){var o,E,a=0,_=0;return s=o=s+-64|0,a=-1,(E=g>>>0<16)&!C||CI(_=o+32|0,i,Q)||yA(o,35584,_,0)||(a=sI(A,I+16|0,I,g-16|0,C-E|0,B,o),XC(o,32)),s=o- -64|0,a}function Ig(A,I,g,C){var B,Q,i,o,E=0,_=0;return o=a(E=g>>>16|0,_=A>>>16|0),E=(65535&(_=((i=a(B=65535&g,Q=65535&A))>>>16|0)+a(_,B)|0))+a(E,Q)|0,f=(a(I,g)+o|0)+a(A,C)+(_>>>16)+(E>>>16)|0,65535&i|E<<16}function gg(A,I,g){var C=0,B=0;if(!g)return 0;if(C=o[0|A])A:{for(;;){if((0|(B=o[0|I]))!=(0|C)|!B)break A;if(!(g=g-1|0))break A;if(I=I+1|0,C=o[A+1|0],A=A+1|0,!C)break}C=0}else C=0;return C-o[0|I]|0}function Cg(A,I,g,C,B,o,E){var a=0,_=0;if(a=C,!(1==(((a=(_=g+63|0)>>>0<63?a+1|0:a)>>>6|0)+!!(0|(a=(63&a)<<26|_>>>6))|0)&o>>>0>(_=0-a|0)>>>0|1==(0|C)|C>>>0>1))return 0|pB[i[9199]](A,I,g,C,B,o,E);rC(),Q()}function Bg(A,I,g,C,B,Q,i){var o;return A|=0,I|=0,g|=0,C|=0,B|=0,s=o=s+-64|0,CI(o+32|0,i|=0,Q|=0)?Q=-1:(Q=-1,wA(o,35664,o+32|0,0)||(Q=vI(A,I,g,C,B,o),XC(o,32))),s=o- -64|0,0|Q}function Qg(A,I,g,C,B,Q,i){var o;return A|=0,I|=0,g|=0,C|=0,B|=0,s=o=s+-64|0,CI(o+32|0,i|=0,Q|=0)?Q=-1:(Q=-1,wA(o,35664,o+32|0,0)||(Q=fI(A,I,g,C,B,o),XC(o,32))),s=o- -64|0,0|Q}function ig(A,I,g,C,B,i,o){var E;if(s=E=s+-64|0,!C&g>>>0<4294967280)return CI(E+32|0,o,i)?o=-1:(o=-1,yA(E,35584,E+32|0,0)||(o=EI(A+16|0,A,I,g,C,B,E),XC(E,32))),s=E- -64|0,o;rC(),Q()}function og(A,I){for(var g=0,B=0,Q=0,i=0,E=0;B=A+Q|0,g=o[I+Q|0]+(o[0|B]+g|0)|0,C[0|B]=g,i=(B=1|Q)+A|0,g=o[I+B|0]+(o[0|i]+(g>>>8|0)|0)|0,C[0|i]=g,g=g>>>8|0,Q=Q+2|0,32!=(0|(E=E+2|0)););}function Eg(A,I){for(var g=0,B=0,Q=0,i=0,E=0;g=(o[0|(B=A+Q|0)]-o[I+Q|0]|0)+g|0,C[0|B]=g,g=(o[0|(i=(B=1|Q)+A|0)]-o[I+B|0]|0)+(g>>8)|0,C[0|i]=g,g>>=8,Q=Q+2|0,64!=(0|(E=E+2|0)););}function ag(A,I){A|=0;var g,B=0,Q=0,i=0;if(s=g=s-16|0,I|=0)for(;C[g+15|0]=0,Q=A+B|0,i=0|t(36800,g+15|0,0),C[0|Q]=i,(0|(B=B+1|0))!=(0|I););s=g+16|0}function _g(A,I,g,C,B,Q,i){var o,E,a=0;return s=o=s-32|0,a=-1,(E=g>>>0<16)&!C||cC(o,Q,i)||(a=eI(A,I+16|0,I,g-16|0,C-E|0,B,o),XC(o,32)),s=o+32|0,a}function cg(A){var I,g;A:{if(!((A=(I=i[8924])+(g=A+7&-8)|0)>>>0<=I>>>0&&g)){if(A>>>0<=wB()<<16>>>0)break A;if(0|y(0|A))break A}return i[9404]=48,-1}return i[8924]=A,I}function tg(A,I){var g,B,Q;s=g=s-176|0,LA(B=g+96|0,I+80|0),b(Q=g+48|0,I,B),b(g,I+40|0,B),QI(A,g),QI(g+144|0,Q),C[A+31|0]=o[A+31|0]^o[g+144|0]<<7,s=g+176|0}function rg(A,I,g,C,B,Q,i,o,E,a){var _,c,t=0,r=0,e=0;return s=_=s-16|0,t=-1,_C(c=_+4|0)||(r=-1,e=_A(c,A,I,g,C,B,Q,i,o,E,a),t=Rg(c)?r:e),s=_+16|0,t}function eg(A,I,g,C,B,o,E,a,_,c,t,r){return g&&(i[g>>2]=32,i[g+4>>2]=0),!_&a>>>0<4294967264&!o&B>>>0<=4294967263||(rC(),Q()),0|pB[i[r>>2]](A,I,32,C,B,E,a,c,t)}function yg(A,I,g){var B=0;if(A>>>0<I>>>0)return Ng(A,I,g);if(g)for(B=A+g|0,I=I+g|0;I=I-1|0,C[0|(B=B-1|0)]=o[0|I],g=g-1|0;);return A}function sg(A,I,g,C,B,i,o){var E,a=0;if(s=E=s-32|0,!C&g>>>0<4294967280)return a=-1,cC(E,i,o)||(a=aI(A+16|0,A,I,g,C,B,E),XC(E,32)),s=E+32|0,a;rC(),Q()}function hg(A,I,g,C,B,Q){return I|=0,0|(!(C|=0)&(g|=0)>>>0>=16|C?eI(A|=0,I+16|0,I,g-16|0,C-(g>>>0<16)|0,B|=0,Q|=0):-1)}function Dg(A,I,g,C,B,Q){return I|=0,0|(!(C|=0)&(g|=0)>>>0>=16|C?sI(A|=0,I+16|0,I,g-16|0,C-(g>>>0<16)|0,B|=0,Q|=0):-1)}function fg(A,I,g,C,B,Q,o,E,a,_,c){return!C&g>>>0>4294967263|C|!E&o>>>0>4294967263|E?-1:0|pB[i[c>>2]](A,I,g,B,32,Q,o,a,_)}function pg(A,I,g){A|=0;var C,B=0;return s=C=s-32|0,B=-1,CI(C,g|=0,I|=0)||(B=wA(A,35664,C,0)),s=C+32|0,0|B}function wg(A,I){var g;return I|=0,s=g=s+-64|0,j(A|=0,g),SA(A=A+208|0,g,64,0),j(A,I),XC(g,64),s=g- -64|0,0}function ng(A,I,g,C){var B;return I|=0,g|=0,C|=0,s=B=s+-64|0,j(A|=0,B),A=w(I,g,B,64,0,C,1),s=B- -64|0,0|A}function kg(A,I){var g,C,B;b(A,I,g=I+120|0),b(A+40|0,C=I+40|0,B=I+80|0),b(A+80|0,B,g),b(A+120|0,I,C)}function Fg(A,I,g,C,B,Q,i){return 0|TI(A|=0,I|=0,(A=0)|(g|=0),C|=0,A|(B|=0),Q|=0,i|=0)}function Sg(A,I){var g;return I|=0,s=g=s-32|0,JA(A|=0,g),UA(A=A+104|0,g,32,0),JA(A,I),XC(g,32),s=g+32|0,0}function Ng(A,I,g){var B=0;if(g)for(B=A;C[0|B]=o[0|I],B=B+1|0,I=I+1|0,g=g-1|0;);return A}function Gg(A,I,g,C,B,Q){var i;return s=i=s-32|0,wA(i,B,Q,0),A=oC(A,I,g,C,B+16|0,0,0,i),XC(i,32),s=i+32|0,A}function Mg(A){for(A|=0;ag(A,32),C[A+31|0]=31&o[A+31|0],!ZI(A)||GI(A,32););}function Kg(A,I,g){var C;return I|=0,g|=0,s=C=s+-64|0,j(A|=0,C),A=U(I,C,64,0,g,1),s=C- -64|0,0|A}function Ug(A,I,g,C,B){var Q;return s=Q=s-32|0,wA(Q,C,B,0),A=DC(A,I,g,C+16|0,Q),XC(Q,32),s=Q+32|0,A}function bg(A,I,g){var B=0;if(g)for(B=A;C[0|B]=I,B=B+1|0,g=g-1|0;);return A}function Hg(A,I,g){return A|=0,I|=0,(g|=0)>>>0>=256&&(r(1366,1279,107,1123),Q()),0|AA(A,I,255&g)}function Yg(A,I,g,C,B,Q,i){return 0|aI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)}function Jg(A,I,g,C,B,Q,i){return 0|eI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)}function dg(A,I,g,C,B,Q,i){return 0|EI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)}function mg(A,I,g,C,B,o,E,a){return 1==(0|C)|C>>>0>1&&(rC(),Q()),0|pB[i[9198]](A,I,g,C,B,o,E,a)}function lg(A,I,g,C,B,Q,i){return 0|sI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)}function ug(A,I,g,C,B,o){return 1==(0|C)|C>>>0>1&&(rC(),Q()),0|pB[i[9198]](A,I,g,C,B,0,0,o)}function xg(A,I,g,C,B,o){return 1==(0|C)|C>>>0>1&&(rC(),Q()),0|pB[i[9199]](A,I,g,C,B,0,o)}function vg(A,I,g,C,B,Q){return w(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,0),0}function Rg(A){var I;return(I=i[A>>2])&&BA(I),i[A+8>>2]=0,i[A>>2]=0,i[A+4>>2]=0,0}function Lg(A,I){var g=0;return(-1>>>(g=31&I)&A)<<g|((g=A)&-1<<(A=0-I&31))>>>A}function Pg(A,I,g,C,B,Q){return 0|vI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0)}function qg(A,I,g,C,B,Q){return 0|fI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0)}function zg(A,I,g,C,B,Q){return 0|Gg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0)}function jg(A,I,g,C,B){return 1==(0|g)|g>>>0>1&&(rC(),Q()),0|pB[i[9197]](A,I,g,C,B)}function Xg(A,I,g,C,B){return 1==(0|g)|g>>>0>1&&(rC(),Q()),0|pB[i[9196]](A,I,g,C,B)}function Og(A,I,g,C,B,o){1==(0|C)|C>>>0>1&&(rC(),Q()),pB[i[9199]](A,I,g,C,B,1,o)}function Wg(A,I,g,C,B){return 0|U(A|=0,I|=0,g|=0,C|=0,B|=0,0)}function Vg(A,I,g,C,B){return 0|hC(A|=0,I|=0,g|=0,C|=0,B|=0)}function Zg(A,I,g,C,B){return 0|fC(A|=0,I|=0,g|=0,C|=0,B|=0)}function Tg(A,I,g,C,B){return 0|Ug(A|=0,I|=0,g|=0,C|=0,B|=0)}function $g(){var A;s=A=s-16|0,C[A+15|0]=0,t(36836,A+15|0,0),s=A+16|0}function AC(A,I,g,C){return CA(A|=0,I|=0,g|=0,C|=0,20),0}function IC(A,I,g,C){return CA(A|=0,I|=0,g|=0,C|=0,12),0}function gC(A,I,g,C){return CA(A|=0,I|=0,g|=0,C|=0,8),0}function CC(A,I,g,C){return 0|FI(A|=0,I|=0,g|=0,C|=0)}function BC(A,I,g,C){return 0|SC(A|=0,I|=0,g|=0,C|=0)}function QC(A,I,g,C){return 0|SA(A|=0,I|=0,g|=0,C|=0)}function iC(A,I,g,C){return 0|eA(A|=0,I|=0,g|=0,C|=0)}function oC(A,I,g,C,B,Q,o,E){return 0|pB[i[8933]](A,I,g,C,B,Q,o,E)}function EC(A,I,g,C){return 0|dC(A|=0,I|=0,g|=0,C|=0)}function aC(A,I,g,C,B,Q){return 0|pB[i[8933]](A,I,g,C,B,0,0,Q)}function _C(A){return i[A+8>>2]=0,i[A>>2]=0,i[A+4>>2]=0,0}function cC(A,I,g){return 0|pg(A|=0,I|=0,g|=0)}function tC(A,I,g){return 0|CI(A|=0,I|=0,g|=0)}function rC(){var A;(A=i[9538])&&pB[0|A](),DB(),Q()}function eC(A,I,g){return 0|Hg(A|=0,I|=0,g|=0)}function yC(A,I,g){return 0|iI(A|=0,I|=0,g|=0)}function sC(A,I){return A|=0,ag(I|=0,32),0|pC(A,I)}function hC(A,I,g,C,B){return 0|pB[i[8925]](A,I,g,C,B)}function DC(A,I,g,C,B){return 0|pB[i[8932]](A,I,g,C,B)}function fC(A,I,g,C,B){return 0|pB[i[8926]](A,I,g,C,B)}function pC(A,I){return A|=0,I|=0,0|pB[i[8931]](A,I)}function wC(A,I){return A|=0,I|=0,0|pB[i[8927]](A,I)}function nC(A,I){return A|=0,I|=0,0|pB[i[8929]](A,I)}function kC(A,I,g,C,B,Q,i){return lA(A,I,g,C,B,Q,i)}function FC(A){return A?31-_(A-1^A)|0:32}function SC(A,I,g,C){return 0|pB[i[8928]](A,I,g,C)}function NC(A,I){return 0|qI(A|=0,I|=0,32)}function GC(A,I){return 0|qI(A|=0,I|=0,64)}function MC(A,I,g){n(A|=0,I|=0,g|=0)}function KC(A,I){return 0|pC(A|=0,I|=0)}function UC(A,I){return 0|sC(A|=0,I|=0)}function bC(A,I,g,C){return BI(A,I,g,C,1)}function HC(A,I,g,C){return wI(A,I,g,C,1)}function YC(A,I,g,C){return wI(A,I,g,C,2)}function JC(A,I,g,C){return BI(A,I,g,C,2)}function dC(A,I,g,C){return SA(A,I,g,C),0}function mC(A,I,g,C){return UA(A,I,g,C),0}function lC(A,I,g,C){return WA(A,I,g,C)}function uC(A){return SI(A|=0),0}function xC(){return-2147483648}function vC(){return 1073741824}function RC(){return 268435456}function LC(){return 33554432}function PC(A){ag(A|=0,32)}function qC(){return 67108864}function zC(A){ag(A|=0,16)}function jC(){return 16777216}function XC(A,I){bg(A,0,I)}function OC(){return 1564}function WC(){return 1338}function VC(){return 8192}function ZC(){return 384}function TC(){return 256}function $C(){return 416}function AB(){return 128}function IB(){return 208}function gB(){return 64}function CB(){return 16}function BB(){return 32}function QB(){return-65}function iB(){return-33}function oB(){return 48}function EB(){return-17}function aB(){return 12}function _B(){return 24}function cB(){return-1}function tB(){return 2}function rB(){return 3}function eB(){return 8}function yB(){return 1}function sB(){return 4}function hB(){return 0}function DB(){e(),Q()}B(I=o,1024,"Li8wMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5egBqcwByYW5kb21ieXRlcwBiNjRfcG9zIDw9IGI2NF9sZW4AY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAYXJnb24yaWQsYXJnb24yaQAkYXJnb24yaQAkYXJnb24yaWQAcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwBzb2RpdW0vY29kZWNzLmMAY3J5cHRvX2dlbmVyaWNoYXNoL2JsYWtlMmIvcmVmL2JsYWtlMmItcmVmLmMAY3J5cHRvX2dlbmVyaWNoYXNoL2JsYWtlMmIvcmVmL2dlbmVyaWNoYXNoX2JsYWtlMmIuYwB4MjU1MTlibGFrZTJiAGJ1Zl9sZW4gPD0gU0laRV9NQVgAb3V0bGVuIDw9IFVJTlQ4X01BWABTLT5idWZsZW4gPD0gQkxBS0UyQl9CTE9DS0JZVEVTACRhcmdvbjJpJHY9ACRhcmdvbjJpZCR2PQBjdXJ2ZTI1NTE5AGVkMjU1MTkAaG1hY3NoYTUxMjI1NgBjdXJ2ZTI1NTE5eHNhbHNhMjBwb2x5MTMwNQBzb2RpdW1fYmluMmJhc2U2NABzaXBoYXNoMjQAc2hhNTEyAHhzYWxzYTIwADEuMC4yMAAkYXJnb24yaSQAJGFyZ29uMmlkJAAkNyQAAAAAAAC2eFn/hXLTAL1uFf8PCmoAKcABAJjoef+8PKD/mXHO/wC34v60DUj/AAAAAAAAAACwoA7+08mG/54YjwB/aTUAYAy9AKfX+/+fTID+amXh/x78BACSDK4="),B(I,1680,"WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"),B(I,1728,"hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"),B(I,2720,"AQ=="),B(I,2752,"JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="),B(I,2943,""),B(I,33964,"AQAAAHbBXwBlcAL/UPyh/vJqxv+FBrIA5N9wAN/uVf4z8xoAPiuL/stBCg=="),B(I,34016,"M03tAJGqVv82JjP/8YBl/yl5Sv/sTpsAqZdp/pwpSADCZq//zqJl/wAAAAAAAAAAGy57ARKo/f/Tr5f+w9tgADh2vv7+0fX/mWR+/uiBFf81uPL/x6Td"),B(I,34144,"AQ=="),B(I,34176,"4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f0xpYnNvZGl1bURSRwAAAAAIybzzZ+YJajunyoSFrme7K/iU/nLzbjzxNh1fOvVPpdGC5q1/Ug5RH2w+K4xoBZtrvUH7q9mDH3khfhMZzeBbIq4o15gvikLNZe8jkUQ3cS87TezP+8C1vNuJgaXbtek4tUjzW8JWORnQBbbxEfFZm08Zr6SCP5IYgW3a1V4cq0ICA6OYqgfYvm9wRQFbgxKMsuROvoUxJOK0/9XDfQxVb4l78nRdvnKxlhY7/rHegDUSxyWnBtyblCZpz3Txm8HSSvGewWmb5OMlTziGR77vtdWMi8adwQ9lnKx3zKEMJHUCK1lvLOktg+SmbqqEdErU+0G93KmwXLVTEYPaiPl2q99m7lJRPpgQMrQtbcYxqD8h+5jIJwOw5A7vvsd/Wb/Cj6g98wvgxiWnCpNHkafVb4ID4FFjygZwbg4KZykpFPwv0kaFCrcnJskmXDghGy7tKsRa/G0sTd+zlZ0TDThT3mOvi1RzCmWosnc8uwpqduau7UcuycKBOzWCFIUscpJkA/FMoei/ogEwQrxLZhqokZf40HCLS8IwvlQGo1FsxxhS79YZ6JLREKllVSQGmdYqIHFXhTUO9LjRuzJwoGoQyNDSuBbBpBlTq0FRCGw3Hpnrjt9Md0gnqEib4bW8sDRjWsnFswwcOcuKQeNKqthOc+Njd0/KnFujuLLW828uaPyy713ugo90YC8XQ29jpXhyq/ChFHjIhOw5ZBoIAseMKB5jI/r/vpDpvYLe62xQpBV5xrL3o/m+K1Ny4/J4ccacYSbqzj4nygfCwCHHuIbRHuvgzdZ92up40W7uf0999bpvF3KqZ/AGppjIosV9YwquDfm+BJg/ERtHHBM1C3EbhH0EI/V32yiTJMdAe6vKMry+yRUKvp48TA0QnMRnHUO2Qj7LvtTFTCp+ZfycKX9Z7PrWOqtvy18XWEdKjBlEbIA="),B(I,35184,"7dP1XBpjEljWnPei3vneFA=="),B(I,35215,"EA=="),B(I,35232,"Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHGgA=="),B(I,35600,"U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB"),B(I,35696,"EJUBAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQ=="),B(I,35744,"xmNjpfh8fITud3eZ9nt7jf/y8g3Wa2u93m9vsZHFxVRgMDBQAgEBA85nZ6lWKyt95/7+GbXX12JNq6vm7HZ2mo/KykUfgoKdicnJQPp9fYfv+voVsllZ645HR8n78PALQa2t7LPU1GdfoqL9Ra+v6iOcnL9TpKT35HJylpvAwFt1t7fC4f39HD2Tk65MJiZqbDY2Wn4/P0H19/cCg8zMT2g0NFxRpaX00eXlNPnx8QjicXGTq9jYc2IxMVMqFRU/CAQEDJXHx1JGIyNlncPDXjAYGCg3lpahCgUFDy+amrUOBwcJJBISNhuAgJvf4uI9zevrJk4nJ2l/srLN6nV1nxIJCRsdg4OeWCwsdDQaGi42Gxst3G5usrRaWu5boKD7pFJS9nY7O0231tZhfbOzzlIpKXvd4+M+Xi8vcROEhJemU1P1udHRaAAAAADB7e0sQCAgYOP8/B95sbHItltb7dRqar6Ny8tGZ76+2XI5OUuUSkremExM1LBYWOiFz89Ku9DQa8Xv7ypPqqrl7fv7FoZDQ8WaTU3XZjMzVRGFhZSKRUXP6fn5EAQCAgb+f3+BoFBQ8Hg8PEQln5+6S6io46JRUfNdo6P+gEBAwAWPj4o/kpKtIZ2dvHA4OEjx9fUEY7y833e2tsGv2tp1QiEhYyAQEDDl//8a/fPzDr/S0m2Bzc1MGAwMFCYTEzXD7Owvvl9f4TWXl6KIRETMLhcXOZPExFdVp6fy/H5+gno9PUfIZGSsul1d5zIZGSvmc3OVwGBgoBmBgZieT0/Ro9zcf0QiImZUKip+O5CQqwuIiIOMRkbKx+7uKWu4uNMoFBQ8p97eebxeXuIWCwsdrdvbdtvg4DtkMjJWdDo6ThQKCh6SSUnbDAYGCkgkJGy4XFzkn8LCXb3T025DrKzvxGJipjmRkagxlZWk0+TkN/J5eYvV5+cyi8jIQ243N1nabW23AY2NjLHV1WScTk7SSamp4NhsbLSsVlb68/T0B8/q6iXKZWWv9Hp6jkeurukQCAgYb7q61fB4eIhKJSVvXC4ucjgcHCRXpqbxc7S0x5fGxlHL6Ogjod3dfOh0dJw+Hx8hlktL3WG9vdwNi4uGD4qKheBwcJB8Pj5CcbW1xMxmZqqQSEjYBgMDBff29gEcDg4SwmFho2o1NV+uV1f5abm50BeGhpGZwcFYOh0dJyeenrnZ4eE46/j4EyuYmLMiEREz0mlpu6nZ2XAHjo6JM5SUpy2bm7Y8Hh4iFYeHksnp6SCHzs5JqlVV/1AoKHil3996A4yMj1mhofgJiYmAGg0NF2W/v9rX5uYxhEJCxtBoaLiCQUHDKZmZsFotLXceDw8Re7Cwy6hUVPxtu7vWLBYWOgoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAAR");var fB,pB=(fB=[null,function(A,I,g,B,Q){var E,a,_;return A|=0,I|=0,g|=0,B|=0,Q|=0,s=E=(a=s)-128&-64,i[E>>2]=67108863&(o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24),i[E+4>>2]=(o[Q+3|0]|o[Q+4|0]<<8|o[Q+5|0]<<16|o[Q+6|0]<<24)>>>2&67108611,i[E+8>>2]=(o[Q+6|0]|o[Q+7|0]<<8|o[Q+8|0]<<16|o[Q+9|0]<<24)>>>4&67092735,i[E+12>>2]=(o[Q+9|0]|o[Q+10|0]<<8|o[Q+11|0]<<16|o[Q+12|0]<<24)>>>6&66076671,_=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,i[E+20>>2]=0,i[E+24>>2]=0,i[E+28>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,i[E+16>>2]=_>>>8&1048575,i[E+40>>2]=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,i[E+44>>2]=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,i[E+48>>2]=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,Q=o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24,C[E+80|0]=0,i[E+56>>2]=0,i[E+60>>2]=0,i[E+52>>2]=Q,vA(E,I,g,B),gI(E,A),s=a,0},function(A,I,g,B,Q){var E,a,_;return A|=0,I|=0,g|=0,B|=0,Q|=0,s=E=(a=s)-192&-64,i[E+64>>2]=67108863&(o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24),i[E+68>>2]=(o[Q+3|0]|o[Q+4|0]<<8|o[Q+5|0]<<16|o[Q+6|0]<<24)>>>2&67108611,i[E+72>>2]=(o[Q+6|0]|o[Q+7|0]<<8|o[Q+8|0]<<16|o[Q+9|0]<<24)>>>4&67092735,i[E+76>>2]=(o[Q+9|0]|o[Q+10|0]<<8|o[Q+11|0]<<16|o[Q+12|0]<<24)>>>6&66076671,_=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,i[E+84>>2]=0,i[E+88>>2]=0,i[E+92>>2]=0,i[E+96>>2]=0,i[E+100>>2]=0,i[E+80>>2]=_>>>8&1048575,i[E+104>>2]=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,i[E+108>>2]=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,i[E+112>>2]=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,Q=o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24,C[E+144|0]=0,i[E+120>>2]=0,i[E+124>>2]=0,i[E+116>>2]=Q,vA(Q=E- -64|0,I,g,B),gI(Q,I=E+48|0),A=oI(A,I),s=a,0|A},function(A,I){var g;return I|=0,i[(A|=0)>>2]=67108863&(o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24),i[A+4>>2]=(o[I+3|0]|o[I+4|0]<<8|o[I+5|0]<<16|o[I+6|0]<<24)>>>2&67108611,i[A+8>>2]=(o[I+6|0]|o[I+7|0]<<8|o[I+8|0]<<16|o[I+9|0]<<24)>>>4&67092735,i[A+12>>2]=(o[I+9|0]|o[I+10|0]<<8|o[I+11|0]<<16|o[I+12|0]<<24)>>>6&66076671,g=o[I+12|0]|o[I+13|0]<<8|o[I+14|0]<<16|o[I+15|0]<<24,i[A+20>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+36>>2]=0,i[A+16>>2]=g>>>8&1048575,i[A+40>>2]=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,i[A+44>>2]=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,i[A+48>>2]=o[I+24|0]|o[I+25|0]<<8|o[I+26|0]<<16|o[I+27|0]<<24,I=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,C[A+80|0]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+52>>2]=I,0},function(A,I,g,C){return vA(A|=0,I|=0,g|=0,C|=0),0},function(A,I){return gI(A|=0,I|=0),0},function(A,I,g){A|=0,I|=0,g|=0;var B,Q=0,E=0,a=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,gA=0,CA=0,BA=0,QA=0,iA=0,oA=0,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0,sA=0,hA=0,DA=0,pA=0,wA=0,nA=0,kA=0;for(s=B=s-368|0;D=(a=o[g+Q|0])^o[0|(c=Q+34112|0)]|D,h=a^o[c+192|0]|h,y=a^o[c+160|0]|y,e=a^o[c+128|0]|e,_=a^o[c+96|0]|_,t=a^o[c- -64|0]|t,E=a^o[c+32|0]|E,31!=(0|(Q=Q+1|0)););if(Q=-1,!(256&((255&((a=127^(c=127&o[g+31|0]))|h))-1|(255&(a|y))-1|(255&(a|e))-1|(255&(87^c|_))-1|(255&(t|c))-1|(255&(E|c))-1|(255&(c|D))-1))){for(Q=I,I=o[I+28|0]|o[I+29|0]<<8|o[I+30|0]<<16|o[I+31|0]<<24,i[B+360>>2]=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,i[B+364>>2]=I,I=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,i[B+352>>2]=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,i[B+356>>2]=I,E=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,I=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,i[B+336>>2]=I,i[B+340>>2]=E,E=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,i[B+344>>2]=o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24,i[B+348>>2]=E,C[B+336|0]=248&I,C[B+367|0]=63&o[B+367|0]|64,fA(B+288|0,g),i[B+260>>2]=0,i[B+264>>2]=0,i[B+268>>2]=0,i[B+272>>2]=0,i[B+276>>2]=0,i[B+208>>2]=0,i[B+212>>2]=0,i[B+216>>2]=0,i[B+220>>2]=0,i[B+224>>2]=0,i[B+228>>2]=0,I=i[B+308>>2],i[B+160>>2]=i[B+304>>2],i[B+164>>2]=I,I=i[B+316>>2],i[B+168>>2]=i[B+312>>2],i[B+172>>2]=I,I=i[B+324>>2],i[B+176>>2]=i[B+320>>2],i[B+180>>2]=I,i[B+244>>2]=0,i[B+248>>2]=0,i[B+240>>2]=1,i[B+252>>2]=0,i[B+256>>2]=0,i[B+192>>2]=0,i[B+196>>2]=0,i[B+200>>2]=0,i[B+204>>2]=0,I=i[B+292>>2],i[B+144>>2]=i[B+288>>2],i[B+148>>2]=I,I=i[B+300>>2],i[B+152>>2]=i[B+296>>2],i[B+156>>2]=I,i[B+116>>2]=0,i[B+120>>2]=0,i[B+124>>2]=0,i[B+128>>2]=0,i[B+132>>2]=0,i[B+100>>2]=0,i[B+104>>2]=0,i[B+96>>2]=1,i[B+108>>2]=0,i[B+112>>2]=0,g=254;Z=i[B+276>>2],a=i[B+180>>2],T=i[B+96>>2],$=i[B+192>>2],AA=i[B+144>>2],IA=i[B+240>>2],gA=i[B+100>>2],CA=i[B+196>>2],BA=i[B+148>>2],QA=i[B+244>>2],U=i[B+104>>2],iA=i[B+200>>2],H=i[B+152>>2],oA=i[B+248>>2],d=i[B+108>>2],EA=i[B+204>>2],m=i[B+156>>2],aA=i[B+252>>2],Y=i[B+112>>2],_A=i[B+208>>2],M=i[B+160>>2],cA=i[B+256>>2],D=i[B+116>>2],tA=i[B+212>>2],r=i[B+164>>2],rA=i[B+260>>2],h=i[B+120>>2],eA=i[B+216>>2],y=i[B+168>>2],yA=i[B+264>>2],e=i[B+124>>2],sA=i[B+220>>2],_=i[B+172>>2],hA=i[B+268>>2],t=i[B+128>>2],DA=i[B+224>>2],E=i[B+176>>2],G=i[B+272>>2],pA=g,K=(F=(I=0-((I=V)^(V=o[(wA=B+336|0)+(g>>>3|0)|0]>>>(7&g)&1))|0)&((Q=i[B+132>>2])^(j=i[B+228>>2])))^Q,i[B+132>>2]=K,X=a^(S=I&(a^Z)),i[B+84>>2]=X-K,J=t^(w=I&(t^DA)),i[B+128>>2]=J,O=(N=I&(E^G))^E,i[B+80>>2]=O-J,u=e^(n=I&(e^sA)),i[B+124>>2]=u,nA=_^(k=I&(_^hA)),i[B+76>>2]=nA-u,x=h^(p=I&(h^eA)),i[B+120>>2]=x,kA=y^(c=I&(y^yA)),i[B+72>>2]=kA-x,v=D^(a=I&(D^tA)),i[B+116>>2]=v,L=r^(D=I&(r^rA)),i[B+68>>2]=L-v,P=Y^(h=I&(Y^_A)),i[B+112>>2]=P,l=M^(y=I&(M^cA)),i[B+64>>2]=l-P,q=d^(e=I&(d^EA)),i[B+108>>2]=q,W=m^(_=I&(m^aA)),i[B+60>>2]=W-q,z=U^(t=I&(U^iA)),i[B+104>>2]=z,d=H^(E=I&(H^oA)),i[B+56>>2]=d-z,U=gA^(Q=I&(gA^CA)),i[B+100>>2]=U,m=BA^(g=I&(BA^QA)),i[B+52>>2]=m-U,H=T^(Y=I&(T^$)),i[B+96>>2]=H,M=(I&=AA^IA)^AA,i[B+48>>2]=M-H,r=S^Z,F^=j,i[B+36>>2]=r-F,S=N^G,w^=DA,i[B+32>>2]=S-w,N=k^hA,n^=sA,i[B+28>>2]=N-n,k=c^yA,p^=eA,i[B+24>>2]=k-p,c=D^rA,a^=tA,i[B+20>>2]=c-a,D=y^cA,h^=_A,i[B+16>>2]=D-h,y=_^aA,e^=EA,i[B+12>>2]=y-e,_=E^oA,t^=iA,i[B+8>>2]=_-t,E=g^QA,Q^=CA,i[B+4>>2]=E-Q,g=I^IA,I=Y^$,i[B>>2]=g-I,i[B+276>>2]=r+F,i[B+272>>2]=S+w,i[B+268>>2]=n+N,i[B+264>>2]=p+k,i[B+260>>2]=a+c,i[B+256>>2]=h+D,i[B+248>>2]=_+t,i[B+244>>2]=Q+E,i[B+240>>2]=I+g,i[B+252>>2]=e+y,i[B+228>>2]=K+X,i[B+224>>2]=J+O,i[B+220>>2]=u+nA,i[B+216>>2]=x+kA,i[B+212>>2]=v+L,i[B+208>>2]=l+P,i[B+204>>2]=q+W,i[B+200>>2]=d+z,i[B+196>>2]=U+m,i[B+192>>2]=M+H,b(X=B+96|0,J=B+48|0,K=B+240|0),b(G=B+192|0,G,B),R(J,B),R(B,K),r=i[B+192>>2],F=i[B+96>>2],S=i[B+196>>2],w=i[B+100>>2],N=i[B+200>>2],n=i[B+104>>2],k=i[B+204>>2],p=i[B+108>>2],c=i[B+208>>2],a=i[B+112>>2],D=i[B+212>>2],h=i[B+116>>2],y=i[B+216>>2],e=i[B+120>>2],_=i[B+220>>2],t=i[B+124>>2],E=i[B+224>>2],Q=i[B+128>>2],g=i[B+228>>2],I=i[B+132>>2],i[B+180>>2]=g+I,i[B+176>>2]=Q+E,i[B+172>>2]=_+t,i[B+168>>2]=e+y,i[B+164>>2]=h+D,i[B+160>>2]=a+c,i[B+156>>2]=p+k,i[B+152>>2]=n+N,i[B+148>>2]=S+w,i[B+144>>2]=r+F,i[B+228>>2]=I-g,i[B+224>>2]=Q-E,i[B+220>>2]=t-_,i[B+216>>2]=e-y,i[B+212>>2]=h-D,i[B+208>>2]=a-c,i[B+204>>2]=p-k,i[B+200>>2]=n-N,i[B+196>>2]=w-S,i[B+192>>2]=F-r,b(K,B,J),u=i[B+52>>2],p=i[B+4>>2],x=i[B+56>>2],c=i[B+8>>2],v=i[B+64>>2],y=i[B+16>>2],P=i[B+60>>2],e=i[B+12>>2],q=i[B+72>>2],_=i[B+24>>2],z=i[B+68>>2],t=i[B+20>>2],U=i[B+80>>2],E=i[B+32>>2],H=i[B+76>>2],Q=i[B+28>>2],j=i[B+84>>2],I=i[B+36>>2],O=i[B+48>>2],g=i[B>>2]-O|0,i[B>>2]=g,I=I-j|0,i[B+36>>2]=I,Y=Q-H|0,i[B+28>>2]=Y,M=E-U|0,i[B+32>>2]=M,a=t-z|0,i[B+20>>2]=a,D=_-q|0,i[B+24>>2]=D,h=e-P|0,i[B+12>>2]=h,y=y-v|0,i[B+16>>2]=y,e=c-x|0,i[B+8>>2]=e,E=p-u|0,i[B+4>>2]=E,R(G,G),I=Ig(I,I>>31,121666,0),Q=f,W=I,I=Ig((33554431&(Q=(r=I+16777216|0)>>>0<16777216?Q+1|0:Q))<<7|r>>>25,Q>>25,19,0),t=f,Q=I,I=Ig(g,g>>31,121666,0),l=f+t|0,I=I>>>0>(Q=Q+I|0)>>>0?l+1|0:l,g=(_=Q+33554432|0)>>>0<33554432?I+1|0:I,F=Q-(-67108864&_)|0,i[B+96>>2]=F,t=Ig(E,E>>31,121666,0),Q=f,Q=(E=t+16777216|0)>>>0<16777216?Q+1|0:Q,S=(t-(-33554432&E)|0)+((67108863&g)<<6|_>>>26)|0,i[B+100>>2]=S,l=(I=Q)>>25,Q=(33554431&I)<<7|E>>>25,g=Ig(e,e>>31,121666,0)+Q|0,I=l+f|0,I=g>>>0<Q>>>0?I+1|0:I,t=(w=g+33554432|0)>>>0<33554432?I+1|0:I,N=g-(-67108864&w)|0,i[B+104>>2]=N,Q=Ig(y,y>>31,121666,0),E=f,g=Ig(h,h>>31,121666,0),I=f,L=Q,d=g,Q=(33554431&(I=(n=g+16777216|0)>>>0<16777216?I+1|0:I))<<7|n>>>25,I=(I>>25)+E|0,I=(g=L+Q|0)>>>0<Q>>>0?I+1|0:I,E=(k=g+33554432|0)>>>0<33554432?I+1|0:I,p=g-(-67108864&k)|0,i[B+112>>2]=p,Q=Ig(D,D>>31,121666,0),_=f,g=Ig(a,a>>31,121666,0),I=f,L=Q,m=g,Q=(33554431&(I=(c=g+16777216|0)>>>0<16777216?I+1|0:I))<<7|c>>>25,I=(I>>25)+_|0,I=(g=L+Q|0)>>>0<Q>>>0?I+1|0:I,Q=(a=g+33554432|0)>>>0<33554432?I+1|0:I,D=g-(-67108864&a)|0,i[B+120>>2]=D,_=Ig(M,M>>31,121666,0),e=f,g=Ig(Y,Y>>31,121666,0),I=f,M=g,g=(33554431&(I=(h=g+16777216|0)>>>0<16777216?I+1|0:I))<<7|h>>>25,I=(I>>25)+e|0,I=g>>>0>(_=g+_|0)>>>0?I+1|0:I,g=(y=_+33554432|0)>>>0<33554432?I+1|0:I,e=_-(-67108864&y)|0,i[B+128>>2]=e,_=(t=d+((67108863&t)<<6|w>>>26)|0)-(-33554432&n)|0,i[B+108>>2]=_,t=(E=m+((67108863&E)<<6|k>>>26)|0)-(-33554432&c)|0,i[B+116>>2]=t,E=(I=M+((67108863&Q)<<6|a>>>26)|0)-(-33554432&h)|0,i[B+124>>2]=E,g=(g=W+((67108863&g)<<6|y>>>26)|0)-(-33554432&r)|0,i[B+132>>2]=g,R(I=B+144|0,I),i[B+84>>2]=g+j,i[B+80>>2]=e+U,i[B+76>>2]=E+H,i[B+72>>2]=D+q,i[B+68>>2]=t+z,i[B+64>>2]=p+v,i[B+60>>2]=_+P,i[B+56>>2]=N+x,i[B+52>>2]=S+u,i[B+48>>2]=F+O,g=pA-1|0,b(X,B+288|0,G),b(G,B,J),pA;);D=i[B+144>>2],F=i[B+240>>2],h=i[B+148>>2],S=i[B+244>>2],y=i[B+152>>2],w=i[B+248>>2],e=i[B+156>>2],N=i[B+252>>2],_=i[B+160>>2],n=i[B+256>>2],t=i[B+164>>2],k=i[B+260>>2],E=i[B+168>>2],p=i[B+264>>2],Q=i[B+172>>2],c=i[B+268>>2],g=i[B+176>>2],a=i[B+272>>2],r=0-V|0,I=i[B+276>>2],i[B+276>>2]=r&(I^i[B+180>>2])^I,i[B+272>>2]=a^r&(g^a),i[B+268>>2]=c^r&(Q^c),i[B+264>>2]=p^r&(E^p),i[B+260>>2]=k^r&(t^k),i[B+256>>2]=n^r&(_^n),i[B+252>>2]=N^r&(e^N),i[B+248>>2]=w^r&(y^w),i[B+244>>2]=S^r&(h^S),i[B+240>>2]=F^r&(D^F),F=i[B+192>>2],D=i[B+96>>2],S=i[B+196>>2],h=i[B+100>>2],w=i[B+200>>2],y=i[B+104>>2],N=i[B+204>>2],e=i[B+108>>2],n=i[B+208>>2],_=i[B+112>>2],k=i[B+212>>2],t=i[B+116>>2],p=i[B+216>>2],E=i[B+120>>2],c=i[B+220>>2],Q=i[B+124>>2],a=i[B+224>>2],g=i[B+128>>2],I=i[B+228>>2],i[B+228>>2]=r&(I^i[B+132>>2])^I,i[B+224>>2]=a^r&(g^a),i[B+220>>2]=c^r&(Q^c),i[B+216>>2]=p^r&(E^p),i[B+212>>2]=k^r&(t^k),i[B+208>>2]=n^r&(_^n),i[B+204>>2]=N^r&(e^N),i[B+200>>2]=w^r&(y^w),i[B+196>>2]=S^r&(h^S),i[B+192>>2]=F^r&(D^F),LA(G,G),b(K,K,G),QI(A,K),XC(wA,32),Q=0}return s=B+368|0,0|Q},function(A,I){var g,B,Q,E,a,_,c,t,r,e,y,h,D,f,p,w,n,k,F,S;return I|=0,s=g=s-304|0,C[0|(A|=0)]=o[0|I],C[A+1|0]=o[I+1|0],C[A+2|0]=o[I+2|0],C[A+3|0]=o[I+3|0],C[A+4|0]=o[I+4|0],C[A+5|0]=o[I+5|0],C[A+6|0]=o[I+6|0],C[A+7|0]=o[I+7|0],C[A+8|0]=o[I+8|0],C[A+9|0]=o[I+9|0],C[A+10|0]=o[I+10|0],C[A+11|0]=o[I+11|0],C[A+12|0]=o[I+12|0],C[A+13|0]=o[I+13|0],C[A+14|0]=o[I+14|0],C[A+15|0]=o[I+15|0],C[A+16|0]=o[I+16|0],C[A+17|0]=o[I+17|0],C[A+18|0]=o[I+18|0],C[A+19|0]=o[I+19|0],C[A+20|0]=o[I+20|0],C[A+21|0]=o[I+21|0],C[A+22|0]=o[I+22|0],C[A+23|0]=o[I+23|0],C[A+24|0]=o[I+24|0],C[A+25|0]=o[I+25|0],C[A+26|0]=o[I+26|0],C[A+27|0]=o[I+27|0],C[A+28|0]=o[I+28|0],C[A+29|0]=o[I+29|0],C[A+30|0]=o[I+30|0],I=o[I+31|0],C[0|A]=248&o[0|A],C[A+31|0]=63&I|64,nA(g+48|0,A),I=i[g+128>>2],B=i[g+88>>2],Q=i[g+132>>2],E=i[g+92>>2],a=i[g+136>>2],_=i[g+96>>2],c=i[g+140>>2],t=i[g+100>>2],r=i[g+144>>2],e=i[g+104>>2],y=i[g+148>>2],h=i[g+108>>2],D=i[g+152>>2],f=i[g+112>>2],p=i[g+156>>2],w=i[g+116>>2],n=i[g+160>>2],k=i[g+120>>2],F=i[g+124>>2],S=i[g+164>>2],i[g+292>>2]=F+S,i[g+288>>2]=n+k,i[g+284>>2]=p+w,i[g+280>>2]=D+f,i[g+276>>2]=y+h,i[g+272>>2]=r+e,i[g+268>>2]=c+t,i[g+264>>2]=a+_,i[g+260>>2]=Q+E,i[g+256>>2]=I+B,i[g+244>>2]=S-F,i[g+240>>2]=n-k,i[g+236>>2]=p-w,i[g+232>>2]=D-f,i[g+228>>2]=y-h,i[g+224>>2]=r-e,i[g+220>>2]=c-t,i[g+216>>2]=a-_,i[g+212>>2]=Q-E,i[g+208>>2]=I-B,LA(I=g+208|0,I),b(g,g+256|0,I),QI(A,g),s=g+304|0,0},function(A,I,g,B,Q){A|=0,B|=0,Q|=0;var E,a=0,_=0,c=0,t=0;if(s=E=s-112|0,(I|=0)|(g|=0)){a=o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24,i[E+24>>2]=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,i[E+28>>2]=a,a=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,i[E+16>>2]=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,i[E+20>>2]=a,a=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,i[E>>2]=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,i[E+4>>2]=a,a=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,i[E+8>>2]=o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24,i[E+12>>2]=a,Q=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,B=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[E+104>>2]=0,i[E+108>>2]=0,i[E+96>>2]=Q,i[E+100>>2]=B;A:{if(!g&I>>>0>=64|g){for(;AC(A,E+96|0,E,0),B=o[E+104|0]+1|0,C[E+104|0]=B,B=o[E+105|0]+(B>>>8|0)|0,C[E+105|0]=B,B=o[E+106|0]+(B>>>8|0)|0,C[E+106|0]=B,B=o[E+107|0]+(B>>>8|0)|0,C[E+107|0]=B,B=o[E+108|0]+(B>>>8|0)|0,C[E+108|0]=B,B=o[E+109|0]+(B>>>8|0)|0,C[E+109|0]=B,B=o[E+110|0]+(B>>>8|0)|0,C[E+110|0]=B,C[E+111|0]=o[E+111|0]+(B>>>8|0),A=A- -64|0,g=g-1|0,!(g=(I=I+-64|0)>>>0<4294967232?g+1|0:g)&I>>>0>63|g;);if(!(I|g))break A}if(B=0,AC(E+32|0,E+96|0,E,0),a=3&I,Q=0,!g&I>>>0>=4|g)for(g=60&I,I=0;_=c=E+32|0,C[A+Q|0]=o[_+Q|0],C[(t=1|Q)+A|0]=o[_+t|0],C[(_=2|Q)+A|0]=o[_+c|0],C[(_=3|Q)+A|0]=o[_+(E+32|0)|0],Q=Q+4|0,(0|g)!=(0|(I=I+4|0)););if(a)for(;C[A+Q|0]=o[(E+32|0)+Q|0],Q=Q+1|0,(0|a)!=(0|(B=B+1|0)););}XC(E+32|0,64),XC(E,32)}return s=E+112|0,0},function(A,I,g,B,Q,E,a,_){A|=0,I|=0,Q|=0,E|=0,a|=0,_|=0;var c,t=0;if(s=c=s-112|0,(g|=0)|(B|=0)){t=o[_+28|0]|o[_+29|0]<<8|o[_+30|0]<<16|o[_+31|0]<<24,i[c+24>>2]=o[_+24|0]|o[_+25|0]<<8|o[_+26|0]<<16|o[_+27|0]<<24,i[c+28>>2]=t,t=o[_+20|0]|o[_+21|0]<<8|o[_+22|0]<<16|o[_+23|0]<<24,i[c+16>>2]=o[_+16|0]|o[_+17|0]<<8|o[_+18|0]<<16|o[_+19|0]<<24,i[c+20>>2]=t,t=o[_+4|0]|o[_+5|0]<<8|o[_+6|0]<<16|o[_+7|0]<<24,i[c>>2]=o[0|_]|o[_+1|0]<<8|o[_+2|0]<<16|o[_+3|0]<<24,i[c+4>>2]=t,t=o[_+12|0]|o[_+13|0]<<8|o[_+14|0]<<16|o[_+15|0]<<24,i[c+8>>2]=o[_+8|0]|o[_+9|0]<<8|o[_+10|0]<<16|o[_+11|0]<<24,i[c+12>>2]=t,_=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,i[c+96>>2]=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,i[c+100>>2]=_,C[c+104|0]=E,C[c+111|0]=a>>>24,C[c+110|0]=a>>>16,C[c+109|0]=a>>>8,C[c+108|0]=a,C[c+107|0]=(16777215&a)<<8|E>>>24,C[c+106|0]=(65535&a)<<16|E>>>16,C[c+105|0]=(255&a)<<24|E>>>8;A:{if(!B&g>>>0>=64|B){for(;;){for(_=0,AC(c+32|0,c+96|0,c,0);E=c+32|0,C[A+_|0]=o[E+_|0]^o[I+_|0],C[(Q=1|_)+A|0]=o[Q+E|0]^o[I+Q|0],64!=(0|(_=_+2|0)););if(Q=o[c+104|0]+1|0,C[c+104|0]=Q,Q=o[c+105|0]+(Q>>>8|0)|0,C[c+105|0]=Q,Q=o[c+106|0]+(Q>>>8|0)|0,C[c+106|0]=Q,Q=o[c+107|0]+(Q>>>8|0)|0,C[c+107|0]=Q,Q=o[c+108|0]+(Q>>>8|0)|0,C[c+108|0]=Q,Q=o[c+109|0]+(Q>>>8|0)|0,C[c+109|0]=Q,Q=o[c+110|0]+(Q>>>8|0)|0,C[c+110|0]=Q,C[c+111|0]=o[c+111|0]+(Q>>>8|0),I=I- -64|0,A=A- -64|0,B=B-1|0,!(!(B=(g=g+-64|0)>>>0<4294967232?B+1|0:B)&g>>>0>63|B))break}if(!(g|B))break A}if(_=0,AC(c+32|0,c+96|0,c,0),E=1&g,1!=(0|g)|B)for(B=62&g,Q=0;a=c+32|0,C[A+_|0]=o[a+_|0]^o[I+_|0],C[(g=1|_)+A|0]=o[g+a|0]^o[I+g|0],_=_+2|0,(0|B)!=(0|(Q=Q+2|0)););E&&(C[A+_|0]=o[(c+32|0)+_|0]^o[I+_|0])}XC(c+32|0,64),XC(c,32)}return s=c+112|0,0},function(A,I,g,C,B,Q,i,o,E){A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0;var a,_,c=0;if(_=c=s,s=a=c-192&-32,P(E|=0,o|=0,a- -64|0),E=0,i>>>0<=63)o=0;else for(c=64;H(Q+E|0,a- -64|0),E=o=c,(c=o- -64|0)>>>0<=i>>>0;);if((c=32|o)>>>0>i>>>0)E=o;else for(;V(Q+o|0,a- -64|0),E=c,(c=(o=c)+32|0)>>>0<=i>>>0;);if((o=31&i)&&(bg((c=a+32|0)|o,0,32-o|0),Ng(c,Q+E|0,o),V(c,a- -64|0)),E=32,o=0,B>>>0<32)Q=0;else for(;m(A+o|0,C+o|0,a- -64|0),Q=E,(E=(o=E)+32|0)>>>0<=B>>>0;);return(o=31&B)&&(bg((E=a+32|0)|o,0,32-o|0),Ng(E,C+Q|0,o),m(a,E,a- -64|0),Ng(A+Q|0,a,o)),Y(I,g,i,B,a- -64|0),s=_,0},function(A,I,g,C,B,Q,i,o,E){A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0;var a,_,c=0;if(_=c=s,s=a=c-224&-32,P(E|=0,o|=0,a+96|0),E=0,i>>>0<=63)o=0;else for(c=64;H(Q+E|0,a+96|0),E=o=c,(c=o- -64|0)>>>0<=i>>>0;);if((c=32|o)>>>0>i>>>0)E=o;else for(;V(Q+o|0,a+96|0),E=c,(c=(o=c)+32|0)>>>0<=i>>>0;);(o=31&i)&&(bg((c=a- -64|0)|o,0,32-o|0),Ng(c,Q+E|0,o),V(c,a+96|0));A:{I:{g:{C:{B:{if(A){if(E=32,g>>>0<32)break B;for(Q=0;d(A+Q|0,I+Q|0,a+96|0),Q=o=E,(E=o+32|0)>>>0<=g>>>0;);}else{if(Q=32,g>>>0<32)break g;for(E=0;d(a+32|0,I+E|0,a+96|0),E=o=Q,(Q=o+32|0)>>>0<=g>>>0;);}if(!(Q=31&g))break A;if(A)break C;break I}if(o=0,Q=g,!g)break A}x(A+o|0,I+o|0,Q,a+96|0);break A}if(o=0,Q=g,!g)break A}x(a+32|0,I+o|0,Q,a+96|0)}Y(a,B,i,g,a+96|0),o=-1;A:{I:{if(I=B-16|0){if(16==(0|I))break I;break A}o=oI(a,C);break A}o=NC(a,C)}return!A|!o||bg(A,0,g),s=_,0|o},function(A,I,g,C,B,Q,E,a,_){A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,E|=0;var c,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0;if(s=c=s-528|0,G(_|=0,a|=0,c+400|0),_=0,E>>>0<=31)a=0;else for(r=32;L(Q+_|0,c+400|0),_=a=r,(r=a+32|0)>>>0<=E>>>0;);if((_=16|a)>>>0<=E>>>0)for(r=c+416|0,y=c+432|0,h=c+448|0,e=c+464|0,D=c+480|0;f=o[0|(a=Q+a|0)]|o[a+1|0]<<8|o[a+2|0]<<16|o[a+3|0]<<24,p=o[a+4|0]|o[a+5|0]<<8|o[a+6|0]<<16|o[a+7|0]<<24,w=o[a+8|0]|o[a+9|0]<<8|o[a+10|0]<<16|o[a+11|0]<<24,n=o[a+12|0]|o[a+13|0]<<8|o[a+14|0]<<16|o[a+15|0]<<24,a=i[D+12>>2],i[c+520>>2]=i[D+8>>2],i[c+524>>2]=a,a=i[D+4>>2],i[c+512>>2]=i[D>>2],i[c+516>>2]=a,a=i[e+12>>2],i[c+376>>2]=i[e+8>>2],i[c+380>>2]=a,a=i[e+4>>2],i[c+368>>2]=i[e>>2],i[c+372>>2]=a,a=i[D+12>>2],i[c+360>>2]=i[D+8>>2],i[c+364>>2]=a,a=i[D+4>>2],i[c+352>>2]=i[D>>2],i[c+356>>2]=a,AI(a=c+496|0,c+368|0,c+352|0),t=i[c+508>>2],i[D+8>>2]=i[c+504>>2],i[D+12>>2]=t,t=i[c+500>>2],i[D>>2]=i[c+496>>2],i[D+4>>2]=t,t=i[h+12>>2],i[c+344>>2]=i[h+8>>2],i[c+348>>2]=t,t=i[h+4>>2],i[c+336>>2]=i[h>>2],i[c+340>>2]=t,t=i[e+12>>2],i[c+328>>2]=i[e+8>>2],i[c+332>>2]=t,t=i[e+4>>2],i[c+320>>2]=i[e>>2],i[c+324>>2]=t,AI(a,c+336|0,c+320|0),t=i[c+508>>2],i[e+8>>2]=i[c+504>>2],i[e+12>>2]=t,t=i[c+500>>2],i[e>>2]=i[c+496>>2],i[e+4>>2]=t,t=i[y+12>>2],i[c+312>>2]=i[y+8>>2],i[c+316>>2]=t,t=i[y+4>>2],i[c+304>>2]=i[y>>2],i[c+308>>2]=t,t=i[h+12>>2],i[c+296>>2]=i[h+8>>2],i[c+300>>2]=t,t=i[h+4>>2],i[c+288>>2]=i[h>>2],i[c+292>>2]=t,AI(a,c+304|0,c+288|0),t=i[c+508>>2],i[h+8>>2]=i[c+504>>2],i[h+12>>2]=t,t=i[c+500>>2],i[h>>2]=i[c+496>>2],i[h+4>>2]=t,t=i[r+12>>2],i[c+280>>2]=i[r+8>>2],i[c+284>>2]=t,t=i[r+4>>2],i[c+272>>2]=i[r>>2],i[c+276>>2]=t,t=i[y+12>>2],i[c+264>>2]=i[y+8>>2],i[c+268>>2]=t,t=i[y+4>>2],i[c+256>>2]=i[y>>2],i[c+260>>2]=t,AI(a,c+272|0,c+256|0),t=i[c+508>>2],i[y+8>>2]=i[c+504>>2],i[y+12>>2]=t,t=i[c+500>>2],i[y>>2]=i[c+496>>2],i[y+4>>2]=t,t=i[c+412>>2],i[c+248>>2]=i[c+408>>2],i[c+252>>2]=t,t=i[c+404>>2],i[c+240>>2]=i[c+400>>2],i[c+244>>2]=t,t=i[r+12>>2],i[c+232>>2]=i[r+8>>2],i[c+236>>2]=t,t=i[r+4>>2],i[c+224>>2]=i[r>>2],i[c+228>>2]=t,AI(a,c+240|0,c+224|0),t=i[c+508>>2],i[r+8>>2]=i[c+504>>2],i[r+12>>2]=t,t=i[c+500>>2],i[r>>2]=i[c+496>>2],i[r+4>>2]=t,t=i[c+524>>2],i[c+216>>2]=i[c+520>>2],i[c+220>>2]=t,t=i[c+412>>2],i[c+200>>2]=i[c+408>>2],i[c+204>>2]=t,t=i[c+516>>2],i[c+208>>2]=i[c+512>>2],i[c+212>>2]=t,t=i[c+404>>2],i[c+192>>2]=i[c+400>>2],i[c+196>>2]=t,AI(a,c+208|0,c+192|0),i[c+412>>2]=n^i[c+508>>2],i[c+408>>2]=i[c+504>>2]^w,i[c+404>>2]=i[c+500>>2]^p,i[c+400>>2]=i[c+496>>2]^f,(_=(a=_)+16|0)>>>0<=E>>>0;);if((_=15&E)&&(bg((r=c+384|0)|_,0,16-_|0),Ng(r,Q+a|0,_),_=i[c+384>>2],r=i[c+388>>2],y=i[c+392>>2],h=i[c+396>>2],a=i[c+492>>2],Q=i[c+488>>2],i[c+520>>2]=Q,i[c+524>>2]=a,e=i[c+476>>2],i[c+184>>2]=i[c+472>>2],i[c+188>>2]=e,i[c+168>>2]=Q,i[c+172>>2]=a,a=i[c+484>>2],Q=i[c+480>>2],i[c+512>>2]=Q,i[c+516>>2]=a,e=i[c+468>>2],i[c+176>>2]=i[c+464>>2],i[c+180>>2]=e,i[c+160>>2]=Q,i[c+164>>2]=a,AI(Q=c+496|0,c+176|0,c+160|0),a=i[c+508>>2],i[c+488>>2]=i[c+504>>2],i[c+492>>2]=a,a=i[c+460>>2],i[c+152>>2]=i[c+456>>2],i[c+156>>2]=a,a=i[c+476>>2],i[c+136>>2]=i[c+472>>2],i[c+140>>2]=a,a=i[c+500>>2],i[c+480>>2]=i[c+496>>2],i[c+484>>2]=a,a=i[c+452>>2],i[c+144>>2]=i[c+448>>2],i[c+148>>2]=a,a=i[c+468>>2],i[c+128>>2]=i[c+464>>2],i[c+132>>2]=a,AI(Q,c+144|0,c+128|0),a=i[c+508>>2],i[c+472>>2]=i[c+504>>2],i[c+476>>2]=a,a=i[c+444>>2],i[c+120>>2]=i[c+440>>2],i[c+124>>2]=a,a=i[c+460>>2],i[c+104>>2]=i[c+456>>2],i[c+108>>2]=a,a=i[c+500>>2],i[c+464>>2]=i[c+496>>2],i[c+468>>2]=a,a=i[c+436>>2],i[c+112>>2]=i[c+432>>2],i[c+116>>2]=a,a=i[c+452>>2],i[c+96>>2]=i[c+448>>2],i[c+100>>2]=a,AI(Q,c+112|0,c+96|0),a=i[c+508>>2],i[c+456>>2]=i[c+504>>2],i[c+460>>2]=a,a=i[c+428>>2],i[c+88>>2]=i[c+424>>2],i[c+92>>2]=a,a=i[c+444>>2],i[c+72>>2]=i[c+440>>2],i[c+76>>2]=a,a=i[c+500>>2],i[c+448>>2]=i[c+496>>2],i[c+452>>2]=a,a=i[c+420>>2],i[c+80>>2]=i[c+416>>2],i[c+84>>2]=a,a=i[c+436>>2],i[c+64>>2]=i[c+432>>2],i[c+68>>2]=a,AI(Q,c+80|0,c- -64|0),a=i[c+508>>2],i[c+440>>2]=i[c+504>>2],i[c+444>>2]=a,a=i[c+412>>2],i[c+56>>2]=i[c+408>>2],i[c+60>>2]=a,a=i[c+428>>2],i[c+40>>2]=i[c+424>>2],i[c+44>>2]=a,a=i[c+500>>2],i[c+432>>2]=i[c+496>>2],i[c+436>>2]=a,a=i[c+404>>2],i[c+48>>2]=i[c+400>>2],i[c+52>>2]=a,a=i[c+420>>2],i[c+32>>2]=i[c+416>>2],i[c+36>>2]=a,AI(Q,c+48|0,c+32|0),a=i[c+508>>2],i[c+424>>2]=i[c+504>>2],i[c+428>>2]=a,a=i[c+524>>2],i[c+24>>2]=i[c+520>>2],i[c+28>>2]=a,a=i[c+412>>2],i[c+8>>2]=i[c+408>>2],i[c+12>>2]=a,a=i[c+500>>2],i[c+416>>2]=i[c+496>>2],i[c+420>>2]=a,a=i[c+516>>2],i[c+16>>2]=i[c+512>>2],i[c+20>>2]=a,a=i[c+404>>2],i[c>>2]=i[c+400>>2],i[c+4>>2]=a,AI(Q,c+16|0,c),i[c+412>>2]=h^i[c+508>>2],i[c+408>>2]=y^i[c+504>>2],i[c+404>>2]=r^i[c+500>>2],i[c+400>>2]=_^i[c+496>>2]),r=16,a=0,B>>>0<16)_=0;else for(;X(A+a|0,C+a|0,c+400|0),_=r,(r=(a=r)+16|0)>>>0<=B>>>0;);return(Q=15&B)&&(bg((a=c+384|0)|Q,0,16-Q|0),Ng(a,C+_|0,Q),X(C=c+512|0,a,c+400|0),Ng(A+_|0,C,Q)),l(I,g,E,B,c+400|0),s=c+528|0,0},function(A,I,g,C,B,Q,E,a,_){A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,E|=0;var c,t=0,r=0,e=0,y=0,h=0,D=0,f=0,p=0,w=0,n=0;if(s=c=s-544|0,G(_|=0,a|=0,c+432|0),_=0,E>>>0<=31)a=0;else for(r=32;L(Q+_|0,c+432|0),_=a=r,(r=a+32|0)>>>0<=E>>>0;);if((_=16|a)>>>0<=E>>>0)for(r=c+448|0,y=c+464|0,h=c+480|0,e=c+496|0,D=c+512|0;f=o[0|(a=Q+a|0)]|o[a+1|0]<<8|o[a+2|0]<<16|o[a+3|0]<<24,p=o[a+4|0]|o[a+5|0]<<8|o[a+6|0]<<16|o[a+7|0]<<24,w=o[a+8|0]|o[a+9|0]<<8|o[a+10|0]<<16|o[a+11|0]<<24,n=o[a+12|0]|o[a+13|0]<<8|o[a+14|0]<<16|o[a+15|0]<<24,a=i[D+12>>2],i[c+392>>2]=i[D+8>>2],i[c+396>>2]=a,a=i[D+4>>2],i[c+384>>2]=i[D>>2],i[c+388>>2]=a,a=i[e+12>>2],i[c+376>>2]=i[e+8>>2],i[c+380>>2]=a,a=i[e+4>>2],i[c+368>>2]=i[e>>2],i[c+372>>2]=a,a=i[D+12>>2],i[c+360>>2]=i[D+8>>2],i[c+364>>2]=a,a=i[D+4>>2],i[c+352>>2]=i[D>>2],i[c+356>>2]=a,AI(a=c+528|0,c+368|0,c+352|0),t=i[c+540>>2],i[D+8>>2]=i[c+536>>2],i[D+12>>2]=t,t=i[c+532>>2],i[D>>2]=i[c+528>>2],i[D+4>>2]=t,t=i[h+12>>2],i[c+344>>2]=i[h+8>>2],i[c+348>>2]=t,t=i[h+4>>2],i[c+336>>2]=i[h>>2],i[c+340>>2]=t,t=i[e+12>>2],i[c+328>>2]=i[e+8>>2],i[c+332>>2]=t,t=i[e+4>>2],i[c+320>>2]=i[e>>2],i[c+324>>2]=t,AI(a,c+336|0,c+320|0),t=i[c+540>>2],i[e+8>>2]=i[c+536>>2],i[e+12>>2]=t,t=i[c+532>>2],i[e>>2]=i[c+528>>2],i[e+4>>2]=t,t=i[y+12>>2],i[c+312>>2]=i[y+8>>2],i[c+316>>2]=t,t=i[y+4>>2],i[c+304>>2]=i[y>>2],i[c+308>>2]=t,t=i[h+12>>2],i[c+296>>2]=i[h+8>>2],i[c+300>>2]=t,t=i[h+4>>2],i[c+288>>2]=i[h>>2],i[c+292>>2]=t,AI(a,c+304|0,c+288|0),t=i[c+540>>2],i[h+8>>2]=i[c+536>>2],i[h+12>>2]=t,t=i[c+532>>2],i[h>>2]=i[c+528>>2],i[h+4>>2]=t,t=i[r+12>>2],i[c+280>>2]=i[r+8>>2],i[c+284>>2]=t,t=i[r+4>>2],i[c+272>>2]=i[r>>2],i[c+276>>2]=t,t=i[y+12>>2],i[c+264>>2]=i[y+8>>2],i[c+268>>2]=t,t=i[y+4>>2],i[c+256>>2]=i[y>>2],i[c+260>>2]=t,AI(a,c+272|0,c+256|0),t=i[c+540>>2],i[y+8>>2]=i[c+536>>2],i[y+12>>2]=t,t=i[c+532>>2],i[y>>2]=i[c+528>>2],i[y+4>>2]=t,t=i[c+444>>2],i[c+248>>2]=i[c+440>>2],i[c+252>>2]=t,t=i[c+436>>2],i[c+240>>2]=i[c+432>>2],i[c+244>>2]=t,t=i[r+12>>2],i[c+232>>2]=i[r+8>>2],i[c+236>>2]=t,t=i[r+4>>2],i[c+224>>2]=i[r>>2],i[c+228>>2]=t,AI(a,c+240|0,c+224|0),t=i[c+540>>2],i[r+8>>2]=i[c+536>>2],i[r+12>>2]=t,t=i[c+532>>2],i[r>>2]=i[c+528>>2],i[r+4>>2]=t,t=i[c+396>>2],i[c+216>>2]=i[c+392>>2],i[c+220>>2]=t,t=i[c+444>>2],i[c+200>>2]=i[c+440>>2],i[c+204>>2]=t,t=i[c+388>>2],i[c+208>>2]=i[c+384>>2],i[c+212>>2]=t,t=i[c+436>>2],i[c+192>>2]=i[c+432>>2],i[c+196>>2]=t,AI(a,c+208|0,c+192|0),i[c+444>>2]=n^i[c+540>>2],i[c+440>>2]=i[c+536>>2]^w,i[c+436>>2]=i[c+532>>2]^p,i[c+432>>2]=i[c+528>>2]^f,(_=(a=_)+16|0)>>>0<=E>>>0;);(_=15&E)&&(bg((r=c+416|0)|_,0,16-_|0),Ng(r,Q+a|0,_),_=i[c+416>>2],r=i[c+420>>2],y=i[c+424>>2],h=i[c+428>>2],a=i[c+524>>2],Q=i[c+520>>2],i[c+392>>2]=Q,i[c+396>>2]=a,e=i[c+508>>2],i[c+184>>2]=i[c+504>>2],i[c+188>>2]=e,i[c+168>>2]=Q,i[c+172>>2]=a,a=i[c+516>>2],Q=i[c+512>>2],i[c+384>>2]=Q,i[c+388>>2]=a,e=i[c+500>>2],i[c+176>>2]=i[c+496>>2],i[c+180>>2]=e,i[c+160>>2]=Q,i[c+164>>2]=a,AI(Q=c+528|0,c+176|0,c+160|0),a=i[c+540>>2],i[c+520>>2]=i[c+536>>2],i[c+524>>2]=a,a=i[c+492>>2],i[c+152>>2]=i[c+488>>2],i[c+156>>2]=a,a=i[c+508>>2],i[c+136>>2]=i[c+504>>2],i[c+140>>2]=a,a=i[c+532>>2],i[c+512>>2]=i[c+528>>2],i[c+516>>2]=a,a=i[c+484>>2],i[c+144>>2]=i[c+480>>2],i[c+148>>2]=a,a=i[c+500>>2],i[c+128>>2]=i[c+496>>2],i[c+132>>2]=a,AI(Q,c+144|0,c+128|0),a=i[c+540>>2],i[c+504>>2]=i[c+536>>2],i[c+508>>2]=a,a=i[c+476>>2],i[c+120>>2]=i[c+472>>2],i[c+124>>2]=a,a=i[c+492>>2],i[c+104>>2]=i[c+488>>2],i[c+108>>2]=a,a=i[c+532>>2],i[c+496>>2]=i[c+528>>2],i[c+500>>2]=a,a=i[c+468>>2],i[c+112>>2]=i[c+464>>2],i[c+116>>2]=a,a=i[c+484>>2],i[c+96>>2]=i[c+480>>2],i[c+100>>2]=a,AI(Q,c+112|0,c+96|0),a=i[c+540>>2],i[c+488>>2]=i[c+536>>2],i[c+492>>2]=a,a=i[c+460>>2],i[c+88>>2]=i[c+456>>2],i[c+92>>2]=a,a=i[c+476>>2],i[c+72>>2]=i[c+472>>2],i[c+76>>2]=a,a=i[c+532>>2],i[c+480>>2]=i[c+528>>2],i[c+484>>2]=a,a=i[c+452>>2],i[c+80>>2]=i[c+448>>2],i[c+84>>2]=a,a=i[c+468>>2],i[c+64>>2]=i[c+464>>2],i[c+68>>2]=a,AI(Q,c+80|0,c- -64|0),a=i[c+540>>2],i[c+472>>2]=i[c+536>>2],i[c+476>>2]=a,a=i[c+444>>2],i[c+56>>2]=i[c+440>>2],i[c+60>>2]=a,a=i[c+460>>2],i[c+40>>2]=i[c+456>>2],i[c+44>>2]=a,a=i[c+532>>2],i[c+464>>2]=i[c+528>>2],i[c+468>>2]=a,a=i[c+436>>2],i[c+48>>2]=i[c+432>>2],i[c+52>>2]=a,a=i[c+452>>2],i[c+32>>2]=i[c+448>>2],i[c+36>>2]=a,AI(Q,c+48|0,c+32|0),a=i[c+540>>2],i[c+456>>2]=i[c+536>>2],i[c+460>>2]=a,a=i[c+396>>2],i[c+24>>2]=i[c+392>>2],i[c+28>>2]=a,a=i[c+444>>2],i[c+8>>2]=i[c+440>>2],i[c+12>>2]=a,a=i[c+532>>2],i[c+448>>2]=i[c+528>>2],i[c+452>>2]=a,a=i[c+388>>2],i[c+16>>2]=i[c+384>>2],i[c+20>>2]=a,a=i[c+436>>2],i[c>>2]=i[c+432>>2],i[c+4>>2]=a,AI(Q,c+16|0,c),i[c+444>>2]=h^i[c+540>>2],i[c+440>>2]=y^i[c+536>>2],i[c+436>>2]=r^i[c+532>>2],i[c+432>>2]=_^i[c+528>>2]);A:{I:{g:{C:{B:{if(A){if(r=16,g>>>0<16)break B;for(_=0;O(A+_|0,I+_|0,c+432|0),_=a=r,(r=a+16|0)>>>0<=g>>>0;);}else{if(_=16,g>>>0<16)break g;for(r=0;O(c+528|0,I+r|0,c+432|0),r=a=_,(_=a+16|0)>>>0<=g>>>0;);}if(!(_=15&g))break A;if(A)break C;break I}if(a=0,!(_=g))break A}Z(A+a|0,I+a|0,_,c+432|0);break A}if(a=0,!(_=g))break A}Z(c+528|0,I+a|0,_,c+432|0)}l(c+384|0,B,E,g,c+432|0),a=-1;A:{I:{if(I=B-16|0){if(16==(0|I))break I;break A}a=oI(c+384|0,C);break A}a=NC(c+384|0,C)}return!A|!a||bg(A,0,g),s=c+544|0,0|a},function(A,I,g,C,B){var Q;return A|=0,C|=0,B|=0,s=Q=s+-64|0,(I|=0)|(g|=0)&&(i[Q+8>>2]=2036477234,i[Q+12>>2]=1797285236,i[Q>>2]=1634760805,i[Q+4>>2]=857760878,i[Q+16>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,i[Q+20>>2]=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[Q+24>>2]=o[B+8|0]|o[B+9|0]<<8|o[B+10|0]<<16|o[B+11|0]<<24,i[Q+28>>2]=o[B+12|0]|o[B+13|0]<<8|o[B+14|0]<<16|o[B+15|0]<<24,i[Q+32>>2]=o[B+16|0]|o[B+17|0]<<8|o[B+18|0]<<16|o[B+19|0]<<24,i[Q+36>>2]=o[B+20|0]|o[B+21|0]<<8|o[B+22|0]<<16|o[B+23|0]<<24,i[Q+40>>2]=o[B+24|0]|o[B+25|0]<<8|o[B+26|0]<<16|o[B+27|0]<<24,B=o[B+28|0]|o[B+29|0]<<8|o[B+30|0]<<16|o[B+31|0]<<24,i[Q+48>>2]=0,i[Q+52>>2]=0,i[Q+44>>2]=B,i[Q+56>>2]=o[0|C]|o[C+1|0]<<8|o[C+2|0]<<16|o[C+3|0]<<24,i[Q+60>>2]=o[C+4|0]|o[C+5|0]<<8|o[C+6|0]<<16|o[C+7|0]<<24,z(Q,A=bg(A,0,I),A,I,g),XC(Q,64)),s=Q- -64|0,0},function(A,I,g,C,B){var Q;return A|=0,C|=0,B|=0,s=Q=s+-64|0,(I|=0)|(g|=0)&&(i[Q+8>>2]=2036477234,i[Q+12>>2]=1797285236,i[Q>>2]=1634760805,i[Q+4>>2]=857760878,i[Q+16>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,i[Q+20>>2]=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[Q+24>>2]=o[B+8|0]|o[B+9|0]<<8|o[B+10|0]<<16|o[B+11|0]<<24,i[Q+28>>2]=o[B+12|0]|o[B+13|0]<<8|o[B+14|0]<<16|o[B+15|0]<<24,i[Q+32>>2]=o[B+16|0]|o[B+17|0]<<8|o[B+18|0]<<16|o[B+19|0]<<24,i[Q+36>>2]=o[B+20|0]|o[B+21|0]<<8|o[B+22|0]<<16|o[B+23|0]<<24,i[Q+40>>2]=o[B+24|0]|o[B+25|0]<<8|o[B+26|0]<<16|o[B+27|0]<<24,B=o[B+28|0]|o[B+29|0]<<8|o[B+30|0]<<16|o[B+31|0]<<24,i[Q+48>>2]=0,i[Q+44>>2]=B,i[Q+52>>2]=o[0|C]|o[C+1|0]<<8|o[C+2|0]<<16|o[C+3|0]<<24,i[Q+56>>2]=o[C+4|0]|o[C+5|0]<<8|o[C+6|0]<<16|o[C+7|0]<<24,i[Q+60>>2]=o[C+8|0]|o[C+9|0]<<8|o[C+10|0]<<16|o[C+11|0]<<24,z(Q,A=bg(A,0,I),A,I,g),XC(Q,64)),s=Q- -64|0,0},function(A,I,g,C,B,Q,E,a){var _;return A|=0,I|=0,B|=0,Q|=0,E|=0,a|=0,s=_=s+-64|0,(g|=0)|(C|=0)&&(i[_+8>>2]=2036477234,i[_+12>>2]=1797285236,i[_>>2]=1634760805,i[_+4>>2]=857760878,i[_+16>>2]=o[0|a]|o[a+1|0]<<8|o[a+2|0]<<16|o[a+3|0]<<24,i[_+20>>2]=o[a+4|0]|o[a+5|0]<<8|o[a+6|0]<<16|o[a+7|0]<<24,i[_+24>>2]=o[a+8|0]|o[a+9|0]<<8|o[a+10|0]<<16|o[a+11|0]<<24,i[_+28>>2]=o[a+12|0]|o[a+13|0]<<8|o[a+14|0]<<16|o[a+15|0]<<24,i[_+32>>2]=o[a+16|0]|o[a+17|0]<<8|o[a+18|0]<<16|o[a+19|0]<<24,i[_+36>>2]=o[a+20|0]|o[a+21|0]<<8|o[a+22|0]<<16|o[a+23|0]<<24,i[_+40>>2]=o[a+24|0]|o[a+25|0]<<8|o[a+26|0]<<16|o[a+27|0]<<24,i[_+44>>2]=o[a+28|0]|o[a+29|0]<<8|o[a+30|0]<<16|o[a+31|0]<<24,i[_+48>>2]=Q,i[_+52>>2]=E,i[_+56>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,i[_+60>>2]=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,z(_,I,A,g,C),XC(_,64)),s=_- -64|0,0},function(A,I,g,C,B,Q,E){var a;return A|=0,I|=0,B|=0,Q|=0,E|=0,s=a=s+-64|0,(g|=0)|(C|=0)&&(i[a+8>>2]=2036477234,i[a+12>>2]=1797285236,i[a>>2]=1634760805,i[a+4>>2]=857760878,i[a+16>>2]=o[0|E]|o[E+1|0]<<8|o[E+2|0]<<16|o[E+3|0]<<24,i[a+20>>2]=o[E+4|0]|o[E+5|0]<<8|o[E+6|0]<<16|o[E+7|0]<<24,i[a+24>>2]=o[E+8|0]|o[E+9|0]<<8|o[E+10|0]<<16|o[E+11|0]<<24,i[a+28>>2]=o[E+12|0]|o[E+13|0]<<8|o[E+14|0]<<16|o[E+15|0]<<24,i[a+32>>2]=o[E+16|0]|o[E+17|0]<<8|o[E+18|0]<<16|o[E+19|0]<<24,i[a+36>>2]=o[E+20|0]|o[E+21|0]<<8|o[E+22|0]<<16|o[E+23|0]<<24,i[a+40>>2]=o[E+24|0]|o[E+25|0]<<8|o[E+26|0]<<16|o[E+27|0]<<24,E=o[E+28|0]|o[E+29|0]<<8|o[E+30|0]<<16|o[E+31|0]<<24,i[a+48>>2]=Q,i[a+44>>2]=E,i[a+52>>2]=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,i[a+56>>2]=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[a+60>>2]=o[B+8|0]|o[B+9|0]<<8|o[B+10|0]<<16|o[B+11|0]<<24,z(a,I,A,g,C),XC(a,64)),s=a- -64|0,0}],fB.grow=function(A){var I=this.length;return this.length=this.length+A,I},fB.set=function(A,I){this[A]=I},fB.get=function(A){return this[A]},fB);function wB(){return g.byteLength/65536|0}return{e:Object.create(Object.prototype,{grow:{value:function(A){A|=0;var B=0|wB(),Q=B+A|0;if(B<Q&&Q<65536){var _=new ArrayBuffer(a(Q,65536));new Int8Array(_).set(C),C=new Int8Array(_),new Int16Array(_),i=new Int32Array(_),o=new Uint8Array(_),new Uint16Array(_),E=new Uint32Array(_),new Float32Array(_),new Float64Array(_),g=_,I=o}return B}},buffer:{get:function(){return g}}}),f:function(){},g:CB,h:hB,i:CB,j:BB,k:iB,l:zC,m:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|VI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,a|=0,_|=0,36768)},n:function(A,I,g,C,B,Q,i,o,E,a,_,c){return 0|eg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,_|=0,c|=0,36768)},o:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|zI(A|=0,I|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,a|=0,_|=0,36772)},p:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|fg(A|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,a|=0,_|=0,36772)},q:BB,r:hB,s:BB,t:BB,u:iB,v:PC,w:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|VI(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,a|=0,_|=0,36776)},x:function(A,I,g,C,B,Q,i,o,E,a,_,c){return 0|eg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,_|=0,c|=0,36776)},y:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|zI(A|=0,I|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,a|=0,_|=0,36780)},z:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|fg(A|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,a|=0,_|=0,36780)},A:hB,B:function(A,I,g,C,B,Q,i,o,E,a,_,c){return 0|xI(A|=0,I|=0,g|=0,C|=0,(A=0)|(B|=0),Q|=0,i|=0,A|(o|=0),E|=0,_|=0,c|=0)},C:function(A,I,g,C,B,o,E,a,_,c,t){return A|=0,I|=0,C|=0,E|=0,_|=0,E|=_=0,!(B|=0)&(C|=_)>>>0<4294967280?(xI(A,A+C|0,0,g|=0,C,B,o|=0,E,a|=0,c|=0,t|=0),I&&(B=(A=C+16|0)>>>0<16?B+1|0:B,i[I>>2]=A,i[I+4>>2]=B)):(rC(),Q()),0},D:function(A,I,g,C,B,Q,i,o,E,a,_,c){return 0|mI(A|=0,I|=0,g|=0,C|=0,(A=0)|(B|=0),Q|=0,i|=0,A|(o|=0),E|=0,_|=0,c|=0)},E:function(A,I,g,C,B,o,E,a,_,c,t){return A|=0,I|=0,C|=0,E|=0,_|=0,E|=_=0,!(B|=0)&(C|=_)>>>0<4294967280?(mI(A,A+C|0,0,g|=0,C,B,o|=0,E,a|=0,c|=0,t|=0),I&&(B=(A=C+16|0)>>>0<16?B+1|0:B,i[I>>2]=A,i[I+4>>2]=B)):(rC(),Q()),0},F:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|dI(A|=0,g|=0,(A=0)|(C|=0),B|=0,Q|=0,i|=0,A|(o|=0),E|=0,a|=0,_|=0)},G:function(A,I,g,C,B,Q,o,E,a,_,c){return I|=0,g|=0,C|=0,B|=0,E|=0,E|=0,g=-1,!(Q|=0)&(B|=0)>>>0>=16|Q&&(g=dI(A|=0,C,B-16|0,Q-(B>>>0<16)|0,(C+B|0)-16|0,o|=0,E,a|=0,_|=0,c|=0)),I&&(i[I>>2]=g?0:B-16|0,i[I+4>>2]=g?0:Q-(B>>>0<16)|0),0|g},H:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|HI(A|=0,g|=0,(A=0)|(C|=0),B|=0,Q|=0,i|=0,A|(o|=0),E|=0,a|=0,_|=0)},I:function(A,I,g,C,B,Q,o,E,a,_,c){return I|=0,g|=0,C|=0,B|=0,E|=0,E|=0,g=-1,!(Q|=0)&(B|=0)>>>0>=16|Q&&(g=HI(A|=0,C,B-16|0,Q-(B>>>0<16)|0,(C+B|0)-16|0,o|=0,E,a|=0,_|=0,c|=0)),I&&(i[I>>2]=g?0:B-16|0,i[I+4>>2]=g?0:Q-(B>>>0<16)|0),0|g},J:BB,K:aB,L:hB,M:CB,N:EB,O:PC,P:BB,Q:eB,R:hB,S:CB,T:EB,U:PC,V:function(A,I,g,C,B,Q,i,o,E,a,_,c){return 0|pI(A|=0,I|=0,g|=0,C|=0,(A=0)|(B|=0),Q|=0,i|=0,A|(o|=0),E|=0,_|=0,c|=0)},W:function(A,I,g,C,B,o,E,a,_,c,t){return A|=0,I|=0,C|=0,E|=0,_|=0,E|=_=0,!(B|=0)&(C|=_)>>>0<4294967280?(pI(A,A+C|0,0,g|=0,C,B,o|=0,E,a|=0,c|=0,t|=0),I&&(B=(A=C+16|0)>>>0<16?B+1|0:B,i[I>>2]=A,i[I+4>>2]=B)):(rC(),Q()),0},X:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|hI(A|=0,g|=0,(A=0)|(C|=0),B|=0,Q|=0,i|=0,A|(o|=0),E|=0,a|=0,_|=0)},Y:function(A,I,g,C,B,Q,o,E,a,_,c){return I|=0,g|=0,C|=0,B|=0,E|=0,E|=0,g=-1,!(Q|=0)&(B|=0)>>>0>=16|Q&&(g=hI(A|=0,C,B-16|0,Q-(B>>>0<16)|0,(C+B|0)-16|0,o|=0,E,a|=0,_|=0,c|=0)),I&&(i[I>>2]=g?0:B-16|0,i[I+4>>2]=g?0:Q-(B>>>0<16)|0),0|g},Z:BB,_:_B,$:hB,aa:CB,ba:EB,ca:PC,da:BB,ea:BB,fa:function(){return 1462},ga:_I,ha:JI,ia:PC,ja:BB,ka:BB,la:IB,ma:PC,na:mA,oa:function(A,I,g,C){return 0|mC(A|=0,I|=0,g|=0,C|=0)},pa:Sg,qa:function(A,I,g,C,B){var Q;return A|=0,I|=0,g|=0,C|=0,s=Q=s-240|0,mA(Q,B|=0,32),UA(Q,I,g,C),JA(Q,I=Q+208|0),UA(g=Q+104|0,I,32,0),JA(g,A),XC(I,32),s=Q+240|0,0},ra:function(A,I,g,C,B){var Q,i;return A|=0,I|=0,g|=0,C|=0,s=Q=s-272|0,mA(i=Q+32|0,B|=0,32),UA(i,I,g,C),JA(i,I=Q+240|0),UA(g=Q+136|0,I,32,0),JA(g,Q),XC(I,32),I=NC(A,Q),g=MI(Q,A,32),s=Q+272|0,((0|A)==(0|Q)?-1:I)|g},sa:gB,ta:BB,ua:$C,va:PC,wa:iI,xa:EC,ya:wg,za:function(A,I,g,C,B){var Q;return A|=0,I|=0,g|=0,C|=0,s=Q=s-480|0,iI(Q,B|=0,32),SA(Q,I,g,C),j(Q,I=Q+416|0),SA(g=Q+208|0,I,64,0),j(g,A),XC(I,64),s=Q+480|0,0},Aa:function(A,I,g,C,B){var Q,i;return A|=0,I|=0,g|=0,C|=0,s=Q=s-544|0,iI(i=Q- -64|0,B|=0,32),SA(i,I,g,C),j(i,I=Q+480|0),SA(g=Q+272|0,I,64,0),j(g,Q),XC(I,64),I=GC(A,Q),g=MI(Q,A,64),s=Q+544|0,((0|A)==(0|Q)?-1:I)|g},Ba:BB,Ca:BB,Da:$C,Ea:PC,Fa:yC,Ga:EC,Ha:function(A,I){I|=0;var g,B=0;return s=g=s+-64|0,wg(A|=0,g),B=i[g+28>>2],A=i[g+24>>2],C[I+24|0]=A,C[I+25|0]=A>>>8,C[I+26|0]=A>>>16,C[I+27|0]=A>>>24,C[I+28|0]=B,C[I+29|0]=B>>>8,C[I+30|0]=B>>>16,C[I+31|0]=B>>>24,B=i[g+20>>2],A=i[g+16>>2],C[I+16|0]=A,C[I+17|0]=A>>>8,C[I+18|0]=A>>>16,C[I+19|0]=A>>>24,C[I+20|0]=B,C[I+21|0]=B>>>8,C[I+22|0]=B>>>16,C[I+23|0]=B>>>24,B=i[g+12>>2],A=i[g+8>>2],C[I+8|0]=A,C[I+9|0]=A>>>8,C[I+10|0]=A>>>16,C[I+11|0]=A>>>24,C[I+12|0]=B,C[I+13|0]=B>>>8,C[I+14|0]=B>>>16,C[I+15|0]=B>>>24,B=i[g+4>>2],A=i[g>>2],C[0|I]=A,C[I+1|0]=A>>>8,C[I+2|0]=A>>>16,C[I+3|0]=A>>>24,C[I+4|0]=B,C[I+5|0]=B>>>8,C[I+6|0]=B>>>16,C[I+7|0]=B>>>24,s=g- -64|0,0},Ia:_I,Ja:JI,Ka:BB,La:BB,Ma:BB,Na:BB,Oa:_B,Pa:BB,Qa:CB,Ra:CB,Sa:EB,Ta:function(){return 1476},Ua:function(A,I,g){return 0|cI(A|=0,I|=0,g|=0)},Va:UC,Wa:cC,Xa:Pg,Ya:qg,Za:Bg,_a:Qg,$a:Yg,ab:function(A,I,g,C,B,Q,i,o){A|=0,I|=0,g|=0,Q|=0;var E,a=0;return a=C|=0,C=B|=0,E=0|a,s=a=s-32|0,B=-1,cC(a,i|=0,o|=0)||(B=aI(A,I,g,E,C,Q,a),XC(a,32)),s=a+32|0,0|B},bb:function(A,I,g,C,B,i){return A|=0,I|=0,B|=0,i|=0,!(C|=0)&(g|=0)>>>0>=4294967280|C&&(rC(),Q()),0|aI(A+16|0,A,I,g,C,B,i)},cb:function(A,I,g,C,B,Q,i){return 0|sg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)},db:Jg,eb:function(A,I,g,C,B,Q,i,o){A|=0,I|=0,g|=0,Q|=0;var E,a=0;return a=C|=0,C=B|=0,E=0|a,s=a=s-32|0,B=-1,cC(a,i|=0,o|=0)||(B=eI(A,I,g,E,C,Q,a),XC(a,32)),s=a+32|0,0|B},fb:hg,gb:function(A,I,g,C,B,Q,i){return 0|_g(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)},hb:function(A,I,g,B,Q){A|=0,I|=0,Q|=0;var o,E,a,_,c=0,t=0;return c=g|=0,g=B|=0,_=0|c,c=B=s,s=o=B-512&-64,B=-1,UC(E=o- -64|0,a=o+32|0)||(iC(B=o+128|0,0,0,24),lC(B,E,32,0),lC(B,Q,32,0),eC(B,t=o+96|0,24),B=sg(A+32|0,I,_,g,t,Q,a),I=i[o+92>>2],g=i[o+88>>2],C[A+24|0]=g,C[A+25|0]=g>>>8,C[A+26|0]=g>>>16,C[A+27|0]=g>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[o+84>>2],g=i[o+80>>2],C[A+16|0]=g,C[A+17|0]=g>>>8,C[A+18|0]=g>>>16,C[A+19|0]=g>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[o+76>>2],g=i[o+72>>2],C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[o+68>>2],g=i[o+64>>2],C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,XC(a,32),XC(E,32),XC(t,24)),s=c,0|B},ib:function(A,I,g,C,B,Q){A|=0,I|=0,B|=0,Q|=0;var i,o,E=0;return o=E=s,s=i=E-448&-64,E=-1,!(C|=0)&(g|=0)>>>0>=48|C&&(iC(E=i- -64|0,0,0,24),lC(E,I,32,0),lC(E,B,32,0),eC(E,B=i+32|0,24),E=_g(A,I+32|0,g-32|0,C-(g>>>0<32)|0,B,I,Q)),s=o,0|E},jb:oB,kb:cI,lb:sC,mb:pg,nb:Pg,ob:qg,pb:Bg,qb:Qg,rb:BB,sb:BB,tb:BB,ub:BB,vb:_B,wb:BB,xb:CB,yb:CB,zb:EB,Ab:yA,Bb:BB,Cb:CB,Db:BB,Eb:CB,Fb:wA,Gb:BB,Hb:CB,Ib:BB,Jb:CB,Kb:AC,Lb:gB,Mb:CB,Nb:BB,Ob:CB,Pb:IC,Qb:gB,Rb:CB,Sb:BB,Tb:CB,Ub:gC,Vb:gB,Wb:CB,Xb:BB,Yb:CB,Zb:CB,_b:gB,$b:BB,ac:CB,bc:gB,cc:BB,dc:WC,ec:ZC,fc:function(A,I,g,C,B,Q,i){return 0|kC(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)},gc:iC,hc:function(A,I,g,C){return 0|lC(A|=0,I|=0,g|=0,C|=0)},ic:eC,jc:PC,kc:CB,lc:gB,mc:BB,nc:CB,oc:gB,pc:BB,qc:CB,rc:CB,sc:ZC,tc:PC,uc:kC,vc:function(A,I,g,C,B,Q,i,o,E){return 0|QA(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0)},wc:eA,xc:function(A,I,g,B,i,E){A|=0,I|=0,i|=0,E|=0;var a=0,_=0,c=0,t=0,r=0,e=0,y=0;if(a=-1,!((B|=0)-65>>>0<4294967232|(g|=0)>>>0>64)){A:{if(!g||!I){if(((t=255&B)-65&255)>>>0>191){i?(_=725511199^(o[i+8|0]|o[i+9|0]<<8|o[i+10|0]<<16|o[i+11|0]<<24),g=-1694144372^(o[i+12|0]|o[i+13|0]<<8|o[i+14|0]<<16|o[i+15|0]<<24),I=-1377402159^(o[0|i]|o[i+1|0]<<8|o[i+2|0]<<16|o[i+3|0]<<24),i=1359893119^(o[i+4|0]|o[i+5|0]<<8|o[i+6|0]<<16|o[i+7|0]<<24)):(_=725511199,g=-1694144372,I=-1377402159,i=1359893119),E?(c=327033209^(o[E+8|0]|o[E+9|0]<<8|o[E+10|0]<<16|o[E+11|0]<<24),B=1541459225^(o[E+12|0]|o[E+13|0]<<8|o[E+14|0]<<16|o[E+15|0]<<24),a=-79577749^(o[0|E]|o[E+1|0]<<8|o[E+2|0]<<16|o[E+3|0]<<24),E=528734635^(o[E+4|0]|o[E+5|0]<<8|o[E+6|0]<<16|o[E+7|0]<<24)):(c=327033209,B=1541459225,a=-79577749,E=528734635),bg(A- -64|0,0,293),C[A+56|0]=c,C[A+57|0]=c>>>8,C[A+58|0]=c>>>16,C[A+59|0]=c>>>24,C[A+60|0]=B,C[A+61|0]=B>>>8,C[A+62|0]=B>>>16,C[A+63|0]=B>>>24,C[A+48|0]=a,C[A+49|0]=a>>>8,C[A+50|0]=a>>>16,C[A+51|0]=a>>>24,C[A+52|0]=E,C[A+53|0]=E>>>8,C[A+54|0]=E>>>16,C[A+55|0]=E>>>24,C[A+40|0]=_,C[A+41|0]=_>>>8,C[A+42|0]=_>>>16,C[A+43|0]=_>>>24,C[A+44|0]=g,C[A+45|0]=g>>>8,C[A+46|0]=g>>>16,C[A+47|0]=g>>>24,C[A+32|0]=I,C[A+33|0]=I>>>8,C[A+34|0]=I>>>16,C[A+35|0]=I>>>24,C[A+36|0]=i,C[A+37|0]=i>>>8,C[A+38|0]=i>>>16,C[A+39|0]=i>>>24,C[A+24|0]=241,C[A+25|0]=54,C[A+26|0]=29,C[A+27|0]=95,C[A+28|0]=58,C[A+29|0]=245,C[A+30|0]=79,C[A+31|0]=165,C[A+16|0]=43,C[A+17|0]=248,C[A+18|0]=148,C[A+19|0]=254,C[A+20|0]=114,C[A+21|0]=243,C[A+22|0]=110,C[A+23|0]=60,C[A+8|0]=59,C[A+9|0]=167,C[A+10|0]=202,C[A+11|0]=132,C[A+12|0]=133,C[A+13|0]=174,C[A+14|0]=103,C[A+15|0]=187,I=-222443256^t,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,C[A+4|0]=103,C[A+5|0]=230,C[A+6|0]=9,C[A+7|0]=106;break A}rC(),Q()}s=e=s-128|0,!I|((y=255&B)-65&255)>>>0<=191|((t=255&g)-65&255)>>>0<=191?(rC(),Q()):(i?(_=725511199^(o[i+8|0]|o[i+9|0]<<8|o[i+10|0]<<16|o[i+11|0]<<24),g=-1694144372^(o[i+12|0]|o[i+13|0]<<8|o[i+14|0]<<16|o[i+15|0]<<24),a=-1377402159^(o[0|i]|o[i+1|0]<<8|o[i+2|0]<<16|o[i+3|0]<<24),i=1359893119^(o[i+4|0]|o[i+5|0]<<8|o[i+6|0]<<16|o[i+7|0]<<24)):(_=725511199,g=-1694144372,a=-1377402159,i=1359893119),E?(c=327033209^(o[E+8|0]|o[E+9|0]<<8|o[E+10|0]<<16|o[E+11|0]<<24),B=1541459225^(o[E+12|0]|o[E+13|0]<<8|o[E+14|0]<<16|o[E+15|0]<<24),r=-79577749^(o[0|E]|o[E+1|0]<<8|o[E+2|0]<<16|o[E+3|0]<<24),E=528734635^(o[E+4|0]|o[E+5|0]<<8|o[E+6|0]<<16|o[E+7|0]<<24)):(c=327033209,B=1541459225,r=-79577749,E=528734635),bg(A- -64|0,0,293),C[A+56|0]=c,C[A+57|0]=c>>>8,C[A+58|0]=c>>>16,C[A+59|0]=c>>>24,C[A+60|0]=B,C[A+61|0]=B>>>8,C[A+62|0]=B>>>16,C[A+63|0]=B>>>24,C[A+48|0]=r,C[A+49|0]=r>>>8,C[A+50|0]=r>>>16,C[A+51|0]=r>>>24,C[A+52|0]=E,C[A+53|0]=E>>>8,C[A+54|0]=E>>>16,C[A+55|0]=E>>>24,C[A+40|0]=_,C[A+41|0]=_>>>8,C[A+42|0]=_>>>16,C[A+43|0]=_>>>24,C[A+44|0]=g,C[A+45|0]=g>>>8,C[A+46|0]=g>>>16,C[A+47|0]=g>>>24,C[A+32|0]=a,C[A+33|0]=a>>>8,C[A+34|0]=a>>>16,C[A+35|0]=a>>>24,C[A+36|0]=i,C[A+37|0]=i>>>8,C[A+38|0]=i>>>16,C[A+39|0]=i>>>24,C[A+24|0]=241,C[A+25|0]=54,C[A+26|0]=29,C[A+27|0]=95,C[A+28|0]=58,C[A+29|0]=245,C[A+30|0]=79,C[A+31|0]=165,C[A+16|0]=43,C[A+17|0]=248,C[A+18|0]=148,C[A+19|0]=254,C[A+20|0]=114,C[A+21|0]=243,C[A+22|0]=110,C[A+23|0]=60,C[A+8|0]=59,C[A+9|0]=167,C[A+10|0]=202,C[A+11|0]=132,C[A+12|0]=133,C[A+13|0]=174,C[A+14|0]=103,C[A+15|0]=187,g=-222443256^(t<<8|y),C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,g=t>>>24^1779033703,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=Ng(bg(e,0,128),I,t),Ng(A+96|0,g,128),I=128+(o[A+352|0]|o[A+353|0]<<8|o[A+354|0]<<16|o[A+355|0]<<24)|0,C[A+352|0]=I,C[A+353|0]=I>>>8,C[A+354|0]=I>>>16,C[A+355|0]=I>>>24,XC(g,128),s=g+128|0)}a=0}return 0|a},yc:lC,zc:Hg,Ac:gB,Bc:CC,Cc:function(){return 1531},Dc:BB,Ec:function(){return 104},Fc:$I,Gc:function(A,I,g,C){return 0|UA(A|=0,I|=0,g|=0,C|=0)},Hc:JA,Ic:function(A,I,g,C){A|=0,I|=0,g|=0,C|=0;var B,Q=0;return s=B=s-112|0,Q=i[8811],i[B+16>>2]=i[8810],i[B+20>>2]=Q,Q=i[8813],i[B+24>>2]=i[8812],i[B+28>>2]=Q,Q=i[8815],i[B+32>>2]=i[8814],i[B+36>>2]=Q,i[B+40>>2]=0,i[B+44>>2]=0,Q=i[8809],i[B+8>>2]=i[8808],i[B+12>>2]=Q,UA(Q=B+8|0,I,g,C),JA(Q,A),s=B+112|0,0},Jc:gB,Kc:IB,Lc:SI,Mc:QC,Nc:j,Oc:CC,Pc:CB,Qc:gB,Rc:eB,Sc:BB,Tc:YI,Uc:WC,Vc:CB,Wc:gB,Xc:eB,Yc:BB,Zc:YI,_c:PC,$c:function(A,I,g){return 0|mA(A|=0,I|=0,g|=0)},ad:function(A,I,g){return 0|mC(A|=0,I|=0,g|=0,0)},bd:function(A,I){return Sg(A|=0,I|=0),XC(A,4),0},cd:function(A,I,g,C,B){var Q;return A|=0,C|=0,B|=0,s=Q=s-208|0,mA(Q,I|=0,g|=0),mC(Q,C,B,0),Sg(Q,A),XC(Q,4),s=Q+208|0,0},dd:PC,ed:function(A,I,g,B,Q){A|=0,I|=0,g|=0,B|=0,Q|=0;var E,a=0,_=0,c=0,t=0;if(s=E=s-256|0,C[E+15|0]=1,I>>>0<=8160){if(I>>>0>=32)for(t=A-32|0,a=32;c=a,mA(a=E+48|0,Q,32),_&&mC(a,_+t|0,32,0),mC(a=E+48|0,g,B,0),mC(a,E+15|0,1,0),Sg(a,A+_|0),C[E+15|0]=o[E+15|0]+1,(a=(_=c)+32|0)>>>0<=I>>>0;);(_=31&I)&&(mA(I=E+48|0,Q,32),c&&mC(I,(A+c|0)-32|0,32,0),mC(I=E+48|0,g,B,0),mC(I,E+15|0,1,0),Sg(g=I,I=E+16|0),Ng(A+c|0,I,_),XC(I,32)),XC(E+48|0,208),A=0}else i[9404]=28,A=-1;return s=E+256|0,0|A},fd:BB,gd:hB,hd:function(){return 8160},id:IB,jd:yC,kd:function(A,I,g){return 0|dC(A|=0,I|=0,g|=0,0)},ld:function(A,I){return wg(A|=0,I|=0),XC(A,4),0},md:function(A,I,g,C,B){var Q;return A|=0,C|=0,B|=0,s=Q=s-416|0,iI(Q,I|=0,g|=0),dC(Q,C,B,0),wg(Q,A),XC(Q,4),s=Q+416|0,0},nd:function(A){ag(A|=0,64)},od:function(A,I,g,B,Q){A|=0,I|=0,g|=0,B|=0,Q|=0;var E,a=0,_=0,c=0,t=0;if(s=E=s-496|0,C[E+15|0]=1,I>>>0<=16320){if(I>>>0>=64)for(t=A+-64|0,a=64;c=a,iI(a=E+80|0,Q,64),_&&dC(a,_+t|0,64,0),dC(a=E+80|0,g,B,0),dC(a,E+15|0,1,0),wg(a,A+_|0),C[E+15|0]=o[E+15|0]+1,(a=(_=c)- -64|0)>>>0<=I>>>0;);(_=63&I)&&(iI(I=E+80|0,Q,64),c&&dC(I,(A+c|0)-64|0,64,0),dC(I=E+80|0,g,B,0),dC(I,E+15|0,1,0),wg(g=I,I=E+16|0),Ng(A+c|0,I,_),XC(I,64)),XC(E+80|0,416),A=0}else i[9404]=28,A=-1;return s=E+496|0,0|A},pd:gB,qd:hB,rd:function(){return 16320},sd:$C,td:function(A,I,g){return A|=0,kC(I|=0,32,g|=0,32,0,0,0),0|KC(A,I)},ud:function(A,I){return A|=0,ag(I|=0,32),0|KC(A,I)},vd:function(A,I,g,B,i){I|=0,g|=0,B|=0,i|=0;var E,a,_=0,c=0,t=0;if(a=_=s,s=_=_-512&-64,E=(A|=0)||I){if(t=-1,!tC(c=_+96|0,B,i)){for(B=I||A,A=0,iC(I=_+128|0,0,0,64),lC(I,c,32,0),XC(c,32),lC(I,g,32,0),lC(I,i,32,0),eC(I,_+32|0,64),XC(I,384);g=(I=_+32|0)+A|0,C[A+E|0]=o[0|g],C[A+B|0]=o[g+32|0],C[(g=1|A)+E|0]=o[I+g|0],C[g+B|0]=o[I+(33|A)|0],32!=(0|(A=A+2|0)););XC(I,64),t=0}return s=a,0|t}rC(),Q()},wd:function(A,I,g,B,i){I|=0,g|=0,B|=0,i|=0;var E,a,_=0,c=0,t=0;if(a=_=s,s=_=_-512&-64,E=(A|=0)||I){if(t=-1,!tC(c=_+96|0,B,i)){for(B=I||A,A=0,iC(I=_+128|0,0,0,64),lC(I,c,32,0),XC(c,32),lC(I,i,32,0),lC(I,g,32,0),eC(I,_+32|0,64),XC(I,384);g=(I=_+32|0)+A|0,C[A+B|0]=o[0|g],C[A+E|0]=o[g+32|0],C[(g=1|A)+B|0]=o[I+g|0],C[g+E|0]=o[I+(33|A)|0],32!=(0|(A=A+2|0)););XC(I,64),t=0}return s=a,0|t}rC(),Q()},xd:BB,yd:BB,zd:BB,Ad:BB,Bd:function(){return 1332},Cd:TC,Dd:CB,Ed:BB,Fd:Vg,Gd:Zg,Hd:function(A,I){return 0|wC(A|=0,I|=0)},Id:BC,Jd:function(A,I){return 0|nC(A|=0,I|=0)},Kd:function(){return 1494},Ld:PC,Md:Vg,Nd:Zg,Od:wC,Pd:BC,Qd:nC,Rd:CB,Sd:BB,Td:TC,Ud:PC,Vd:yB,Wd:CB,Xd:cB,Yd:hB,Zd:cB,_d:CB,$d:AB,ae:function(){return 1554},be:rB,ce:cB,de:VC,ee:xC,fe:sB,ge:LC,he:function(){return 6},ie:function(){return 134217728},je:eB,ke:function(){return 536870912},le:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|rI(A|=0,(A=0)|(I|=0),g|=0,C|=0,A|(B|=0),Q|=0,i|=0,A|(o|=0),E|=0,a|=0,_|=0)},me:function(A,I,g,C,B,Q,i){return 0|OI(A|=0,I|=0,(A=0)|(g|=0),C|=0,A|(B|=0),Q|=0,i|=0)},ne:function(A,I,g,C){return 0|bC(A|=0,I|=0,g|=0,C|=0)},oe:function(A,I,g,C){return 0|HC(A|=0,I|=0,g|=0,C|=0)},pe:function(A,I,g,C){return 0|YC(A|=0,I|=0,g|=0,C|=0)},qe:tB,re:CB,se:cB,te:hB,ue:cB,ve:CB,we:AB,xe:OC,ye:yB,ze:cB,Ae:VC,Be:xC,Ce:tB,De:qC,Ee:rB,Fe:RC,Ge:sB,He:vC,Ie:function(A,I,g,C,B,Q,i,o,E,a,_){return 0|yI(A|=0,(A=0)|(I|=0),g|=0,C|=0,A|(B|=0),Q|=0,i|=0,A|(o|=0),E|=0,a|=0,_|=0)},Je:Fg,Ke:function(A,I,g,C){return 0|JC(A|=0,I|=0,g|=0,C|=0)},Le:yB,Me:tB,Ne:tB,Oe:CB,Pe:cB,Qe:hB,Re:cB,Se:CB,Te:AB,Ue:OC,Ve:yB,We:cB,Xe:VC,Ye:xC,Ze:tB,_e:qC,$e:rB,af:RC,bf:sB,cf:vC,df:function(A,I,g,C,B,Q,o,E,a,_,c){A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,o|=0,E|=0,a|=0,_|=0,I|=0,B|=0,E|=0;A:{switch((c|=0)-1|0){case 0:A=rI(A,I,g,C,B,Q,o,E,a,_,1);break A;case 1:A=yI(A,I,g,C,B,Q,o,E,a,_,2);break A}i[9404]=28,A=-1}return 0|A},ef:Fg,ff:function(A,I,g,C,B,i,o,E){A|=0,I|=0,g|=0,C|=0,B|=0,i|=0,o|=0,g|=0,B|=0;A:{switch((E|=0)-1|0){case 1:A=TI(A,I,g,C,B,i,o);break A;default:rC(),Q();case 0:}A=OI(A,I,g,C,B,i,o)}return 0|A},gf:function(A,I,g,C){return I|=0,g|=0,C|=0,gg(A|=0,1564,10)?gg(A,1554,9)?(i[9404]=28,A=-1):A=bC(A,I,g,C):A=JC(A,I,g,C),0|A},hf:function(A,I,g,C){return I|=0,g|=0,C|=0,gg(A|=0,1564,10)?gg(A,1554,9)?(i[9404]=28,A=-1):A=HC(A,I,g,C):A=YC(A,I,g,C),0|A},jf:function(){return 1156},kf:function(){return 1443},lf:KC,mf:tC,nf:BB,of:BB,pf:CI,qf:pC,rf:BB,sf:BB,tf:BB,uf:_B,vf:BB,wf:CB,xf:CB,yf:EB,zf:function(){return 1486},Af:Pg,Bf:qg,Cf:PC,Df:Yg,Ef:function(A,I,g,C,B,i){return A|=0,I|=0,B|=0,i|=0,!(C|=0)&(g|=0)>>>0>=4294967280|C&&(rC(),Q()),aI(A+16|0,A,I,g,C,B,i),0},Ff:Jg,Gf:hg,Hf:Pg,If:qg,Jf:BB,Kf:_B,Lf:BB,Mf:CB,Nf:CB,Of:EB,Pf:PC,Qf:PC,Rf:function(A,I,g){return A|=0,g|=0,ag(I|=0,24),yA(A,I,g,0),C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0,g=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,I=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,C[A+44|0]=0,C[A+45|0]=0,C[A+46|0]=0,C[A+47|0]=0,C[A+48|0]=0,C[A+49|0]=0,C[A+50|0]=0,C[A+51|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,0},Sf:function(A,I,g){return yA(A|=0,I|=0,g|=0,0),C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0,g=o[I+16|0]|o[I+17|0]<<8|o[I+18|0]<<16|o[I+19|0]<<24,I=o[I+20|0]|o[I+21|0]<<8|o[I+22|0]<<16|o[I+23|0]<<24,C[A+44|0]=0,C[A+45|0]=0,C[A+46|0]=0,C[A+47|0]=0,C[A+48|0]=0,C[A+49|0]=0,C[A+50|0]=0,C[A+51|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,0},Tf:function(A){var I,g=0,B=0;s=I=s-48|0,g=o[28+(A|=0)|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,i[I+24>>2]=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,i[I+28>>2]=g,g=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,i[I+16>>2]=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,i[I+20>>2]=g,g=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,i[I>>2]=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,i[I+4>>2]=g,g=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,i[I+8>>2]=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,i[I+12>>2]=g,g=o[A+40|0]|o[A+41|0]<<8|o[A+42|0]<<16|o[A+43|0]<<24,i[I+32>>2]=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24,i[I+36>>2]=g,xg(I,I,40,0,A+32|0,A),g=i[I+28>>2],B=i[I+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[I+20>>2],B=i[I+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,g=i[I+12>>2],B=i[I+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[I+4>>2],B=i[I>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,B=i[I+36>>2],g=i[I+32>>2],C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=B,C[A+41|0]=B>>>8,C[A+42|0]=B>>>16,C[A+43|0]=B>>>24,s=I+48|0},Uf:function(A,I,g,B,E,a,_,c,t,r){A|=0,I|=0,B|=0,a|=0,_|=0,t|=0,r|=0;var e,y=0,h=0,D=0;return y=E|=0,y|=E=0,e=E|(c|=0),s=E=s-384|0,(g|=0)&&(i[g>>2]=0,i[g+4>>2]=0),!a&y>>>0<4294967279?(jg(h=E+16|0,64,0,D=A+32|0,A),wC(c=E+80|0,h),XC(h,64),SC(c,_,e,t),SC(c,35216,0-e&15,0),i[E+72>>2]=0,i[E+76>>2]=0,i[(_=E- -64|0)>>2]=0,i[_+4>>2]=0,i[E+56>>2]=0,i[E+60>>2]=0,i[E+48>>2]=0,i[E+52>>2]=0,i[E+40>>2]=0,i[E+44>>2]=0,i[E+32>>2]=0,i[E+36>>2]=0,i[E+16>>2]=0,i[E+20>>2]=0,i[E+24>>2]=0,i[E+28>>2]=0,C[E+16|0]=r,Cg(h,h,64,0,D,1,A),SC(c,h,64,0),C[0|I]=o[E+16|0],Cg(I=I+1|0,B,y,a,D,2,A),SC(c,I,y,a),SC(c,35216,15&y,0),i[E+8>>2]=e,i[E+12>>2]=t,SC(c,B=E+8|0,8,0),i[E+8>>2]=y- -64,i[E+12>>2]=a-((y>>>0<4294967232)-1|0),SC(c,B,8,0),nC(c,I=I+y|0),XC(c,256),C[A+36|0]=o[A+36|0]^o[0|I],C[A+37|0]=o[A+37|0]^o[I+1|0],C[A+38|0]=o[A+38|0]^o[I+2|0],C[A+39|0]=o[A+39|0]^o[I+3|0],C[A+40|0]=o[A+40|0]^o[I+4|0],C[A+41|0]=o[A+41|0]^o[I+5|0],C[A+42|0]=o[A+42|0]^o[I+6|0],C[A+43|0]=o[A+43|0]^o[I+7|0],XI(D),(2&r||GI(D,4))&&(I=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,i[E+360>>2]=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,i[E+364>>2]=I,I=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,i[E+352>>2]=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,i[E+356>>2]=I,I=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,i[E+336>>2]=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,i[E+340>>2]=I,I=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,i[E+344>>2]=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,i[E+348>>2]=I,I=o[A+40|0]|o[A+41|0]<<8|o[A+42|0]<<16|o[A+43|0]<<24,i[E+368>>2]=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24,i[E+372>>2]=I,xg(I=E+336|0,I,40,0,D,A),I=i[E+364>>2],B=i[E+360>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[E+356>>2],B=i[E+352>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[E+348>>2],B=i[E+344>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[E+340>>2],B=i[E+336>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=i[E+368>>2],B=i[E+372>>2],C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0,C[A+36|0]=I,C[A+37|0]=I>>>8,C[A+38|0]=I>>>16,C[A+39|0]=I>>>24,C[A+40|0]=B,C[A+41|0]=B>>>8,C[A+42|0]=B>>>16,C[A+43|0]=B>>>24),g&&(a=(A=y+17|0)>>>0<17?a+1|0:a,i[g>>2]=A,i[g+4>>2]=a),s=E+384|0):(rC(),Q()),0},Vf:function(A,I,g,B,E,a,_,c,t,r){A|=0,I|=0,B|=0,E|=0,c|=0,r|=0;var e,y=0,h=0,D=0,f=0,p=0,w=0;y=a|=0,a=_|=0,h=0|y,e=t|=0,s=_=s-400|0,(g|=0)&&(i[g>>2]=0,i[g+4>>2]=0),B&&(C[0|B]=255),w=-1;A:{I:{if(!((t=h>>>0<17)&!a)){if(p=y=a-t|0,!y&(t=h-17|0)>>>0>=4294967279|y)break I;jg(D=_+32|0,64,0,f=A+32|0,A),wC(y=_+96|0,D),XC(D,64),SC(y,c,e,r),SC(y,35216,0-e&15,0),i[_+88>>2]=0,i[_+92>>2]=0,i[_+80>>2]=0,i[_+84>>2]=0,i[_+72>>2]=0,i[_+76>>2]=0,i[(c=_- -64|0)>>2]=0,i[c+4>>2]=0,i[_+56>>2]=0,i[_+60>>2]=0,i[_+48>>2]=0,i[_+52>>2]=0,i[_+40>>2]=0,i[_+44>>2]=0,i[_+32>>2]=0,i[_+36>>2]=0,C[_+32|0]=o[0|E],Cg(D,D,64,0,f,1,A),c=o[_+32|0],C[_+32|0]=o[0|E],SC(y,D,64,0),SC(y,E=E+1|0,t,p),SC(y,35216,h-1&15,0),i[_+24>>2]=e,i[_+28>>2]=r,SC(y,r=_+24|0,8,0),a=(h=h+47|0)>>>0<47?a+1|0:a,i[_+24>>2]=h,i[_+28>>2]=a,SC(y,r,8,0),nC(y,_),XC(y,256),MI(_,E+t|0,16)?XC(_,16):(Cg(I,E,t,p,f,2,A),C[A+36|0]=o[A+36|0]^o[0|_],C[A+37|0]=o[A+37|0]^o[_+1|0],C[A+38|0]=o[A+38|0]^o[_+2|0],C[A+39|0]=o[A+39|0]^o[_+3|0],C[A+40|0]=o[A+40|0]^o[_+4|0],C[A+41|0]=o[A+41|0]^o[_+5|0],C[A+42|0]=o[A+42|0]^o[_+6|0],C[A+43|0]=o[A+43|0]^o[_+7|0],XI(f),(2&c||GI(f,4))&&(I=o[A+28|0]|o[A+29|0]<<8|o[A+30|0]<<16|o[A+31|0]<<24,i[_+376>>2]=o[A+24|0]|o[A+25|0]<<8|o[A+26|0]<<16|o[A+27|0]<<24,i[_+380>>2]=I,I=o[A+20|0]|o[A+21|0]<<8|o[A+22|0]<<16|o[A+23|0]<<24,i[_+368>>2]=o[A+16|0]|o[A+17|0]<<8|o[A+18|0]<<16|o[A+19|0]<<24,i[_+372>>2]=I,I=o[A+4|0]|o[A+5|0]<<8|o[A+6|0]<<16|o[A+7|0]<<24,i[_+352>>2]=o[0|A]|o[A+1|0]<<8|o[A+2|0]<<16|o[A+3|0]<<24,i[_+356>>2]=I,I=o[A+12|0]|o[A+13|0]<<8|o[A+14|0]<<16|o[A+15|0]<<24,i[_+360>>2]=o[A+8|0]|o[A+9|0]<<8|o[A+10|0]<<16|o[A+11|0]<<24,i[_+364>>2]=I,I=o[A+40|0]|o[A+41|0]<<8|o[A+42|0]<<16|o[A+43|0]<<24,i[_+384>>2]=o[A+36|0]|o[A+37|0]<<8|o[A+38|0]<<16|o[A+39|0]<<24,i[_+388>>2]=I,xg(I=_+352|0,I,40,0,f,A),I=i[_+380>>2],E=i[_+376>>2],C[A+24|0]=E,C[A+25|0]=E>>>8,C[A+26|0]=E>>>16,C[A+27|0]=E>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[_+372>>2],E=i[_+368>>2],C[A+16|0]=E,C[A+17|0]=E>>>8,C[A+18|0]=E>>>16,C[A+19|0]=E>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[_+364>>2],E=i[_+360>>2],C[A+8|0]=E,C[A+9|0]=E>>>8,C[A+10|0]=E>>>16,C[A+11|0]=E>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[_+356>>2],E=i[_+352>>2],C[0|A]=E,C[A+1|0]=E>>>8,C[A+2|0]=E>>>16,C[A+3|0]=E>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=i[_+384>>2],E=i[_+388>>2],C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0,C[A+36|0]=I,C[A+37|0]=I>>>8,C[A+38|0]=I>>>16,C[A+39|0]=I>>>24,C[A+40|0]=E,C[A+41|0]=E>>>8,C[A+42|0]=E>>>16,C[A+43|0]=E>>>24),g&&(i[g>>2]=t,i[g+4>>2]=p),w=0,B&&(C[0|B]=c))}s=_+400|0;break A}rC(),Q()}return 0|w},Wf:function(){return 52},Xf:function(){return 17},Yf:_B,Zf:BB,_f:function(){return-18},$f:hB,ag:yB,bg:tB,cg:rB,dg:eB,eg:CB,fg:function(){return 1521},gg:T,hg:zC,ig:eB,jg:CB,kg:T,lg:IB,mg:gB,ng:BB,og:BB,pg:gB,qg:QB,rg:function(){return 1454},sg:function(A,I,g){return 0|FA(A|=0,I|=0,g|=0)},tg:function(A,I){return 0|YA(A|=0,I|=0)},ug:LI,vg:bI,wg:vg,xg:Wg,yg:function(A){return 0|uC(A|=0)},zg:QC,Ag:function(A,I,g,C){return 0|ng(A|=0,I|=0,g|=0,C|=0)},Bg:function(A,I,g){return 0|Kg(A|=0,I|=0,g|=0)},Cg:IB,Dg:gB,Eg:BB,Fg:BB,Gg:gB,Hg:QB,Ig:function(A,I){A|=0;var g,B,Q,i,E,a,_=0;return g=o[8+(_=I|=0)|0]|o[_+9|0]<<8|o[_+10|0]<<16|o[_+11|0]<<24,B=o[_+12|0]|o[_+13|0]<<8|o[_+14|0]<<16|o[_+15|0]<<24,Q=o[_+16|0]|o[_+17|0]<<8|o[_+18|0]<<16|o[_+19|0]<<24,i=o[_+20|0]|o[_+21|0]<<8|o[_+22|0]<<16|o[_+23|0]<<24,E=o[0|_]|o[_+1|0]<<8|o[_+2|0]<<16|o[_+3|0]<<24,I=o[_+4|0]|o[_+5|0]<<8|o[_+6|0]<<16|o[_+7|0]<<24,a=o[_+28|0]|o[_+29|0]<<8|o[_+30|0]<<16|o[_+31|0]<<24,_=o[_+24|0]|o[_+25|0]<<8|o[_+26|0]<<16|o[_+27|0]<<24,C[A+24|0]=_,C[A+25|0]=_>>>8,C[A+26|0]=_>>>16,C[A+27|0]=_>>>24,C[A+28|0]=a,C[A+29|0]=a>>>8,C[A+30|0]=a>>>16,C[A+31|0]=a>>>24,C[A+16|0]=Q,C[A+17|0]=Q>>>8,C[A+18|0]=Q>>>16,C[A+19|0]=Q>>>24,C[A+20|0]=i,C[A+21|0]=i>>>8,C[A+22|0]=i>>>16,C[A+23|0]=i>>>24,C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=B,C[A+13|0]=B>>>8,C[A+14|0]=B>>>16,C[A+15|0]=B>>>24,C[0|A]=E,C[A+1|0]=E>>>8,C[A+2|0]=E>>>16,C[A+3|0]=E>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,0},Jg:function(A,I){A|=0;var g,B,Q,i,E,a,_=0;return g=o[32+(_=I|=0)|0]|o[_+33|0]<<8|o[_+34|0]<<16|o[_+35|0]<<24,B=o[_+36|0]|o[_+37|0]<<8|o[_+38|0]<<16|o[_+39|0]<<24,Q=o[_+40|0]|o[_+41|0]<<8|o[_+42|0]<<16|o[_+43|0]<<24,i=o[_+44|0]|o[_+45|0]<<8|o[_+46|0]<<16|o[_+47|0]<<24,E=o[_+48|0]|o[_+49|0]<<8|o[_+50|0]<<16|o[_+51|0]<<24,I=o[_+52|0]|o[_+53|0]<<8|o[_+54|0]<<16|o[_+55|0]<<24,a=o[_+60|0]|o[_+61|0]<<8|o[_+62|0]<<16|o[_+63|0]<<24,_=o[_+56|0]|o[_+57|0]<<8|o[_+58|0]<<16|o[_+59|0]<<24,C[A+24|0]=_,C[A+25|0]=_>>>8,C[A+26|0]=_>>>16,C[A+27|0]=_>>>24,C[A+28|0]=a,C[A+29|0]=a>>>8,C[A+30|0]=a>>>16,C[A+31|0]=a>>>24,C[A+16|0]=E,C[A+17|0]=E>>>8,C[A+18|0]=E>>>16,C[A+19|0]=E>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,C[A+8|0]=Q,C[A+9|0]=Q>>>8,C[A+10|0]=Q>>>16,C[A+11|0]=Q>>>24,C[A+12|0]=i,C[A+13|0]=i>>>8,C[A+14|0]=i>>>16,C[A+15|0]=i>>>24,C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=B,C[A+5|0]=B>>>8,C[A+6|0]=B>>>16,C[A+7|0]=B>>>24,0},Kg:uC,Lg:QC,Mg:ng,Ng:Kg,Og:FA,Pg:YA,Qg:function(A,I){A|=0;var g,C=0,B=0,Q=0,o=0,E=0,_=0,c=0,t=0,r=0,e=0,y=0,h=0,D=0,p=0,w=0,n=0,k=0,F=0,S=0,N=0,G=0,M=0,K=0,U=0,b=0,H=0,Y=0,J=0,d=0,m=0,l=0,u=0,x=0,v=0,R=0,L=0,P=0,q=0,z=0,j=0,X=0,O=0,W=0,V=0,Z=0,T=0,$=0,AA=0,IA=0,CA=0,BA=0,QA=0,iA=0,oA=0,EA=0,aA=0,_A=0,cA=0,tA=0,rA=0,eA=0,yA=0,sA=0,hA=0,DA=0,fA=0,pA=0,wA=0,nA=0,kA=0,FA=0,SA=0,NA=0,GA=0,MA=0,KA=0,UA=0,bA=0,HA=0,YA=0;return s=g=s-256|0,SA=-1,KI(I|=0)||qA(C=g+96|0,I)||gA(C)&&(SA=0,u=i[g+172>>2],i[g+36>>2]=0-u,n=i[g+168>>2],i[g+32>>2]=0-n,x=i[g+164>>2],i[g+28>>2]=0-x,k=i[g+160>>2],i[g+24>>2]=0-k,v=i[g+156>>2],i[g+20>>2]=0-v,F=i[g+152>>2],i[g+16>>2]=0-F,R=i[g+148>>2],i[g+12>>2]=0-R,S=i[g+144>>2],i[g+8>>2]=0-S,L=i[g+140>>2],i[g+4>>2]=0-L,Q=i[g+136>>2],i[g>>2]=1-Q,LA(g,g),I=Ig(N=i[g+4>>2],d=N>>31,G=v<<1,IA=G>>31),C=f,B=Ig(p=i[g>>2],M=p>>31,k,K=k>>31),C=f+C|0,C=(I=B+I|0)>>>0<B>>>0?C+1|0:C,B=(o=Ig(U=i[g+8>>2],P=U>>31,F,b=F>>31))+I|0,I=f+C|0,I=B>>>0<o>>>0?I+1|0:I,C=B,B=Ig(m=i[g+12>>2],j=m>>31,W=R<<1,CA=W>>31),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,B=Ig(q=i[g+16>>2],V=q>>31,S,H=S>>31),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,fA=o=i[g+20>>2],h=Ig(o,BA=o>>31,Z=L<<1,QA=Z>>31),B=f+I|0,B=(C=h+C|0)>>>0<h>>>0?B+1|0:B,pA=r=i[g+24>>2],I=(Q=Ig(r,sA=r>>31,h=Q+1|0,Y=h>>31))+C|0,C=f+B|0,C=I>>>0<Q>>>0?C+1|0:C,iA=i[g+28>>2],B=(Q=Ig(w=a(iA,19),X=w>>31,T=u<<1,oA=T>>31))+I|0,I=f+C|0,I=B>>>0<Q>>>0?I+1|0:I,C=B,NA=i[g+32>>2],B=Ig(_=a(NA,19),z=_>>31,n,J=n>>31),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,GA=i[g+36>>2],B=Ig(y=a(GA,19),l=y>>31,$=x<<1,EA=$>>31),I=f+I|0,c=C=B+C|0,Q=C>>>0<B>>>0?I+1|0:I,I=Ig(F,b,N,d),C=f,E=Ig(p,M,v,aA=v>>31),B=f+C|0,B=(I=E+I|0)>>>0<E>>>0?B+1|0:B,E=Ig(U,P,R,_A=R>>31),C=f+B|0,C=(I=E+I|0)>>>0<E>>>0?C+1|0:C,B=(E=Ig(S,H,m,j))+I|0,I=f+C|0,I=B>>>0<E>>>0?I+1|0:I,C=B,B=Ig(q,V,L,cA=L>>31),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,B=Ig(h,Y,o,BA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,E=Ig(r=a(r,19),AA=r>>31,u,tA=u>>31),B=f+I|0,B=(C=E+C|0)>>>0<E>>>0?B+1|0:B,I=(E=Ig(n,J,w,X))+C|0,C=f+B|0,C=I>>>0<E>>>0?C+1|0:C,B=(E=Ig(_,z,x,rA=x>>31))+I|0,I=f+C|0,I=B>>>0<E>>>0?I+1|0:I,C=B,B=Ig(y,l,k,K),I=f+I|0,wA=C=C+B|0,O=C>>>0<B>>>0?I+1|0:I,I=Ig(N,d,W,CA),B=f,C=(E=Ig(p,M,F,b))+I|0,I=f+B|0,I=C>>>0<E>>>0?I+1|0:I,E=Ig(S,H,U,P),B=f+I|0,B=(C=E+C|0)>>>0<E>>>0?B+1|0:B,I=(E=Ig(m,j,Z,QA))+C|0,C=f+B|0,C=I>>>0<E>>>0?C+1|0:C,B=(E=Ig(h,Y,q,V))+I|0,I=f+C|0,I=B>>>0<E>>>0?I+1|0:I,C=B,B=Ig(E=a(o,19),eA=E>>31,T,oA),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,B=Ig(n,J,r,AA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,o=Ig(w,X,$,EA),B=f+I|0,B=(C=o+C|0)>>>0<o>>>0?B+1|0:B,I=(o=Ig(_,z,k,K))+C|0,C=f+B|0,C=I>>>0<o>>>0?C+1|0:C,B=(o=Ig(y,l,G,IA))+I|0,I=f+C|0,MA=B,KA=I=B>>>0<o>>>0?I+1|0:I,UA=B=B+33554432|0,bA=I=B>>>0<33554432?I+1|0:I,B=(67108863&I)<<6|B>>>26,I=(I>>26)+O|0,wA=o=B+wA|0,I=B>>>0>o>>>0?I+1|0:I,HA=o=o+16777216|0,I=(C=(B=o>>>0<16777216?I+1|0:I)>>25)+Q|0,I=(B=(o=(33554431&B)<<7|o>>>25)+c|0)>>>0<o>>>0?I+1|0:I,D=C=B+33554432|0,o=I=C>>>0<33554432?I+1|0:I,i[g+72>>2]=B-(-67108864&C),I=Ig(N,d,Z,QA),C=f,Q=Ig(p,M,S,H),B=f+C|0,B=(I=Q+I|0)>>>0<Q>>>0?B+1|0:B,C=(Q=Ig(h,Y,U,P))+I|0,I=f+B|0,I=C>>>0<Q>>>0?I+1|0:I,B=Ig(Q=a(m,19),yA=Q>>31,T,oA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=(c=Ig(O=a(q,19),hA=O>>31,n,J))+C|0,C=f+I|0,C=B>>>0<c>>>0?C+1|0:C,c=Ig($,EA,E,eA),I=f+C|0,I=(B=c+B|0)>>>0<c>>>0?I+1|0:I,C=(c=Ig(k,K,r,AA))+B|0,B=f+I|0,B=C>>>0<c>>>0?B+1|0:B,c=Ig(w,X,G,IA),I=f+B|0,I=(C=c+C|0)>>>0<c>>>0?I+1|0:I,B=Ig(_,z,F,b),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=(c=Ig(y,l,W,CA))+C|0,C=f+I|0,e=B,nA=B>>>0<c>>>0?C+1|0:C,I=Ig(h,Y,N,d),C=f,B=(c=Ig(p,M,L,cA))+I|0,I=f+C|0,I=B>>>0<c>>>0?I+1|0:I,c=C=a(U,19),C=(t=Ig(C,DA=C>>31,u,tA))+B|0,B=f+I|0,B=C>>>0<t>>>0?B+1|0:B,t=Ig(n,J,Q,yA),I=f+B|0,I=(C=t+C|0)>>>0<t>>>0?I+1|0:I,B=Ig(O,hA,x,rA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=(t=Ig(k,K,E,eA))+C|0,C=f+I|0,C=B>>>0<t>>>0?C+1|0:C,t=Ig(r,AA,v,aA),I=f+C|0,I=(B=t+B|0)>>>0<t>>>0?I+1|0:I,C=(t=Ig(F,b,w,X))+B|0,B=f+I|0,B=C>>>0<t>>>0?B+1|0:B,t=Ig(_,z,R,_A),I=f+B|0,I=(C=t+C|0)>>>0<t>>>0?I+1|0:I,B=Ig(y,l,S,H),I=f+I|0,kA=C=B+C|0,t=C>>>0<B>>>0?I+1|0:I,I=Ig(I=a(N,19),I>>31,T,oA),C=f,B=Ig(p,M,h,Y),C=f+C|0,C=(I=B+I|0)>>>0<B>>>0?C+1|0:C,B=(c=Ig(n,J,c,DA))+I|0,I=f+C|0,C=(Q=Ig(Q,yA,$,EA))+B|0,B=f+(B>>>0<c>>>0?I+1|0:I)|0,B=C>>>0<Q>>>0?B+1|0:B,Q=Ig(k,K,O,hA),I=f+B|0,I=(C=Q+C|0)>>>0<Q>>>0?I+1|0:I,B=Ig(G,IA,E,eA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=(Q=Ig(F,b,r,AA))+C|0,C=f+I|0,C=B>>>0<Q>>>0?C+1|0:C,Q=Ig(w,X,W,CA),I=f+C|0,I=(B=Q+B|0)>>>0<Q>>>0?I+1|0:I,C=(Q=Ig(_,z,S,H))+B|0,B=f+I|0,B=C>>>0<Q>>>0?B+1|0:B,Q=Ig(y,l,Z,QA),I=f+B|0,c=C=Q+C|0,yA=I=C>>>0<Q>>>0?I+1|0:I,DA=C=C+33554432|0,YA=I=C>>>0<33554432?I+1|0:I,B=I>>26,I=(67108863&I)<<6|C>>>26,C=B+t|0,t=Q=I+kA|0,I=C=I>>>0>Q>>>0?C+1|0:C,kA=Q=Q+16777216|0,Q=(33554431&(I=Q>>>0<16777216?I+1|0:I))<<7|Q>>>25,I=(I>>25)+nA|0,I=(C=Q+e|0)>>>0<Q>>>0?I+1|0:I,B=C,nA=C=C+33554432|0,Q=I=C>>>0<33554432?I+1|0:I,i[g+56>>2]=B-(-67108864&C),I=Ig(k,K,N,d),B=f,C=(e=Ig(p,M,x,rA))+I|0,I=f+B|0,I=C>>>0<e>>>0?I+1|0:I,B=Ig(U,P,v,aA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=Ig(F,b,m,j),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,e=Ig(q,V,R,_A),B=f+I|0,B=(C=e+C|0)>>>0<e>>>0?B+1|0:B,I=(e=Ig(S,H,fA,BA))+C|0,C=f+B|0,C=I>>>0<e>>>0?C+1|0:C,B=(e=Ig(L,cA,pA,sA))+I|0,I=f+C|0,I=B>>>0<e>>>0?I+1|0:I,C=B,B=Ig(iA,FA=iA>>31,h,Y),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,B=Ig(_,z,u,tA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,e=(B=C)+(C=Ig(y,l,n,J))|0,B=f+I|0,C=(I=o>>26)+(C=C>>>0>e>>>0?B+1|0:B)|0,D=B=(o=(67108863&o)<<6|D>>>26)+e|0,I=C=B>>>0<o>>>0?C+1|0:C,e=B=B+16777216|0,o=I=B>>>0<16777216?I+1|0:I,i[g+76>>2]=D-(-33554432&B),I=Ig(S,H,N,d),C=f,D=Ig(p,M,R,_A),B=f+C|0,B=(I=D+I|0)>>>0<D>>>0?B+1|0:B,D=Ig(U,P,L,cA),C=f+B|0,C=(I=D+I|0)>>>0<D>>>0?C+1|0:C,B=(D=Ig(h,Y,m,j))+I|0,I=f+C|0,I=B>>>0<D>>>0?I+1|0:I,C=B,B=Ig(O,hA,u,tA),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,B=Ig(n,J,E,eA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,C=(r=Ig(r,AA,x,rA))+C|0,B=f+I|0,I=(w=Ig(k,K,w,X))+C|0,C=f+(C>>>0<r>>>0?B+1|0:B)|0,B=(_=Ig(_,z,v,aA))+I|0,I=f+(I>>>0<w>>>0?C+1|0:C)|0,I=B>>>0<_>>>0?I+1|0:I,C=B,B=Ig(y,l,F,b),I=f+I|0,D=C=C+B|0,I=(I=C>>>0<B>>>0?I+1|0:I)+(C=Q>>26)|0,_=Q=D+(B=(67108863&Q)<<6|nA>>>26)|0,I=B>>>0>Q>>>0?I+1|0:I,w=C=Q+16777216|0,Q=B=C>>>0<16777216?I+1|0:I,i[g+60>>2]=_-(-33554432&C),I=Ig(N,d,$,EA),B=f,C=(_=Ig(p,M,n,J))+I|0,I=f+B|0,I=C>>>0<_>>>0?I+1|0:I,B=Ig(k,K,U,P),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,_=Ig(m,j,G,IA),B=f+I|0,B=(C=_+C|0)>>>0<_>>>0?B+1|0:B,I=(_=Ig(F,b,q,V))+C|0,C=f+B|0,C=I>>>0<_>>>0?C+1|0:C,B=(_=Ig(W,CA,fA,BA))+I|0,I=f+C|0,I=B>>>0<_>>>0?I+1|0:I,C=B,B=Ig(S,H,pA,sA),I=f+I|0,I=(C=C+B|0)>>>0<B>>>0?I+1|0:I,B=C,C=Ig(iA,FA,Z,QA),I=f+I|0,I=C>>>0>(B=B+C|0)>>>0?I+1|0:I,_=C=NA,C=(G=Ig(C,r=C>>31,h,Y))+B|0,B=f+I|0,I=(y=Ig(y,l,T,oA))+C|0,C=f+(C>>>0<G>>>0?B+1|0:B)|0,B=I>>>0<y>>>0?C+1|0:C,C=I,I=(I=o>>25)+B|0,I=(C=C+(o=(33554431&o)<<7|e>>>25)|0)>>>0<o>>>0?I+1|0:I,B=C,y=C=C+33554432|0,o=I=C>>>0<33554432?I+1|0:I,i[g+80>>2]=B-(-67108864&C),C=Q>>25,B=(Q=(33554431&Q)<<7|w>>>25)+(MA-(I=-67108864&UA)|0)|0,I=C+(KA-((I>>>0>MA>>>0)+bA|0)|0)|0,I=B>>>0<Q>>>0?I+1|0:I,I=((67108863&(I=(C=B+33554432|0)>>>0<33554432?I+1|0:I))<<6|C>>>26)+(G=wA-(-33554432&HA)|0)|0,i[g+68>>2]=I,i[g+64>>2]=B-(-67108864&C),I=Ig(n,J,N,d),B=f,C=(Q=Ig(p,M,u,tA))+I|0,I=f+B|0,I=C>>>0<Q>>>0?I+1|0:I,B=(Q=Ig(U,P,x,rA))+C|0,C=f+I|0,C=B>>>0<Q>>>0?C+1|0:C,I=(Q=Ig(k,K,m,j))+B|0,B=f+C|0,B=I>>>0<Q>>>0?B+1|0:B,C=(Q=Ig(q,V,v,aA))+I|0,I=f+B|0,I=C>>>0<Q>>>0?I+1|0:I,B=Ig(F,b,fA,BA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=Ig(R,_A,pA,sA),I=f+I|0,I=(C=B+C|0)>>>0<B>>>0?I+1|0:I,B=(Q=Ig(S,H,iA,FA))+C|0,C=f+I|0,C=B>>>0<Q>>>0?C+1|0:C,Q=(I=Ig(_,r,L,cA))+B|0,B=f+C|0,B=I>>>0>Q>>>0?B+1|0:B,C=Q,Q=Ig(I=GA,I>>31,h,Y),I=f+B|0,B=C=C+Q|0,I=(I=C>>>0<Q>>>0?I+1|0:I)+(C=o>>26)|0,I=(B=B+(o=(67108863&o)<<6|y>>>26)|0)>>>0<o>>>0?I+1|0:I,I=(C=B+16777216|0)>>>0<16777216?I+1|0:I,i[g+84>>2]=B-(-33554432&C),o=t-(-33554432&kA)|0,Q=c-(B=-67108864&DA)|0,p=yA-((B>>>0>c>>>0)+YA|0)|0,I=Ig((33554431&(B=I))<<7|C>>>25,I>>=25,19,0),C=f+p|0,I=I>>>0>(B=I+Q|0)>>>0?C+1|0:C,I=((67108863&(I=(C=B+33554432|0)>>>0<33554432?I+1|0:I))<<6|C>>>26)+o|0,i[g+52>>2]=I,i[g+48>>2]=B-(-67108864&C),QI(A,g+48|0)),s=g+256|0,0|SA},Rg:function(A,I){A|=0;var g,B=0;return s=g=s+-64|0,FI(g,I|=0,32,0),C[0|g]=248&o[0|g],C[g+31|0]=63&o[g+31|0]|64,I=i[g+20>>2],B=i[g+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[g+12>>2],B=i[g+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[g+4>>2],B=i[g>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=i[g+28>>2],B=i[g+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,XC(g,64),s=g- -64|0,0},Sg:Wg,Tg:bI,Ug:vg,Vg:LI,Wg:BB,Xg:eB,Yg:cB,Zg:BB,_g:aB,$g:cB,ah:function(A,I,g,C,B){return 0|Xg(A|=0,I|=0,g|=0,C|=0,B|=0)},bh:function(A,I,g,C,B,Q,i,o){return 0|mg(A|=0,I|=0,(A=0)|(g|=0),C|=0,B|=0,A|(Q|=0),i|=0,o|=0)},ch:function(A,I,g,C,B,Q){return 0|ug(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0)},dh:function(A,I,g,C,B){return 0|jg(A|=0,I|=0,g|=0,C|=0,B|=0)},eh:function(A,I,g,C,B,Q,i){return 0|Cg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)},fh:function(A,I,g,C,B,Q){return 0|xg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0)},gh:PC,hh:PC,ih:BB,jh:_B,kh:cB,lh:function(){return 1538},mh:Tg,nh:zg,oh:PC,ph:BB,qh:eB,rh:cB,sh:function(A,I,g,C,B){return 0|DC(A|=0,I|=0,g|=0,C|=0,B|=0)},th:function(A,I,g,C,B,Q,i,o){return 0|oC(A|=0,I|=0,(A=0)|(g|=0),C|=0,B|=0,A|(Q|=0),i|=0,o|=0)},uh:function(A,I,g,C,B,Q){return 0|aC(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0)},vh:PC,wh:Tg,xh:function(A,I,g,C,B,Q,i,o){var E;return A|=0,I|=0,g|=0,C|=0,Q|=0,i|=0,s=E=s-32|0,wA(E,B|=0,o|=0,0),A=oC(o=A,I,(A=0)|g,C,B+16|0,A|Q,i,E),XC(E,32),s=E+32|0,0|A},yh:zg,zh:BB,Ah:_B,Bh:cB,Ch:PC,Dh:CB,Eh:BB,Fh:gB,Gh:oI,Hh:NC,Ih:GC,Jh:function(){return 1089},Kh:function(){var A,I;return s=A=s-16|0,C[A+15|0]=0,I=0|t(36800,A+15|0,0),s=A+16|0,0|I},Lh:$g,Mh:function(A){var I,g=0,B=0;if(s=I=s-16|0,(A|=0)>>>0>=2){for(g=(0-A>>>0)%(A>>>0)|0;C[I+15|0]=0,g>>>0>(B=0|t(36800,I+15|0,0))>>>0;);g=(B>>>0)%(A>>>0)|0}return s=I+16|0,0|g},Nh:ag,Oh:function(A,I,g){jg(A|=0,I|=0,0,34336,g|=0)},Ph:BB,Qh:function(){var A=0,I=0;return(A=i[9539])&&(A=i[A+20>>2])&&(I=0|pB[0|A]()),0|I},Rh:function(A,I,g){A|=0,I|=0;var B,i=0,o=0,E=0;if(s=B=s-16|0,g|=0)r(1346,1192,198,1092),Q();else{if(I|g)for(;C[B+15|0]=0,o=A+i|0,E=0|t(36800,B+15|0,0),C[0|o]=E,(0|I)!=(0|(i=i+1|0)););s=B+16|0}},Sh:function(A,I,g,B){A|=0,g|=0;var i=0,E=0,a=0;if(!((B|=0)>>>0>2147483646|B<<1>>>0>=(I|=0)>>>0)){if(I=0,B){for(;i=(I<<1)+A|0,E=15&(a=o[I+g|0]),C[i+1|0]=22272+((E<<8)+(E+65526&55552)|0)>>>8,E=i,i=a>>>4|0,C[0|E]=87+((i+65526>>>8&217)+i|0),(0|B)!=(0|(I=I+1|0)););I=B<<1}else I=0;return C[I+A|0]=0,0|A}rC(),Q()},Th:function(A,I,g,B,Q,E,a){A|=0,I|=0,g|=0,Q|=0,E|=0,a|=0;var _=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0;A:{I:{g:{C:{B:{Q:{i:{o:{E:{if(B|=0){if(Q)break E;for(c=1,Q=0;;){if(!(255&((s=(65526+(t=(223&(e=o[g+_|0]))-55&255)^t+65520)>>>8|0)|(h=65526+(e^=48)>>>8|0))))break i;if(I>>>0<=y>>>0)break o;if(t=t&s|e&h,255&r?(C[A+y|0]=Q|t,y=y+1|0):Q=t<<4,r=~r,(0|(_=_+1|0))==(0|B))break}_=B;break i}if(A=0,!a)break A;break g}for(;;){E:{a:{_:{c:{t:{if(!(255&((e=(65526+(c=(223&(t=o[g+_|0]))-55&255)^c+65520)>>>8|0)|(h=65526+(s=48^t)>>>8|0)))){if(255&r)break Q;if(c=0,!kI(Q,t))break C;if((_=r=_+1|0)>>>0<B>>>0)break t;break C}if(I>>>0<=y>>>0)break o;if(c=c&e|s&h,!(255&r))break c;C[A+y|0]=c|D,y=y+1|0;break E}for(;;){if(!(255&((s=(65526+(e=(223&(t=o[g+_|0]))-55&255)^e+65520)>>>8|0)|(D=65526+(h=48^t)>>>8|0)))){if(!kI(Q,t))break C;if((_=_+1|0)>>>0<B>>>0)continue;break _}break}if(I>>>0<=y>>>0)break a;c=e&s|h&D}D=c<<4,r=0;break E}_=B>>>0>r>>>0?B:r;break C}r=0;break o}if(r=~r,c=1,!((_=_+1|0)>>>0<B>>>0))break}break i}i[9404]=68,c=0}if(!(255&r))break B}i[9404]=28,c=-1,_=_-1|0,y=0;break C}y=c?y:0,c=c-1|0}if(!a){if((0|B)!=(0|_))break I;A=c;break A}}i[a>>2]=g+_,A=c;break A}i[9404]=28,A=-1}return E&&(i[E>>2]=y),0|A},Uh:function(A,I){A|=0;var g=0;return 1!=(-7&(I|=0))&&(rC(),Q()),1+((3&(g=(g=A)+a(A=(A>>>0)/3|0,-3)|0)?2&I?g+1|0:4:0)+(A<<2)|0)|0},Vh:XA,Wh:pA,Xh:function(){var A=0;return i[9537]?A=1:($g(),ag(38128,16),i[9537]=1,A=0),0|A},Yh:function(A,I,g,B,E){A|=0,I|=0,g|=0,E|=0;var a,_=0,c=0,t=0;s=a=s-16|0;A:{if(B|=0){if((_=B-1|0)&B?(c=~g,_=_-((g>>>0)%(B>>>0)|0)|0):_&=c=~g,_>>>0>=c>>>0)break A;if((g=g+_|0)>>>0>=E>>>0)I=-1;else for(A&&(i[A>>2]=g+1),A=I+g|0,I=0,C[a+15|0]=0,g=0;c=E=A-g|0,t=o[0|E]&o[a+15|0],E=(g^_)-1>>>24|0,C[0|c]=t|128&E,C[a+15|0]=E|o[a+15|0],(0|B)!=(0|(g=g+1|0)););}else I=-1;return s=a+16|0,0|I}rC(),Q()},Zh:function(A,I,g,C){A|=0,I|=0,g|=0,C|=0;var B,Q=0,E=0,a=0,_=0,c=0;if(i[12+(B=s-16|0)>>2]=0,C-1>>>0<g>>>0){for(c=(Q=g-1|0)+I|0,g=0,I=0;_=((128^(E=o[c-g|0]))-1&i[B+12>>2]-1&a-1)>>>8&1,i[B+12>>2]=i[B+12>>2]|0-_&g,I|=_,a|=E,(0|C)!=(0|(g=g+1|0)););i[A>>2]=Q-i[B+12>>2],A=(255&I)-1|0}else A=-1;return 0|A},_h:function(){return 1547},$h:function(){return 26},ai:tB,bi:hB,ci:cI,di:sC,ei:function(A,I,g){A|=0;var C,B=0;return s=C=s-32|0,B=-1,CI(C,g|=0,I|=0)||(B=yA(A,35584,C,0)),s=C+32|0,0|B},fi:dg,gi:function(A,I,g,C,B,Q,i,o){var E,a;return A|=0,I|=0,g|=0,Q|=0,a=C|=0,C=B|=0,s=E=s+-64|0,CI(E+32|0,o|=0,i|=0)?B=-1:(B=-1,yA(E,35584,E+32|0,0)||(B=EI(A,I,g,a,C,Q,E),XC(E,32))),s=E- -64|0,0|B},hi:function(A,I,g,C,B,i){return A|=0,I|=0,B|=0,i|=0,!(C|=0)&(g|=0)>>>0>=4294967280|C&&(rC(),Q()),0|EI(A+16|0,A,I,g,C,B,i)},ii:function(A,I,g,C,B,Q,i){return 0|ig(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)},ji:lg,ki:function(A,I,g,C,B,Q,i,o){var E,a;return A|=0,I|=0,g|=0,Q|=0,a=C|=0,C=B|=0,s=E=s+-64|0,CI(E+32|0,o|=0,i|=0)?B=-1:(B=-1,yA(E,35584,E+32|0,0)||(B=sI(A,I,g,a,C,Q,E),XC(E,32))),s=E- -64|0,0|B},li:Dg,mi:function(A,I,g,C,B,Q,i){return 0|Ag(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0)},ni:BB,oi:BB,pi:BB,qi:BB,ri:_B,si:CB,ti:EB,ui:function(A,I,g,B,Q){A|=0,I|=0,Q|=0;var o,E,a,_,c=0,t=0;return c=g|=0,g=B|=0,_=0|c,c=B=s,s=o=B-512&-64,B=-1,sC(E=o- -64|0,a=o+32|0)||(iC(B=o+128|0,0,0,24),lC(B,E,32,0),lC(B,Q,32,0),eC(B,t=o+96|0,24),B=ig(A+32|0,I,_,g,t,Q,a),I=i[o+92>>2],g=i[o+88>>2],C[A+24|0]=g,C[A+25|0]=g>>>8,C[A+26|0]=g>>>16,C[A+27|0]=g>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[o+84>>2],g=i[o+80>>2],C[A+16|0]=g,C[A+17|0]=g>>>8,C[A+18|0]=g>>>16,C[A+19|0]=g>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[o+76>>2],g=i[o+72>>2],C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[o+68>>2],g=i[o+64>>2],C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,XC(a,32),XC(E,32),XC(t,24)),s=c,0|B},vi:function(A,I,g,C,B,Q){A|=0,I|=0,B|=0,Q|=0;var i,o,E=0;return o=E=s,s=i=E-448&-64,E=-1,!(C|=0)&(g|=0)>>>0>=48|C&&(iC(E=i- -64|0,0,0,24),lC(E,I,32,0),lC(E,B,32,0),eC(E,B=i+32|0,24),E=Ag(A,I+32|0,g-32|0,C-(g>>>0<32)|0,B,I,Q)),s=o,0|E},wi:oB,xi:function(A){var I,g=0;return s=I=s-160|0,NI(A|=0)&&(KI(A)||MA(I,A)||jA(I)&&(g=!!(0|gA(I)))),s=I+160|0,0|g},yi:function(A,I,g){A|=0,g|=0;var C,B,Q=0;return s=C=s-800|0,Q=-1,MA(B=C+640|0,I|=0)||jA(B)&&(MA(I=C+480|0,g)||jA(I)&&($A(C,I),sA(I=C+160|0,B,C),kg(g=C+320|0,I),tg(A,g),Q=0)),s=C+800|0,0|Q},zi:function(A,I,g){A|=0,g|=0;var C,B,Q=0;return s=C=s-800|0,Q=-1,MA(B=C+640|0,I|=0)||jA(B)&&(MA(I=C+480|0,g)||jA(I)&&($A(C,I),hA(I=C+160|0,B,C),kg(g=C+320|0,I),tg(A,g),Q=0)),s=C+800|0,0|Q},Ai:function(A,I){return M(A|=0,I|=0),0},Bi:function(A){var I;A|=0,s=I=s-32|0,ag(I,32),M(A,I),s=I+32|0},Ci:Mg,Di:kA,Ei:xA,Fi:uA,Gi:cA,Hi:dA,Ii:IA,Ji:MC,Ki:BB,Li:gB,Mi:BB,Ni:gB,Oi:BB,Pi:function(A){var I;return s=I=s-160|0,A=EA(I,A|=0),s=I+160|0,0|!A},Qi:function(A,I,g){A|=0,g|=0;var C,B,Q=0;return s=C=s-800|0,Q=-1,EA(B=C+640|0,I|=0)||EA(I=C+480|0,g)||($A(C,I),sA(I=C+160|0,B,C),kg(g=C+320|0,I),W(A,g),Q=0),s=C+800|0,0|Q},Ri:function(A,I,g){A|=0,g|=0;var C,B,Q=0;return s=C=s-800|0,Q=-1,EA(B=C+640|0,I|=0)||EA(I=C+480|0,g)||($A(C,I),hA(I=C+160|0,B,C),kg(g=C+320|0,I),W(A,g),Q=0),s=C+800|0,0|Q},Si:function(A,I){return jI(A|=0,I|=0),0},Ti:function(A){var I;A|=0,s=I=s+-64|0,ag(I,64),jI(A,I),s=I- -64|0},Ui:function(A){Mg(A|=0)},Vi:function(A,I){return 0|kA(A|=0,I|=0)},Wi:function(A,I){xA(A|=0,I|=0)},Xi:function(A,I){uA(A|=0,I|=0)},Yi:function(A,I,g){cA(A|=0,I|=0,g|=0)},Zi:function(A,I,g){IA(A|=0,I|=0,g|=0)},_i:MC,$i:function(A,I){dA(A|=0,I|=0)},aj:BB,bj:gB,cj:gB,dj:BB,ej:function(A,I,g,C,B,Q,i,o,E,a){return 0|rg(A|=0,I|=0,g|=0,C|=0,B|=0,Q|=0,i|=0,o|=0,E|=0,a|=0)},fj:CB,gj:cB,hj:hB,ij:cB,jj:BB,kj:function(){return 102},lj:function(){return 1575},mj:function(){return 32768},nj:cB,oj:jC,pj:cB,qj:function(){return 524288},rj:jC,sj:LC,tj:vC,uj:function(A,I,g,C,B,Q,o,E,a,_){var c,t,r;I|=0,g|=0,C|=0,B|=0,Q|=0,o|=0,a|=0,_|=0,t=0|(E|=0),s=E=s-16|0,r=I|=0,c=bg(A|=0,0,I),A=0|B;A:if(1==(0|(B=g|Q))|B>>>0>1)i[9404]=22,A=-1;else if(!g&I>>>0>=16|g){if(bA(t,a,_,E+12|0,E+8|0,E+4|0),(0|C)==(0|c)){i[9404]=28,A=-1;break A}B=A,A=31&(I=i[E+12>>2]),(63&I)>>>0>=32?(I=1<<A,g=0):I=(g=1<<A)-1&1>>>32-A,A=rg(C,B,o,32,g,I,i[E+4>>2],i[E+8>>2],c,r)}else i[9404]=28,A=-1;return s=E+16|0,0|A},vj:function(A,I,g,B,Q,E,a){I|=0,g|=0,B|=0,E|=0,a|=0;var _,c,t,r=0,e=0,y=0,h=0,D=0,p=0,w=0;r=Q|=0,r|=Q=0,s=_=s-128|0,c=bg(A|=0,0,102),D=22,t=g|Q;A:{I:{if(!B){bA(r,E,a,_+16|0,_+12|0,_+8|0),ag(e=_+96|0,32),D=28,g=_+32|0,E=i[_+16>>2],a=Ig(A=i[_+12>>2],0,B=i[_+8>>2],0);g:if(!(!(r=f)&a>>>0>1073741823|r|E>>>0>63)&&(C[0|g]=36,C[g+1|0]=55,C[g+2|0]=36,C[g+4|0]=o[1024+(63&B)|0],C[g+3|0]=o[E+1024|0],C[g+8|0]=o[1024+(B>>>24&63)|0],C[g+7|0]=o[1024+(B>>>18&63)|0],C[g+6|0]=o[1024+(B>>>12&63)|0],C[g+5|0]=o[1024+(B>>>6&63)|0],(B=g+9|0)&&(0|B)!=(0|(y=g+58|0))&&(C[0|B]=o[1024+(63&A)|0],1!=(0|(B=y-B|0))&&(C[g+10|0]=o[1024+(A>>>6&63)|0],2!=(0|B)&&(C[g+11|0]=o[1024+(A>>>12&63)|0],3!=(0|B)&&(C[g+12|0]=o[1024+(A>>>18&63)|0],4!=(0|B)&&(C[g+13|0]=o[1024+(A>>>24&63)|0],E=g+14|0))))))){for(r=y-E|0,A=0;;){if(B=E,!(A>>>0>=32)){if(E=o[A+e|0],(p=(a=A+1|0)>>>0>=32)?h=0:(E=o[a+e|0]<<8|E,(a=A+2|0)>>>0>=32?h=0:(E=o[a+e|0]<<16|E,h=1,a=A+3|0)),A=a,!r)break g;if(C[0|B]=o[1024+(63&E)|0],1==(0|r))break g;if(C[B+1|0]=o[1024+(E>>>6&63)|0],w=B+r|0,a=B+2|0,!p){if(2==(0|r))break g;if(C[B+2|0]=o[1024+(E>>>12&63)|0],a=B+3|0,h){if(3==(0|r))break g;C[B+3|0]=o[1024+(E>>>18|0)|0],a=B+4|0}}if(r=w-(E=a)|0,E)continue;break g}break}B>>>0>=y>>>0||(C[0|B]=0,Q=g)}if(Q){if(_C(A=_+20|0))break I;if(I=TA(A,I,t,g,c),Rg(A),I){A=0;break A}}}i[9404]=D}A=-1}return s=_+128|0,0|A},wj:function(A,I,g,C){I|=0,C|=0;var B,Q,i=0;B=A|=0,Q=g|=0,g=0,s=C=s-128|0;A:{I:{for(;;){if(!o[g+B|0]){A=g;break I}if(!o[B+(A=g+1|0)|0])break I;if(!o[B+(A=g+2|0)|0])break I;if(102==(0|(g=g+3|0)))break}g=-1;break A}g=-1,101==(0|A)&&(_C(i=C+4|0)||(bg(A=C+16|0,0,102),I=TA(i,I,Q,B,A),Rg(i),I&&(g=MI(A,B,102),XC(A,102))))}return s=C+128|0,0|g},xj:function(A,I,g,C){var B,Q;Q=A|=0,s=B=s-32|0,bA(I|=0,g|=0,C|=0,B+28|0,B+20|0,B+12|0),A=0;A:{I:{g:{for(;;){if(o[A+Q|0]){if(o[Q+(I=A+1|0)|0]&&o[Q+(I=A+2|0)|0]){if(102!=(0|(A=A+3|0)))continue;break g}}else I=A;break}if(101==(0|I)){if(g=B+8|0,C=B+16|0,A=0,36!=o[0|Q]|55!=o[Q+1|0]|36!=o[Q+2|0]||(I=uI(o[Q+3|0]),i[B+24>>2]=I?I-1024|0:0,I&&(I=PI(g,Q+4|0))&&(A=PI(C,I))),A)break I;i[9404]=28,A=-1;break A}}i[9404]=28,A=-1;break A}A=1,i[B+28>>2]!=i[B+24>>2]|i[B+12>>2]!=i[B+8>>2]||(A=i[B+20>>2]!=i[B+16>>2])}return s=B+32|0,0|A},yj:function(A,I,g){return 0|ZA(A|=0,I|=0,g|=0,1)},zj:function(A,I,g){return 0|ZA(A|=0,I|=0,g|=0,0)},Aj:function(A,I){return 0|II(A|=0,I|=0,1)},Bj:function(A,I){return 0|II(A|=0,I|=0,0)},Cj:BB,Dj:BB,Ej:function(A,I,g){A|=0,I|=0;var B,Q=0;return s=B=s-320|0,Q=-1,EA(B,g|=0)||(C[0|A]=o[0|I],C[A+1|0]=o[I+1|0],C[A+2|0]=o[I+2|0],C[A+3|0]=o[I+3|0],C[A+4|0]=o[I+4|0],C[A+5|0]=o[I+5|0],C[A+6|0]=o[I+6|0],C[A+7|0]=o[I+7|0],C[A+8|0]=o[I+8|0],C[A+9|0]=o[I+9|0],C[A+10|0]=o[I+10|0],C[A+11|0]=o[I+11|0],C[A+12|0]=o[I+12|0],C[A+13|0]=o[I+13|0],C[A+14|0]=o[I+14|0],C[A+15|0]=o[I+15|0],C[A+16|0]=o[I+16|0],C[A+17|0]=o[I+17|0],C[A+18|0]=o[I+18|0],C[A+19|0]=o[I+19|0],C[A+20|0]=o[I+20|0],C[A+21|0]=o[I+21|0],C[A+22|0]=o[I+22|0],C[A+23|0]=o[I+23|0],C[A+24|0]=o[I+24|0],C[A+25|0]=o[I+25|0],C[A+26|0]=o[I+26|0],C[A+27|0]=o[I+27|0],C[A+28|0]=o[I+28|0],C[A+29|0]=o[I+29|0],C[A+30|0]=o[I+30|0],C[A+31|0]=127&o[I+31|0],u(I=B+160|0,A,B),W(A,I),Q=GI(A,32)?-1:0),s=B+320|0,0|Q},Fj:function(A,I){var g;return I|=0,s=g=s-160|0,C[0|(A|=0)]=o[0|I],C[A+1|0]=o[I+1|0],C[A+2|0]=o[I+2|0],C[A+3|0]=o[I+3|0],C[A+4|0]=o[I+4|0],C[A+5|0]=o[I+5|0],C[A+6|0]=o[I+6|0],C[A+7|0]=o[I+7|0],C[A+8|0]=o[I+8|0],C[A+9|0]=o[I+9|0],C[A+10|0]=o[I+10|0],C[A+11|0]=o[I+11|0],C[A+12|0]=o[I+12|0],C[A+13|0]=o[I+13|0],C[A+14|0]=o[I+14|0],C[A+15|0]=o[I+15|0],C[A+16|0]=o[I+16|0],C[A+17|0]=o[I+17|0],C[A+18|0]=o[I+18|0],C[A+19|0]=o[I+19|0],C[A+20|0]=o[I+20|0],C[A+21|0]=o[I+21|0],C[A+22|0]=o[I+22|0],C[A+23|0]=o[I+23|0],C[A+24|0]=o[I+24|0],C[A+25|0]=o[I+25|0],C[A+26|0]=o[I+26|0],C[A+27|0]=o[I+27|0],C[A+28|0]=o[I+28|0],C[A+29|0]=o[I+29|0],C[A+30|0]=o[I+30|0],C[A+31|0]=127&o[I+31|0],nA(g,A),W(A,g),A=GI(A,32),s=g+160|0,0|(A?-1:0)},Gj:BB,Hj:BB,Ij:dg,Jj:function(A,I,g,C,B,i){return A|=0,I|=0,B|=0,i|=0,!(C|=0)&(g|=0)>>>0>=4294967280|C&&(rC(),Q()),EI(A+16|0,A,I,g,C,B,i),0},Kj:lg,Lj:Dg,Mj:BB,Nj:_B,Oj:CB,Pj:EB,Qj:CB,Rj:CB,Sj:function(A,I,g,B,Q){A|=0,I|=0,g|=0,B|=0;var i,E,a=0,_=0,c=0,t=0,r=0,e=0,y=0,s=0,h=0,D=0,p=0,w=0,n=0,k=0;if(p=1886610805^(a=o[0|(Q|=0)]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24),D=1936682341^(_=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24),a^=1852142177,c=1819895653^_,w=1852075907^(_=o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24),n=1685025377^(Q=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24),t=2037671283^_,_=1952801890^Q,s=g,(0|(E=(g+I|0)-(i=7&g)|0))!=(0|I))for(;g=(e=_^(k=o[I+4|0]|o[I+5|0]<<8|o[I+6|0]<<16|o[I+7|0]<<24))+c|0,t=B=a+(Q=t^(y=o[0|I]|o[I+1|0]<<8|o[I+2|0]<<16|o[I+3|0]<<24))|0,r=g=B>>>0<Q>>>0?g+1|0:g,a=B,B=g,g=D+n|0,g=(_=p+w|0)>>>0<p>>>0?g+1|0:g,h=(c=UI(w,n,13)^_)+a|0,B=(a=f^g)+B|0,a=UI(c,a,17)^h,p=UI(a,B=(c=c>>>0>h>>>0?B+1|0:B)^f,13),D=f,e=UI(Q,e,16),Q=r^f,e^=t,r=UI(_,g,32),g=f+Q|0,g=(t=B)+(B=(_=e+r|0)>>>0<r>>>0?g+1|0:g)|0,r=g=(t=a+_|0)>>>0<_>>>0?g+1|0:g,p=UI(a=t^p,g^=D,17),D=f,e=UI(e,Q,21),Q=B^f,e^=_,_=UI(h,c,32),B=f+Q|0,g=(_=(c=e+_|0)>>>0<_>>>0?B+1|0:B)+g|0,w=(a=a+c|0)^p,B=g=a>>>0<c>>>0?g+1|0:g,n=g^D,g=UI(e,Q,16),e=_^=f,h=UI(g^=c,_,21),c=f,r=(_=UI(t,r,32))+g|0,g=f+e|0,t=r^h,_=(g=_>>>0>r>>>0?g+1|0:g)^c,a=UI(a,B,32),c=f,p=y^r,D=g^k,(0|E)!=(0|(I=I+8|0)););switch(y=0,Q=s<<24,i-1|0){case 6:Q|=o[I+6|0]<<16;case 5:Q|=o[I+5|0]<<8;case 4:Q|=o[I+4|0];case 3:y|=(g=o[I+3|0])<<24,Q|=B=g>>>8|0;case 2:y|=(B=o[I+2|0])<<16,Q|=g=B>>>16|0;case 1:y|=(g=o[I+1|0])<<8,Q|=B=g>>>24|0;case 0:y=o[0|I]|y}return h=Q,I=Q^_,B=UI(Q=t^y,I,16),I=I+c|0,r=I=(t=Q+a|0)>>>0<a>>>0?I+1|0:I,s=UI(Q=B^t,I^=g=f,21),_=f,g=D+n|0,B=g=(a=p+w|0)>>>0<p>>>0?g+1|0:g,c=Q,Q=UI(a,g,32),g=f+I|0,I=_,_=g=Q>>>0>(c=c+Q|0)>>>0?g+1|0:g,p=UI(Q=c^s,I^=g,16),D=f,g=(a=e=UI(w,n,13)^a)+t|0,B=(t=f^B)+r|0,r=Q,Q=UI(g,B=g>>>0<a>>>0?B+1|0:B,32),I=f+I|0,k=Q=(a=Q>>>0>(s=r+Q|0)>>>0?I+1|0:I)^D,r=p^=s,D=UI(e,t,17)^g,g=(e=f^B)+_|0,I=g=(B=c=(I=D)+c|0)>>>0<I>>>0?g+1|0:g,_=UI(B,g,32),g=f+Q|0,c=(t=_+r|0)^y,h^=r=_>>>0>t>>>0?g+1|0:g,Q=UI(D,e,13)^B,B=UI(Q,I^=f,17),I=I+a|0,Q=B^(_=Q+s|0),B=I=_>>>0<s>>>0?I+1|0:I,g=(I^=g=f)+h|0,g=Q>>>0>(c=Q+c|0)>>>0?g+1|0:g,Q=UI(Q,I,13)^c,a=g,s=UI(Q,I=g^f,17),y=f,h=UI(p,k,21),e=r^f,r=t^h,_=238^UI(_,B,32),g=f+e|0,g=(h=I)+(I=(B=r+_|0)>>>0<_>>>0?g+1|0:g)|0,_=g=(t=B+Q|0)>>>0<B>>>0?g+1|0:g,y=UI(Q=t^s,g^=y,13),h=f,r=UI(r,e,16),e=I^f,s=B^r,B=UI(c,a,32),I=f+e|0,B=(c=g)+(g=B>>>0>(a=s+B|0)>>>0?I+1|0:I)|0,c=B=(r=Q+a|0)>>>0<a>>>0?B+1|0:B,y=UI(Q=y^r,I=B^h,17),h=f,B=UI(s,e,21),e=g^f,s=B^a,B=UI(t,_,32),g=f+e|0,g=(B=B>>>0>(a=s+B|0)>>>0?g+1|0:g)+I|0,_=g=(t=Q+a|0)>>>0<a>>>0?g+1|0:g,y=UI(Q=t^y,I=g^h,13),h=f,g=UI(s,e,16),e=B^f,s=g^a,g=UI(r,c,32),B=f+e|0,g=(B=g>>>0>(a=s+g|0)>>>0?B+1|0:B)+I|0,c=g=(r=Q+a|0)>>>0<a>>>0?g+1|0:g,y=UI(Q=y^r,I=g^h,17),h=f,g=UI(s,e,21),e=B^f,s=g^a,a=UI(t,_,32),g=f+e|0,I=(g=(B=s+a|0)>>>0<a>>>0?g+1|0:g)+I|0,a=I=(_=B+Q|0)>>>0<B>>>0?I+1|0:I,y=UI(Q=_^y,I^=h,13),h=f,t=UI(s,e,16),s=g^f,t^=B,c=UI(r,c,32),g=f+s|0,g=(r=I)+(I=(B=t+c|0)>>>0<c>>>0?g+1|0:g)|0,c=g=(r=B+Q|0)>>>0<B>>>0?g+1|0:g,y=UI(Q=y^r,g^=h,17),h=f,t=UI(t,s,21),s=I^f,t^=B,B=UI(_,a,32),I=f+s|0,B=(_=g)+(g=B>>>0>(a=t+B|0)>>>0?I+1|0:I)|0,_=Q=(B=(I=Q+a|0)>>>0<a>>>0?B+1|0:B)^h,y^=I,t=UI(t,s,16),e=g^f,a=(t^=a)+(c=UI(r,c,32))|0,g=f+e|0,I=UI(I,B,32),s=f,B=g=a>>>0<c>>>0?g+1|0:g,c=A,t=(r=UI(t,e,21)^a)^I^a^y,C[0|c]=t,C[c+1|0]=t>>>8,C[c+2|0]=t>>>16,C[c+3|0]=t>>>24,g=(e=s^g^Q)^(Q=g^f),C[c+4|0]=g,C[c+5|0]=g>>>8,C[c+6|0]=g>>>16,C[c+7|0]=g>>>24,g=Q+s|0,g=(c=I)>>>0>(I=I+r|0)>>>0?g+1|0:g,h=I,Q=UI(r,Q,16)^I,r=g,s=I=g^f,B=(g=_)+B|0,_=a=(c=y^=221)+a|0,a=UI(a,B=a>>>0<c>>>0?B+1|0:B,32),I=f+I|0,I=a>>>0>(t=a+Q|0)>>>0?I+1|0:I,a=UI(Q,s,21)^t,c=I,D=UI(a,Q=I^f,16),e=f,I=UI(y,g,13),g=r+(s=B^f)|0,I=g=(B=h+(y=I^_)|0)>>>0<h>>>0?g+1|0:g,_=a,a=UI(B,g,32),g=f+Q|0,e=g=(_=a>>>0>(r=_+a|0)>>>0?g+1|0:g)^e,h=UI(D^=r,g,21),a=f,g=UI(y,s,17),I=c+(s=I^f)|0,B=I=(Q=t+(y=g^B)|0)>>>0<t>>>0?I+1|0:I,I=UI(Q,I,32),g=e+f|0,e=g=(c=a)^(a=(I=I+D|0)>>>0<D>>>0?g+1|0:g),c=I,h=UI(D=h^I,g,16),t=f,I=UI(y,s,13),g=_+(s=B^f)|0,I=UI(Q=r+(y=I^Q)|0,g=Q>>>0<r>>>0?g+1|0:g,32),B=e+f|0,e=B=(_=(I=I+D|0)>>>0<D>>>0?B+1|0:B)^t,r=I,h=UI(D=h^I,B,21),t=f,I=UI(y,s,17),g=a+(s=g^f)|0,B=g=(Q=c+(y=I^Q)|0)>>>0<c>>>0?g+1|0:g,I=UI(Q,g,32),g=e+f|0,e=g=(a=(I=I+D|0)>>>0<D>>>0?g+1|0:g)^t,c=I,h=UI(D=h^I,g,16),t=f,I=UI(y,s,13),B=_+(s=B^f)|0,g=UI(Q=r+(y=I^Q)|0,B=Q>>>0<r>>>0?B+1|0:B,32),I=e+f|0,_=g=g+D|0,h=UI(h^g,(I=g>>>0<D>>>0?I+1|0:I)^t,21),t=f,r=UI(y,s,17),g=B^f,r=UI(B=Q^r,g,13),g=g+a|0,g=(B=B+c|0)>>>0<c>>>0?g+1|0:g,Q=UI(a=B^r,g^=Q=f,17)^h,B=f^t,g=I+g|0,I=UI(I=a+_|0,g=I>>>0<_>>>0?g+1|0:g,32)^Q^I,C[A+8|0]=I,C[A+9|0]=I>>>8,C[A+10|0]=I>>>16,C[A+11|0]=I>>>24,I=g^f^B,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,0},Tj:function(A,I,g,B,Q){A|=0,B|=0,Q|=0;var E,a=0,_=0,c=0,t=0;if(s=E=s-112|0,a=I|=0,I|(_=g|=0)){I=o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24,i[E+24>>2]=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,i[E+28>>2]=I,I=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,i[E+16>>2]=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,i[E+20>>2]=I,I=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,i[E>>2]=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,i[E+4>>2]=I,I=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,i[E+8>>2]=o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24,i[E+12>>2]=I,I=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,g=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[E+104>>2]=0,i[E+108>>2]=0,i[E+96>>2]=I,i[E+100>>2]=g;A:{if(!_&a>>>0>=64|_){for(;IC(A,E+96|0,E,0),I=o[E+104|0]+1|0,C[E+104|0]=I,I=o[E+105|0]+(I>>>8|0)|0,C[E+105|0]=I,I=o[E+106|0]+(I>>>8|0)|0,C[E+106|0]=I,I=o[E+107|0]+(I>>>8|0)|0,C[E+107|0]=I,I=o[E+108|0]+(I>>>8|0)|0,C[E+108|0]=I,I=o[E+109|0]+(I>>>8|0)|0,C[E+109|0]=I,I=o[E+110|0]+(I>>>8|0)|0,C[E+110|0]=I,C[E+111|0]=o[E+111|0]+(I>>>8|0),A=A- -64|0,_=_-1|0,!(_=(a=a+-64|0)>>>0<4294967232?_+1|0:_)&a>>>0>63|_;);if(!(a|_))break A}if(g=0,IC(E+32|0,E+96|0,E,0),B=3&a,I=0,!_&a>>>0>=4|_)for(_=60&a,Q=0;a=t=E+32|0,C[A+I|0]=o[a+I|0],C[(c=1|I)+A|0]=o[a+c|0],C[(c=2|I)+A|0]=o[a+c|0],C[(a=3|I)+A|0]=o[a+t|0],I=I+4|0,(0|_)!=(0|(Q=Q+4|0)););if(B)for(;C[A+I|0]=o[(E+32|0)+I|0],I=I+1|0,(0|B)!=(0|(g=g+1|0)););}XC(E+32|0,64),XC(E,32)}return s=E+112|0,0},Uj:function(A,I,g,B,Q,E){A|=0,I|=0,Q|=0,E|=0;var a,_=0,c=0;if(s=a=s-112|0,_=g|=0,(B|=0)|g){g=o[E+28|0]|o[E+29|0]<<8|o[E+30|0]<<16|o[E+31|0]<<24,i[a+24>>2]=o[E+24|0]|o[E+25|0]<<8|o[E+26|0]<<16|o[E+27|0]<<24,i[a+28>>2]=g,g=o[E+20|0]|o[E+21|0]<<8|o[E+22|0]<<16|o[E+23|0]<<24,i[a+16>>2]=o[E+16|0]|o[E+17|0]<<8|o[E+18|0]<<16|o[E+19|0]<<24,i[a+20>>2]=g,g=o[E+4|0]|o[E+5|0]<<8|o[E+6|0]<<16|o[E+7|0]<<24,i[a>>2]=o[0|E]|o[E+1|0]<<8|o[E+2|0]<<16|o[E+3|0]<<24,i[a+4>>2]=g,g=o[E+12|0]|o[E+13|0]<<8|o[E+14|0]<<16|o[E+15|0]<<24,i[a+8>>2]=o[E+8|0]|o[E+9|0]<<8|o[E+10|0]<<16|o[E+11|0]<<24,i[a+12>>2]=g,g=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,Q=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,i[a+104>>2]=0,i[a+108>>2]=0,i[a+96>>2]=g,i[a+100>>2]=Q;A:{if(!B&_>>>0>=64|B){for(;;){for(g=0,IC(a+32|0,a+96|0,a,0);E=a+32|0,C[A+g|0]=o[E+g|0]^o[I+g|0],C[(Q=1|g)+A|0]=o[Q+E|0]^o[I+Q|0],64!=(0|(g=g+2|0)););if(g=o[a+104|0]+1|0,C[a+104|0]=g,g=o[a+105|0]+(g>>>8|0)|0,C[a+105|0]=g,g=o[a+106|0]+(g>>>8|0)|0,C[a+106|0]=g,g=o[a+107|0]+(g>>>8|0)|0,C[a+107|0]=g,g=o[a+108|0]+(g>>>8|0)|0,C[a+108|0]=g,g=o[a+109|0]+(g>>>8|0)|0,C[a+109|0]=g,g=o[a+110|0]+(g>>>8|0)|0,C[a+110|0]=g,C[a+111|0]=o[a+111|0]+(g>>>8|0),I=I- -64|0,A=A- -64|0,B=B-1|0,!(!(B=(_=_+-64|0)>>>0<4294967232?B+1|0:B)&_>>>0>63|B))break}if(!(B|_))break A}if(g=0,IC(a+32|0,a+96|0,a,0),E=1&_,1!=(0|_)|B)for(_&=62,B=0;c=a+32|0,C[A+g|0]=o[c+g|0]^o[I+g|0],C[(Q=1|g)+A|0]=o[Q+c|0]^o[I+Q|0],g=g+2|0,(0|_)!=(0|(B=B+2|0)););E&&(C[A+g|0]=o[(a+32|0)+g|0]^o[I+g|0])}XC(a+32|0,64),XC(a,32)}return s=a+112|0,0},Vj:BB,Wj:eB,Xj:cB,Yj:PC,Zj:function(A,I,g,B,Q){A|=0,B|=0,Q|=0;var E,a=0,_=0,c=0,t=0;if(s=E=s-112|0,a=I|=0,I|(_=g|=0)){I=o[Q+28|0]|o[Q+29|0]<<8|o[Q+30|0]<<16|o[Q+31|0]<<24,i[E+24>>2]=o[Q+24|0]|o[Q+25|0]<<8|o[Q+26|0]<<16|o[Q+27|0]<<24,i[E+28>>2]=I,I=o[Q+20|0]|o[Q+21|0]<<8|o[Q+22|0]<<16|o[Q+23|0]<<24,i[E+16>>2]=o[Q+16|0]|o[Q+17|0]<<8|o[Q+18|0]<<16|o[Q+19|0]<<24,i[E+20>>2]=I,I=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,i[E>>2]=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,i[E+4>>2]=I,I=o[Q+12|0]|o[Q+13|0]<<8|o[Q+14|0]<<16|o[Q+15|0]<<24,i[E+8>>2]=o[Q+8|0]|o[Q+9|0]<<8|o[Q+10|0]<<16|o[Q+11|0]<<24,i[E+12>>2]=I,I=o[0|B]|o[B+1|0]<<8|o[B+2|0]<<16|o[B+3|0]<<24,g=o[B+4|0]|o[B+5|0]<<8|o[B+6|0]<<16|o[B+7|0]<<24,i[E+104>>2]=0,i[E+108>>2]=0,i[E+96>>2]=I,i[E+100>>2]=g;A:{if(!_&a>>>0>=64|_){for(;gC(A,E+96|0,E,0),I=o[E+104|0]+1|0,C[E+104|0]=I,I=o[E+105|0]+(I>>>8|0)|0,C[E+105|0]=I,I=o[E+106|0]+(I>>>8|0)|0,C[E+106|0]=I,I=o[E+107|0]+(I>>>8|0)|0,C[E+107|0]=I,I=o[E+108|0]+(I>>>8|0)|0,C[E+108|0]=I,I=o[E+109|0]+(I>>>8|0)|0,C[E+109|0]=I,I=o[E+110|0]+(I>>>8|0)|0,C[E+110|0]=I,C[E+111|0]=o[E+111|0]+(I>>>8|0),A=A- -64|0,_=_-1|0,!(_=(a=a+-64|0)>>>0<4294967232?_+1|0:_)&a>>>0>63|_;);if(!(a|_))break A}if(g=0,gC(E+32|0,E+96|0,E,0),B=3&a,I=0,!_&a>>>0>=4|_)for(_=60&a,Q=0;a=t=E+32|0,C[A+I|0]=o[a+I|0],C[(c=1|I)+A|0]=o[a+c|0],C[(c=2|I)+A|0]=o[a+c|0],C[(a=3|I)+A|0]=o[a+t|0],I=I+4|0,(0|_)!=(0|(Q=Q+4|0)););if(B)for(;C[A+I|0]=o[(E+32|0)+I|0],I=I+1|0,(0|B)!=(0|(g=g+1|0)););}XC(E+32|0,64),XC(E,32)}return s=E+112|0,0},_j:function(A,I,g,B,Q,E){A|=0,I|=0,Q|=0,E|=0;var a,_=0,c=0;if(s=a=s-112|0,_=g|=0,(B|=0)|g){g=o[E+28|0]|o[E+29|0]<<8|o[E+30|0]<<16|o[E+31|0]<<24,i[a+24>>2]=o[E+24|0]|o[E+25|0]<<8|o[E+26|0]<<16|o[E+27|0]<<24,i[a+28>>2]=g,g=o[E+20|0]|o[E+21|0]<<8|o[E+22|0]<<16|o[E+23|0]<<24,i[a+16>>2]=o[E+16|0]|o[E+17|0]<<8|o[E+18|0]<<16|o[E+19|0]<<24,i[a+20>>2]=g,g=o[E+4|0]|o[E+5|0]<<8|o[E+6|0]<<16|o[E+7|0]<<24,i[a>>2]=o[0|E]|o[E+1|0]<<8|o[E+2|0]<<16|o[E+3|0]<<24,i[a+4>>2]=g,g=o[E+12|0]|o[E+13|0]<<8|o[E+14|0]<<16|o[E+15|0]<<24,i[a+8>>2]=o[E+8|0]|o[E+9|0]<<8|o[E+10|0]<<16|o[E+11|0]<<24,i[a+12>>2]=g,g=o[0|Q]|o[Q+1|0]<<8|o[Q+2|0]<<16|o[Q+3|0]<<24,Q=o[Q+4|0]|o[Q+5|0]<<8|o[Q+6|0]<<16|o[Q+7|0]<<24,i[a+104>>2]=0,i[a+108>>2]=0,i[a+96>>2]=g,i[a+100>>2]=Q;A:{if(!B&_>>>0>=64|B){for(;;){for(g=0,gC(a+32|0,a+96|0,a,0);E=a+32|0,C[A+g|0]=o[E+g|0]^o[I+g|0],C[(Q=1|g)+A|0]=o[Q+E|0]^o[I+Q|0],64!=(0|(g=g+2|0)););if(g=o[a+104|0]+1|0,C[a+104|0]=g,g=o[a+105|0]+(g>>>8|0)|0,C[a+105|0]=g,g=o[a+106|0]+(g>>>8|0)|0,C[a+106|0]=g,g=o[a+107|0]+(g>>>8|0)|0,C[a+107|0]=g,g=o[a+108|0]+(g>>>8|0)|0,C[a+108|0]=g,g=o[a+109|0]+(g>>>8|0)|0,C[a+109|0]=g,g=o[a+110|0]+(g>>>8|0)|0,C[a+110|0]=g,C[a+111|0]=o[a+111|0]+(g>>>8|0),I=I- -64|0,A=A- -64|0,B=B-1|0,!(!(B=(_=_+-64|0)>>>0<4294967232?B+1|0:B)&_>>>0>63|B))break}if(!(B|_))break A}if(g=0,gC(a+32|0,a+96|0,a,0),E=1&_,1!=(0|_)|B)for(_&=62,B=0;c=a+32|0,C[A+g|0]=o[c+g|0]^o[I+g|0],C[(Q=1|g)+A|0]=o[Q+c|0]^o[I+Q|0],g=g+2|0,(0|_)!=(0|(B=B+2|0)););E&&(C[A+g|0]=o[(a+32|0)+g|0]^o[I+g|0])}XC(a+32|0,64),XC(a,32)}return s=a+112|0,0},$j:BB,ak:eB,bk:cB,ck:PC,dk:BB,ek:_B,fk:cB,gk:function(A,I,g,C,B){var Q;return A|=0,I|=0,g|=0,s=Q=s-32|0,yA(Q,C|=0,B|=0,0),A=Xg(A,I,g,C+16|0,Q),s=Q+32|0,0|A},hk:function(A,I,g,C,B,Q,i,o){var E;return A|=0,I|=0,g|=0,C|=0,Q|=0,i|=0,s=E=s-32|0,yA(E,B|=0,o|=0,0),A=mg(o=A,I,(A=0)|g,C,B+16|0,A|Q,i,E),s=E+32|0,0|A},ik:function(A,I,g,C,B,Q){var i;return A|=0,I|=0,g|=0,C|=0,s=i=s-32|0,yA(i,B|=0,Q|=0,0),A=mg(A,I,g,C,B+16|0,0,0,i),s=i+32|0,0|A},jk:PC,kk:K,lk:BA,mk:pB}}(A)}(I)},instantiate:function(A,I){return{then:function(g){var C=new y.Module(A);g({instance:new y.Instance(C,I)})}}},RuntimeError:Error};t=[];var s,h,D,f,p,w,n,k=!1;function F(){var A=e.buffer;B.HEAP8=s=new Int8Array(A),B.HEAP16=D=new Int16Array(A),B.HEAPU8=h=new Uint8Array(A),B.HEAPU16=new Uint16Array(A),B.HEAP32=f=new Int32Array(A),B.HEAPU32=p=new Uint32Array(A),B.HEAPF32=w=new Float32Array(A),B.HEAPF64=n=new Float64Array(A)}var S=[],N=[],G=[],M=0,K=null,U=null;function b(A){throw B.onAbort?.(A),r(A="Aborted("+A+")"),k=!0,A+=". Build with -sASSERTIONS for more info.",new y.RuntimeError(A)}var H,Y=A=>A.startsWith("file://");var J={36800:()=>B.getRandomValue(),36836:()=>{if(void 0===B.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto;I=void 0===I?C:I;var g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),B.getRandomValue=g}catch(A){try{var C=__webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js"),Q=function(){var A=C.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};Q(),B.getRandomValue=Q}catch(A){throw"No secure random number generator found"}}}},d=A=>{for(;A.length>0;)A.shift()(B)};B.noExitRuntime;var m,l="undefined"!=typeof TextDecoder?new TextDecoder:void 0,u=(A,I)=>A?((A,I,g)=>{for(var C=I+g,B=I;A[B]&&!(B>=C);)++B;if(B-I>16&&A.buffer&&l)return l.decode(A.subarray(I,B));for(var Q="";I<B;){var i=A[I++];if(128&i){var o=63&A[I++];if(192!=(224&i)){var E=63&A[I++];if((i=224==(240&i)?(15&i)<<12|o<<6|E:(7&i)<<18|o<<12|E<<6|63&A[I++])<65536)Q+=String.fromCharCode(i);else{var a=i-65536;Q+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else Q+=String.fromCharCode((31&i)<<6|o)}else Q+=String.fromCharCode(i)}return Q})(h,A,I):"",x=[],v=A=>{var I=(A-e.buffer.byteLength+65535)/65536;try{return e.grow(I),F(),1}catch(A){}},R={b:(A,I,g,C)=>{b(`Assertion failed: ${u(A)}, at: `+[I?u(I):"unknown filename",g,C?u(C):"unknown function"])},c:()=>{b("")},a:(A,I,g)=>((A,I,g)=>{var C=((A,I)=>{var g;for(x.length=0;g=h[A++];){var C=105!=g;I+=(C&=112!=g)&&I%8?4:0,x.push(112==g?p[I>>2]:105==g?f[I>>2]:n[I>>3]),I+=C?8:4}return x})(I,g);return J[A](...C)})(A,I,g),d:A=>{var I=h.length,g=2147483648;if((A>>>=0)>g)return!1;for(var C,B=1;B<=4;B*=2){var Q=I*(1+.2/B);Q=Math.min(Q,A+100663296);var i=Math.min(g,(C=Math.max(A,Q))+(65536-C%65536)%65536);if(v(i))return!0}return!1}},L=function(){var A={a:R};function I(A,I){var g;return L=A.exports,e=L.e,F(),g=L.f,N.unshift(g),function(A){if(M--,B.monitorRunDependencies?.(M),0==M&&(null!==K&&(clearInterval(K),K=null),U)){var I=U;U=null,I()}}(),L}if(M++,B.monitorRunDependencies?.(M),B.instantiateWasm)try{return B.instantiateWasm(A,I)}catch(A){return r(`Module.instantiateWasm callback failed with error: ${A}`),!1}return H||(H="<<< WASM_BINARY_FILE >>>"),function(A,I,C){(function(A){return Promise.resolve().then((()=>function(A){if(A==H&&t)return new Uint8Array(t);if(g)return g(A);throw"both async and sync fetching of the wasm failed"}(A)))})(A).then((A=>y.instantiate(A,I))).then(C,(A=>{r(`failed to asynchronously prepare wasm: ${A}`),b(A)}))}(H,A,(function(A){I(A.instance)})),{}}();function P(){function A(){m||(m=!0,B.calledRun=!0,k||(d(N),B.onRuntimeInitialized?.(),function(){if(B.postRun)for("function"==typeof B.postRun&&(B.postRun=[B.postRun]);B.postRun.length;)A=B.postRun.shift(),G.unshift(A);var A;d(G)}()))}M>0||(function(){if(B.preRun)for("function"==typeof B.preRun&&(B.preRun=[B.preRun]);B.preRun.length;)A=B.preRun.shift(),S.unshift(A);var A;d(S)}(),M>0||(B.setStatus?(B.setStatus("Running..."),setTimeout((function(){setTimeout((function(){B.setStatus("")}),1),A()}),1)):A()))}if(B._crypto_aead_aegis128l_keybytes=()=>(B._crypto_aead_aegis128l_keybytes=L.g)(),B._crypto_aead_aegis128l_nsecbytes=()=>(B._crypto_aead_aegis128l_nsecbytes=L.h)(),B._crypto_aead_aegis128l_npubbytes=()=>(B._crypto_aead_aegis128l_npubbytes=L.i)(),B._crypto_aead_aegis128l_abytes=()=>(B._crypto_aead_aegis128l_abytes=L.j)(),B._crypto_aead_aegis128l_messagebytes_max=()=>(B._crypto_aead_aegis128l_messagebytes_max=L.k)(),B._crypto_aead_aegis128l_keygen=A=>(B._crypto_aead_aegis128l_keygen=L.l)(A),B._crypto_aead_aegis128l_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis128l_encrypt=L.m)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis128l_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_aegis128l_encrypt_detached=L.n)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_aegis128l_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis128l_decrypt=L.o)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis128l_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis128l_decrypt_detached=L.p)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis256_keybytes=()=>(B._crypto_aead_aegis256_keybytes=L.q)(),B._crypto_aead_aegis256_nsecbytes=()=>(B._crypto_aead_aegis256_nsecbytes=L.r)(),B._crypto_aead_aegis256_npubbytes=()=>(B._crypto_aead_aegis256_npubbytes=L.s)(),B._crypto_aead_aegis256_abytes=()=>(B._crypto_aead_aegis256_abytes=L.t)(),B._crypto_aead_aegis256_messagebytes_max=()=>(B._crypto_aead_aegis256_messagebytes_max=L.u)(),B._crypto_aead_aegis256_keygen=A=>(B._crypto_aead_aegis256_keygen=L.v)(A),B._crypto_aead_aegis256_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis256_encrypt=L.w)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis256_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_aegis256_encrypt_detached=L.x)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_aegis256_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis256_decrypt=L.y)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis256_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis256_decrypt_detached=L.z)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aes256gcm_is_available=()=>(B._crypto_aead_aes256gcm_is_available=L.A)(),B._crypto_aead_chacha20poly1305_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_chacha20poly1305_encrypt_detached=L.B)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_chacha20poly1305_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_encrypt=L.C)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_chacha20poly1305_ietf_encrypt_detached=L.D)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_chacha20poly1305_ietf_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_ietf_encrypt=L.E)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_decrypt_detached=L.F)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_decrypt=L.G)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_ietf_decrypt_detached=L.H)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_ietf_decrypt=L.I)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_keybytes=()=>(B._crypto_aead_chacha20poly1305_ietf_keybytes=L.J)(),B._crypto_aead_chacha20poly1305_ietf_npubbytes=()=>(B._crypto_aead_chacha20poly1305_ietf_npubbytes=L.K)(),B._crypto_aead_chacha20poly1305_ietf_nsecbytes=()=>(B._crypto_aead_chacha20poly1305_ietf_nsecbytes=L.L)(),B._crypto_aead_chacha20poly1305_ietf_abytes=()=>(B._crypto_aead_chacha20poly1305_ietf_abytes=L.M)(),B._crypto_aead_chacha20poly1305_ietf_messagebytes_max=()=>(B._crypto_aead_chacha20poly1305_ietf_messagebytes_max=L.N)(),B._crypto_aead_chacha20poly1305_ietf_keygen=A=>(B._crypto_aead_chacha20poly1305_ietf_keygen=L.O)(A),B._crypto_aead_chacha20poly1305_keybytes=()=>(B._crypto_aead_chacha20poly1305_keybytes=L.P)(),B._crypto_aead_chacha20poly1305_npubbytes=()=>(B._crypto_aead_chacha20poly1305_npubbytes=L.Q)(),B._crypto_aead_chacha20poly1305_nsecbytes=()=>(B._crypto_aead_chacha20poly1305_nsecbytes=L.R)(),B._crypto_aead_chacha20poly1305_abytes=()=>(B._crypto_aead_chacha20poly1305_abytes=L.S)(),B._crypto_aead_chacha20poly1305_messagebytes_max=()=>(B._crypto_aead_chacha20poly1305_messagebytes_max=L.T)(),B._crypto_aead_chacha20poly1305_keygen=A=>(B._crypto_aead_chacha20poly1305_keygen=L.U)(A),B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=L.V)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_xchacha20poly1305_ietf_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_xchacha20poly1305_ietf_encrypt=L.W)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=L.X)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_xchacha20poly1305_ietf_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_xchacha20poly1305_ietf_decrypt=L.Y)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_xchacha20poly1305_ietf_keybytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_keybytes=L.Z)(),B._crypto_aead_xchacha20poly1305_ietf_npubbytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_npubbytes=L._)(),B._crypto_aead_xchacha20poly1305_ietf_nsecbytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_nsecbytes=L.$)(),B._crypto_aead_xchacha20poly1305_ietf_abytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_abytes=L.aa)(),B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=()=>(B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=L.ba)(),B._crypto_aead_xchacha20poly1305_ietf_keygen=A=>(B._crypto_aead_xchacha20poly1305_ietf_keygen=L.ca)(A),B._crypto_auth_bytes=()=>(B._crypto_auth_bytes=L.da)(),B._crypto_auth_keybytes=()=>(B._crypto_auth_keybytes=L.ea)(),B._crypto_auth_primitive=()=>(B._crypto_auth_primitive=L.fa)(),B._crypto_auth=(A,I,g,C,Q)=>(B._crypto_auth=L.ga)(A,I,g,C,Q),B._crypto_auth_verify=(A,I,g,C,Q)=>(B._crypto_auth_verify=L.ha)(A,I,g,C,Q),B._crypto_auth_keygen=A=>(B._crypto_auth_keygen=L.ia)(A),B._crypto_auth_hmacsha256_bytes=()=>(B._crypto_auth_hmacsha256_bytes=L.ja)(),B._crypto_auth_hmacsha256_keybytes=()=>(B._crypto_auth_hmacsha256_keybytes=L.ka)(),B._crypto_auth_hmacsha256_statebytes=()=>(B._crypto_auth_hmacsha256_statebytes=L.la)(),B._crypto_auth_hmacsha256_keygen=A=>(B._crypto_auth_hmacsha256_keygen=L.ma)(A),B._crypto_auth_hmacsha256_init=(A,I,g)=>(B._crypto_auth_hmacsha256_init=L.na)(A,I,g),B._crypto_auth_hmacsha256_update=(A,I,g,C)=>(B._crypto_auth_hmacsha256_update=L.oa)(A,I,g,C),B._crypto_auth_hmacsha256_final=(A,I)=>(B._crypto_auth_hmacsha256_final=L.pa)(A,I),B._crypto_auth_hmacsha256=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha256=L.qa)(A,I,g,C,Q),B._crypto_auth_hmacsha256_verify=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha256_verify=L.ra)(A,I,g,C,Q),B._crypto_auth_hmacsha512_bytes=()=>(B._crypto_auth_hmacsha512_bytes=L.sa)(),B._crypto_auth_hmacsha512_keybytes=()=>(B._crypto_auth_hmacsha512_keybytes=L.ta)(),B._crypto_auth_hmacsha512_statebytes=()=>(B._crypto_auth_hmacsha512_statebytes=L.ua)(),B._crypto_auth_hmacsha512_keygen=A=>(B._crypto_auth_hmacsha512_keygen=L.va)(A),B._crypto_auth_hmacsha512_init=(A,I,g)=>(B._crypto_auth_hmacsha512_init=L.wa)(A,I,g),B._crypto_auth_hmacsha512_update=(A,I,g,C)=>(B._crypto_auth_hmacsha512_update=L.xa)(A,I,g,C),B._crypto_auth_hmacsha512_final=(A,I)=>(B._crypto_auth_hmacsha512_final=L.ya)(A,I),B._crypto_auth_hmacsha512=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512=L.za)(A,I,g,C,Q),B._crypto_auth_hmacsha512_verify=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512_verify=L.Aa)(A,I,g,C,Q),B._crypto_auth_hmacsha512256_bytes=()=>(B._crypto_auth_hmacsha512256_bytes=L.Ba)(),B._crypto_auth_hmacsha512256_keybytes=()=>(B._crypto_auth_hmacsha512256_keybytes=L.Ca)(),B._crypto_auth_hmacsha512256_statebytes=()=>(B._crypto_auth_hmacsha512256_statebytes=L.Da)(),B._crypto_auth_hmacsha512256_keygen=A=>(B._crypto_auth_hmacsha512256_keygen=L.Ea)(A),B._crypto_auth_hmacsha512256_init=(A,I,g)=>(B._crypto_auth_hmacsha512256_init=L.Fa)(A,I,g),B._crypto_auth_hmacsha512256_update=(A,I,g,C)=>(B._crypto_auth_hmacsha512256_update=L.Ga)(A,I,g,C),B._crypto_auth_hmacsha512256_final=(A,I)=>(B._crypto_auth_hmacsha512256_final=L.Ha)(A,I),B._crypto_auth_hmacsha512256=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512256=L.Ia)(A,I,g,C,Q),B._crypto_auth_hmacsha512256_verify=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512256_verify=L.Ja)(A,I,g,C,Q),B._crypto_box_seedbytes=()=>(B._crypto_box_seedbytes=L.Ka)(),B._crypto_box_publickeybytes=()=>(B._crypto_box_publickeybytes=L.La)(),B._crypto_box_secretkeybytes=()=>(B._crypto_box_secretkeybytes=L.Ma)(),B._crypto_box_beforenmbytes=()=>(B._crypto_box_beforenmbytes=L.Na)(),B._crypto_box_noncebytes=()=>(B._crypto_box_noncebytes=L.Oa)(),B._crypto_box_zerobytes=()=>(B._crypto_box_zerobytes=L.Pa)(),B._crypto_box_boxzerobytes=()=>(B._crypto_box_boxzerobytes=L.Qa)(),B._crypto_box_macbytes=()=>(B._crypto_box_macbytes=L.Ra)(),B._crypto_box_messagebytes_max=()=>(B._crypto_box_messagebytes_max=L.Sa)(),B._crypto_box_primitive=()=>(B._crypto_box_primitive=L.Ta)(),B._crypto_box_seed_keypair=(A,I,g)=>(B._crypto_box_seed_keypair=L.Ua)(A,I,g),B._crypto_box_keypair=(A,I)=>(B._crypto_box_keypair=L.Va)(A,I),B._crypto_box_beforenm=(A,I,g)=>(B._crypto_box_beforenm=L.Wa)(A,I,g),B._crypto_box_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_afternm=L.Xa)(A,I,g,C,Q,i),B._crypto_box_open_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_open_afternm=L.Ya)(A,I,g,C,Q,i),B._crypto_box=(A,I,g,C,Q,i,o)=>(B._crypto_box=L.Za)(A,I,g,C,Q,i,o),B._crypto_box_open=(A,I,g,C,Q,i,o)=>(B._crypto_box_open=L._a)(A,I,g,C,Q,i,o),B._crypto_box_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_detached_afternm=L.$a)(A,I,g,C,Q,i,o),B._crypto_box_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_detached=L.ab)(A,I,g,C,Q,i,o,E),B._crypto_box_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_easy_afternm=L.bb)(A,I,g,C,Q,i),B._crypto_box_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_easy=L.cb)(A,I,g,C,Q,i,o),B._crypto_box_open_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_open_detached_afternm=L.db)(A,I,g,C,Q,i,o),B._crypto_box_open_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_open_detached=L.eb)(A,I,g,C,Q,i,o,E),B._crypto_box_open_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_open_easy_afternm=L.fb)(A,I,g,C,Q,i),B._crypto_box_open_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_open_easy=L.gb)(A,I,g,C,Q,i,o),B._crypto_box_seal=(A,I,g,C,Q)=>(B._crypto_box_seal=L.hb)(A,I,g,C,Q),B._crypto_box_seal_open=(A,I,g,C,Q,i)=>(B._crypto_box_seal_open=L.ib)(A,I,g,C,Q,i),B._crypto_box_sealbytes=()=>(B._crypto_box_sealbytes=L.jb)(),B._crypto_box_curve25519xsalsa20poly1305_seed_keypair=(A,I,g)=>(B._crypto_box_curve25519xsalsa20poly1305_seed_keypair=L.kb)(A,I,g),B._crypto_box_curve25519xsalsa20poly1305_keypair=(A,I)=>(B._crypto_box_curve25519xsalsa20poly1305_keypair=L.lb)(A,I),B._crypto_box_curve25519xsalsa20poly1305_beforenm=(A,I,g)=>(B._crypto_box_curve25519xsalsa20poly1305_beforenm=L.mb)(A,I,g),B._crypto_box_curve25519xsalsa20poly1305_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xsalsa20poly1305_afternm=L.nb)(A,I,g,C,Q,i),B._crypto_box_curve25519xsalsa20poly1305_open_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xsalsa20poly1305_open_afternm=L.ob)(A,I,g,C,Q,i),B._crypto_box_curve25519xsalsa20poly1305=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xsalsa20poly1305=L.pb)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xsalsa20poly1305_open=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xsalsa20poly1305_open=L.qb)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xsalsa20poly1305_seedbytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_seedbytes=L.rb)(),B._crypto_box_curve25519xsalsa20poly1305_publickeybytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_publickeybytes=L.sb)(),B._crypto_box_curve25519xsalsa20poly1305_secretkeybytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_secretkeybytes=L.tb)(),B._crypto_box_curve25519xsalsa20poly1305_beforenmbytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_beforenmbytes=L.ub)(),B._crypto_box_curve25519xsalsa20poly1305_noncebytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_noncebytes=L.vb)(),B._crypto_box_curve25519xsalsa20poly1305_zerobytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_zerobytes=L.wb)(),B._crypto_box_curve25519xsalsa20poly1305_boxzerobytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_boxzerobytes=L.xb)(),B._crypto_box_curve25519xsalsa20poly1305_macbytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_macbytes=L.yb)(),B._crypto_box_curve25519xsalsa20poly1305_messagebytes_max=()=>(B._crypto_box_curve25519xsalsa20poly1305_messagebytes_max=L.zb)(),B._crypto_core_hchacha20=(A,I,g,C)=>(B._crypto_core_hchacha20=L.Ab)(A,I,g,C),B._crypto_core_hchacha20_outputbytes=()=>(B._crypto_core_hchacha20_outputbytes=L.Bb)(),B._crypto_core_hchacha20_inputbytes=()=>(B._crypto_core_hchacha20_inputbytes=L.Cb)(),B._crypto_core_hchacha20_keybytes=()=>(B._crypto_core_hchacha20_keybytes=L.Db)(),B._crypto_core_hchacha20_constbytes=()=>(B._crypto_core_hchacha20_constbytes=L.Eb)(),B._crypto_core_hsalsa20=(A,I,g,C)=>(B._crypto_core_hsalsa20=L.Fb)(A,I,g,C),B._crypto_core_hsalsa20_outputbytes=()=>(B._crypto_core_hsalsa20_outputbytes=L.Gb)(),B._crypto_core_hsalsa20_inputbytes=()=>(B._crypto_core_hsalsa20_inputbytes=L.Hb)(),B._crypto_core_hsalsa20_keybytes=()=>(B._crypto_core_hsalsa20_keybytes=L.Ib)(),B._crypto_core_hsalsa20_constbytes=()=>(B._crypto_core_hsalsa20_constbytes=L.Jb)(),B._crypto_core_salsa20=(A,I,g,C)=>(B._crypto_core_salsa20=L.Kb)(A,I,g,C),B._crypto_core_salsa20_outputbytes=()=>(B._crypto_core_salsa20_outputbytes=L.Lb)(),B._crypto_core_salsa20_inputbytes=()=>(B._crypto_core_salsa20_inputbytes=L.Mb)(),B._crypto_core_salsa20_keybytes=()=>(B._crypto_core_salsa20_keybytes=L.Nb)(),B._crypto_core_salsa20_constbytes=()=>(B._crypto_core_salsa20_constbytes=L.Ob)(),B._crypto_core_salsa2012=(A,I,g,C)=>(B._crypto_core_salsa2012=L.Pb)(A,I,g,C),B._crypto_core_salsa2012_outputbytes=()=>(B._crypto_core_salsa2012_outputbytes=L.Qb)(),B._crypto_core_salsa2012_inputbytes=()=>(B._crypto_core_salsa2012_inputbytes=L.Rb)(),B._crypto_core_salsa2012_keybytes=()=>(B._crypto_core_salsa2012_keybytes=L.Sb)(),B._crypto_core_salsa2012_constbytes=()=>(B._crypto_core_salsa2012_constbytes=L.Tb)(),B._crypto_core_salsa208=(A,I,g,C)=>(B._crypto_core_salsa208=L.Ub)(A,I,g,C),B._crypto_core_salsa208_outputbytes=()=>(B._crypto_core_salsa208_outputbytes=L.Vb)(),B._crypto_core_salsa208_inputbytes=()=>(B._crypto_core_salsa208_inputbytes=L.Wb)(),B._crypto_core_salsa208_keybytes=()=>(B._crypto_core_salsa208_keybytes=L.Xb)(),B._crypto_core_salsa208_constbytes=()=>(B._crypto_core_salsa208_constbytes=L.Yb)(),B._crypto_generichash_bytes_min=()=>(B._crypto_generichash_bytes_min=L.Zb)(),B._crypto_generichash_bytes_max=()=>(B._crypto_generichash_bytes_max=L._b)(),B._crypto_generichash_bytes=()=>(B._crypto_generichash_bytes=L.$b)(),B._crypto_generichash_keybytes_min=()=>(B._crypto_generichash_keybytes_min=L.ac)(),B._crypto_generichash_keybytes_max=()=>(B._crypto_generichash_keybytes_max=L.bc)(),B._crypto_generichash_keybytes=()=>(B._crypto_generichash_keybytes=L.cc)(),B._crypto_generichash_primitive=()=>(B._crypto_generichash_primitive=L.dc)(),B._crypto_generichash_statebytes=()=>(B._crypto_generichash_statebytes=L.ec)(),B._crypto_generichash=(A,I,g,C,Q,i,o)=>(B._crypto_generichash=L.fc)(A,I,g,C,Q,i,o),B._crypto_generichash_init=(A,I,g,C)=>(B._crypto_generichash_init=L.gc)(A,I,g,C),B._crypto_generichash_update=(A,I,g,C)=>(B._crypto_generichash_update=L.hc)(A,I,g,C),B._crypto_generichash_final=(A,I,g)=>(B._crypto_generichash_final=L.ic)(A,I,g),B._crypto_generichash_keygen=A=>(B._crypto_generichash_keygen=L.jc)(A),B._crypto_generichash_blake2b_bytes_min=()=>(B._crypto_generichash_blake2b_bytes_min=L.kc)(),B._crypto_generichash_blake2b_bytes_max=()=>(B._crypto_generichash_blake2b_bytes_max=L.lc)(),B._crypto_generichash_blake2b_bytes=()=>(B._crypto_generichash_blake2b_bytes=L.mc)(),B._crypto_generichash_blake2b_keybytes_min=()=>(B._crypto_generichash_blake2b_keybytes_min=L.nc)(),B._crypto_generichash_blake2b_keybytes_max=()=>(B._crypto_generichash_blake2b_keybytes_max=L.oc)(),B._crypto_generichash_blake2b_keybytes=()=>(B._crypto_generichash_blake2b_keybytes=L.pc)(),B._crypto_generichash_blake2b_saltbytes=()=>(B._crypto_generichash_blake2b_saltbytes=L.qc)(),B._crypto_generichash_blake2b_personalbytes=()=>(B._crypto_generichash_blake2b_personalbytes=L.rc)(),B._crypto_generichash_blake2b_statebytes=()=>(B._crypto_generichash_blake2b_statebytes=L.sc)(),B._crypto_generichash_blake2b_keygen=A=>(B._crypto_generichash_blake2b_keygen=L.tc)(A),B._crypto_generichash_blake2b=(A,I,g,C,Q,i,o)=>(B._crypto_generichash_blake2b=L.uc)(A,I,g,C,Q,i,o),B._crypto_generichash_blake2b_salt_personal=(A,I,g,C,Q,i,o,E,a)=>(B._crypto_generichash_blake2b_salt_personal=L.vc)(A,I,g,C,Q,i,o,E,a),B._crypto_generichash_blake2b_init=(A,I,g,C)=>(B._crypto_generichash_blake2b_init=L.wc)(A,I,g,C),B._crypto_generichash_blake2b_init_salt_personal=(A,I,g,C,Q,i)=>(B._crypto_generichash_blake2b_init_salt_personal=L.xc)(A,I,g,C,Q,i),B._crypto_generichash_blake2b_update=(A,I,g,C)=>(B._crypto_generichash_blake2b_update=L.yc)(A,I,g,C),B._crypto_generichash_blake2b_final=(A,I,g)=>(B._crypto_generichash_blake2b_final=L.zc)(A,I,g),B._crypto_hash_bytes=()=>(B._crypto_hash_bytes=L.Ac)(),B._crypto_hash=(A,I,g,C)=>(B._crypto_hash=L.Bc)(A,I,g,C),B._crypto_hash_primitive=()=>(B._crypto_hash_primitive=L.Cc)(),B._crypto_hash_sha256_bytes=()=>(B._crypto_hash_sha256_bytes=L.Dc)(),B._crypto_hash_sha256_statebytes=()=>(B._crypto_hash_sha256_statebytes=L.Ec)(),B._crypto_hash_sha256_init=A=>(B._crypto_hash_sha256_init=L.Fc)(A),B._crypto_hash_sha256_update=(A,I,g,C)=>(B._crypto_hash_sha256_update=L.Gc)(A,I,g,C),B._crypto_hash_sha256_final=(A,I)=>(B._crypto_hash_sha256_final=L.Hc)(A,I),B._crypto_hash_sha256=(A,I,g,C)=>(B._crypto_hash_sha256=L.Ic)(A,I,g,C),B._crypto_hash_sha512_bytes=()=>(B._crypto_hash_sha512_bytes=L.Jc)(),B._crypto_hash_sha512_statebytes=()=>(B._crypto_hash_sha512_statebytes=L.Kc)(),B._crypto_hash_sha512_init=A=>(B._crypto_hash_sha512_init=L.Lc)(A),B._crypto_hash_sha512_update=(A,I,g,C)=>(B._crypto_hash_sha512_update=L.Mc)(A,I,g,C),B._crypto_hash_sha512_final=(A,I)=>(B._crypto_hash_sha512_final=L.Nc)(A,I),B._crypto_hash_sha512=(A,I,g,C)=>(B._crypto_hash_sha512=L.Oc)(A,I,g,C),B._crypto_kdf_blake2b_bytes_min=()=>(B._crypto_kdf_blake2b_bytes_min=L.Pc)(),B._crypto_kdf_blake2b_bytes_max=()=>(B._crypto_kdf_blake2b_bytes_max=L.Qc)(),B._crypto_kdf_blake2b_contextbytes=()=>(B._crypto_kdf_blake2b_contextbytes=L.Rc)(),B._crypto_kdf_blake2b_keybytes=()=>(B._crypto_kdf_blake2b_keybytes=L.Sc)(),B._crypto_kdf_blake2b_derive_from_key=(A,I,g,C,Q,i)=>(B._crypto_kdf_blake2b_derive_from_key=L.Tc)(A,I,g,C,Q,i),B._crypto_kdf_primitive=()=>(B._crypto_kdf_primitive=L.Uc)(),B._crypto_kdf_bytes_min=()=>(B._crypto_kdf_bytes_min=L.Vc)(),B._crypto_kdf_bytes_max=()=>(B._crypto_kdf_bytes_max=L.Wc)(),B._crypto_kdf_contextbytes=()=>(B._crypto_kdf_contextbytes=L.Xc)(),B._crypto_kdf_keybytes=()=>(B._crypto_kdf_keybytes=L.Yc)(),B._crypto_kdf_derive_from_key=(A,I,g,C,Q,i)=>(B._crypto_kdf_derive_from_key=L.Zc)(A,I,g,C,Q,i),B._crypto_kdf_keygen=A=>(B._crypto_kdf_keygen=L._c)(A),B._crypto_kdf_hkdf_sha256_extract_init=(A,I,g)=>(B._crypto_kdf_hkdf_sha256_extract_init=L.$c)(A,I,g),B._crypto_kdf_hkdf_sha256_extract_update=(A,I,g)=>(B._crypto_kdf_hkdf_sha256_extract_update=L.ad)(A,I,g),B._crypto_kdf_hkdf_sha256_extract_final=(A,I)=>(B._crypto_kdf_hkdf_sha256_extract_final=L.bd)(A,I),B._crypto_kdf_hkdf_sha256_extract=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha256_extract=L.cd)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha256_keygen=A=>(B._crypto_kdf_hkdf_sha256_keygen=L.dd)(A),B._crypto_kdf_hkdf_sha256_expand=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha256_expand=L.ed)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha256_keybytes=()=>(B._crypto_kdf_hkdf_sha256_keybytes=L.fd)(),B._crypto_kdf_hkdf_sha256_bytes_min=()=>(B._crypto_kdf_hkdf_sha256_bytes_min=L.gd)(),B._crypto_kdf_hkdf_sha256_bytes_max=()=>(B._crypto_kdf_hkdf_sha256_bytes_max=L.hd)(),B._crypto_kdf_hkdf_sha256_statebytes=()=>(B._crypto_kdf_hkdf_sha256_statebytes=L.id)(),B._crypto_kdf_hkdf_sha512_extract_init=(A,I,g)=>(B._crypto_kdf_hkdf_sha512_extract_init=L.jd)(A,I,g),B._crypto_kdf_hkdf_sha512_extract_update=(A,I,g)=>(B._crypto_kdf_hkdf_sha512_extract_update=L.kd)(A,I,g),B._crypto_kdf_hkdf_sha512_extract_final=(A,I)=>(B._crypto_kdf_hkdf_sha512_extract_final=L.ld)(A,I),B._crypto_kdf_hkdf_sha512_extract=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha512_extract=L.md)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha512_keygen=A=>(B._crypto_kdf_hkdf_sha512_keygen=L.nd)(A),B._crypto_kdf_hkdf_sha512_expand=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha512_expand=L.od)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha512_keybytes=()=>(B._crypto_kdf_hkdf_sha512_keybytes=L.pd)(),B._crypto_kdf_hkdf_sha512_bytes_min=()=>(B._crypto_kdf_hkdf_sha512_bytes_min=L.qd)(),B._crypto_kdf_hkdf_sha512_bytes_max=()=>(B._crypto_kdf_hkdf_sha512_bytes_max=L.rd)(),B._crypto_kdf_hkdf_sha512_statebytes=()=>(B._crypto_kdf_hkdf_sha512_statebytes=L.sd)(),B._crypto_kx_seed_keypair=(A,I,g)=>(B._crypto_kx_seed_keypair=L.td)(A,I,g),B._crypto_kx_keypair=(A,I)=>(B._crypto_kx_keypair=L.ud)(A,I),B._crypto_kx_client_session_keys=(A,I,g,C,Q)=>(B._crypto_kx_client_session_keys=L.vd)(A,I,g,C,Q),B._crypto_kx_server_session_keys=(A,I,g,C,Q)=>(B._crypto_kx_server_session_keys=L.wd)(A,I,g,C,Q),B._crypto_kx_publickeybytes=()=>(B._crypto_kx_publickeybytes=L.xd)(),B._crypto_kx_secretkeybytes=()=>(B._crypto_kx_secretkeybytes=L.yd)(),B._crypto_kx_seedbytes=()=>(B._crypto_kx_seedbytes=L.zd)(),B._crypto_kx_sessionkeybytes=()=>(B._crypto_kx_sessionkeybytes=L.Ad)(),B._crypto_kx_primitive=()=>(B._crypto_kx_primitive=L.Bd)(),B._crypto_onetimeauth_statebytes=()=>(B._crypto_onetimeauth_statebytes=L.Cd)(),B._crypto_onetimeauth_bytes=()=>(B._crypto_onetimeauth_bytes=L.Dd)(),B._crypto_onetimeauth_keybytes=()=>(B._crypto_onetimeauth_keybytes=L.Ed)(),B._crypto_onetimeauth=(A,I,g,C,Q)=>(B._crypto_onetimeauth=L.Fd)(A,I,g,C,Q),B._crypto_onetimeauth_verify=(A,I,g,C,Q)=>(B._crypto_onetimeauth_verify=L.Gd)(A,I,g,C,Q),B._crypto_onetimeauth_init=(A,I)=>(B._crypto_onetimeauth_init=L.Hd)(A,I),B._crypto_onetimeauth_update=(A,I,g,C)=>(B._crypto_onetimeauth_update=L.Id)(A,I,g,C),B._crypto_onetimeauth_final=(A,I)=>(B._crypto_onetimeauth_final=L.Jd)(A,I),B._crypto_onetimeauth_primitive=()=>(B._crypto_onetimeauth_primitive=L.Kd)(),B._crypto_onetimeauth_keygen=A=>(B._crypto_onetimeauth_keygen=L.Ld)(A),B._crypto_onetimeauth_poly1305=(A,I,g,C,Q)=>(B._crypto_onetimeauth_poly1305=L.Md)(A,I,g,C,Q),B._crypto_onetimeauth_poly1305_verify=(A,I,g,C,Q)=>(B._crypto_onetimeauth_poly1305_verify=L.Nd)(A,I,g,C,Q),B._crypto_onetimeauth_poly1305_init=(A,I)=>(B._crypto_onetimeauth_poly1305_init=L.Od)(A,I),B._crypto_onetimeauth_poly1305_update=(A,I,g,C)=>(B._crypto_onetimeauth_poly1305_update=L.Pd)(A,I,g,C),B._crypto_onetimeauth_poly1305_final=(A,I)=>(B._crypto_onetimeauth_poly1305_final=L.Qd)(A,I),B._crypto_onetimeauth_poly1305_bytes=()=>(B._crypto_onetimeauth_poly1305_bytes=L.Rd)(),B._crypto_onetimeauth_poly1305_keybytes=()=>(B._crypto_onetimeauth_poly1305_keybytes=L.Sd)(),B._crypto_onetimeauth_poly1305_statebytes=()=>(B._crypto_onetimeauth_poly1305_statebytes=L.Td)(),B._crypto_onetimeauth_poly1305_keygen=A=>(B._crypto_onetimeauth_poly1305_keygen=L.Ud)(A),B._crypto_pwhash_argon2i_alg_argon2i13=()=>(B._crypto_pwhash_argon2i_alg_argon2i13=L.Vd)(),B._crypto_pwhash_argon2i_bytes_min=()=>(B._crypto_pwhash_argon2i_bytes_min=L.Wd)(),B._crypto_pwhash_argon2i_bytes_max=()=>(B._crypto_pwhash_argon2i_bytes_max=L.Xd)(),B._crypto_pwhash_argon2i_passwd_min=()=>(B._crypto_pwhash_argon2i_passwd_min=L.Yd)(),B._crypto_pwhash_argon2i_passwd_max=()=>(B._crypto_pwhash_argon2i_passwd_max=L.Zd)(),B._crypto_pwhash_argon2i_saltbytes=()=>(B._crypto_pwhash_argon2i_saltbytes=L._d)(),B._crypto_pwhash_argon2i_strbytes=()=>(B._crypto_pwhash_argon2i_strbytes=L.$d)(),B._crypto_pwhash_argon2i_strprefix=()=>(B._crypto_pwhash_argon2i_strprefix=L.ae)(),B._crypto_pwhash_argon2i_opslimit_min=()=>(B._crypto_pwhash_argon2i_opslimit_min=L.be)(),B._crypto_pwhash_argon2i_opslimit_max=()=>(B._crypto_pwhash_argon2i_opslimit_max=L.ce)(),B._crypto_pwhash_argon2i_memlimit_min=()=>(B._crypto_pwhash_argon2i_memlimit_min=L.de)(),B._crypto_pwhash_argon2i_memlimit_max=()=>(B._crypto_pwhash_argon2i_memlimit_max=L.ee)(),B._crypto_pwhash_argon2i_opslimit_interactive=()=>(B._crypto_pwhash_argon2i_opslimit_interactive=L.fe)(),B._crypto_pwhash_argon2i_memlimit_interactive=()=>(B._crypto_pwhash_argon2i_memlimit_interactive=L.ge)(),B._crypto_pwhash_argon2i_opslimit_moderate=()=>(B._crypto_pwhash_argon2i_opslimit_moderate=L.he)(),B._crypto_pwhash_argon2i_memlimit_moderate=()=>(B._crypto_pwhash_argon2i_memlimit_moderate=L.ie)(),B._crypto_pwhash_argon2i_opslimit_sensitive=()=>(B._crypto_pwhash_argon2i_opslimit_sensitive=L.je)(),B._crypto_pwhash_argon2i_memlimit_sensitive=()=>(B._crypto_pwhash_argon2i_memlimit_sensitive=L.ke)(),B._crypto_pwhash_argon2i=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_pwhash_argon2i=L.le)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_pwhash_argon2i_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_argon2i_str=L.me)(A,I,g,C,Q,i,o),B._crypto_pwhash_argon2i_str_verify=(A,I,g,C)=>(B._crypto_pwhash_argon2i_str_verify=L.ne)(A,I,g,C),B._crypto_pwhash_argon2i_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_argon2i_str_needs_rehash=L.oe)(A,I,g,C),B._crypto_pwhash_argon2id_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_argon2id_str_needs_rehash=L.pe)(A,I,g,C),B._crypto_pwhash_argon2id_alg_argon2id13=()=>(B._crypto_pwhash_argon2id_alg_argon2id13=L.qe)(),B._crypto_pwhash_argon2id_bytes_min=()=>(B._crypto_pwhash_argon2id_bytes_min=L.re)(),B._crypto_pwhash_argon2id_bytes_max=()=>(B._crypto_pwhash_argon2id_bytes_max=L.se)(),B._crypto_pwhash_argon2id_passwd_min=()=>(B._crypto_pwhash_argon2id_passwd_min=L.te)(),B._crypto_pwhash_argon2id_passwd_max=()=>(B._crypto_pwhash_argon2id_passwd_max=L.ue)(),B._crypto_pwhash_argon2id_saltbytes=()=>(B._crypto_pwhash_argon2id_saltbytes=L.ve)(),B._crypto_pwhash_argon2id_strbytes=()=>(B._crypto_pwhash_argon2id_strbytes=L.we)(),B._crypto_pwhash_argon2id_strprefix=()=>(B._crypto_pwhash_argon2id_strprefix=L.xe)(),B._crypto_pwhash_argon2id_opslimit_min=()=>(B._crypto_pwhash_argon2id_opslimit_min=L.ye)(),B._crypto_pwhash_argon2id_opslimit_max=()=>(B._crypto_pwhash_argon2id_opslimit_max=L.ze)(),B._crypto_pwhash_argon2id_memlimit_min=()=>(B._crypto_pwhash_argon2id_memlimit_min=L.Ae)(),B._crypto_pwhash_argon2id_memlimit_max=()=>(B._crypto_pwhash_argon2id_memlimit_max=L.Be)(),B._crypto_pwhash_argon2id_opslimit_interactive=()=>(B._crypto_pwhash_argon2id_opslimit_interactive=L.Ce)(),B._crypto_pwhash_argon2id_memlimit_interactive=()=>(B._crypto_pwhash_argon2id_memlimit_interactive=L.De)(),B._crypto_pwhash_argon2id_opslimit_moderate=()=>(B._crypto_pwhash_argon2id_opslimit_moderate=L.Ee)(),B._crypto_pwhash_argon2id_memlimit_moderate=()=>(B._crypto_pwhash_argon2id_memlimit_moderate=L.Fe)(),B._crypto_pwhash_argon2id_opslimit_sensitive=()=>(B._crypto_pwhash_argon2id_opslimit_sensitive=L.Ge)(),B._crypto_pwhash_argon2id_memlimit_sensitive=()=>(B._crypto_pwhash_argon2id_memlimit_sensitive=L.He)(),B._crypto_pwhash_argon2id=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_pwhash_argon2id=L.Ie)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_pwhash_argon2id_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_argon2id_str=L.Je)(A,I,g,C,Q,i,o),B._crypto_pwhash_argon2id_str_verify=(A,I,g,C)=>(B._crypto_pwhash_argon2id_str_verify=L.Ke)(A,I,g,C),B._crypto_pwhash_alg_argon2i13=()=>(B._crypto_pwhash_alg_argon2i13=L.Le)(),B._crypto_pwhash_alg_argon2id13=()=>(B._crypto_pwhash_alg_argon2id13=L.Me)(),B._crypto_pwhash_alg_default=()=>(B._crypto_pwhash_alg_default=L.Ne)(),B._crypto_pwhash_bytes_min=()=>(B._crypto_pwhash_bytes_min=L.Oe)(),B._crypto_pwhash_bytes_max=()=>(B._crypto_pwhash_bytes_max=L.Pe)(),B._crypto_pwhash_passwd_min=()=>(B._crypto_pwhash_passwd_min=L.Qe)(),B._crypto_pwhash_passwd_max=()=>(B._crypto_pwhash_passwd_max=L.Re)(),B._crypto_pwhash_saltbytes=()=>(B._crypto_pwhash_saltbytes=L.Se)(),B._crypto_pwhash_strbytes=()=>(B._crypto_pwhash_strbytes=L.Te)(),B._crypto_pwhash_strprefix=()=>(B._crypto_pwhash_strprefix=L.Ue)(),B._crypto_pwhash_opslimit_min=()=>(B._crypto_pwhash_opslimit_min=L.Ve)(),B._crypto_pwhash_opslimit_max=()=>(B._crypto_pwhash_opslimit_max=L.We)(),B._crypto_pwhash_memlimit_min=()=>(B._crypto_pwhash_memlimit_min=L.Xe)(),B._crypto_pwhash_memlimit_max=()=>(B._crypto_pwhash_memlimit_max=L.Ye)(),B._crypto_pwhash_opslimit_interactive=()=>(B._crypto_pwhash_opslimit_interactive=L.Ze)(),B._crypto_pwhash_memlimit_interactive=()=>(B._crypto_pwhash_memlimit_interactive=L._e)(),B._crypto_pwhash_opslimit_moderate=()=>(B._crypto_pwhash_opslimit_moderate=L.$e)(),B._crypto_pwhash_memlimit_moderate=()=>(B._crypto_pwhash_memlimit_moderate=L.af)(),B._crypto_pwhash_opslimit_sensitive=()=>(B._crypto_pwhash_opslimit_sensitive=L.bf)(),B._crypto_pwhash_memlimit_sensitive=()=>(B._crypto_pwhash_memlimit_sensitive=L.cf)(),B._crypto_pwhash=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_pwhash=L.df)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_pwhash_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_str=L.ef)(A,I,g,C,Q,i,o),B._crypto_pwhash_str_alg=(A,I,g,C,Q,i,o,E)=>(B._crypto_pwhash_str_alg=L.ff)(A,I,g,C,Q,i,o,E),B._crypto_pwhash_str_verify=(A,I,g,C)=>(B._crypto_pwhash_str_verify=L.gf)(A,I,g,C),B._crypto_pwhash_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_str_needs_rehash=L.hf)(A,I,g,C),B._crypto_pwhash_primitive=()=>(B._crypto_pwhash_primitive=L.jf)(),B._crypto_scalarmult_primitive=()=>(B._crypto_scalarmult_primitive=L.kf)(),B._crypto_scalarmult_base=(A,I)=>(B._crypto_scalarmult_base=L.lf)(A,I),B._crypto_scalarmult=(A,I,g)=>(B._crypto_scalarmult=L.mf)(A,I,g),B._crypto_scalarmult_bytes=()=>(B._crypto_scalarmult_bytes=L.nf)(),B._crypto_scalarmult_scalarbytes=()=>(B._crypto_scalarmult_scalarbytes=L.of)(),B._crypto_scalarmult_curve25519=(A,I,g)=>(B._crypto_scalarmult_curve25519=L.pf)(A,I,g),B._crypto_scalarmult_curve25519_base=(A,I)=>(B._crypto_scalarmult_curve25519_base=L.qf)(A,I),B._crypto_scalarmult_curve25519_bytes=()=>(B._crypto_scalarmult_curve25519_bytes=L.rf)(),B._crypto_scalarmult_curve25519_scalarbytes=()=>(B._crypto_scalarmult_curve25519_scalarbytes=L.sf)(),B._crypto_secretbox_keybytes=()=>(B._crypto_secretbox_keybytes=L.tf)(),B._crypto_secretbox_noncebytes=()=>(B._crypto_secretbox_noncebytes=L.uf)(),B._crypto_secretbox_zerobytes=()=>(B._crypto_secretbox_zerobytes=L.vf)(),B._crypto_secretbox_boxzerobytes=()=>(B._crypto_secretbox_boxzerobytes=L.wf)(),B._crypto_secretbox_macbytes=()=>(B._crypto_secretbox_macbytes=L.xf)(),B._crypto_secretbox_messagebytes_max=()=>(B._crypto_secretbox_messagebytes_max=L.yf)(),B._crypto_secretbox_primitive=()=>(B._crypto_secretbox_primitive=L.zf)(),B._crypto_secretbox=(A,I,g,C,Q,i)=>(B._crypto_secretbox=L.Af)(A,I,g,C,Q,i),B._crypto_secretbox_open=(A,I,g,C,Q,i)=>(B._crypto_secretbox_open=L.Bf)(A,I,g,C,Q,i),B._crypto_secretbox_keygen=A=>(B._crypto_secretbox_keygen=L.Cf)(A),B._crypto_secretbox_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_detached=L.Df)(A,I,g,C,Q,i,o),B._crypto_secretbox_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_easy=L.Ef)(A,I,g,C,Q,i),B._crypto_secretbox_open_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_open_detached=L.Ff)(A,I,g,C,Q,i,o),B._crypto_secretbox_open_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_open_easy=L.Gf)(A,I,g,C,Q,i),B._crypto_secretbox_xsalsa20poly1305=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xsalsa20poly1305=L.Hf)(A,I,g,C,Q,i),B._crypto_secretbox_xsalsa20poly1305_open=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xsalsa20poly1305_open=L.If)(A,I,g,C,Q,i),B._crypto_secretbox_xsalsa20poly1305_keybytes=()=>(B._crypto_secretbox_xsalsa20poly1305_keybytes=L.Jf)(),B._crypto_secretbox_xsalsa20poly1305_noncebytes=()=>(B._crypto_secretbox_xsalsa20poly1305_noncebytes=L.Kf)(),B._crypto_secretbox_xsalsa20poly1305_zerobytes=()=>(B._crypto_secretbox_xsalsa20poly1305_zerobytes=L.Lf)(),B._crypto_secretbox_xsalsa20poly1305_boxzerobytes=()=>(B._crypto_secretbox_xsalsa20poly1305_boxzerobytes=L.Mf)(),B._crypto_secretbox_xsalsa20poly1305_macbytes=()=>(B._crypto_secretbox_xsalsa20poly1305_macbytes=L.Nf)(),B._crypto_secretbox_xsalsa20poly1305_messagebytes_max=()=>(B._crypto_secretbox_xsalsa20poly1305_messagebytes_max=L.Of)(),B._crypto_secretbox_xsalsa20poly1305_keygen=A=>(B._crypto_secretbox_xsalsa20poly1305_keygen=L.Pf)(A),B._crypto_secretstream_xchacha20poly1305_keygen=A=>(B._crypto_secretstream_xchacha20poly1305_keygen=L.Qf)(A),B._crypto_secretstream_xchacha20poly1305_init_push=(A,I,g)=>(B._crypto_secretstream_xchacha20poly1305_init_push=L.Rf)(A,I,g),B._crypto_secretstream_xchacha20poly1305_init_pull=(A,I,g)=>(B._crypto_secretstream_xchacha20poly1305_init_pull=L.Sf)(A,I,g),B._crypto_secretstream_xchacha20poly1305_rekey=A=>(B._crypto_secretstream_xchacha20poly1305_rekey=L.Tf)(A),B._crypto_secretstream_xchacha20poly1305_push=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_secretstream_xchacha20poly1305_push=L.Uf)(A,I,g,C,Q,i,o,E,a,_),B._crypto_secretstream_xchacha20poly1305_pull=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_secretstream_xchacha20poly1305_pull=L.Vf)(A,I,g,C,Q,i,o,E,a,_),B._crypto_secretstream_xchacha20poly1305_statebytes=()=>(B._crypto_secretstream_xchacha20poly1305_statebytes=L.Wf)(),B._crypto_secretstream_xchacha20poly1305_abytes=()=>(B._crypto_secretstream_xchacha20poly1305_abytes=L.Xf)(),B._crypto_secretstream_xchacha20poly1305_headerbytes=()=>(B._crypto_secretstream_xchacha20poly1305_headerbytes=L.Yf)(),B._crypto_secretstream_xchacha20poly1305_keybytes=()=>(B._crypto_secretstream_xchacha20poly1305_keybytes=L.Zf)(),B._crypto_secretstream_xchacha20poly1305_messagebytes_max=()=>(B._crypto_secretstream_xchacha20poly1305_messagebytes_max=L._f)(),B._crypto_secretstream_xchacha20poly1305_tag_message=()=>(B._crypto_secretstream_xchacha20poly1305_tag_message=L.$f)(),B._crypto_secretstream_xchacha20poly1305_tag_push=()=>(B._crypto_secretstream_xchacha20poly1305_tag_push=L.ag)(),B._crypto_secretstream_xchacha20poly1305_tag_rekey=()=>(B._crypto_secretstream_xchacha20poly1305_tag_rekey=L.bg)(),B._crypto_secretstream_xchacha20poly1305_tag_final=()=>(B._crypto_secretstream_xchacha20poly1305_tag_final=L.cg)(),B._crypto_shorthash_bytes=()=>(B._crypto_shorthash_bytes=L.dg)(),B._crypto_shorthash_keybytes=()=>(B._crypto_shorthash_keybytes=L.eg)(),B._crypto_shorthash_primitive=()=>(B._crypto_shorthash_primitive=L.fg)(),B._crypto_shorthash=(A,I,g,C,Q)=>(B._crypto_shorthash=L.gg)(A,I,g,C,Q),B._crypto_shorthash_keygen=A=>(B._crypto_shorthash_keygen=L.hg)(A),B._crypto_shorthash_siphash24_bytes=()=>(B._crypto_shorthash_siphash24_bytes=L.ig)(),B._crypto_shorthash_siphash24_keybytes=()=>(B._crypto_shorthash_siphash24_keybytes=L.jg)(),B._crypto_shorthash_siphash24=(A,I,g,C,Q)=>(B._crypto_shorthash_siphash24=L.kg)(A,I,g,C,Q),B._crypto_sign_statebytes=()=>(B._crypto_sign_statebytes=L.lg)(),B._crypto_sign_bytes=()=>(B._crypto_sign_bytes=L.mg)(),B._crypto_sign_seedbytes=()=>(B._crypto_sign_seedbytes=L.ng)(),B._crypto_sign_publickeybytes=()=>(B._crypto_sign_publickeybytes=L.og)(),B._crypto_sign_secretkeybytes=()=>(B._crypto_sign_secretkeybytes=L.pg)(),B._crypto_sign_messagebytes_max=()=>(B._crypto_sign_messagebytes_max=L.qg)(),B._crypto_sign_primitive=()=>(B._crypto_sign_primitive=L.rg)(),B._crypto_sign_seed_keypair=(A,I,g)=>(B._crypto_sign_seed_keypair=L.sg)(A,I,g),B._crypto_sign_keypair=(A,I)=>(B._crypto_sign_keypair=L.tg)(A,I),B._crypto_sign=(A,I,g,C,Q,i)=>(B._crypto_sign=L.ug)(A,I,g,C,Q,i),B._crypto_sign_open=(A,I,g,C,Q,i)=>(B._crypto_sign_open=L.vg)(A,I,g,C,Q,i),B._crypto_sign_detached=(A,I,g,C,Q,i)=>(B._crypto_sign_detached=L.wg)(A,I,g,C,Q,i),B._crypto_sign_verify_detached=(A,I,g,C,Q)=>(B._crypto_sign_verify_detached=L.xg)(A,I,g,C,Q),B._crypto_sign_init=A=>(B._crypto_sign_init=L.yg)(A),B._crypto_sign_update=(A,I,g,C)=>(B._crypto_sign_update=L.zg)(A,I,g,C),B._crypto_sign_final_create=(A,I,g,C)=>(B._crypto_sign_final_create=L.Ag)(A,I,g,C),B._crypto_sign_final_verify=(A,I,g)=>(B._crypto_sign_final_verify=L.Bg)(A,I,g),B._crypto_sign_ed25519ph_statebytes=()=>(B._crypto_sign_ed25519ph_statebytes=L.Cg)(),B._crypto_sign_ed25519_bytes=()=>(B._crypto_sign_ed25519_bytes=L.Dg)(),B._crypto_sign_ed25519_seedbytes=()=>(B._crypto_sign_ed25519_seedbytes=L.Eg)(),B._crypto_sign_ed25519_publickeybytes=()=>(B._crypto_sign_ed25519_publickeybytes=L.Fg)(),B._crypto_sign_ed25519_secretkeybytes=()=>(B._crypto_sign_ed25519_secretkeybytes=L.Gg)(),B._crypto_sign_ed25519_messagebytes_max=()=>(B._crypto_sign_ed25519_messagebytes_max=L.Hg)(),B._crypto_sign_ed25519_sk_to_seed=(A,I)=>(B._crypto_sign_ed25519_sk_to_seed=L.Ig)(A,I),B._crypto_sign_ed25519_sk_to_pk=(A,I)=>(B._crypto_sign_ed25519_sk_to_pk=L.Jg)(A,I),B._crypto_sign_ed25519ph_init=A=>(B._crypto_sign_ed25519ph_init=L.Kg)(A),B._crypto_sign_ed25519ph_update=(A,I,g,C)=>(B._crypto_sign_ed25519ph_update=L.Lg)(A,I,g,C),B._crypto_sign_ed25519ph_final_create=(A,I,g,C)=>(B._crypto_sign_ed25519ph_final_create=L.Mg)(A,I,g,C),B._crypto_sign_ed25519ph_final_verify=(A,I,g)=>(B._crypto_sign_ed25519ph_final_verify=L.Ng)(A,I,g),B._crypto_sign_ed25519_seed_keypair=(A,I,g)=>(B._crypto_sign_ed25519_seed_keypair=L.Og)(A,I,g),B._crypto_sign_ed25519_keypair=(A,I)=>(B._crypto_sign_ed25519_keypair=L.Pg)(A,I),B._crypto_sign_ed25519_pk_to_curve25519=(A,I)=>(B._crypto_sign_ed25519_pk_to_curve25519=L.Qg)(A,I),B._crypto_sign_ed25519_sk_to_curve25519=(A,I)=>(B._crypto_sign_ed25519_sk_to_curve25519=L.Rg)(A,I),B._crypto_sign_ed25519_verify_detached=(A,I,g,C,Q)=>(B._crypto_sign_ed25519_verify_detached=L.Sg)(A,I,g,C,Q),B._crypto_sign_ed25519_open=(A,I,g,C,Q,i)=>(B._crypto_sign_ed25519_open=L.Tg)(A,I,g,C,Q,i),B._crypto_sign_ed25519_detached=(A,I,g,C,Q,i)=>(B._crypto_sign_ed25519_detached=L.Ug)(A,I,g,C,Q,i),B._crypto_sign_ed25519=(A,I,g,C,Q,i)=>(B._crypto_sign_ed25519=L.Vg)(A,I,g,C,Q,i),B._crypto_stream_chacha20_keybytes=()=>(B._crypto_stream_chacha20_keybytes=L.Wg)(),B._crypto_stream_chacha20_noncebytes=()=>(B._crypto_stream_chacha20_noncebytes=L.Xg)(),B._crypto_stream_chacha20_messagebytes_max=()=>(B._crypto_stream_chacha20_messagebytes_max=L.Yg)(),B._crypto_stream_chacha20_ietf_keybytes=()=>(B._crypto_stream_chacha20_ietf_keybytes=L.Zg)(),B._crypto_stream_chacha20_ietf_noncebytes=()=>(B._crypto_stream_chacha20_ietf_noncebytes=L._g)(),B._crypto_stream_chacha20_ietf_messagebytes_max=()=>(B._crypto_stream_chacha20_ietf_messagebytes_max=L.$g)(),B._crypto_stream_chacha20=(A,I,g,C,Q)=>(B._crypto_stream_chacha20=L.ah)(A,I,g,C,Q),B._crypto_stream_chacha20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_chacha20_xor_ic=L.bh)(A,I,g,C,Q,i,o,E),B._crypto_stream_chacha20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_chacha20_xor=L.ch)(A,I,g,C,Q,i),B._crypto_stream_chacha20_ietf=(A,I,g,C,Q)=>(B._crypto_stream_chacha20_ietf=L.dh)(A,I,g,C,Q),B._crypto_stream_chacha20_ietf_xor_ic=(A,I,g,C,Q,i,o)=>(B._crypto_stream_chacha20_ietf_xor_ic=L.eh)(A,I,g,C,Q,i,o),B._crypto_stream_chacha20_ietf_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_chacha20_ietf_xor=L.fh)(A,I,g,C,Q,i),B._crypto_stream_chacha20_ietf_keygen=A=>(B._crypto_stream_chacha20_ietf_keygen=L.gh)(A),B._crypto_stream_chacha20_keygen=A=>(B._crypto_stream_chacha20_keygen=L.hh)(A),B._crypto_stream_keybytes=()=>(B._crypto_stream_keybytes=L.ih)(),B._crypto_stream_noncebytes=()=>(B._crypto_stream_noncebytes=L.jh)(),B._crypto_stream_messagebytes_max=()=>(B._crypto_stream_messagebytes_max=L.kh)(),B._crypto_stream_primitive=()=>(B._crypto_stream_primitive=L.lh)(),B._crypto_stream=(A,I,g,C,Q)=>(B._crypto_stream=L.mh)(A,I,g,C,Q),B._crypto_stream_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_xor=L.nh)(A,I,g,C,Q,i),B._crypto_stream_keygen=A=>(B._crypto_stream_keygen=L.oh)(A),B._crypto_stream_salsa20_keybytes=()=>(B._crypto_stream_salsa20_keybytes=L.ph)(),B._crypto_stream_salsa20_noncebytes=()=>(B._crypto_stream_salsa20_noncebytes=L.qh)(),B._crypto_stream_salsa20_messagebytes_max=()=>(B._crypto_stream_salsa20_messagebytes_max=L.rh)(),B._crypto_stream_salsa20=(A,I,g,C,Q)=>(B._crypto_stream_salsa20=L.sh)(A,I,g,C,Q),B._crypto_stream_salsa20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_salsa20_xor_ic=L.th)(A,I,g,C,Q,i,o,E),B._crypto_stream_salsa20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_salsa20_xor=L.uh)(A,I,g,C,Q,i),B._crypto_stream_salsa20_keygen=A=>(B._crypto_stream_salsa20_keygen=L.vh)(A),B._crypto_stream_xsalsa20=(A,I,g,C,Q)=>(B._crypto_stream_xsalsa20=L.wh)(A,I,g,C,Q),B._crypto_stream_xsalsa20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_xsalsa20_xor_ic=L.xh)(A,I,g,C,Q,i,o,E),B._crypto_stream_xsalsa20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_xsalsa20_xor=L.yh)(A,I,g,C,Q,i),B._crypto_stream_xsalsa20_keybytes=()=>(B._crypto_stream_xsalsa20_keybytes=L.zh)(),B._crypto_stream_xsalsa20_noncebytes=()=>(B._crypto_stream_xsalsa20_noncebytes=L.Ah)(),B._crypto_stream_xsalsa20_messagebytes_max=()=>(B._crypto_stream_xsalsa20_messagebytes_max=L.Bh)(),B._crypto_stream_xsalsa20_keygen=A=>(B._crypto_stream_xsalsa20_keygen=L.Ch)(A),B._crypto_verify_16_bytes=()=>(B._crypto_verify_16_bytes=L.Dh)(),B._crypto_verify_32_bytes=()=>(B._crypto_verify_32_bytes=L.Eh)(),B._crypto_verify_64_bytes=()=>(B._crypto_verify_64_bytes=L.Fh)(),B._crypto_verify_16=(A,I)=>(B._crypto_verify_16=L.Gh)(A,I),B._crypto_verify_32=(A,I)=>(B._crypto_verify_32=L.Hh)(A,I),B._crypto_verify_64=(A,I)=>(B._crypto_verify_64=L.Ih)(A,I),B._randombytes_implementation_name=()=>(B._randombytes_implementation_name=L.Jh)(),B._randombytes_random=()=>(B._randombytes_random=L.Kh)(),B._randombytes_stir=()=>(B._randombytes_stir=L.Lh)(),B._randombytes_uniform=A=>(B._randombytes_uniform=L.Mh)(A),B._randombytes_buf=(A,I)=>(B._randombytes_buf=L.Nh)(A,I),B._randombytes_buf_deterministic=(A,I,g)=>(B._randombytes_buf_deterministic=L.Oh)(A,I,g),B._randombytes_seedbytes=()=>(B._randombytes_seedbytes=L.Ph)(),B._randombytes_close=()=>(B._randombytes_close=L.Qh)(),B._randombytes=(A,I,g)=>(B._randombytes=L.Rh)(A,I,g),B._sodium_bin2hex=(A,I,g,C)=>(B._sodium_bin2hex=L.Sh)(A,I,g,C),B._sodium_hex2bin=(A,I,g,C,Q,i,o)=>(B._sodium_hex2bin=L.Th)(A,I,g,C,Q,i,o),B._sodium_base64_encoded_len=(A,I)=>(B._sodium_base64_encoded_len=L.Uh)(A,I),B._sodium_bin2base64=(A,I,g,C,Q)=>(B._sodium_bin2base64=L.Vh)(A,I,g,C,Q),B._sodium_base642bin=(A,I,g,C,Q,i,o,E)=>(B._sodium_base642bin=L.Wh)(A,I,g,C,Q,i,o,E),B._sodium_init=()=>(B._sodium_init=L.Xh)(),B._sodium_pad=(A,I,g,C,Q)=>(B._sodium_pad=L.Yh)(A,I,g,C,Q),B._sodium_unpad=(A,I,g,C)=>(B._sodium_unpad=L.Zh)(A,I,g,C),B._sodium_version_string=()=>(B._sodium_version_string=L._h)(),B._sodium_library_version_major=()=>(B._sodium_library_version_major=L.$h)(),B._sodium_library_version_minor=()=>(B._sodium_library_version_minor=L.ai)(),B._sodium_library_minimal=()=>(B._sodium_library_minimal=L.bi)(),B._crypto_box_curve25519xchacha20poly1305_seed_keypair=(A,I,g)=>(B._crypto_box_curve25519xchacha20poly1305_seed_keypair=L.ci)(A,I,g),B._crypto_box_curve25519xchacha20poly1305_keypair=(A,I)=>(B._crypto_box_curve25519xchacha20poly1305_keypair=L.di)(A,I),B._crypto_box_curve25519xchacha20poly1305_beforenm=(A,I,g)=>(B._crypto_box_curve25519xchacha20poly1305_beforenm=L.ei)(A,I,g),B._crypto_box_curve25519xchacha20poly1305_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_detached_afternm=L.fi)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_curve25519xchacha20poly1305_detached=L.gi)(A,I,g,C,Q,i,o,E),B._crypto_box_curve25519xchacha20poly1305_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xchacha20poly1305_easy_afternm=L.hi)(A,I,g,C,Q,i),B._crypto_box_curve25519xchacha20poly1305_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_easy=L.ii)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_open_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_open_detached_afternm=L.ji)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_open_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_curve25519xchacha20poly1305_open_detached=L.ki)(A,I,g,C,Q,i,o,E),B._crypto_box_curve25519xchacha20poly1305_open_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xchacha20poly1305_open_easy_afternm=L.li)(A,I,g,C,Q,i),B._crypto_box_curve25519xchacha20poly1305_open_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_open_easy=L.mi)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_seedbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_seedbytes=L.ni)(),B._crypto_box_curve25519xchacha20poly1305_publickeybytes=()=>(B._crypto_box_curve25519xchacha20poly1305_publickeybytes=L.oi)(),B._crypto_box_curve25519xchacha20poly1305_secretkeybytes=()=>(B._crypto_box_curve25519xchacha20poly1305_secretkeybytes=L.pi)(),B._crypto_box_curve25519xchacha20poly1305_beforenmbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_beforenmbytes=L.qi)(),B._crypto_box_curve25519xchacha20poly1305_noncebytes=()=>(B._crypto_box_curve25519xchacha20poly1305_noncebytes=L.ri)(),B._crypto_box_curve25519xchacha20poly1305_macbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_macbytes=L.si)(),B._crypto_box_curve25519xchacha20poly1305_messagebytes_max=()=>(B._crypto_box_curve25519xchacha20poly1305_messagebytes_max=L.ti)(),B._crypto_box_curve25519xchacha20poly1305_seal=(A,I,g,C,Q)=>(B._crypto_box_curve25519xchacha20poly1305_seal=L.ui)(A,I,g,C,Q),B._crypto_box_curve25519xchacha20poly1305_seal_open=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xchacha20poly1305_seal_open=L.vi)(A,I,g,C,Q,i),B._crypto_box_curve25519xchacha20poly1305_sealbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_sealbytes=L.wi)(),B._crypto_core_ed25519_is_valid_point=A=>(B._crypto_core_ed25519_is_valid_point=L.xi)(A),B._crypto_core_ed25519_add=(A,I,g)=>(B._crypto_core_ed25519_add=L.yi)(A,I,g),B._crypto_core_ed25519_sub=(A,I,g)=>(B._crypto_core_ed25519_sub=L.zi)(A,I,g),B._crypto_core_ed25519_from_uniform=(A,I)=>(B._crypto_core_ed25519_from_uniform=L.Ai)(A,I),B._crypto_core_ed25519_random=A=>(B._crypto_core_ed25519_random=L.Bi)(A),B._crypto_core_ed25519_scalar_random=A=>(B._crypto_core_ed25519_scalar_random=L.Ci)(A),B._crypto_core_ed25519_scalar_invert=(A,I)=>(B._crypto_core_ed25519_scalar_invert=L.Di)(A,I),B._crypto_core_ed25519_scalar_negate=(A,I)=>(B._crypto_core_ed25519_scalar_negate=L.Ei)(A,I),B._crypto_core_ed25519_scalar_complement=(A,I)=>(B._crypto_core_ed25519_scalar_complement=L.Fi)(A,I),B._crypto_core_ed25519_scalar_add=(A,I,g)=>(B._crypto_core_ed25519_scalar_add=L.Gi)(A,I,g),B._crypto_core_ed25519_scalar_reduce=(A,I)=>(B._crypto_core_ed25519_scalar_reduce=L.Hi)(A,I),B._crypto_core_ed25519_scalar_sub=(A,I,g)=>(B._crypto_core_ed25519_scalar_sub=L.Ii)(A,I,g),B._crypto_core_ed25519_scalar_mul=(A,I,g)=>(B._crypto_core_ed25519_scalar_mul=L.Ji)(A,I,g),B._crypto_core_ed25519_bytes=()=>(B._crypto_core_ed25519_bytes=L.Ki)(),B._crypto_core_ed25519_nonreducedscalarbytes=()=>(B._crypto_core_ed25519_nonreducedscalarbytes=L.Li)(),B._crypto_core_ed25519_uniformbytes=()=>(B._crypto_core_ed25519_uniformbytes=L.Mi)(),B._crypto_core_ed25519_hashbytes=()=>(B._crypto_core_ed25519_hashbytes=L.Ni)(),B._crypto_core_ed25519_scalarbytes=()=>(B._crypto_core_ed25519_scalarbytes=L.Oi)(),B._crypto_core_ristretto255_is_valid_point=A=>(B._crypto_core_ristretto255_is_valid_point=L.Pi)(A),B._crypto_core_ristretto255_add=(A,I,g)=>(B._crypto_core_ristretto255_add=L.Qi)(A,I,g),B._crypto_core_ristretto255_sub=(A,I,g)=>(B._crypto_core_ristretto255_sub=L.Ri)(A,I,g),B._crypto_core_ristretto255_from_hash=(A,I)=>(B._crypto_core_ristretto255_from_hash=L.Si)(A,I),B._crypto_core_ristretto255_random=A=>(B._crypto_core_ristretto255_random=L.Ti)(A),B._crypto_core_ristretto255_scalar_random=A=>(B._crypto_core_ristretto255_scalar_random=L.Ui)(A),B._crypto_core_ristretto255_scalar_invert=(A,I)=>(B._crypto_core_ristretto255_scalar_invert=L.Vi)(A,I),B._crypto_core_ristretto255_scalar_negate=(A,I)=>(B._crypto_core_ristretto255_scalar_negate=L.Wi)(A,I),B._crypto_core_ristretto255_scalar_complement=(A,I)=>(B._crypto_core_ristretto255_scalar_complement=L.Xi)(A,I),B._crypto_core_ristretto255_scalar_add=(A,I,g)=>(B._crypto_core_ristretto255_scalar_add=L.Yi)(A,I,g),B._crypto_core_ristretto255_scalar_sub=(A,I,g)=>(B._crypto_core_ristretto255_scalar_sub=L.Zi)(A,I,g),B._crypto_core_ristretto255_scalar_mul=(A,I,g)=>(B._crypto_core_ristretto255_scalar_mul=L._i)(A,I,g),B._crypto_core_ristretto255_scalar_reduce=(A,I)=>(B._crypto_core_ristretto255_scalar_reduce=L.$i)(A,I),B._crypto_core_ristretto255_bytes=()=>(B._crypto_core_ristretto255_bytes=L.aj)(),B._crypto_core_ristretto255_nonreducedscalarbytes=()=>(B._crypto_core_ristretto255_nonreducedscalarbytes=L.bj)(),B._crypto_core_ristretto255_hashbytes=()=>(B._crypto_core_ristretto255_hashbytes=L.cj)(),B._crypto_core_ristretto255_scalarbytes=()=>(B._crypto_core_ristretto255_scalarbytes=L.dj)(),B._crypto_pwhash_scryptsalsa208sha256_ll=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_pwhash_scryptsalsa208sha256_ll=L.ej)(A,I,g,C,Q,i,o,E,a,_),B._crypto_pwhash_scryptsalsa208sha256_bytes_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_bytes_min=L.fj)(),B._crypto_pwhash_scryptsalsa208sha256_bytes_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_bytes_max=L.gj)(),B._crypto_pwhash_scryptsalsa208sha256_passwd_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_passwd_min=L.hj)(),B._crypto_pwhash_scryptsalsa208sha256_passwd_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_passwd_max=L.ij)(),B._crypto_pwhash_scryptsalsa208sha256_saltbytes=()=>(B._crypto_pwhash_scryptsalsa208sha256_saltbytes=L.jj)(),B._crypto_pwhash_scryptsalsa208sha256_strbytes=()=>(B._crypto_pwhash_scryptsalsa208sha256_strbytes=L.kj)(),B._crypto_pwhash_scryptsalsa208sha256_strprefix=()=>(B._crypto_pwhash_scryptsalsa208sha256_strprefix=L.lj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_min=L.mj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_max=L.nj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_min=L.oj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_max=L.pj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=L.qj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=L.rj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=L.sj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=L.tj)(),B._crypto_pwhash_scryptsalsa208sha256=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_pwhash_scryptsalsa208sha256=L.uj)(A,I,g,C,Q,i,o,E,a,_),B._crypto_pwhash_scryptsalsa208sha256_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_scryptsalsa208sha256_str=L.vj)(A,I,g,C,Q,i,o),B._crypto_pwhash_scryptsalsa208sha256_str_verify=(A,I,g,C)=>(B._crypto_pwhash_scryptsalsa208sha256_str_verify=L.wj)(A,I,g,C),B._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=L.xj)(A,I,g,C),B._crypto_scalarmult_ed25519=(A,I,g)=>(B._crypto_scalarmult_ed25519=L.yj)(A,I,g),B._crypto_scalarmult_ed25519_noclamp=(A,I,g)=>(B._crypto_scalarmult_ed25519_noclamp=L.zj)(A,I,g),B._crypto_scalarmult_ed25519_base=(A,I)=>(B._crypto_scalarmult_ed25519_base=L.Aj)(A,I),B._crypto_scalarmult_ed25519_base_noclamp=(A,I)=>(B._crypto_scalarmult_ed25519_base_noclamp=L.Bj)(A,I),B._crypto_scalarmult_ed25519_bytes=()=>(B._crypto_scalarmult_ed25519_bytes=L.Cj)(),B._crypto_scalarmult_ed25519_scalarbytes=()=>(B._crypto_scalarmult_ed25519_scalarbytes=L.Dj)(),B._crypto_scalarmult_ristretto255=(A,I,g)=>(B._crypto_scalarmult_ristretto255=L.Ej)(A,I,g),B._crypto_scalarmult_ristretto255_base=(A,I)=>(B._crypto_scalarmult_ristretto255_base=L.Fj)(A,I),B._crypto_scalarmult_ristretto255_bytes=()=>(B._crypto_scalarmult_ristretto255_bytes=L.Gj)(),B._crypto_scalarmult_ristretto255_scalarbytes=()=>(B._crypto_scalarmult_ristretto255_scalarbytes=L.Hj)(),B._crypto_secretbox_xchacha20poly1305_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_xchacha20poly1305_detached=L.Ij)(A,I,g,C,Q,i,o),B._crypto_secretbox_xchacha20poly1305_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xchacha20poly1305_easy=L.Jj)(A,I,g,C,Q,i),B._crypto_secretbox_xchacha20poly1305_open_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_xchacha20poly1305_open_detached=L.Kj)(A,I,g,C,Q,i,o),B._crypto_secretbox_xchacha20poly1305_open_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xchacha20poly1305_open_easy=L.Lj)(A,I,g,C,Q,i),B._crypto_secretbox_xchacha20poly1305_keybytes=()=>(B._crypto_secretbox_xchacha20poly1305_keybytes=L.Mj)(),B._crypto_secretbox_xchacha20poly1305_noncebytes=()=>(B._crypto_secretbox_xchacha20poly1305_noncebytes=L.Nj)(),B._crypto_secretbox_xchacha20poly1305_macbytes=()=>(B._crypto_secretbox_xchacha20poly1305_macbytes=L.Oj)(),B._crypto_secretbox_xchacha20poly1305_messagebytes_max=()=>(B._crypto_secretbox_xchacha20poly1305_messagebytes_max=L.Pj)(),B._crypto_shorthash_siphashx24_bytes=()=>(B._crypto_shorthash_siphashx24_bytes=L.Qj)(),B._crypto_shorthash_siphashx24_keybytes=()=>(B._crypto_shorthash_siphashx24_keybytes=L.Rj)(),B._crypto_shorthash_siphashx24=(A,I,g,C,Q)=>(B._crypto_shorthash_siphashx24=L.Sj)(A,I,g,C,Q),B._crypto_stream_salsa2012=(A,I,g,C,Q)=>(B._crypto_stream_salsa2012=L.Tj)(A,I,g,C,Q),B._crypto_stream_salsa2012_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_salsa2012_xor=L.Uj)(A,I,g,C,Q,i),B._crypto_stream_salsa2012_keybytes=()=>(B._crypto_stream_salsa2012_keybytes=L.Vj)(),B._crypto_stream_salsa2012_noncebytes=()=>(B._crypto_stream_salsa2012_noncebytes=L.Wj)(),B._crypto_stream_salsa2012_messagebytes_max=()=>(B._crypto_stream_salsa2012_messagebytes_max=L.Xj)(),B._crypto_stream_salsa2012_keygen=A=>(B._crypto_stream_salsa2012_keygen=L.Yj)(A),B._crypto_stream_salsa208=(A,I,g,C,Q)=>(B._crypto_stream_salsa208=L.Zj)(A,I,g,C,Q),B._crypto_stream_salsa208_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_salsa208_xor=L._j)(A,I,g,C,Q,i),B._crypto_stream_salsa208_keybytes=()=>(B._crypto_stream_salsa208_keybytes=L.$j)(),B._crypto_stream_salsa208_noncebytes=()=>(B._crypto_stream_salsa208_noncebytes=L.ak)(),B._crypto_stream_salsa208_messagebytes_max=()=>(B._crypto_stream_salsa208_messagebytes_max=L.bk)(),B._crypto_stream_salsa208_keygen=A=>(B._crypto_stream_salsa208_keygen=L.ck)(A),B._crypto_stream_xchacha20_keybytes=()=>(B._crypto_stream_xchacha20_keybytes=L.dk)(),B._crypto_stream_xchacha20_noncebytes=()=>(B._crypto_stream_xchacha20_noncebytes=L.ek)(),B._crypto_stream_xchacha20_messagebytes_max=()=>(B._crypto_stream_xchacha20_messagebytes_max=L.fk)(),B._crypto_stream_xchacha20=(A,I,g,C,Q)=>(B._crypto_stream_xchacha20=L.gk)(A,I,g,C,Q),B._crypto_stream_xchacha20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_xchacha20_xor_ic=L.hk)(A,I,g,C,Q,i,o,E),B._crypto_stream_xchacha20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_xchacha20_xor=L.ik)(A,I,g,C,Q,i),B._crypto_stream_xchacha20_keygen=A=>(B._crypto_stream_xchacha20_keygen=L.jk)(A),B._malloc=A=>(B._malloc=L.kk)(A),B._free=A=>(B._free=L.lk)(A),B.setValue=function(A,I,g="i8"){switch(g.endsWith("*")&&(g="*"),g){case"i1":case"i8":s[A]=I;break;case"i16":D[A>>1]=I;break;case"i32":f[A>>2]=I;break;case"i64":b("to do setValue(i64) use WASM_BIGINT");case"float":w[A>>2]=I;break;case"double":n[A>>3]=I;break;case"*":p[A>>2]=I;break;default:b(`invalid type for setValue: ${g}`)}},B.getValue=function(A,I="i8"){switch(I.endsWith("*")&&(I="*"),I){case"i1":case"i8":return s[A];case"i16":return D[A>>1];case"i32":return f[A>>2];case"i64":b("to do getValue(i64) use WASM_BIGINT");case"float":return w[A>>2];case"double":return n[A>>3];case"*":return p[A>>2];default:b(`invalid type for getValue: ${I}`)}},B.UTF8ToString=u,U=function A(){m||P(),m||(U=A)},B.preInit)for("function"==typeof B.preInit&&(B.preInit=[B.preInit]);B.preInit.length>0;)B.preInit.pop()();P()}))};var g,B=void 0!==B?B:{},Q="object"==typeof window,i="function"==typeof importScripts,o="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,E=Object.assign({},B),a="";if(o){var _=__webpack_require__(/*! fs */ "?0b9d"),c=__webpack_require__(/*! path */ "?5b1a");a=__dirname+"/",g=A=>(A=Y(A)?new URL(A):c.normalize(A),_.readFileSync(A)),!B.thisProgram&&process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2), true&&(module.exports=B)}else(Q||i)&&(i?a=self.location.href:"undefined"!=typeof document&&document.currentScript&&(a=document.currentScript.src),a=a.startsWith("blob:")?"":a.substr(0,a.replace(/[?#].*/,"").lastIndexOf("/")+1),i&&(g=A=>{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}));B.print;var t,r,e=B.printErr||void 0;Object.assign(B,E),E=null,B.arguments&&B.arguments,B.thisProgram&&B.thisProgram,B.quit&&B.quit,B.wasmBinary&&(t=B.wasmBinary);var y,s,h,D,f,p,w,n=!1;function k(){var A=r.buffer;B.HEAP8=y=new Int8Array(A),B.HEAP16=h=new Int16Array(A),B.HEAPU8=s=new Uint8Array(A),B.HEAPU16=new Uint16Array(A),B.HEAP32=D=new Int32Array(A),B.HEAPU32=f=new Uint32Array(A),B.HEAPF32=p=new Float32Array(A),B.HEAPF64=w=new Float64Array(A)}var F=[],S=[],N=[],G=0,M=null,K=null;function U(A){throw B.onAbort?.(A),e(A="Aborted("+A+")"),n=!0,A+=". Build with -sASSERTIONS for more info.",new WebAssembly.RuntimeError(A)}var b,H="data:application/octet-stream;base64,",Y=A=>A.startsWith("file://");function J(A){return Promise.resolve().then((()=>function(A){if(A==b&&t)return new Uint8Array(t);var I=function(A){if((A=>A.startsWith(H))(A))return function(A){if(void 0!==o&&o){var I=Buffer.from(A,"base64");return new Uint8Array(I.buffer,I.byteOffset,I.length)}for(var g=atob(A),C=new Uint8Array(g.length),B=0;B<g.length;++B)C[B]=g.charCodeAt(B);return C}(A.slice(37))}(A);if(I)return I;if(g)return g(A);throw"both async and sync fetching of the wasm failed"}(A)))}var d={36800:()=>B.getRandomValue(),36836:()=>{if(void 0===B.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto;I=void 0===I?C:I;var g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),B.getRandomValue=g}catch(A){try{var C=__webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js"),Q=function(){var A=C.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};Q(),B.getRandomValue=Q}catch(A){throw"No secure random number generator found"}}}},m=A=>{for(;A.length>0;)A.shift()(B)};B.noExitRuntime;var l,u="undefined"!=typeof TextDecoder?new TextDecoder:void 0,x=(A,I)=>A?((A,I,g)=>{for(var C=I+g,B=I;A[B]&&!(B>=C);)++B;if(B-I>16&&A.buffer&&u)return u.decode(A.subarray(I,B));for(var Q="";I<B;){var i=A[I++];if(128&i){var o=63&A[I++];if(192!=(224&i)){var E=63&A[I++];if((i=224==(240&i)?(15&i)<<12|o<<6|E:(7&i)<<18|o<<12|E<<6|63&A[I++])<65536)Q+=String.fromCharCode(i);else{var a=i-65536;Q+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else Q+=String.fromCharCode((31&i)<<6|o)}else Q+=String.fromCharCode(i)}return Q})(s,A,I):"",v=[],R=A=>{var I=(A-r.buffer.byteLength+65535)/65536;try{return r.grow(I),k(),1}catch(A){}},L={b:(A,I,g,C)=>{U(`Assertion failed: ${x(A)}, at: `+[I?x(I):"unknown filename",g,C?x(C):"unknown function"])},c:()=>{U("")},d:(A,I,g)=>s.copyWithin(A,I,I+g),a:(A,I,g)=>((A,I,g)=>{var C=((A,I)=>{var g;for(v.length=0;g=s[A++];){var C=105!=g;I+=(C&=112!=g)&&I%8?4:0,v.push(112==g?f[I>>2]:105==g?D[I>>2]:w[I>>3]),I+=C?8:4}return v})(I,g);return d[A](...C)})(A,I,g),e:A=>{var I=s.length,g=2147483648;if((A>>>=0)>g)return!1;for(var C,B=1;B<=4;B*=2){var Q=I*(1+.2/B);Q=Math.min(Q,A+100663296);var i=Math.min(g,(C=Math.max(A,Q))+(65536-C%65536)%65536);if(R(i))return!0}return!1}},P=function(){var A,I={a:L};function g(A,I){return P=A.exports,r=P.f,k(),function(A){if(G--,B.monitorRunDependencies?.(G),0==G&&(null!==M&&(clearInterval(M),M=null),K)){var I=K;K=null,I()}}(),P}if(G++,B.monitorRunDependencies?.(G),B.instantiateWasm)try{return B.instantiateWasm(I,g)}catch(A){return e(`Module.instantiateWasm callback failed with error: ${A}`),!1}return b||(b="data:application/octet-stream;base64,"),A=I,J(b).then((I=>WebAssembly.instantiate(I,A))).then((function(A){g(A.instance)}),(A=>{e(`failed to asynchronously prepare wasm: ${A}`),U(A)})),{}}();function q(){function A(){l||(l=!0,B.calledRun=!0,n||(m(S),B.onRuntimeInitialized?.(),function(){if(B.postRun)for("function"==typeof B.postRun&&(B.postRun=[B.postRun]);B.postRun.length;)A=B.postRun.shift(),N.unshift(A);var A;m(N)}()))}G>0||(function(){if(B.preRun)for("function"==typeof B.preRun&&(B.preRun=[B.preRun]);B.preRun.length;)A=B.preRun.shift(),F.unshift(A);var A;m(F)}(),G>0||(B.setStatus?(B.setStatus("Running..."),setTimeout((function(){setTimeout((function(){B.setStatus("")}),1),A()}),1)):A()))}if(B._crypto_aead_aegis128l_keybytes=()=>(B._crypto_aead_aegis128l_keybytes=P.g)(),B._crypto_aead_aegis128l_nsecbytes=()=>(B._crypto_aead_aegis128l_nsecbytes=P.h)(),B._crypto_aead_aegis128l_npubbytes=()=>(B._crypto_aead_aegis128l_npubbytes=P.i)(),B._crypto_aead_aegis128l_abytes=()=>(B._crypto_aead_aegis128l_abytes=P.j)(),B._crypto_aead_aegis128l_messagebytes_max=()=>(B._crypto_aead_aegis128l_messagebytes_max=P.k)(),B._crypto_aead_aegis128l_keygen=A=>(B._crypto_aead_aegis128l_keygen=P.l)(A),B._crypto_aead_aegis128l_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis128l_encrypt=P.m)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis128l_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_aegis128l_encrypt_detached=P.n)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_aegis128l_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis128l_decrypt=P.o)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis128l_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis128l_decrypt_detached=P.p)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis256_keybytes=()=>(B._crypto_aead_aegis256_keybytes=P.q)(),B._crypto_aead_aegis256_nsecbytes=()=>(B._crypto_aead_aegis256_nsecbytes=P.r)(),B._crypto_aead_aegis256_npubbytes=()=>(B._crypto_aead_aegis256_npubbytes=P.s)(),B._crypto_aead_aegis256_abytes=()=>(B._crypto_aead_aegis256_abytes=P.t)(),B._crypto_aead_aegis256_messagebytes_max=()=>(B._crypto_aead_aegis256_messagebytes_max=P.u)(),B._crypto_aead_aegis256_keygen=A=>(B._crypto_aead_aegis256_keygen=P.v)(A),B._crypto_aead_aegis256_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis256_encrypt=P.w)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis256_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_aegis256_encrypt_detached=P.x)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_aegis256_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis256_decrypt=P.y)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aegis256_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_aegis256_decrypt_detached=P.z)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_aes256gcm_is_available=()=>(B._crypto_aead_aes256gcm_is_available=P.A)(),B._crypto_aead_chacha20poly1305_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_chacha20poly1305_encrypt_detached=P.B)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_chacha20poly1305_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_encrypt=P.C)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_chacha20poly1305_ietf_encrypt_detached=P.D)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_chacha20poly1305_ietf_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_ietf_encrypt=P.E)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_decrypt_detached=P.F)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_decrypt=P.G)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_ietf_decrypt_detached=P.H)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_chacha20poly1305_ietf_decrypt=P.I)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_chacha20poly1305_ietf_keybytes=()=>(B._crypto_aead_chacha20poly1305_ietf_keybytes=P.J)(),B._crypto_aead_chacha20poly1305_ietf_npubbytes=()=>(B._crypto_aead_chacha20poly1305_ietf_npubbytes=P.K)(),B._crypto_aead_chacha20poly1305_ietf_nsecbytes=()=>(B._crypto_aead_chacha20poly1305_ietf_nsecbytes=P.L)(),B._crypto_aead_chacha20poly1305_ietf_abytes=()=>(B._crypto_aead_chacha20poly1305_ietf_abytes=P.M)(),B._crypto_aead_chacha20poly1305_ietf_messagebytes_max=()=>(B._crypto_aead_chacha20poly1305_ietf_messagebytes_max=P.N)(),B._crypto_aead_chacha20poly1305_ietf_keygen=A=>(B._crypto_aead_chacha20poly1305_ietf_keygen=P.O)(A),B._crypto_aead_chacha20poly1305_keybytes=()=>(B._crypto_aead_chacha20poly1305_keybytes=P.P)(),B._crypto_aead_chacha20poly1305_npubbytes=()=>(B._crypto_aead_chacha20poly1305_npubbytes=P.Q)(),B._crypto_aead_chacha20poly1305_nsecbytes=()=>(B._crypto_aead_chacha20poly1305_nsecbytes=P.R)(),B._crypto_aead_chacha20poly1305_abytes=()=>(B._crypto_aead_chacha20poly1305_abytes=P.S)(),B._crypto_aead_chacha20poly1305_messagebytes_max=()=>(B._crypto_aead_chacha20poly1305_messagebytes_max=P.T)(),B._crypto_aead_chacha20poly1305_keygen=A=>(B._crypto_aead_chacha20poly1305_keygen=P.U)(A),B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c,t)=>(B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=P.V)(A,I,g,C,Q,i,o,E,a,_,c,t),B._crypto_aead_xchacha20poly1305_ietf_encrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_xchacha20poly1305_ietf_encrypt=P.W)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=P.X)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_xchacha20poly1305_ietf_decrypt=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_aead_xchacha20poly1305_ietf_decrypt=P.Y)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_aead_xchacha20poly1305_ietf_keybytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_keybytes=P.Z)(),B._crypto_aead_xchacha20poly1305_ietf_npubbytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_npubbytes=P._)(),B._crypto_aead_xchacha20poly1305_ietf_nsecbytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_nsecbytes=P.$)(),B._crypto_aead_xchacha20poly1305_ietf_abytes=()=>(B._crypto_aead_xchacha20poly1305_ietf_abytes=P.aa)(),B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=()=>(B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=P.ba)(),B._crypto_aead_xchacha20poly1305_ietf_keygen=A=>(B._crypto_aead_xchacha20poly1305_ietf_keygen=P.ca)(A),B._crypto_auth_bytes=()=>(B._crypto_auth_bytes=P.da)(),B._crypto_auth_keybytes=()=>(B._crypto_auth_keybytes=P.ea)(),B._crypto_auth_primitive=()=>(B._crypto_auth_primitive=P.fa)(),B._crypto_auth=(A,I,g,C,Q)=>(B._crypto_auth=P.ga)(A,I,g,C,Q),B._crypto_auth_verify=(A,I,g,C,Q)=>(B._crypto_auth_verify=P.ha)(A,I,g,C,Q),B._crypto_auth_keygen=A=>(B._crypto_auth_keygen=P.ia)(A),B._crypto_auth_hmacsha256_bytes=()=>(B._crypto_auth_hmacsha256_bytes=P.ja)(),B._crypto_auth_hmacsha256_keybytes=()=>(B._crypto_auth_hmacsha256_keybytes=P.ka)(),B._crypto_auth_hmacsha256_statebytes=()=>(B._crypto_auth_hmacsha256_statebytes=P.la)(),B._crypto_auth_hmacsha256_keygen=A=>(B._crypto_auth_hmacsha256_keygen=P.ma)(A),B._crypto_auth_hmacsha256_init=(A,I,g)=>(B._crypto_auth_hmacsha256_init=P.na)(A,I,g),B._crypto_auth_hmacsha256_update=(A,I,g,C)=>(B._crypto_auth_hmacsha256_update=P.oa)(A,I,g,C),B._crypto_auth_hmacsha256_final=(A,I)=>(B._crypto_auth_hmacsha256_final=P.pa)(A,I),B._crypto_auth_hmacsha256=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha256=P.qa)(A,I,g,C,Q),B._crypto_auth_hmacsha256_verify=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha256_verify=P.ra)(A,I,g,C,Q),B._crypto_auth_hmacsha512_bytes=()=>(B._crypto_auth_hmacsha512_bytes=P.sa)(),B._crypto_auth_hmacsha512_keybytes=()=>(B._crypto_auth_hmacsha512_keybytes=P.ta)(),B._crypto_auth_hmacsha512_statebytes=()=>(B._crypto_auth_hmacsha512_statebytes=P.ua)(),B._crypto_auth_hmacsha512_keygen=A=>(B._crypto_auth_hmacsha512_keygen=P.va)(A),B._crypto_auth_hmacsha512_init=(A,I,g)=>(B._crypto_auth_hmacsha512_init=P.wa)(A,I,g),B._crypto_auth_hmacsha512_update=(A,I,g,C)=>(B._crypto_auth_hmacsha512_update=P.xa)(A,I,g,C),B._crypto_auth_hmacsha512_final=(A,I)=>(B._crypto_auth_hmacsha512_final=P.ya)(A,I),B._crypto_auth_hmacsha512=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512=P.za)(A,I,g,C,Q),B._crypto_auth_hmacsha512_verify=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512_verify=P.Aa)(A,I,g,C,Q),B._crypto_auth_hmacsha512256_bytes=()=>(B._crypto_auth_hmacsha512256_bytes=P.Ba)(),B._crypto_auth_hmacsha512256_keybytes=()=>(B._crypto_auth_hmacsha512256_keybytes=P.Ca)(),B._crypto_auth_hmacsha512256_statebytes=()=>(B._crypto_auth_hmacsha512256_statebytes=P.Da)(),B._crypto_auth_hmacsha512256_keygen=A=>(B._crypto_auth_hmacsha512256_keygen=P.Ea)(A),B._crypto_auth_hmacsha512256_init=(A,I,g)=>(B._crypto_auth_hmacsha512256_init=P.Fa)(A,I,g),B._crypto_auth_hmacsha512256_update=(A,I,g,C)=>(B._crypto_auth_hmacsha512256_update=P.Ga)(A,I,g,C),B._crypto_auth_hmacsha512256_final=(A,I)=>(B._crypto_auth_hmacsha512256_final=P.Ha)(A,I),B._crypto_auth_hmacsha512256=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512256=P.Ia)(A,I,g,C,Q),B._crypto_auth_hmacsha512256_verify=(A,I,g,C,Q)=>(B._crypto_auth_hmacsha512256_verify=P.Ja)(A,I,g,C,Q),B._crypto_box_seedbytes=()=>(B._crypto_box_seedbytes=P.Ka)(),B._crypto_box_publickeybytes=()=>(B._crypto_box_publickeybytes=P.La)(),B._crypto_box_secretkeybytes=()=>(B._crypto_box_secretkeybytes=P.Ma)(),B._crypto_box_beforenmbytes=()=>(B._crypto_box_beforenmbytes=P.Na)(),B._crypto_box_noncebytes=()=>(B._crypto_box_noncebytes=P.Oa)(),B._crypto_box_zerobytes=()=>(B._crypto_box_zerobytes=P.Pa)(),B._crypto_box_boxzerobytes=()=>(B._crypto_box_boxzerobytes=P.Qa)(),B._crypto_box_macbytes=()=>(B._crypto_box_macbytes=P.Ra)(),B._crypto_box_messagebytes_max=()=>(B._crypto_box_messagebytes_max=P.Sa)(),B._crypto_box_primitive=()=>(B._crypto_box_primitive=P.Ta)(),B._crypto_box_seed_keypair=(A,I,g)=>(B._crypto_box_seed_keypair=P.Ua)(A,I,g),B._crypto_box_keypair=(A,I)=>(B._crypto_box_keypair=P.Va)(A,I),B._crypto_box_beforenm=(A,I,g)=>(B._crypto_box_beforenm=P.Wa)(A,I,g),B._crypto_box_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_afternm=P.Xa)(A,I,g,C,Q,i),B._crypto_box_open_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_open_afternm=P.Ya)(A,I,g,C,Q,i),B._crypto_box=(A,I,g,C,Q,i,o)=>(B._crypto_box=P.Za)(A,I,g,C,Q,i,o),B._crypto_box_open=(A,I,g,C,Q,i,o)=>(B._crypto_box_open=P._a)(A,I,g,C,Q,i,o),B._crypto_box_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_detached_afternm=P.$a)(A,I,g,C,Q,i,o),B._crypto_box_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_detached=P.ab)(A,I,g,C,Q,i,o,E),B._crypto_box_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_easy_afternm=P.bb)(A,I,g,C,Q,i),B._crypto_box_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_easy=P.cb)(A,I,g,C,Q,i,o),B._crypto_box_open_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_open_detached_afternm=P.db)(A,I,g,C,Q,i,o),B._crypto_box_open_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_open_detached=P.eb)(A,I,g,C,Q,i,o,E),B._crypto_box_open_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_open_easy_afternm=P.fb)(A,I,g,C,Q,i),B._crypto_box_open_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_open_easy=P.gb)(A,I,g,C,Q,i,o),B._crypto_box_seal=(A,I,g,C,Q)=>(B._crypto_box_seal=P.hb)(A,I,g,C,Q),B._crypto_box_seal_open=(A,I,g,C,Q,i)=>(B._crypto_box_seal_open=P.ib)(A,I,g,C,Q,i),B._crypto_box_sealbytes=()=>(B._crypto_box_sealbytes=P.jb)(),B._crypto_box_curve25519xsalsa20poly1305_seed_keypair=(A,I,g)=>(B._crypto_box_curve25519xsalsa20poly1305_seed_keypair=P.kb)(A,I,g),B._crypto_box_curve25519xsalsa20poly1305_keypair=(A,I)=>(B._crypto_box_curve25519xsalsa20poly1305_keypair=P.lb)(A,I),B._crypto_box_curve25519xsalsa20poly1305_beforenm=(A,I,g)=>(B._crypto_box_curve25519xsalsa20poly1305_beforenm=P.mb)(A,I,g),B._crypto_box_curve25519xsalsa20poly1305_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xsalsa20poly1305_afternm=P.nb)(A,I,g,C,Q,i),B._crypto_box_curve25519xsalsa20poly1305_open_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xsalsa20poly1305_open_afternm=P.ob)(A,I,g,C,Q,i),B._crypto_box_curve25519xsalsa20poly1305=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xsalsa20poly1305=P.pb)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xsalsa20poly1305_open=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xsalsa20poly1305_open=P.qb)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xsalsa20poly1305_seedbytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_seedbytes=P.rb)(),B._crypto_box_curve25519xsalsa20poly1305_publickeybytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_publickeybytes=P.sb)(),B._crypto_box_curve25519xsalsa20poly1305_secretkeybytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_secretkeybytes=P.tb)(),B._crypto_box_curve25519xsalsa20poly1305_beforenmbytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_beforenmbytes=P.ub)(),B._crypto_box_curve25519xsalsa20poly1305_noncebytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_noncebytes=P.vb)(),B._crypto_box_curve25519xsalsa20poly1305_zerobytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_zerobytes=P.wb)(),B._crypto_box_curve25519xsalsa20poly1305_boxzerobytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_boxzerobytes=P.xb)(),B._crypto_box_curve25519xsalsa20poly1305_macbytes=()=>(B._crypto_box_curve25519xsalsa20poly1305_macbytes=P.yb)(),B._crypto_box_curve25519xsalsa20poly1305_messagebytes_max=()=>(B._crypto_box_curve25519xsalsa20poly1305_messagebytes_max=P.zb)(),B._crypto_core_hchacha20=(A,I,g,C)=>(B._crypto_core_hchacha20=P.Ab)(A,I,g,C),B._crypto_core_hchacha20_outputbytes=()=>(B._crypto_core_hchacha20_outputbytes=P.Bb)(),B._crypto_core_hchacha20_inputbytes=()=>(B._crypto_core_hchacha20_inputbytes=P.Cb)(),B._crypto_core_hchacha20_keybytes=()=>(B._crypto_core_hchacha20_keybytes=P.Db)(),B._crypto_core_hchacha20_constbytes=()=>(B._crypto_core_hchacha20_constbytes=P.Eb)(),B._crypto_core_hsalsa20=(A,I,g,C)=>(B._crypto_core_hsalsa20=P.Fb)(A,I,g,C),B._crypto_core_hsalsa20_outputbytes=()=>(B._crypto_core_hsalsa20_outputbytes=P.Gb)(),B._crypto_core_hsalsa20_inputbytes=()=>(B._crypto_core_hsalsa20_inputbytes=P.Hb)(),B._crypto_core_hsalsa20_keybytes=()=>(B._crypto_core_hsalsa20_keybytes=P.Ib)(),B._crypto_core_hsalsa20_constbytes=()=>(B._crypto_core_hsalsa20_constbytes=P.Jb)(),B._crypto_core_salsa20=(A,I,g,C)=>(B._crypto_core_salsa20=P.Kb)(A,I,g,C),B._crypto_core_salsa20_outputbytes=()=>(B._crypto_core_salsa20_outputbytes=P.Lb)(),B._crypto_core_salsa20_inputbytes=()=>(B._crypto_core_salsa20_inputbytes=P.Mb)(),B._crypto_core_salsa20_keybytes=()=>(B._crypto_core_salsa20_keybytes=P.Nb)(),B._crypto_core_salsa20_constbytes=()=>(B._crypto_core_salsa20_constbytes=P.Ob)(),B._crypto_core_salsa2012=(A,I,g,C)=>(B._crypto_core_salsa2012=P.Pb)(A,I,g,C),B._crypto_core_salsa2012_outputbytes=()=>(B._crypto_core_salsa2012_outputbytes=P.Qb)(),B._crypto_core_salsa2012_inputbytes=()=>(B._crypto_core_salsa2012_inputbytes=P.Rb)(),B._crypto_core_salsa2012_keybytes=()=>(B._crypto_core_salsa2012_keybytes=P.Sb)(),B._crypto_core_salsa2012_constbytes=()=>(B._crypto_core_salsa2012_constbytes=P.Tb)(),B._crypto_core_salsa208=(A,I,g,C)=>(B._crypto_core_salsa208=P.Ub)(A,I,g,C),B._crypto_core_salsa208_outputbytes=()=>(B._crypto_core_salsa208_outputbytes=P.Vb)(),B._crypto_core_salsa208_inputbytes=()=>(B._crypto_core_salsa208_inputbytes=P.Wb)(),B._crypto_core_salsa208_keybytes=()=>(B._crypto_core_salsa208_keybytes=P.Xb)(),B._crypto_core_salsa208_constbytes=()=>(B._crypto_core_salsa208_constbytes=P.Yb)(),B._crypto_generichash_bytes_min=()=>(B._crypto_generichash_bytes_min=P.Zb)(),B._crypto_generichash_bytes_max=()=>(B._crypto_generichash_bytes_max=P._b)(),B._crypto_generichash_bytes=()=>(B._crypto_generichash_bytes=P.$b)(),B._crypto_generichash_keybytes_min=()=>(B._crypto_generichash_keybytes_min=P.ac)(),B._crypto_generichash_keybytes_max=()=>(B._crypto_generichash_keybytes_max=P.bc)(),B._crypto_generichash_keybytes=()=>(B._crypto_generichash_keybytes=P.cc)(),B._crypto_generichash_primitive=()=>(B._crypto_generichash_primitive=P.dc)(),B._crypto_generichash_statebytes=()=>(B._crypto_generichash_statebytes=P.ec)(),B._crypto_generichash=(A,I,g,C,Q,i,o)=>(B._crypto_generichash=P.fc)(A,I,g,C,Q,i,o),B._crypto_generichash_init=(A,I,g,C)=>(B._crypto_generichash_init=P.gc)(A,I,g,C),B._crypto_generichash_update=(A,I,g,C)=>(B._crypto_generichash_update=P.hc)(A,I,g,C),B._crypto_generichash_final=(A,I,g)=>(B._crypto_generichash_final=P.ic)(A,I,g),B._crypto_generichash_keygen=A=>(B._crypto_generichash_keygen=P.jc)(A),B._crypto_generichash_blake2b_bytes_min=()=>(B._crypto_generichash_blake2b_bytes_min=P.kc)(),B._crypto_generichash_blake2b_bytes_max=()=>(B._crypto_generichash_blake2b_bytes_max=P.lc)(),B._crypto_generichash_blake2b_bytes=()=>(B._crypto_generichash_blake2b_bytes=P.mc)(),B._crypto_generichash_blake2b_keybytes_min=()=>(B._crypto_generichash_blake2b_keybytes_min=P.nc)(),B._crypto_generichash_blake2b_keybytes_max=()=>(B._crypto_generichash_blake2b_keybytes_max=P.oc)(),B._crypto_generichash_blake2b_keybytes=()=>(B._crypto_generichash_blake2b_keybytes=P.pc)(),B._crypto_generichash_blake2b_saltbytes=()=>(B._crypto_generichash_blake2b_saltbytes=P.qc)(),B._crypto_generichash_blake2b_personalbytes=()=>(B._crypto_generichash_blake2b_personalbytes=P.rc)(),B._crypto_generichash_blake2b_statebytes=()=>(B._crypto_generichash_blake2b_statebytes=P.sc)(),B._crypto_generichash_blake2b_keygen=A=>(B._crypto_generichash_blake2b_keygen=P.tc)(A),B._crypto_generichash_blake2b=(A,I,g,C,Q,i,o)=>(B._crypto_generichash_blake2b=P.uc)(A,I,g,C,Q,i,o),B._crypto_generichash_blake2b_salt_personal=(A,I,g,C,Q,i,o,E,a)=>(B._crypto_generichash_blake2b_salt_personal=P.vc)(A,I,g,C,Q,i,o,E,a),B._crypto_generichash_blake2b_init=(A,I,g,C)=>(B._crypto_generichash_blake2b_init=P.wc)(A,I,g,C),B._crypto_generichash_blake2b_init_salt_personal=(A,I,g,C,Q,i)=>(B._crypto_generichash_blake2b_init_salt_personal=P.xc)(A,I,g,C,Q,i),B._crypto_generichash_blake2b_update=(A,I,g,C)=>(B._crypto_generichash_blake2b_update=P.yc)(A,I,g,C),B._crypto_generichash_blake2b_final=(A,I,g)=>(B._crypto_generichash_blake2b_final=P.zc)(A,I,g),B._crypto_hash_bytes=()=>(B._crypto_hash_bytes=P.Ac)(),B._crypto_hash=(A,I,g,C)=>(B._crypto_hash=P.Bc)(A,I,g,C),B._crypto_hash_primitive=()=>(B._crypto_hash_primitive=P.Cc)(),B._crypto_hash_sha256_bytes=()=>(B._crypto_hash_sha256_bytes=P.Dc)(),B._crypto_hash_sha256_statebytes=()=>(B._crypto_hash_sha256_statebytes=P.Ec)(),B._crypto_hash_sha256_init=A=>(B._crypto_hash_sha256_init=P.Fc)(A),B._crypto_hash_sha256_update=(A,I,g,C)=>(B._crypto_hash_sha256_update=P.Gc)(A,I,g,C),B._crypto_hash_sha256_final=(A,I)=>(B._crypto_hash_sha256_final=P.Hc)(A,I),B._crypto_hash_sha256=(A,I,g,C)=>(B._crypto_hash_sha256=P.Ic)(A,I,g,C),B._crypto_hash_sha512_bytes=()=>(B._crypto_hash_sha512_bytes=P.Jc)(),B._crypto_hash_sha512_statebytes=()=>(B._crypto_hash_sha512_statebytes=P.Kc)(),B._crypto_hash_sha512_init=A=>(B._crypto_hash_sha512_init=P.Lc)(A),B._crypto_hash_sha512_update=(A,I,g,C)=>(B._crypto_hash_sha512_update=P.Mc)(A,I,g,C),B._crypto_hash_sha512_final=(A,I)=>(B._crypto_hash_sha512_final=P.Nc)(A,I),B._crypto_hash_sha512=(A,I,g,C)=>(B._crypto_hash_sha512=P.Oc)(A,I,g,C),B._crypto_kdf_blake2b_bytes_min=()=>(B._crypto_kdf_blake2b_bytes_min=P.Pc)(),B._crypto_kdf_blake2b_bytes_max=()=>(B._crypto_kdf_blake2b_bytes_max=P.Qc)(),B._crypto_kdf_blake2b_contextbytes=()=>(B._crypto_kdf_blake2b_contextbytes=P.Rc)(),B._crypto_kdf_blake2b_keybytes=()=>(B._crypto_kdf_blake2b_keybytes=P.Sc)(),B._crypto_kdf_blake2b_derive_from_key=(A,I,g,C,Q,i)=>(B._crypto_kdf_blake2b_derive_from_key=P.Tc)(A,I,g,C,Q,i),B._crypto_kdf_primitive=()=>(B._crypto_kdf_primitive=P.Uc)(),B._crypto_kdf_bytes_min=()=>(B._crypto_kdf_bytes_min=P.Vc)(),B._crypto_kdf_bytes_max=()=>(B._crypto_kdf_bytes_max=P.Wc)(),B._crypto_kdf_contextbytes=()=>(B._crypto_kdf_contextbytes=P.Xc)(),B._crypto_kdf_keybytes=()=>(B._crypto_kdf_keybytes=P.Yc)(),B._crypto_kdf_derive_from_key=(A,I,g,C,Q,i)=>(B._crypto_kdf_derive_from_key=P.Zc)(A,I,g,C,Q,i),B._crypto_kdf_keygen=A=>(B._crypto_kdf_keygen=P._c)(A),B._crypto_kdf_hkdf_sha256_extract_init=(A,I,g)=>(B._crypto_kdf_hkdf_sha256_extract_init=P.$c)(A,I,g),B._crypto_kdf_hkdf_sha256_extract_update=(A,I,g)=>(B._crypto_kdf_hkdf_sha256_extract_update=P.ad)(A,I,g),B._crypto_kdf_hkdf_sha256_extract_final=(A,I)=>(B._crypto_kdf_hkdf_sha256_extract_final=P.bd)(A,I),B._crypto_kdf_hkdf_sha256_extract=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha256_extract=P.cd)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha256_keygen=A=>(B._crypto_kdf_hkdf_sha256_keygen=P.dd)(A),B._crypto_kdf_hkdf_sha256_expand=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha256_expand=P.ed)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha256_keybytes=()=>(B._crypto_kdf_hkdf_sha256_keybytes=P.fd)(),B._crypto_kdf_hkdf_sha256_bytes_min=()=>(B._crypto_kdf_hkdf_sha256_bytes_min=P.gd)(),B._crypto_kdf_hkdf_sha256_bytes_max=()=>(B._crypto_kdf_hkdf_sha256_bytes_max=P.hd)(),B._crypto_kdf_hkdf_sha256_statebytes=()=>(B._crypto_kdf_hkdf_sha256_statebytes=P.id)(),B._crypto_kdf_hkdf_sha512_extract_init=(A,I,g)=>(B._crypto_kdf_hkdf_sha512_extract_init=P.jd)(A,I,g),B._crypto_kdf_hkdf_sha512_extract_update=(A,I,g)=>(B._crypto_kdf_hkdf_sha512_extract_update=P.kd)(A,I,g),B._crypto_kdf_hkdf_sha512_extract_final=(A,I)=>(B._crypto_kdf_hkdf_sha512_extract_final=P.ld)(A,I),B._crypto_kdf_hkdf_sha512_extract=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha512_extract=P.md)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha512_keygen=A=>(B._crypto_kdf_hkdf_sha512_keygen=P.nd)(A),B._crypto_kdf_hkdf_sha512_expand=(A,I,g,C,Q)=>(B._crypto_kdf_hkdf_sha512_expand=P.od)(A,I,g,C,Q),B._crypto_kdf_hkdf_sha512_keybytes=()=>(B._crypto_kdf_hkdf_sha512_keybytes=P.pd)(),B._crypto_kdf_hkdf_sha512_bytes_min=()=>(B._crypto_kdf_hkdf_sha512_bytes_min=P.qd)(),B._crypto_kdf_hkdf_sha512_bytes_max=()=>(B._crypto_kdf_hkdf_sha512_bytes_max=P.rd)(),B._crypto_kdf_hkdf_sha512_statebytes=()=>(B._crypto_kdf_hkdf_sha512_statebytes=P.sd)(),B._crypto_kx_seed_keypair=(A,I,g)=>(B._crypto_kx_seed_keypair=P.td)(A,I,g),B._crypto_kx_keypair=(A,I)=>(B._crypto_kx_keypair=P.ud)(A,I),B._crypto_kx_client_session_keys=(A,I,g,C,Q)=>(B._crypto_kx_client_session_keys=P.vd)(A,I,g,C,Q),B._crypto_kx_server_session_keys=(A,I,g,C,Q)=>(B._crypto_kx_server_session_keys=P.wd)(A,I,g,C,Q),B._crypto_kx_publickeybytes=()=>(B._crypto_kx_publickeybytes=P.xd)(),B._crypto_kx_secretkeybytes=()=>(B._crypto_kx_secretkeybytes=P.yd)(),B._crypto_kx_seedbytes=()=>(B._crypto_kx_seedbytes=P.zd)(),B._crypto_kx_sessionkeybytes=()=>(B._crypto_kx_sessionkeybytes=P.Ad)(),B._crypto_kx_primitive=()=>(B._crypto_kx_primitive=P.Bd)(),B._crypto_onetimeauth_statebytes=()=>(B._crypto_onetimeauth_statebytes=P.Cd)(),B._crypto_onetimeauth_bytes=()=>(B._crypto_onetimeauth_bytes=P.Dd)(),B._crypto_onetimeauth_keybytes=()=>(B._crypto_onetimeauth_keybytes=P.Ed)(),B._crypto_onetimeauth=(A,I,g,C,Q)=>(B._crypto_onetimeauth=P.Fd)(A,I,g,C,Q),B._crypto_onetimeauth_verify=(A,I,g,C,Q)=>(B._crypto_onetimeauth_verify=P.Gd)(A,I,g,C,Q),B._crypto_onetimeauth_init=(A,I)=>(B._crypto_onetimeauth_init=P.Hd)(A,I),B._crypto_onetimeauth_update=(A,I,g,C)=>(B._crypto_onetimeauth_update=P.Id)(A,I,g,C),B._crypto_onetimeauth_final=(A,I)=>(B._crypto_onetimeauth_final=P.Jd)(A,I),B._crypto_onetimeauth_primitive=()=>(B._crypto_onetimeauth_primitive=P.Kd)(),B._crypto_onetimeauth_keygen=A=>(B._crypto_onetimeauth_keygen=P.Ld)(A),B._crypto_onetimeauth_poly1305=(A,I,g,C,Q)=>(B._crypto_onetimeauth_poly1305=P.Md)(A,I,g,C,Q),B._crypto_onetimeauth_poly1305_verify=(A,I,g,C,Q)=>(B._crypto_onetimeauth_poly1305_verify=P.Nd)(A,I,g,C,Q),B._crypto_onetimeauth_poly1305_init=(A,I)=>(B._crypto_onetimeauth_poly1305_init=P.Od)(A,I),B._crypto_onetimeauth_poly1305_update=(A,I,g,C)=>(B._crypto_onetimeauth_poly1305_update=P.Pd)(A,I,g,C),B._crypto_onetimeauth_poly1305_final=(A,I)=>(B._crypto_onetimeauth_poly1305_final=P.Qd)(A,I),B._crypto_onetimeauth_poly1305_bytes=()=>(B._crypto_onetimeauth_poly1305_bytes=P.Rd)(),B._crypto_onetimeauth_poly1305_keybytes=()=>(B._crypto_onetimeauth_poly1305_keybytes=P.Sd)(),B._crypto_onetimeauth_poly1305_statebytes=()=>(B._crypto_onetimeauth_poly1305_statebytes=P.Td)(),B._crypto_onetimeauth_poly1305_keygen=A=>(B._crypto_onetimeauth_poly1305_keygen=P.Ud)(A),B._crypto_pwhash_argon2i_alg_argon2i13=()=>(B._crypto_pwhash_argon2i_alg_argon2i13=P.Vd)(),B._crypto_pwhash_argon2i_bytes_min=()=>(B._crypto_pwhash_argon2i_bytes_min=P.Wd)(),B._crypto_pwhash_argon2i_bytes_max=()=>(B._crypto_pwhash_argon2i_bytes_max=P.Xd)(),B._crypto_pwhash_argon2i_passwd_min=()=>(B._crypto_pwhash_argon2i_passwd_min=P.Yd)(),B._crypto_pwhash_argon2i_passwd_max=()=>(B._crypto_pwhash_argon2i_passwd_max=P.Zd)(),B._crypto_pwhash_argon2i_saltbytes=()=>(B._crypto_pwhash_argon2i_saltbytes=P._d)(),B._crypto_pwhash_argon2i_strbytes=()=>(B._crypto_pwhash_argon2i_strbytes=P.$d)(),B._crypto_pwhash_argon2i_strprefix=()=>(B._crypto_pwhash_argon2i_strprefix=P.ae)(),B._crypto_pwhash_argon2i_opslimit_min=()=>(B._crypto_pwhash_argon2i_opslimit_min=P.be)(),B._crypto_pwhash_argon2i_opslimit_max=()=>(B._crypto_pwhash_argon2i_opslimit_max=P.ce)(),B._crypto_pwhash_argon2i_memlimit_min=()=>(B._crypto_pwhash_argon2i_memlimit_min=P.de)(),B._crypto_pwhash_argon2i_memlimit_max=()=>(B._crypto_pwhash_argon2i_memlimit_max=P.ee)(),B._crypto_pwhash_argon2i_opslimit_interactive=()=>(B._crypto_pwhash_argon2i_opslimit_interactive=P.fe)(),B._crypto_pwhash_argon2i_memlimit_interactive=()=>(B._crypto_pwhash_argon2i_memlimit_interactive=P.ge)(),B._crypto_pwhash_argon2i_opslimit_moderate=()=>(B._crypto_pwhash_argon2i_opslimit_moderate=P.he)(),B._crypto_pwhash_argon2i_memlimit_moderate=()=>(B._crypto_pwhash_argon2i_memlimit_moderate=P.ie)(),B._crypto_pwhash_argon2i_opslimit_sensitive=()=>(B._crypto_pwhash_argon2i_opslimit_sensitive=P.je)(),B._crypto_pwhash_argon2i_memlimit_sensitive=()=>(B._crypto_pwhash_argon2i_memlimit_sensitive=P.ke)(),B._crypto_pwhash_argon2i=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_pwhash_argon2i=P.le)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_pwhash_argon2i_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_argon2i_str=P.me)(A,I,g,C,Q,i,o),B._crypto_pwhash_argon2i_str_verify=(A,I,g,C)=>(B._crypto_pwhash_argon2i_str_verify=P.ne)(A,I,g,C),B._crypto_pwhash_argon2i_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_argon2i_str_needs_rehash=P.oe)(A,I,g,C),B._crypto_pwhash_argon2id_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_argon2id_str_needs_rehash=P.pe)(A,I,g,C),B._crypto_pwhash_argon2id_alg_argon2id13=()=>(B._crypto_pwhash_argon2id_alg_argon2id13=P.qe)(),B._crypto_pwhash_argon2id_bytes_min=()=>(B._crypto_pwhash_argon2id_bytes_min=P.re)(),B._crypto_pwhash_argon2id_bytes_max=()=>(B._crypto_pwhash_argon2id_bytes_max=P.se)(),B._crypto_pwhash_argon2id_passwd_min=()=>(B._crypto_pwhash_argon2id_passwd_min=P.te)(),B._crypto_pwhash_argon2id_passwd_max=()=>(B._crypto_pwhash_argon2id_passwd_max=P.ue)(),B._crypto_pwhash_argon2id_saltbytes=()=>(B._crypto_pwhash_argon2id_saltbytes=P.ve)(),B._crypto_pwhash_argon2id_strbytes=()=>(B._crypto_pwhash_argon2id_strbytes=P.we)(),B._crypto_pwhash_argon2id_strprefix=()=>(B._crypto_pwhash_argon2id_strprefix=P.xe)(),B._crypto_pwhash_argon2id_opslimit_min=()=>(B._crypto_pwhash_argon2id_opslimit_min=P.ye)(),B._crypto_pwhash_argon2id_opslimit_max=()=>(B._crypto_pwhash_argon2id_opslimit_max=P.ze)(),B._crypto_pwhash_argon2id_memlimit_min=()=>(B._crypto_pwhash_argon2id_memlimit_min=P.Ae)(),B._crypto_pwhash_argon2id_memlimit_max=()=>(B._crypto_pwhash_argon2id_memlimit_max=P.Be)(),B._crypto_pwhash_argon2id_opslimit_interactive=()=>(B._crypto_pwhash_argon2id_opslimit_interactive=P.Ce)(),B._crypto_pwhash_argon2id_memlimit_interactive=()=>(B._crypto_pwhash_argon2id_memlimit_interactive=P.De)(),B._crypto_pwhash_argon2id_opslimit_moderate=()=>(B._crypto_pwhash_argon2id_opslimit_moderate=P.Ee)(),B._crypto_pwhash_argon2id_memlimit_moderate=()=>(B._crypto_pwhash_argon2id_memlimit_moderate=P.Fe)(),B._crypto_pwhash_argon2id_opslimit_sensitive=()=>(B._crypto_pwhash_argon2id_opslimit_sensitive=P.Ge)(),B._crypto_pwhash_argon2id_memlimit_sensitive=()=>(B._crypto_pwhash_argon2id_memlimit_sensitive=P.He)(),B._crypto_pwhash_argon2id=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_pwhash_argon2id=P.Ie)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_pwhash_argon2id_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_argon2id_str=P.Je)(A,I,g,C,Q,i,o),B._crypto_pwhash_argon2id_str_verify=(A,I,g,C)=>(B._crypto_pwhash_argon2id_str_verify=P.Ke)(A,I,g,C),B._crypto_pwhash_alg_argon2i13=()=>(B._crypto_pwhash_alg_argon2i13=P.Le)(),B._crypto_pwhash_alg_argon2id13=()=>(B._crypto_pwhash_alg_argon2id13=P.Me)(),B._crypto_pwhash_alg_default=()=>(B._crypto_pwhash_alg_default=P.Ne)(),B._crypto_pwhash_bytes_min=()=>(B._crypto_pwhash_bytes_min=P.Oe)(),B._crypto_pwhash_bytes_max=()=>(B._crypto_pwhash_bytes_max=P.Pe)(),B._crypto_pwhash_passwd_min=()=>(B._crypto_pwhash_passwd_min=P.Qe)(),B._crypto_pwhash_passwd_max=()=>(B._crypto_pwhash_passwd_max=P.Re)(),B._crypto_pwhash_saltbytes=()=>(B._crypto_pwhash_saltbytes=P.Se)(),B._crypto_pwhash_strbytes=()=>(B._crypto_pwhash_strbytes=P.Te)(),B._crypto_pwhash_strprefix=()=>(B._crypto_pwhash_strprefix=P.Ue)(),B._crypto_pwhash_opslimit_min=()=>(B._crypto_pwhash_opslimit_min=P.Ve)(),B._crypto_pwhash_opslimit_max=()=>(B._crypto_pwhash_opslimit_max=P.We)(),B._crypto_pwhash_memlimit_min=()=>(B._crypto_pwhash_memlimit_min=P.Xe)(),B._crypto_pwhash_memlimit_max=()=>(B._crypto_pwhash_memlimit_max=P.Ye)(),B._crypto_pwhash_opslimit_interactive=()=>(B._crypto_pwhash_opslimit_interactive=P.Ze)(),B._crypto_pwhash_memlimit_interactive=()=>(B._crypto_pwhash_memlimit_interactive=P._e)(),B._crypto_pwhash_opslimit_moderate=()=>(B._crypto_pwhash_opslimit_moderate=P.$e)(),B._crypto_pwhash_memlimit_moderate=()=>(B._crypto_pwhash_memlimit_moderate=P.af)(),B._crypto_pwhash_opslimit_sensitive=()=>(B._crypto_pwhash_opslimit_sensitive=P.bf)(),B._crypto_pwhash_memlimit_sensitive=()=>(B._crypto_pwhash_memlimit_sensitive=P.cf)(),B._crypto_pwhash=(A,I,g,C,Q,i,o,E,a,_,c)=>(B._crypto_pwhash=P.df)(A,I,g,C,Q,i,o,E,a,_,c),B._crypto_pwhash_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_str=P.ef)(A,I,g,C,Q,i,o),B._crypto_pwhash_str_alg=(A,I,g,C,Q,i,o,E)=>(B._crypto_pwhash_str_alg=P.ff)(A,I,g,C,Q,i,o,E),B._crypto_pwhash_str_verify=(A,I,g,C)=>(B._crypto_pwhash_str_verify=P.gf)(A,I,g,C),B._crypto_pwhash_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_str_needs_rehash=P.hf)(A,I,g,C),B._crypto_pwhash_primitive=()=>(B._crypto_pwhash_primitive=P.jf)(),B._crypto_scalarmult_primitive=()=>(B._crypto_scalarmult_primitive=P.kf)(),B._crypto_scalarmult_base=(A,I)=>(B._crypto_scalarmult_base=P.lf)(A,I),B._crypto_scalarmult=(A,I,g)=>(B._crypto_scalarmult=P.mf)(A,I,g),B._crypto_scalarmult_bytes=()=>(B._crypto_scalarmult_bytes=P.nf)(),B._crypto_scalarmult_scalarbytes=()=>(B._crypto_scalarmult_scalarbytes=P.of)(),B._crypto_scalarmult_curve25519=(A,I,g)=>(B._crypto_scalarmult_curve25519=P.pf)(A,I,g),B._crypto_scalarmult_curve25519_base=(A,I)=>(B._crypto_scalarmult_curve25519_base=P.qf)(A,I),B._crypto_scalarmult_curve25519_bytes=()=>(B._crypto_scalarmult_curve25519_bytes=P.rf)(),B._crypto_scalarmult_curve25519_scalarbytes=()=>(B._crypto_scalarmult_curve25519_scalarbytes=P.sf)(),B._crypto_secretbox_keybytes=()=>(B._crypto_secretbox_keybytes=P.tf)(),B._crypto_secretbox_noncebytes=()=>(B._crypto_secretbox_noncebytes=P.uf)(),B._crypto_secretbox_zerobytes=()=>(B._crypto_secretbox_zerobytes=P.vf)(),B._crypto_secretbox_boxzerobytes=()=>(B._crypto_secretbox_boxzerobytes=P.wf)(),B._crypto_secretbox_macbytes=()=>(B._crypto_secretbox_macbytes=P.xf)(),B._crypto_secretbox_messagebytes_max=()=>(B._crypto_secretbox_messagebytes_max=P.yf)(),B._crypto_secretbox_primitive=()=>(B._crypto_secretbox_primitive=P.zf)(),B._crypto_secretbox=(A,I,g,C,Q,i)=>(B._crypto_secretbox=P.Af)(A,I,g,C,Q,i),B._crypto_secretbox_open=(A,I,g,C,Q,i)=>(B._crypto_secretbox_open=P.Bf)(A,I,g,C,Q,i),B._crypto_secretbox_keygen=A=>(B._crypto_secretbox_keygen=P.Cf)(A),B._crypto_secretbox_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_detached=P.Df)(A,I,g,C,Q,i,o),B._crypto_secretbox_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_easy=P.Ef)(A,I,g,C,Q,i),B._crypto_secretbox_open_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_open_detached=P.Ff)(A,I,g,C,Q,i,o),B._crypto_secretbox_open_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_open_easy=P.Gf)(A,I,g,C,Q,i),B._crypto_secretbox_xsalsa20poly1305=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xsalsa20poly1305=P.Hf)(A,I,g,C,Q,i),B._crypto_secretbox_xsalsa20poly1305_open=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xsalsa20poly1305_open=P.If)(A,I,g,C,Q,i),B._crypto_secretbox_xsalsa20poly1305_keybytes=()=>(B._crypto_secretbox_xsalsa20poly1305_keybytes=P.Jf)(),B._crypto_secretbox_xsalsa20poly1305_noncebytes=()=>(B._crypto_secretbox_xsalsa20poly1305_noncebytes=P.Kf)(),B._crypto_secretbox_xsalsa20poly1305_zerobytes=()=>(B._crypto_secretbox_xsalsa20poly1305_zerobytes=P.Lf)(),B._crypto_secretbox_xsalsa20poly1305_boxzerobytes=()=>(B._crypto_secretbox_xsalsa20poly1305_boxzerobytes=P.Mf)(),B._crypto_secretbox_xsalsa20poly1305_macbytes=()=>(B._crypto_secretbox_xsalsa20poly1305_macbytes=P.Nf)(),B._crypto_secretbox_xsalsa20poly1305_messagebytes_max=()=>(B._crypto_secretbox_xsalsa20poly1305_messagebytes_max=P.Of)(),B._crypto_secretbox_xsalsa20poly1305_keygen=A=>(B._crypto_secretbox_xsalsa20poly1305_keygen=P.Pf)(A),B._crypto_secretstream_xchacha20poly1305_keygen=A=>(B._crypto_secretstream_xchacha20poly1305_keygen=P.Qf)(A),B._crypto_secretstream_xchacha20poly1305_init_push=(A,I,g)=>(B._crypto_secretstream_xchacha20poly1305_init_push=P.Rf)(A,I,g),B._crypto_secretstream_xchacha20poly1305_init_pull=(A,I,g)=>(B._crypto_secretstream_xchacha20poly1305_init_pull=P.Sf)(A,I,g),B._crypto_secretstream_xchacha20poly1305_rekey=A=>(B._crypto_secretstream_xchacha20poly1305_rekey=P.Tf)(A),B._crypto_secretstream_xchacha20poly1305_push=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_secretstream_xchacha20poly1305_push=P.Uf)(A,I,g,C,Q,i,o,E,a,_),B._crypto_secretstream_xchacha20poly1305_pull=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_secretstream_xchacha20poly1305_pull=P.Vf)(A,I,g,C,Q,i,o,E,a,_),B._crypto_secretstream_xchacha20poly1305_statebytes=()=>(B._crypto_secretstream_xchacha20poly1305_statebytes=P.Wf)(),B._crypto_secretstream_xchacha20poly1305_abytes=()=>(B._crypto_secretstream_xchacha20poly1305_abytes=P.Xf)(),B._crypto_secretstream_xchacha20poly1305_headerbytes=()=>(B._crypto_secretstream_xchacha20poly1305_headerbytes=P.Yf)(),B._crypto_secretstream_xchacha20poly1305_keybytes=()=>(B._crypto_secretstream_xchacha20poly1305_keybytes=P.Zf)(),B._crypto_secretstream_xchacha20poly1305_messagebytes_max=()=>(B._crypto_secretstream_xchacha20poly1305_messagebytes_max=P._f)(),B._crypto_secretstream_xchacha20poly1305_tag_message=()=>(B._crypto_secretstream_xchacha20poly1305_tag_message=P.$f)(),B._crypto_secretstream_xchacha20poly1305_tag_push=()=>(B._crypto_secretstream_xchacha20poly1305_tag_push=P.ag)(),B._crypto_secretstream_xchacha20poly1305_tag_rekey=()=>(B._crypto_secretstream_xchacha20poly1305_tag_rekey=P.bg)(),B._crypto_secretstream_xchacha20poly1305_tag_final=()=>(B._crypto_secretstream_xchacha20poly1305_tag_final=P.cg)(),B._crypto_shorthash_bytes=()=>(B._crypto_shorthash_bytes=P.dg)(),B._crypto_shorthash_keybytes=()=>(B._crypto_shorthash_keybytes=P.eg)(),B._crypto_shorthash_primitive=()=>(B._crypto_shorthash_primitive=P.fg)(),B._crypto_shorthash=(A,I,g,C,Q)=>(B._crypto_shorthash=P.gg)(A,I,g,C,Q),B._crypto_shorthash_keygen=A=>(B._crypto_shorthash_keygen=P.hg)(A),B._crypto_shorthash_siphash24_bytes=()=>(B._crypto_shorthash_siphash24_bytes=P.ig)(),B._crypto_shorthash_siphash24_keybytes=()=>(B._crypto_shorthash_siphash24_keybytes=P.jg)(),B._crypto_shorthash_siphash24=(A,I,g,C,Q)=>(B._crypto_shorthash_siphash24=P.kg)(A,I,g,C,Q),B._crypto_sign_statebytes=()=>(B._crypto_sign_statebytes=P.lg)(),B._crypto_sign_bytes=()=>(B._crypto_sign_bytes=P.mg)(),B._crypto_sign_seedbytes=()=>(B._crypto_sign_seedbytes=P.ng)(),B._crypto_sign_publickeybytes=()=>(B._crypto_sign_publickeybytes=P.og)(),B._crypto_sign_secretkeybytes=()=>(B._crypto_sign_secretkeybytes=P.pg)(),B._crypto_sign_messagebytes_max=()=>(B._crypto_sign_messagebytes_max=P.qg)(),B._crypto_sign_primitive=()=>(B._crypto_sign_primitive=P.rg)(),B._crypto_sign_seed_keypair=(A,I,g)=>(B._crypto_sign_seed_keypair=P.sg)(A,I,g),B._crypto_sign_keypair=(A,I)=>(B._crypto_sign_keypair=P.tg)(A,I),B._crypto_sign=(A,I,g,C,Q,i)=>(B._crypto_sign=P.ug)(A,I,g,C,Q,i),B._crypto_sign_open=(A,I,g,C,Q,i)=>(B._crypto_sign_open=P.vg)(A,I,g,C,Q,i),B._crypto_sign_detached=(A,I,g,C,Q,i)=>(B._crypto_sign_detached=P.wg)(A,I,g,C,Q,i),B._crypto_sign_verify_detached=(A,I,g,C,Q)=>(B._crypto_sign_verify_detached=P.xg)(A,I,g,C,Q),B._crypto_sign_init=A=>(B._crypto_sign_init=P.yg)(A),B._crypto_sign_update=(A,I,g,C)=>(B._crypto_sign_update=P.zg)(A,I,g,C),B._crypto_sign_final_create=(A,I,g,C)=>(B._crypto_sign_final_create=P.Ag)(A,I,g,C),B._crypto_sign_final_verify=(A,I,g)=>(B._crypto_sign_final_verify=P.Bg)(A,I,g),B._crypto_sign_ed25519ph_statebytes=()=>(B._crypto_sign_ed25519ph_statebytes=P.Cg)(),B._crypto_sign_ed25519_bytes=()=>(B._crypto_sign_ed25519_bytes=P.Dg)(),B._crypto_sign_ed25519_seedbytes=()=>(B._crypto_sign_ed25519_seedbytes=P.Eg)(),B._crypto_sign_ed25519_publickeybytes=()=>(B._crypto_sign_ed25519_publickeybytes=P.Fg)(),B._crypto_sign_ed25519_secretkeybytes=()=>(B._crypto_sign_ed25519_secretkeybytes=P.Gg)(),B._crypto_sign_ed25519_messagebytes_max=()=>(B._crypto_sign_ed25519_messagebytes_max=P.Hg)(),B._crypto_sign_ed25519_sk_to_seed=(A,I)=>(B._crypto_sign_ed25519_sk_to_seed=P.Ig)(A,I),B._crypto_sign_ed25519_sk_to_pk=(A,I)=>(B._crypto_sign_ed25519_sk_to_pk=P.Jg)(A,I),B._crypto_sign_ed25519ph_init=A=>(B._crypto_sign_ed25519ph_init=P.Kg)(A),B._crypto_sign_ed25519ph_update=(A,I,g,C)=>(B._crypto_sign_ed25519ph_update=P.Lg)(A,I,g,C),B._crypto_sign_ed25519ph_final_create=(A,I,g,C)=>(B._crypto_sign_ed25519ph_final_create=P.Mg)(A,I,g,C),B._crypto_sign_ed25519ph_final_verify=(A,I,g)=>(B._crypto_sign_ed25519ph_final_verify=P.Ng)(A,I,g),B._crypto_sign_ed25519_seed_keypair=(A,I,g)=>(B._crypto_sign_ed25519_seed_keypair=P.Og)(A,I,g),B._crypto_sign_ed25519_keypair=(A,I)=>(B._crypto_sign_ed25519_keypair=P.Pg)(A,I),B._crypto_sign_ed25519_pk_to_curve25519=(A,I)=>(B._crypto_sign_ed25519_pk_to_curve25519=P.Qg)(A,I),B._crypto_sign_ed25519_sk_to_curve25519=(A,I)=>(B._crypto_sign_ed25519_sk_to_curve25519=P.Rg)(A,I),B._crypto_sign_ed25519_verify_detached=(A,I,g,C,Q)=>(B._crypto_sign_ed25519_verify_detached=P.Sg)(A,I,g,C,Q),B._crypto_sign_ed25519_open=(A,I,g,C,Q,i)=>(B._crypto_sign_ed25519_open=P.Tg)(A,I,g,C,Q,i),B._crypto_sign_ed25519_detached=(A,I,g,C,Q,i)=>(B._crypto_sign_ed25519_detached=P.Ug)(A,I,g,C,Q,i),B._crypto_sign_ed25519=(A,I,g,C,Q,i)=>(B._crypto_sign_ed25519=P.Vg)(A,I,g,C,Q,i),B._crypto_stream_chacha20_keybytes=()=>(B._crypto_stream_chacha20_keybytes=P.Wg)(),B._crypto_stream_chacha20_noncebytes=()=>(B._crypto_stream_chacha20_noncebytes=P.Xg)(),B._crypto_stream_chacha20_messagebytes_max=()=>(B._crypto_stream_chacha20_messagebytes_max=P.Yg)(),B._crypto_stream_chacha20_ietf_keybytes=()=>(B._crypto_stream_chacha20_ietf_keybytes=P.Zg)(),B._crypto_stream_chacha20_ietf_noncebytes=()=>(B._crypto_stream_chacha20_ietf_noncebytes=P._g)(),B._crypto_stream_chacha20_ietf_messagebytes_max=()=>(B._crypto_stream_chacha20_ietf_messagebytes_max=P.$g)(),B._crypto_stream_chacha20=(A,I,g,C,Q)=>(B._crypto_stream_chacha20=P.ah)(A,I,g,C,Q),B._crypto_stream_chacha20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_chacha20_xor_ic=P.bh)(A,I,g,C,Q,i,o,E),B._crypto_stream_chacha20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_chacha20_xor=P.ch)(A,I,g,C,Q,i),B._crypto_stream_chacha20_ietf=(A,I,g,C,Q)=>(B._crypto_stream_chacha20_ietf=P.dh)(A,I,g,C,Q),B._crypto_stream_chacha20_ietf_xor_ic=(A,I,g,C,Q,i,o)=>(B._crypto_stream_chacha20_ietf_xor_ic=P.eh)(A,I,g,C,Q,i,o),B._crypto_stream_chacha20_ietf_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_chacha20_ietf_xor=P.fh)(A,I,g,C,Q,i),B._crypto_stream_chacha20_ietf_keygen=A=>(B._crypto_stream_chacha20_ietf_keygen=P.gh)(A),B._crypto_stream_chacha20_keygen=A=>(B._crypto_stream_chacha20_keygen=P.hh)(A),B._crypto_stream_keybytes=()=>(B._crypto_stream_keybytes=P.ih)(),B._crypto_stream_noncebytes=()=>(B._crypto_stream_noncebytes=P.jh)(),B._crypto_stream_messagebytes_max=()=>(B._crypto_stream_messagebytes_max=P.kh)(),B._crypto_stream_primitive=()=>(B._crypto_stream_primitive=P.lh)(),B._crypto_stream=(A,I,g,C,Q)=>(B._crypto_stream=P.mh)(A,I,g,C,Q),B._crypto_stream_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_xor=P.nh)(A,I,g,C,Q,i),B._crypto_stream_keygen=A=>(B._crypto_stream_keygen=P.oh)(A),B._crypto_stream_salsa20_keybytes=()=>(B._crypto_stream_salsa20_keybytes=P.ph)(),B._crypto_stream_salsa20_noncebytes=()=>(B._crypto_stream_salsa20_noncebytes=P.qh)(),B._crypto_stream_salsa20_messagebytes_max=()=>(B._crypto_stream_salsa20_messagebytes_max=P.rh)(),B._crypto_stream_salsa20=(A,I,g,C,Q)=>(B._crypto_stream_salsa20=P.sh)(A,I,g,C,Q),B._crypto_stream_salsa20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_salsa20_xor_ic=P.th)(A,I,g,C,Q,i,o,E),B._crypto_stream_salsa20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_salsa20_xor=P.uh)(A,I,g,C,Q,i),B._crypto_stream_salsa20_keygen=A=>(B._crypto_stream_salsa20_keygen=P.vh)(A),B._crypto_stream_xsalsa20=(A,I,g,C,Q)=>(B._crypto_stream_xsalsa20=P.wh)(A,I,g,C,Q),B._crypto_stream_xsalsa20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_xsalsa20_xor_ic=P.xh)(A,I,g,C,Q,i,o,E),B._crypto_stream_xsalsa20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_xsalsa20_xor=P.yh)(A,I,g,C,Q,i),B._crypto_stream_xsalsa20_keybytes=()=>(B._crypto_stream_xsalsa20_keybytes=P.zh)(),B._crypto_stream_xsalsa20_noncebytes=()=>(B._crypto_stream_xsalsa20_noncebytes=P.Ah)(),B._crypto_stream_xsalsa20_messagebytes_max=()=>(B._crypto_stream_xsalsa20_messagebytes_max=P.Bh)(),B._crypto_stream_xsalsa20_keygen=A=>(B._crypto_stream_xsalsa20_keygen=P.Ch)(A),B._crypto_verify_16_bytes=()=>(B._crypto_verify_16_bytes=P.Dh)(),B._crypto_verify_32_bytes=()=>(B._crypto_verify_32_bytes=P.Eh)(),B._crypto_verify_64_bytes=()=>(B._crypto_verify_64_bytes=P.Fh)(),B._crypto_verify_16=(A,I)=>(B._crypto_verify_16=P.Gh)(A,I),B._crypto_verify_32=(A,I)=>(B._crypto_verify_32=P.Hh)(A,I),B._crypto_verify_64=(A,I)=>(B._crypto_verify_64=P.Ih)(A,I),B._randombytes_implementation_name=()=>(B._randombytes_implementation_name=P.Jh)(),B._randombytes_random=()=>(B._randombytes_random=P.Kh)(),B._randombytes_stir=()=>(B._randombytes_stir=P.Lh)(),B._randombytes_uniform=A=>(B._randombytes_uniform=P.Mh)(A),B._randombytes_buf=(A,I)=>(B._randombytes_buf=P.Nh)(A,I),B._randombytes_buf_deterministic=(A,I,g)=>(B._randombytes_buf_deterministic=P.Oh)(A,I,g),B._randombytes_seedbytes=()=>(B._randombytes_seedbytes=P.Ph)(),B._randombytes_close=()=>(B._randombytes_close=P.Qh)(),B._randombytes=(A,I,g)=>(B._randombytes=P.Rh)(A,I,g),B._sodium_bin2hex=(A,I,g,C)=>(B._sodium_bin2hex=P.Sh)(A,I,g,C),B._sodium_hex2bin=(A,I,g,C,Q,i,o)=>(B._sodium_hex2bin=P.Th)(A,I,g,C,Q,i,o),B._sodium_base64_encoded_len=(A,I)=>(B._sodium_base64_encoded_len=P.Uh)(A,I),B._sodium_bin2base64=(A,I,g,C,Q)=>(B._sodium_bin2base64=P.Vh)(A,I,g,C,Q),B._sodium_base642bin=(A,I,g,C,Q,i,o,E)=>(B._sodium_base642bin=P.Wh)(A,I,g,C,Q,i,o,E),B._sodium_init=()=>(B._sodium_init=P.Xh)(),B._sodium_pad=(A,I,g,C,Q)=>(B._sodium_pad=P.Yh)(A,I,g,C,Q),B._sodium_unpad=(A,I,g,C)=>(B._sodium_unpad=P.Zh)(A,I,g,C),B._sodium_version_string=()=>(B._sodium_version_string=P._h)(),B._sodium_library_version_major=()=>(B._sodium_library_version_major=P.$h)(),B._sodium_library_version_minor=()=>(B._sodium_library_version_minor=P.ai)(),B._sodium_library_minimal=()=>(B._sodium_library_minimal=P.bi)(),B._crypto_box_curve25519xchacha20poly1305_seed_keypair=(A,I,g)=>(B._crypto_box_curve25519xchacha20poly1305_seed_keypair=P.ci)(A,I,g),B._crypto_box_curve25519xchacha20poly1305_keypair=(A,I)=>(B._crypto_box_curve25519xchacha20poly1305_keypair=P.di)(A,I),B._crypto_box_curve25519xchacha20poly1305_beforenm=(A,I,g)=>(B._crypto_box_curve25519xchacha20poly1305_beforenm=P.ei)(A,I,g),B._crypto_box_curve25519xchacha20poly1305_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_detached_afternm=P.fi)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_curve25519xchacha20poly1305_detached=P.gi)(A,I,g,C,Q,i,o,E),B._crypto_box_curve25519xchacha20poly1305_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xchacha20poly1305_easy_afternm=P.hi)(A,I,g,C,Q,i),B._crypto_box_curve25519xchacha20poly1305_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_easy=P.ii)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_open_detached_afternm=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_open_detached_afternm=P.ji)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_open_detached=(A,I,g,C,Q,i,o,E)=>(B._crypto_box_curve25519xchacha20poly1305_open_detached=P.ki)(A,I,g,C,Q,i,o,E),B._crypto_box_curve25519xchacha20poly1305_open_easy_afternm=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xchacha20poly1305_open_easy_afternm=P.li)(A,I,g,C,Q,i),B._crypto_box_curve25519xchacha20poly1305_open_easy=(A,I,g,C,Q,i,o)=>(B._crypto_box_curve25519xchacha20poly1305_open_easy=P.mi)(A,I,g,C,Q,i,o),B._crypto_box_curve25519xchacha20poly1305_seedbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_seedbytes=P.ni)(),B._crypto_box_curve25519xchacha20poly1305_publickeybytes=()=>(B._crypto_box_curve25519xchacha20poly1305_publickeybytes=P.oi)(),B._crypto_box_curve25519xchacha20poly1305_secretkeybytes=()=>(B._crypto_box_curve25519xchacha20poly1305_secretkeybytes=P.pi)(),B._crypto_box_curve25519xchacha20poly1305_beforenmbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_beforenmbytes=P.qi)(),B._crypto_box_curve25519xchacha20poly1305_noncebytes=()=>(B._crypto_box_curve25519xchacha20poly1305_noncebytes=P.ri)(),B._crypto_box_curve25519xchacha20poly1305_macbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_macbytes=P.si)(),B._crypto_box_curve25519xchacha20poly1305_messagebytes_max=()=>(B._crypto_box_curve25519xchacha20poly1305_messagebytes_max=P.ti)(),B._crypto_box_curve25519xchacha20poly1305_seal=(A,I,g,C,Q)=>(B._crypto_box_curve25519xchacha20poly1305_seal=P.ui)(A,I,g,C,Q),B._crypto_box_curve25519xchacha20poly1305_seal_open=(A,I,g,C,Q,i)=>(B._crypto_box_curve25519xchacha20poly1305_seal_open=P.vi)(A,I,g,C,Q,i),B._crypto_box_curve25519xchacha20poly1305_sealbytes=()=>(B._crypto_box_curve25519xchacha20poly1305_sealbytes=P.wi)(),B._crypto_core_ed25519_is_valid_point=A=>(B._crypto_core_ed25519_is_valid_point=P.xi)(A),B._crypto_core_ed25519_add=(A,I,g)=>(B._crypto_core_ed25519_add=P.yi)(A,I,g),B._crypto_core_ed25519_sub=(A,I,g)=>(B._crypto_core_ed25519_sub=P.zi)(A,I,g),B._crypto_core_ed25519_from_uniform=(A,I)=>(B._crypto_core_ed25519_from_uniform=P.Ai)(A,I),B._crypto_core_ed25519_random=A=>(B._crypto_core_ed25519_random=P.Bi)(A),B._crypto_core_ed25519_scalar_random=A=>(B._crypto_core_ed25519_scalar_random=P.Ci)(A),B._crypto_core_ed25519_scalar_invert=(A,I)=>(B._crypto_core_ed25519_scalar_invert=P.Di)(A,I),B._crypto_core_ed25519_scalar_negate=(A,I)=>(B._crypto_core_ed25519_scalar_negate=P.Ei)(A,I),B._crypto_core_ed25519_scalar_complement=(A,I)=>(B._crypto_core_ed25519_scalar_complement=P.Fi)(A,I),B._crypto_core_ed25519_scalar_add=(A,I,g)=>(B._crypto_core_ed25519_scalar_add=P.Gi)(A,I,g),B._crypto_core_ed25519_scalar_reduce=(A,I)=>(B._crypto_core_ed25519_scalar_reduce=P.Hi)(A,I),B._crypto_core_ed25519_scalar_sub=(A,I,g)=>(B._crypto_core_ed25519_scalar_sub=P.Ii)(A,I,g),B._crypto_core_ed25519_scalar_mul=(A,I,g)=>(B._crypto_core_ed25519_scalar_mul=P.Ji)(A,I,g),B._crypto_core_ed25519_bytes=()=>(B._crypto_core_ed25519_bytes=P.Ki)(),B._crypto_core_ed25519_nonreducedscalarbytes=()=>(B._crypto_core_ed25519_nonreducedscalarbytes=P.Li)(),B._crypto_core_ed25519_uniformbytes=()=>(B._crypto_core_ed25519_uniformbytes=P.Mi)(),B._crypto_core_ed25519_hashbytes=()=>(B._crypto_core_ed25519_hashbytes=P.Ni)(),B._crypto_core_ed25519_scalarbytes=()=>(B._crypto_core_ed25519_scalarbytes=P.Oi)(),B._crypto_core_ristretto255_is_valid_point=A=>(B._crypto_core_ristretto255_is_valid_point=P.Pi)(A),B._crypto_core_ristretto255_add=(A,I,g)=>(B._crypto_core_ristretto255_add=P.Qi)(A,I,g),B._crypto_core_ristretto255_sub=(A,I,g)=>(B._crypto_core_ristretto255_sub=P.Ri)(A,I,g),B._crypto_core_ristretto255_from_hash=(A,I)=>(B._crypto_core_ristretto255_from_hash=P.Si)(A,I),B._crypto_core_ristretto255_random=A=>(B._crypto_core_ristretto255_random=P.Ti)(A),B._crypto_core_ristretto255_scalar_random=A=>(B._crypto_core_ristretto255_scalar_random=P.Ui)(A),B._crypto_core_ristretto255_scalar_invert=(A,I)=>(B._crypto_core_ristretto255_scalar_invert=P.Vi)(A,I),B._crypto_core_ristretto255_scalar_negate=(A,I)=>(B._crypto_core_ristretto255_scalar_negate=P.Wi)(A,I),B._crypto_core_ristretto255_scalar_complement=(A,I)=>(B._crypto_core_ristretto255_scalar_complement=P.Xi)(A,I),B._crypto_core_ristretto255_scalar_add=(A,I,g)=>(B._crypto_core_ristretto255_scalar_add=P.Yi)(A,I,g),B._crypto_core_ristretto255_scalar_sub=(A,I,g)=>(B._crypto_core_ristretto255_scalar_sub=P.Zi)(A,I,g),B._crypto_core_ristretto255_scalar_mul=(A,I,g)=>(B._crypto_core_ristretto255_scalar_mul=P._i)(A,I,g),B._crypto_core_ristretto255_scalar_reduce=(A,I)=>(B._crypto_core_ristretto255_scalar_reduce=P.$i)(A,I),B._crypto_core_ristretto255_bytes=()=>(B._crypto_core_ristretto255_bytes=P.aj)(),B._crypto_core_ristretto255_nonreducedscalarbytes=()=>(B._crypto_core_ristretto255_nonreducedscalarbytes=P.bj)(),B._crypto_core_ristretto255_hashbytes=()=>(B._crypto_core_ristretto255_hashbytes=P.cj)(),B._crypto_core_ristretto255_scalarbytes=()=>(B._crypto_core_ristretto255_scalarbytes=P.dj)(),B._crypto_pwhash_scryptsalsa208sha256_ll=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_pwhash_scryptsalsa208sha256_ll=P.ej)(A,I,g,C,Q,i,o,E,a,_),B._crypto_pwhash_scryptsalsa208sha256_bytes_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_bytes_min=P.fj)(),B._crypto_pwhash_scryptsalsa208sha256_bytes_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_bytes_max=P.gj)(),B._crypto_pwhash_scryptsalsa208sha256_passwd_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_passwd_min=P.hj)(),B._crypto_pwhash_scryptsalsa208sha256_passwd_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_passwd_max=P.ij)(),B._crypto_pwhash_scryptsalsa208sha256_saltbytes=()=>(B._crypto_pwhash_scryptsalsa208sha256_saltbytes=P.jj)(),B._crypto_pwhash_scryptsalsa208sha256_strbytes=()=>(B._crypto_pwhash_scryptsalsa208sha256_strbytes=P.kj)(),B._crypto_pwhash_scryptsalsa208sha256_strprefix=()=>(B._crypto_pwhash_scryptsalsa208sha256_strprefix=P.lj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_min=P.mj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_max=P.nj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_min=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_min=P.oj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_max=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_max=P.pj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=P.qj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=P.rj)(),B._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=()=>(B._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=P.sj)(),B._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=()=>(B._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=P.tj)(),B._crypto_pwhash_scryptsalsa208sha256=(A,I,g,C,Q,i,o,E,a,_)=>(B._crypto_pwhash_scryptsalsa208sha256=P.uj)(A,I,g,C,Q,i,o,E,a,_),B._crypto_pwhash_scryptsalsa208sha256_str=(A,I,g,C,Q,i,o)=>(B._crypto_pwhash_scryptsalsa208sha256_str=P.vj)(A,I,g,C,Q,i,o),B._crypto_pwhash_scryptsalsa208sha256_str_verify=(A,I,g,C)=>(B._crypto_pwhash_scryptsalsa208sha256_str_verify=P.wj)(A,I,g,C),B._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=(A,I,g,C)=>(B._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash=P.xj)(A,I,g,C),B._crypto_scalarmult_ed25519=(A,I,g)=>(B._crypto_scalarmult_ed25519=P.yj)(A,I,g),B._crypto_scalarmult_ed25519_noclamp=(A,I,g)=>(B._crypto_scalarmult_ed25519_noclamp=P.zj)(A,I,g),B._crypto_scalarmult_ed25519_base=(A,I)=>(B._crypto_scalarmult_ed25519_base=P.Aj)(A,I),B._crypto_scalarmult_ed25519_base_noclamp=(A,I)=>(B._crypto_scalarmult_ed25519_base_noclamp=P.Bj)(A,I),B._crypto_scalarmult_ed25519_bytes=()=>(B._crypto_scalarmult_ed25519_bytes=P.Cj)(),B._crypto_scalarmult_ed25519_scalarbytes=()=>(B._crypto_scalarmult_ed25519_scalarbytes=P.Dj)(),B._crypto_scalarmult_ristretto255=(A,I,g)=>(B._crypto_scalarmult_ristretto255=P.Ej)(A,I,g),B._crypto_scalarmult_ristretto255_base=(A,I)=>(B._crypto_scalarmult_ristretto255_base=P.Fj)(A,I),B._crypto_scalarmult_ristretto255_bytes=()=>(B._crypto_scalarmult_ristretto255_bytes=P.Gj)(),B._crypto_scalarmult_ristretto255_scalarbytes=()=>(B._crypto_scalarmult_ristretto255_scalarbytes=P.Hj)(),B._crypto_secretbox_xchacha20poly1305_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_xchacha20poly1305_detached=P.Ij)(A,I,g,C,Q,i,o),B._crypto_secretbox_xchacha20poly1305_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xchacha20poly1305_easy=P.Jj)(A,I,g,C,Q,i),B._crypto_secretbox_xchacha20poly1305_open_detached=(A,I,g,C,Q,i,o)=>(B._crypto_secretbox_xchacha20poly1305_open_detached=P.Kj)(A,I,g,C,Q,i,o),B._crypto_secretbox_xchacha20poly1305_open_easy=(A,I,g,C,Q,i)=>(B._crypto_secretbox_xchacha20poly1305_open_easy=P.Lj)(A,I,g,C,Q,i),B._crypto_secretbox_xchacha20poly1305_keybytes=()=>(B._crypto_secretbox_xchacha20poly1305_keybytes=P.Mj)(),B._crypto_secretbox_xchacha20poly1305_noncebytes=()=>(B._crypto_secretbox_xchacha20poly1305_noncebytes=P.Nj)(),B._crypto_secretbox_xchacha20poly1305_macbytes=()=>(B._crypto_secretbox_xchacha20poly1305_macbytes=P.Oj)(),B._crypto_secretbox_xchacha20poly1305_messagebytes_max=()=>(B._crypto_secretbox_xchacha20poly1305_messagebytes_max=P.Pj)(),B._crypto_shorthash_siphashx24_bytes=()=>(B._crypto_shorthash_siphashx24_bytes=P.Qj)(),B._crypto_shorthash_siphashx24_keybytes=()=>(B._crypto_shorthash_siphashx24_keybytes=P.Rj)(),B._crypto_shorthash_siphashx24=(A,I,g,C,Q)=>(B._crypto_shorthash_siphashx24=P.Sj)(A,I,g,C,Q),B._crypto_stream_salsa2012=(A,I,g,C,Q)=>(B._crypto_stream_salsa2012=P.Tj)(A,I,g,C,Q),B._crypto_stream_salsa2012_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_salsa2012_xor=P.Uj)(A,I,g,C,Q,i),B._crypto_stream_salsa2012_keybytes=()=>(B._crypto_stream_salsa2012_keybytes=P.Vj)(),B._crypto_stream_salsa2012_noncebytes=()=>(B._crypto_stream_salsa2012_noncebytes=P.Wj)(),B._crypto_stream_salsa2012_messagebytes_max=()=>(B._crypto_stream_salsa2012_messagebytes_max=P.Xj)(),B._crypto_stream_salsa2012_keygen=A=>(B._crypto_stream_salsa2012_keygen=P.Yj)(A),B._crypto_stream_salsa208=(A,I,g,C,Q)=>(B._crypto_stream_salsa208=P.Zj)(A,I,g,C,Q),B._crypto_stream_salsa208_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_salsa208_xor=P._j)(A,I,g,C,Q,i),B._crypto_stream_salsa208_keybytes=()=>(B._crypto_stream_salsa208_keybytes=P.$j)(),B._crypto_stream_salsa208_noncebytes=()=>(B._crypto_stream_salsa208_noncebytes=P.ak)(),B._crypto_stream_salsa208_messagebytes_max=()=>(B._crypto_stream_salsa208_messagebytes_max=P.bk)(),B._crypto_stream_salsa208_keygen=A=>(B._crypto_stream_salsa208_keygen=P.ck)(A),B._crypto_stream_xchacha20_keybytes=()=>(B._crypto_stream_xchacha20_keybytes=P.dk)(),B._crypto_stream_xchacha20_noncebytes=()=>(B._crypto_stream_xchacha20_noncebytes=P.ek)(),B._crypto_stream_xchacha20_messagebytes_max=()=>(B._crypto_stream_xchacha20_messagebytes_max=P.fk)(),B._crypto_stream_xchacha20=(A,I,g,C,Q)=>(B._crypto_stream_xchacha20=P.gk)(A,I,g,C,Q),B._crypto_stream_xchacha20_xor_ic=(A,I,g,C,Q,i,o,E)=>(B._crypto_stream_xchacha20_xor_ic=P.hk)(A,I,g,C,Q,i,o,E),B._crypto_stream_xchacha20_xor=(A,I,g,C,Q,i)=>(B._crypto_stream_xchacha20_xor=P.ik)(A,I,g,C,Q,i),B._crypto_stream_xchacha20_keygen=A=>(B._crypto_stream_xchacha20_keygen=P.jk)(A),B._malloc=A=>(B._malloc=P.kk)(A),B._free=A=>(B._free=P.lk)(A),B.setValue=function(A,I,g="i8"){switch(g.endsWith("*")&&(g="*"),g){case"i1":case"i8":y[A]=I;break;case"i16":h[A>>1]=I;break;case"i32":D[A>>2]=I;break;case"i64":U("to do setValue(i64) use WASM_BIGINT");case"float":p[A>>2]=I;break;case"double":w[A>>3]=I;break;case"*":f[A>>2]=I;break;default:U(`invalid type for setValue: ${g}`)}},B.getValue=function(A,I="i8"){switch(I.endsWith("*")&&(I="*"),I){case"i1":case"i8":return y[A];case"i16":return h[A>>1];case"i32":return D[A>>2];case"i64":U("to do getValue(i64) use WASM_BIGINT");case"float":return p[A>>2];case"double":return w[A>>3];case"*":return f[A>>2];default:U(`invalid type for getValue: ${I}`)}},B.UTF8ToString=x,K=function A(){l||q(),l||(K=A)},B.preInit)for("function"==typeof B.preInit&&(B.preInit=[B.preInit]);B.preInit.length>0;)B.preInit.pop()();q()})).catch((function(){return C.useBackupModule()})),I} true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (I),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0}(this);


/***/ }),

/***/ "./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js ***!
  \**************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(e){function a(e,a){"use strict";var r,t="uint8array",_=a.ready.then((function(){function t(){if(0!==r._sodium_init())throw new Error("libsodium was not correctly initialized.");for(var a=["crypto_aead_aegis128l_decrypt","crypto_aead_aegis128l_decrypt_detached","crypto_aead_aegis128l_encrypt","crypto_aead_aegis128l_encrypt_detached","crypto_aead_aegis128l_keygen","crypto_aead_aegis256_decrypt","crypto_aead_aegis256_decrypt_detached","crypto_aead_aegis256_encrypt","crypto_aead_aegis256_encrypt_detached","crypto_aead_aegis256_keygen","crypto_aead_chacha20poly1305_decrypt","crypto_aead_chacha20poly1305_decrypt_detached","crypto_aead_chacha20poly1305_encrypt","crypto_aead_chacha20poly1305_encrypt_detached","crypto_aead_chacha20poly1305_ietf_decrypt","crypto_aead_chacha20poly1305_ietf_decrypt_detached","crypto_aead_chacha20poly1305_ietf_encrypt","crypto_aead_chacha20poly1305_ietf_encrypt_detached","crypto_aead_chacha20poly1305_ietf_keygen","crypto_aead_chacha20poly1305_keygen","crypto_aead_xchacha20poly1305_ietf_decrypt","crypto_aead_xchacha20poly1305_ietf_decrypt_detached","crypto_aead_xchacha20poly1305_ietf_encrypt","crypto_aead_xchacha20poly1305_ietf_encrypt_detached","crypto_aead_xchacha20poly1305_ietf_keygen","crypto_auth","crypto_auth_hmacsha256","crypto_auth_hmacsha256_final","crypto_auth_hmacsha256_init","crypto_auth_hmacsha256_keygen","crypto_auth_hmacsha256_update","crypto_auth_hmacsha256_verify","crypto_auth_hmacsha512","crypto_auth_hmacsha512256","crypto_auth_hmacsha512256_final","crypto_auth_hmacsha512256_init","crypto_auth_hmacsha512256_keygen","crypto_auth_hmacsha512256_update","crypto_auth_hmacsha512256_verify","crypto_auth_hmacsha512_final","crypto_auth_hmacsha512_init","crypto_auth_hmacsha512_keygen","crypto_auth_hmacsha512_update","crypto_auth_hmacsha512_verify","crypto_auth_keygen","crypto_auth_verify","crypto_box_beforenm","crypto_box_curve25519xchacha20poly1305_beforenm","crypto_box_curve25519xchacha20poly1305_detached","crypto_box_curve25519xchacha20poly1305_detached_afternm","crypto_box_curve25519xchacha20poly1305_easy","crypto_box_curve25519xchacha20poly1305_easy_afternm","crypto_box_curve25519xchacha20poly1305_keypair","crypto_box_curve25519xchacha20poly1305_open_detached","crypto_box_curve25519xchacha20poly1305_open_detached_afternm","crypto_box_curve25519xchacha20poly1305_open_easy","crypto_box_curve25519xchacha20poly1305_open_easy_afternm","crypto_box_curve25519xchacha20poly1305_seal","crypto_box_curve25519xchacha20poly1305_seal_open","crypto_box_curve25519xchacha20poly1305_seed_keypair","crypto_box_detached","crypto_box_easy","crypto_box_easy_afternm","crypto_box_keypair","crypto_box_open_detached","crypto_box_open_easy","crypto_box_open_easy_afternm","crypto_box_seal","crypto_box_seal_open","crypto_box_seed_keypair","crypto_core_ed25519_add","crypto_core_ed25519_from_hash","crypto_core_ed25519_from_uniform","crypto_core_ed25519_is_valid_point","crypto_core_ed25519_random","crypto_core_ed25519_scalar_add","crypto_core_ed25519_scalar_complement","crypto_core_ed25519_scalar_invert","crypto_core_ed25519_scalar_mul","crypto_core_ed25519_scalar_negate","crypto_core_ed25519_scalar_random","crypto_core_ed25519_scalar_reduce","crypto_core_ed25519_scalar_sub","crypto_core_ed25519_sub","crypto_core_hchacha20","crypto_core_hsalsa20","crypto_core_ristretto255_add","crypto_core_ristretto255_from_hash","crypto_core_ristretto255_is_valid_point","crypto_core_ristretto255_random","crypto_core_ristretto255_scalar_add","crypto_core_ristretto255_scalar_complement","crypto_core_ristretto255_scalar_invert","crypto_core_ristretto255_scalar_mul","crypto_core_ristretto255_scalar_negate","crypto_core_ristretto255_scalar_random","crypto_core_ristretto255_scalar_reduce","crypto_core_ristretto255_scalar_sub","crypto_core_ristretto255_sub","crypto_generichash","crypto_generichash_blake2b_salt_personal","crypto_generichash_final","crypto_generichash_init","crypto_generichash_keygen","crypto_generichash_update","crypto_hash","crypto_hash_sha256","crypto_hash_sha256_final","crypto_hash_sha256_init","crypto_hash_sha256_update","crypto_hash_sha512","crypto_hash_sha512_final","crypto_hash_sha512_init","crypto_hash_sha512_update","crypto_kdf_derive_from_key","crypto_kdf_keygen","crypto_kx_client_session_keys","crypto_kx_keypair","crypto_kx_seed_keypair","crypto_kx_server_session_keys","crypto_onetimeauth","crypto_onetimeauth_final","crypto_onetimeauth_init","crypto_onetimeauth_keygen","crypto_onetimeauth_update","crypto_onetimeauth_verify","crypto_pwhash","crypto_pwhash_scryptsalsa208sha256","crypto_pwhash_scryptsalsa208sha256_ll","crypto_pwhash_scryptsalsa208sha256_str","crypto_pwhash_scryptsalsa208sha256_str_verify","crypto_pwhash_str","crypto_pwhash_str_needs_rehash","crypto_pwhash_str_verify","crypto_scalarmult","crypto_scalarmult_base","crypto_scalarmult_ed25519","crypto_scalarmult_ed25519_base","crypto_scalarmult_ed25519_base_noclamp","crypto_scalarmult_ed25519_noclamp","crypto_scalarmult_ristretto255","crypto_scalarmult_ristretto255_base","crypto_secretbox_detached","crypto_secretbox_easy","crypto_secretbox_keygen","crypto_secretbox_open_detached","crypto_secretbox_open_easy","crypto_secretstream_xchacha20poly1305_init_pull","crypto_secretstream_xchacha20poly1305_init_push","crypto_secretstream_xchacha20poly1305_keygen","crypto_secretstream_xchacha20poly1305_pull","crypto_secretstream_xchacha20poly1305_push","crypto_secretstream_xchacha20poly1305_rekey","crypto_shorthash","crypto_shorthash_keygen","crypto_shorthash_siphashx24","crypto_sign","crypto_sign_detached","crypto_sign_ed25519_pk_to_curve25519","crypto_sign_ed25519_sk_to_curve25519","crypto_sign_ed25519_sk_to_pk","crypto_sign_ed25519_sk_to_seed","crypto_sign_final_create","crypto_sign_final_verify","crypto_sign_init","crypto_sign_keypair","crypto_sign_open","crypto_sign_seed_keypair","crypto_sign_update","crypto_sign_verify_detached","crypto_stream_chacha20","crypto_stream_chacha20_ietf_xor","crypto_stream_chacha20_ietf_xor_ic","crypto_stream_chacha20_keygen","crypto_stream_chacha20_xor","crypto_stream_chacha20_xor_ic","crypto_stream_keygen","crypto_stream_xchacha20_keygen","crypto_stream_xchacha20_xor","crypto_stream_xchacha20_xor_ic","randombytes_buf","randombytes_buf_deterministic","randombytes_close","randombytes_random","randombytes_set_implementation","randombytes_stir","randombytes_uniform","sodium_version_string"],t=[x,k,S,T,w,Y,B,A,M,I,K,N,L,O,U,C,P,R,X,G,D,F,V,H,W,q,j,z,J,Q,Z,$,ee,ae,re,te,_e,ne,se,ce,oe,he,pe,ye,ie,le,ue,de,ve,ge,be,fe,me,Ee,xe,ke,Se,Te,we,Ye,Be,Ae,Me,Ie,Ke,Ne,Le,Oe,Ue,Ce,Pe,Re,Xe,Ge,De,Fe,Ve,He,We,qe,je,ze,Je,Qe,Ze,$e,ea,aa,ra,ta,_a,na,sa,ca,oa,ha,pa,ya,ia,la,ua,da,va,ga,ba,fa,ma,Ea,xa,ka,Sa,Ta,wa,Ya,Ba,Aa,Ma,Ia,Ka,Na,La,Oa,Ua,Ca,Pa,Ra,Xa,Ga,Da,Fa,Va,Ha,Wa,qa,ja,za,Ja,Qa,Za,$a,er,ar,rr,tr,_r,nr,sr,cr,or,hr,pr,yr,ir,lr,ur,dr,vr,gr,br,fr,mr,Er,xr,kr,Sr,Tr,wr,Yr,Br,Ar,Mr,Ir,Kr,Nr,Lr,Or,Ur,Cr,Pr,Rr,Xr,Gr,Dr,Fr,Vr,Hr,Wr,qr],_=0;_<t.length;_++)"function"==typeof r["_"+a[_]]&&(e[a[_]]=t[_]);var n=["SODIUM_LIBRARY_VERSION_MAJOR","SODIUM_LIBRARY_VERSION_MINOR","crypto_aead_aegis128l_ABYTES","crypto_aead_aegis128l_KEYBYTES","crypto_aead_aegis128l_MESSAGEBYTES_MAX","crypto_aead_aegis128l_NPUBBYTES","crypto_aead_aegis128l_NSECBYTES","crypto_aead_aegis256_ABYTES","crypto_aead_aegis256_KEYBYTES","crypto_aead_aegis256_MESSAGEBYTES_MAX","crypto_aead_aegis256_NPUBBYTES","crypto_aead_aegis256_NSECBYTES","crypto_aead_aes256gcm_ABYTES","crypto_aead_aes256gcm_KEYBYTES","crypto_aead_aes256gcm_MESSAGEBYTES_MAX","crypto_aead_aes256gcm_NPUBBYTES","crypto_aead_aes256gcm_NSECBYTES","crypto_aead_chacha20poly1305_ABYTES","crypto_aead_chacha20poly1305_IETF_ABYTES","crypto_aead_chacha20poly1305_IETF_KEYBYTES","crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_IETF_NPUBBYTES","crypto_aead_chacha20poly1305_IETF_NSECBYTES","crypto_aead_chacha20poly1305_KEYBYTES","crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_NPUBBYTES","crypto_aead_chacha20poly1305_NSECBYTES","crypto_aead_chacha20poly1305_ietf_ABYTES","crypto_aead_chacha20poly1305_ietf_KEYBYTES","crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_ietf_NPUBBYTES","crypto_aead_chacha20poly1305_ietf_NSECBYTES","crypto_aead_xchacha20poly1305_IETF_ABYTES","crypto_aead_xchacha20poly1305_IETF_KEYBYTES","crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX","crypto_aead_xchacha20poly1305_IETF_NPUBBYTES","crypto_aead_xchacha20poly1305_IETF_NSECBYTES","crypto_aead_xchacha20poly1305_ietf_ABYTES","crypto_aead_xchacha20poly1305_ietf_KEYBYTES","crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX","crypto_aead_xchacha20poly1305_ietf_NPUBBYTES","crypto_aead_xchacha20poly1305_ietf_NSECBYTES","crypto_auth_BYTES","crypto_auth_KEYBYTES","crypto_auth_hmacsha256_BYTES","crypto_auth_hmacsha256_KEYBYTES","crypto_auth_hmacsha512256_BYTES","crypto_auth_hmacsha512256_KEYBYTES","crypto_auth_hmacsha512_BYTES","crypto_auth_hmacsha512_KEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_MACBYTES","crypto_box_MESSAGEBYTES_MAX","crypto_box_NONCEBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SEALBYTES","crypto_box_SECRETKEYBYTES","crypto_box_SEEDBYTES","crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES","crypto_box_curve25519xchacha20poly1305_MACBYTES","crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX","crypto_box_curve25519xchacha20poly1305_NONCEBYTES","crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES","crypto_box_curve25519xchacha20poly1305_SEALBYTES","crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES","crypto_box_curve25519xchacha20poly1305_SEEDBYTES","crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES","crypto_box_curve25519xsalsa20poly1305_MACBYTES","crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX","crypto_box_curve25519xsalsa20poly1305_NONCEBYTES","crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES","crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES","crypto_box_curve25519xsalsa20poly1305_SEEDBYTES","crypto_core_ed25519_BYTES","crypto_core_ed25519_HASHBYTES","crypto_core_ed25519_NONREDUCEDSCALARBYTES","crypto_core_ed25519_SCALARBYTES","crypto_core_ed25519_UNIFORMBYTES","crypto_core_hchacha20_CONSTBYTES","crypto_core_hchacha20_INPUTBYTES","crypto_core_hchacha20_KEYBYTES","crypto_core_hchacha20_OUTPUTBYTES","crypto_core_hsalsa20_CONSTBYTES","crypto_core_hsalsa20_INPUTBYTES","crypto_core_hsalsa20_KEYBYTES","crypto_core_hsalsa20_OUTPUTBYTES","crypto_core_ristretto255_BYTES","crypto_core_ristretto255_HASHBYTES","crypto_core_ristretto255_NONREDUCEDSCALARBYTES","crypto_core_ristretto255_SCALARBYTES","crypto_core_salsa2012_CONSTBYTES","crypto_core_salsa2012_INPUTBYTES","crypto_core_salsa2012_KEYBYTES","crypto_core_salsa2012_OUTPUTBYTES","crypto_core_salsa208_CONSTBYTES","crypto_core_salsa208_INPUTBYTES","crypto_core_salsa208_KEYBYTES","crypto_core_salsa208_OUTPUTBYTES","crypto_core_salsa20_CONSTBYTES","crypto_core_salsa20_INPUTBYTES","crypto_core_salsa20_KEYBYTES","crypto_core_salsa20_OUTPUTBYTES","crypto_generichash_BYTES","crypto_generichash_BYTES_MAX","crypto_generichash_BYTES_MIN","crypto_generichash_KEYBYTES","crypto_generichash_KEYBYTES_MAX","crypto_generichash_KEYBYTES_MIN","crypto_generichash_blake2b_BYTES","crypto_generichash_blake2b_BYTES_MAX","crypto_generichash_blake2b_BYTES_MIN","crypto_generichash_blake2b_KEYBYTES","crypto_generichash_blake2b_KEYBYTES_MAX","crypto_generichash_blake2b_KEYBYTES_MIN","crypto_generichash_blake2b_PERSONALBYTES","crypto_generichash_blake2b_SALTBYTES","crypto_hash_BYTES","crypto_hash_sha256_BYTES","crypto_hash_sha512_BYTES","crypto_kdf_BYTES_MAX","crypto_kdf_BYTES_MIN","crypto_kdf_CONTEXTBYTES","crypto_kdf_KEYBYTES","crypto_kdf_blake2b_BYTES_MAX","crypto_kdf_blake2b_BYTES_MIN","crypto_kdf_blake2b_CONTEXTBYTES","crypto_kdf_blake2b_KEYBYTES","crypto_kdf_hkdf_sha256_BYTES_MAX","crypto_kdf_hkdf_sha256_BYTES_MIN","crypto_kdf_hkdf_sha256_KEYBYTES","crypto_kdf_hkdf_sha512_BYTES_MAX","crypto_kdf_hkdf_sha512_BYTES_MIN","crypto_kdf_hkdf_sha512_KEYBYTES","crypto_kx_PUBLICKEYBYTES","crypto_kx_SECRETKEYBYTES","crypto_kx_SEEDBYTES","crypto_kx_SESSIONKEYBYTES","crypto_onetimeauth_BYTES","crypto_onetimeauth_KEYBYTES","crypto_onetimeauth_poly1305_BYTES","crypto_onetimeauth_poly1305_KEYBYTES","crypto_pwhash_ALG_ARGON2I13","crypto_pwhash_ALG_ARGON2ID13","crypto_pwhash_ALG_DEFAULT","crypto_pwhash_BYTES_MAX","crypto_pwhash_BYTES_MIN","crypto_pwhash_MEMLIMIT_INTERACTIVE","crypto_pwhash_MEMLIMIT_MAX","crypto_pwhash_MEMLIMIT_MIN","crypto_pwhash_MEMLIMIT_MODERATE","crypto_pwhash_MEMLIMIT_SENSITIVE","crypto_pwhash_OPSLIMIT_INTERACTIVE","crypto_pwhash_OPSLIMIT_MAX","crypto_pwhash_OPSLIMIT_MIN","crypto_pwhash_OPSLIMIT_MODERATE","crypto_pwhash_OPSLIMIT_SENSITIVE","crypto_pwhash_PASSWD_MAX","crypto_pwhash_PASSWD_MIN","crypto_pwhash_SALTBYTES","crypto_pwhash_STRBYTES","crypto_pwhash_argon2i_BYTES_MAX","crypto_pwhash_argon2i_BYTES_MIN","crypto_pwhash_argon2i_MEMLIMIT_INTERACTIVE","crypto_pwhash_argon2i_MEMLIMIT_MAX","crypto_pwhash_argon2i_MEMLIMIT_MIN","crypto_pwhash_argon2i_MEMLIMIT_MODERATE","crypto_pwhash_argon2i_MEMLIMIT_SENSITIVE","crypto_pwhash_argon2i_OPSLIMIT_INTERACTIVE","crypto_pwhash_argon2i_OPSLIMIT_MAX","crypto_pwhash_argon2i_OPSLIMIT_MIN","crypto_pwhash_argon2i_OPSLIMIT_MODERATE","crypto_pwhash_argon2i_OPSLIMIT_SENSITIVE","crypto_pwhash_argon2i_PASSWD_MAX","crypto_pwhash_argon2i_PASSWD_MIN","crypto_pwhash_argon2i_SALTBYTES","crypto_pwhash_argon2i_STRBYTES","crypto_pwhash_argon2id_BYTES_MAX","crypto_pwhash_argon2id_BYTES_MIN","crypto_pwhash_argon2id_MEMLIMIT_INTERACTIVE","crypto_pwhash_argon2id_MEMLIMIT_MAX","crypto_pwhash_argon2id_MEMLIMIT_MIN","crypto_pwhash_argon2id_MEMLIMIT_MODERATE","crypto_pwhash_argon2id_MEMLIMIT_SENSITIVE","crypto_pwhash_argon2id_OPSLIMIT_INTERACTIVE","crypto_pwhash_argon2id_OPSLIMIT_MAX","crypto_pwhash_argon2id_OPSLIMIT_MIN","crypto_pwhash_argon2id_OPSLIMIT_MODERATE","crypto_pwhash_argon2id_OPSLIMIT_SENSITIVE","crypto_pwhash_argon2id_PASSWD_MAX","crypto_pwhash_argon2id_PASSWD_MIN","crypto_pwhash_argon2id_SALTBYTES","crypto_pwhash_argon2id_STRBYTES","crypto_pwhash_scryptsalsa208sha256_BYTES_MAX","crypto_pwhash_scryptsalsa208sha256_BYTES_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX","crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN","crypto_pwhash_scryptsalsa208sha256_SALTBYTES","crypto_pwhash_scryptsalsa208sha256_STRBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_scalarmult_curve25519_BYTES","crypto_scalarmult_curve25519_SCALARBYTES","crypto_scalarmult_ed25519_BYTES","crypto_scalarmult_ed25519_SCALARBYTES","crypto_scalarmult_ristretto255_BYTES","crypto_scalarmult_ristretto255_SCALARBYTES","crypto_secretbox_KEYBYTES","crypto_secretbox_MACBYTES","crypto_secretbox_MESSAGEBYTES_MAX","crypto_secretbox_NONCEBYTES","crypto_secretbox_xchacha20poly1305_KEYBYTES","crypto_secretbox_xchacha20poly1305_MACBYTES","crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretbox_xchacha20poly1305_NONCEBYTES","crypto_secretbox_xsalsa20poly1305_KEYBYTES","crypto_secretbox_xsalsa20poly1305_MACBYTES","crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX","crypto_secretbox_xsalsa20poly1305_NONCEBYTES","crypto_secretstream_xchacha20poly1305_ABYTES","crypto_secretstream_xchacha20poly1305_HEADERBYTES","crypto_secretstream_xchacha20poly1305_KEYBYTES","crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretstream_xchacha20poly1305_TAG_FINAL","crypto_secretstream_xchacha20poly1305_TAG_MESSAGE","crypto_secretstream_xchacha20poly1305_TAG_PUSH","crypto_secretstream_xchacha20poly1305_TAG_REKEY","crypto_shorthash_BYTES","crypto_shorthash_KEYBYTES","crypto_shorthash_siphash24_BYTES","crypto_shorthash_siphash24_KEYBYTES","crypto_shorthash_siphashx24_BYTES","crypto_shorthash_siphashx24_KEYBYTES","crypto_sign_BYTES","crypto_sign_MESSAGEBYTES_MAX","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_sign_ed25519_BYTES","crypto_sign_ed25519_MESSAGEBYTES_MAX","crypto_sign_ed25519_PUBLICKEYBYTES","crypto_sign_ed25519_SECRETKEYBYTES","crypto_sign_ed25519_SEEDBYTES","crypto_stream_KEYBYTES","crypto_stream_MESSAGEBYTES_MAX","crypto_stream_NONCEBYTES","crypto_stream_chacha20_IETF_KEYBYTES","crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX","crypto_stream_chacha20_IETF_NONCEBYTES","crypto_stream_chacha20_KEYBYTES","crypto_stream_chacha20_MESSAGEBYTES_MAX","crypto_stream_chacha20_NONCEBYTES","crypto_stream_chacha20_ietf_KEYBYTES","crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX","crypto_stream_chacha20_ietf_NONCEBYTES","crypto_stream_salsa2012_KEYBYTES","crypto_stream_salsa2012_MESSAGEBYTES_MAX","crypto_stream_salsa2012_NONCEBYTES","crypto_stream_salsa208_KEYBYTES","crypto_stream_salsa208_MESSAGEBYTES_MAX","crypto_stream_salsa208_NONCEBYTES","crypto_stream_salsa20_KEYBYTES","crypto_stream_salsa20_MESSAGEBYTES_MAX","crypto_stream_salsa20_NONCEBYTES","crypto_stream_xchacha20_KEYBYTES","crypto_stream_xchacha20_MESSAGEBYTES_MAX","crypto_stream_xchacha20_NONCEBYTES","crypto_stream_xsalsa20_KEYBYTES","crypto_stream_xsalsa20_MESSAGEBYTES_MAX","crypto_stream_xsalsa20_NONCEBYTES","crypto_verify_16_BYTES","crypto_verify_32_BYTES","crypto_verify_64_BYTES"];for(_=0;_<n.length;_++)"function"==typeof(c=r["_"+n[_].toLowerCase()])&&(e[n[_]]=c());var s=["SODIUM_VERSION_STRING","crypto_pwhash_STRPREFIX","crypto_pwhash_argon2i_STRPREFIX","crypto_pwhash_argon2id_STRPREFIX","crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];for(_=0;_<s.length;_++){var c;"function"==typeof(c=r["_"+s[_].toLowerCase()])&&(e[s[_]]=r.UTF8ToString(c()))}}r=a;try{t();var _=new Uint8Array([98,97,108,108,115]),n=e.randombytes_buf(e.crypto_secretbox_NONCEBYTES),s=e.randombytes_buf(e.crypto_secretbox_KEYBYTES),c=e.crypto_secretbox_easy(_,n,s),o=e.crypto_secretbox_open_easy(c,n,s);if(e.memcmp(_,o))return}catch(e){if(null==r.useBackupModule)throw new Error("Both wasm and asm failed to load"+e)}r.useBackupModule(),t()}));function n(e){if("function"==typeof TextEncoder)return(new TextEncoder).encode(e);e=unescape(encodeURIComponent(e));for(var a=new Uint8Array(e.length),r=0,t=e.length;r<t;r++)a[r]=e.charCodeAt(r);return a}function s(e){if("function"==typeof TextDecoder)return new TextDecoder("utf-8",{fatal:!0}).decode(e);var a=8192,r=Math.ceil(e.length/a);if(r<=1)try{return decodeURIComponent(escape(String.fromCharCode.apply(null,e)))}catch(e){throw new TypeError("The encoded data was not valid.")}for(var t="",_=0,n=0;n<r;n++){var c=Array.prototype.slice.call(e,n*a+_,(n+1)*a+_);if(0!=c.length){var o,h=c.length,p=0;do{var y=c[--h];y>=240?(p=4,o=!0):y>=224?(p=3,o=!0):y>=192?(p=2,o=!0):y<128&&(p=1,o=!0)}while(!o);for(var i=p-(c.length-h),l=0;l<i;l++)_--,c.pop();t+=s(c)}}return t}function c(e){e=E(null,e,"input");for(var a,r,t,_="",n=0;n<e.length;n++)t=87+(r=15&e[n])+(r-10>>8&-39)<<8|87+(a=e[n]>>>4)+(a-10>>8&-39),_+=String.fromCharCode(255&t)+String.fromCharCode(t>>>8);return _}var o={ORIGINAL:1,ORIGINAL_NO_PADDING:3,URLSAFE:5,URLSAFE_NO_PADDING:7};function h(e){if(null==e)return o.URLSAFE_NO_PADDING;if(e!==o.ORIGINAL&&e!==o.ORIGINAL_NO_PADDING&&e!==o.URLSAFE&&e!=o.URLSAFE_NO_PADDING)throw new Error("unsupported base64 variant");return e}function p(e,a){a=h(a),e=E(_,e,"input");var t,_=[],n=0|Math.floor(e.length/3),c=e.length-3*n,o=4*n+(0!==c?2&a?2+(c>>>1):4:0),p=new u(o+1),y=d(e);return _.push(y),_.push(p.address),0===r._sodium_bin2base64(p.address,p.length,y,e.length,a)&&b(_,"conversion failed"),p.length=o,t=s(p.to_Uint8Array()),g(_),t}function y(e,a){var r=a||t;if(!i(r))throw new Error(r+" output format is not available");if(e instanceof u){if("uint8array"===r)return e.to_Uint8Array();if("text"===r)return s(e.to_Uint8Array());if("hex"===r)return c(e.to_Uint8Array());if("base64"===r)return p(e.to_Uint8Array(),o.URLSAFE_NO_PADDING);throw new Error('What is output format "'+r+'"?')}if("object"==typeof e){for(var _=Object.keys(e),n={},h=0;h<_.length;h++)n[_[h]]=y(e[_[h]],r);return n}if("string"==typeof e)return e;throw new TypeError("Cannot format output")}function i(e){for(var a=["uint8array","text","hex","base64"],r=0;r<a.length;r++)if(a[r]===e)return!0;return!1}function l(e){if(e){if("string"!=typeof e)throw new TypeError("When defined, the output format must be a string");if(!i(e))throw new Error(e+" is not a supported output format")}}function u(e){this.length=e,this.address=v(e)}function d(e){var a=v(e.length);return r.HEAPU8.set(e,a),a}function v(e){var a=r._malloc(e);if(0===a)throw{message:"_malloc() failed",length:e};return a}function g(e){if(e)for(var a=0;a<e.length;a++)t=e[a],r._free(t);var t}function b(e,a){throw g(e),new Error(a)}function f(e,a){throw g(e),new TypeError(a)}function m(e,a,r){null==a&&f(e,r+" cannot be null or undefined")}function E(e,a,r){return m(e,a,r),a instanceof Uint8Array?a:"string"==typeof a?n(a):void f(e,"unsupported input type for "+r)}function x(e,a,t,_,n,s){var c=[];l(s);var o=null;null!=e&&(o=d(e=E(c,e,"secret_nonce")),e.length,c.push(o)),a=E(c,a,"ciphertext");var h,p=r._crypto_aead_aegis128l_abytes(),i=a.length;i<p&&f(c,"ciphertext is too short"),h=d(a),c.push(h);var v=null,m=0;null!=t&&(v=d(t=E(c,t,"additional_data")),m=t.length,c.push(v)),_=E(c,_,"public_nonce");var x,k=0|r._crypto_aead_aegis128l_npubbytes();_.length!==k&&f(c,"invalid public_nonce length"),x=d(_),c.push(x),n=E(c,n,"key");var S,T=0|r._crypto_aead_aegis128l_keybytes();n.length!==T&&f(c,"invalid key length"),S=d(n),c.push(S);var w=new u(i-r._crypto_aead_aegis128l_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_aegis128l_decrypt(Y,null,o,h,i,0,v,m,0,x,S)){var B=y(w,s);return g(c),B}b(c,"ciphertext cannot be decrypted using that key")}function k(e,a,t,_,n,s,c){var o=[];l(c);var h=null;null!=e&&(h=d(e=E(o,e,"secret_nonce")),e.length,o.push(h));var p=d(a=E(o,a,"ciphertext")),i=a.length;o.push(p),t=E(o,t,"mac");var v,m=0|r._crypto_box_macbytes();t.length!==m&&f(o,"invalid mac length"),v=d(t),o.push(v);var x=null,k=0;null!=_&&(x=d(_=E(o,_,"additional_data")),k=_.length,o.push(x)),n=E(o,n,"public_nonce");var S,T=0|r._crypto_aead_aegis128l_npubbytes();n.length!==T&&f(o,"invalid public_nonce length"),S=d(n),o.push(S),s=E(o,s,"key");var w,Y=0|r._crypto_aead_aegis128l_keybytes();s.length!==Y&&f(o,"invalid key length"),w=d(s),o.push(w);var B=new u(0|i),A=B.address;if(o.push(A),0===r._crypto_aead_aegis128l_decrypt_detached(A,h,p,i,0,v,x,k,0,S,w)){var M=y(B,c);return g(o),M}b(o,"ciphertext cannot be decrypted using that key")}function S(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_aegis128l_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_aegis128l_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(h+r._crypto_aead_aegis128l_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_aegis128l_encrypt(w,null,o,h,0,p,i,0,v,m,k)){var Y=y(T,s);return g(c),Y}b(c,"invalid usage")}function T(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_aegis128l_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_aegis128l_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(0|h),w=T.address;c.push(w);var Y=new u(0|r._crypto_aead_aegis128l_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_aegis128l_encrypt_detached(w,B,null,o,h,0,p,i,0,v,m,k)){var A=y({ciphertext:T,mac:Y},s);return g(c),A}b(c,"invalid usage")}function w(e){var a=[];l(e);var t=new u(0|r._crypto_aead_aegis128l_keybytes()),_=t.address;a.push(_),r._crypto_aead_aegis128l_keygen(_);var n=y(t,e);return g(a),n}function Y(e,a,t,_,n,s){var c=[];l(s);var o=null;null!=e&&(o=d(e=E(c,e,"secret_nonce")),e.length,c.push(o)),a=E(c,a,"ciphertext");var h,p=r._crypto_aead_aegis256_abytes(),i=a.length;i<p&&f(c,"ciphertext is too short"),h=d(a),c.push(h);var v=null,m=0;null!=t&&(v=d(t=E(c,t,"additional_data")),m=t.length,c.push(v)),_=E(c,_,"public_nonce");var x,k=0|r._crypto_aead_aegis256_npubbytes();_.length!==k&&f(c,"invalid public_nonce length"),x=d(_),c.push(x),n=E(c,n,"key");var S,T=0|r._crypto_aead_aegis256_keybytes();n.length!==T&&f(c,"invalid key length"),S=d(n),c.push(S);var w=new u(i-r._crypto_aead_aegis256_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_aegis256_decrypt(Y,null,o,h,i,0,v,m,0,x,S)){var B=y(w,s);return g(c),B}b(c,"ciphertext cannot be decrypted using that key")}function B(e,a,t,_,n,s,c){var o=[];l(c);var h=null;null!=e&&(h=d(e=E(o,e,"secret_nonce")),e.length,o.push(h));var p=d(a=E(o,a,"ciphertext")),i=a.length;o.push(p),t=E(o,t,"mac");var v,m=0|r._crypto_box_macbytes();t.length!==m&&f(o,"invalid mac length"),v=d(t),o.push(v);var x=null,k=0;null!=_&&(x=d(_=E(o,_,"additional_data")),k=_.length,o.push(x)),n=E(o,n,"public_nonce");var S,T=0|r._crypto_aead_aegis256_npubbytes();n.length!==T&&f(o,"invalid public_nonce length"),S=d(n),o.push(S),s=E(o,s,"key");var w,Y=0|r._crypto_aead_aegis256_keybytes();s.length!==Y&&f(o,"invalid key length"),w=d(s),o.push(w);var B=new u(0|i),A=B.address;if(o.push(A),0===r._crypto_aead_aegis256_decrypt_detached(A,h,p,i,0,v,x,k,0,S,w)){var M=y(B,c);return g(o),M}b(o,"ciphertext cannot be decrypted using that key")}function A(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_aegis256_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_aegis256_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(h+r._crypto_aead_aegis256_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_aegis256_encrypt(w,null,o,h,0,p,i,0,v,m,k)){var Y=y(T,s);return g(c),Y}b(c,"invalid usage")}function M(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_aegis256_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_aegis256_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(0|h),w=T.address;c.push(w);var Y=new u(0|r._crypto_aead_aegis256_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_aegis256_encrypt_detached(w,B,null,o,h,0,p,i,0,v,m,k)){var A=y({ciphertext:T,mac:Y},s);return g(c),A}b(c,"invalid usage")}function I(e){var a=[];l(e);var t=new u(0|r._crypto_aead_aegis256_keybytes()),_=t.address;a.push(_),r._crypto_aead_aegis256_keygen(_);var n=y(t,e);return g(a),n}function K(e,a,t,_,n,s){var c=[];l(s);var o=null;null!=e&&(o=d(e=E(c,e,"secret_nonce")),e.length,c.push(o)),a=E(c,a,"ciphertext");var h,p=r._crypto_aead_chacha20poly1305_abytes(),i=a.length;i<p&&f(c,"ciphertext is too short"),h=d(a),c.push(h);var v=null,m=0;null!=t&&(v=d(t=E(c,t,"additional_data")),m=t.length,c.push(v)),_=E(c,_,"public_nonce");var x,k=0|r._crypto_aead_chacha20poly1305_npubbytes();_.length!==k&&f(c,"invalid public_nonce length"),x=d(_),c.push(x),n=E(c,n,"key");var S,T=0|r._crypto_aead_chacha20poly1305_keybytes();n.length!==T&&f(c,"invalid key length"),S=d(n),c.push(S);var w=new u(i-r._crypto_aead_chacha20poly1305_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_chacha20poly1305_decrypt(Y,null,o,h,i,0,v,m,0,x,S)){var B=y(w,s);return g(c),B}b(c,"ciphertext cannot be decrypted using that key")}function N(e,a,t,_,n,s,c){var o=[];l(c);var h=null;null!=e&&(h=d(e=E(o,e,"secret_nonce")),e.length,o.push(h));var p=d(a=E(o,a,"ciphertext")),i=a.length;o.push(p),t=E(o,t,"mac");var v,m=0|r._crypto_box_macbytes();t.length!==m&&f(o,"invalid mac length"),v=d(t),o.push(v);var x=null,k=0;null!=_&&(x=d(_=E(o,_,"additional_data")),k=_.length,o.push(x)),n=E(o,n,"public_nonce");var S,T=0|r._crypto_aead_chacha20poly1305_npubbytes();n.length!==T&&f(o,"invalid public_nonce length"),S=d(n),o.push(S),s=E(o,s,"key");var w,Y=0|r._crypto_aead_chacha20poly1305_keybytes();s.length!==Y&&f(o,"invalid key length"),w=d(s),o.push(w);var B=new u(0|i),A=B.address;if(o.push(A),0===r._crypto_aead_chacha20poly1305_decrypt_detached(A,h,p,i,0,v,x,k,0,S,w)){var M=y(B,c);return g(o),M}b(o,"ciphertext cannot be decrypted using that key")}function L(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(h+r._crypto_aead_chacha20poly1305_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_chacha20poly1305_encrypt(w,null,o,h,0,p,i,0,v,m,k)){var Y=y(T,s);return g(c),Y}b(c,"invalid usage")}function O(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(0|h),w=T.address;c.push(w);var Y=new u(0|r._crypto_aead_chacha20poly1305_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_chacha20poly1305_encrypt_detached(w,B,null,o,h,0,p,i,0,v,m,k)){var A=y({ciphertext:T,mac:Y},s);return g(c),A}b(c,"invalid usage")}function U(e,a,t,_,n,s){var c=[];l(s);var o=null;null!=e&&(o=d(e=E(c,e,"secret_nonce")),e.length,c.push(o)),a=E(c,a,"ciphertext");var h,p=r._crypto_aead_chacha20poly1305_ietf_abytes(),i=a.length;i<p&&f(c,"ciphertext is too short"),h=d(a),c.push(h);var v=null,m=0;null!=t&&(v=d(t=E(c,t,"additional_data")),m=t.length,c.push(v)),_=E(c,_,"public_nonce");var x,k=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==k&&f(c,"invalid public_nonce length"),x=d(_),c.push(x),n=E(c,n,"key");var S,T=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==T&&f(c,"invalid key length"),S=d(n),c.push(S);var w=new u(i-r._crypto_aead_chacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_chacha20poly1305_ietf_decrypt(Y,null,o,h,i,0,v,m,0,x,S)){var B=y(w,s);return g(c),B}b(c,"ciphertext cannot be decrypted using that key")}function C(e,a,t,_,n,s,c){var o=[];l(c);var h=null;null!=e&&(h=d(e=E(o,e,"secret_nonce")),e.length,o.push(h));var p=d(a=E(o,a,"ciphertext")),i=a.length;o.push(p),t=E(o,t,"mac");var v,m=0|r._crypto_box_macbytes();t.length!==m&&f(o,"invalid mac length"),v=d(t),o.push(v);var x=null,k=0;null!=_&&(x=d(_=E(o,_,"additional_data")),k=_.length,o.push(x)),n=E(o,n,"public_nonce");var S,T=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();n.length!==T&&f(o,"invalid public_nonce length"),S=d(n),o.push(S),s=E(o,s,"key");var w,Y=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==Y&&f(o,"invalid key length"),w=d(s),o.push(w);var B=new u(0|i),A=B.address;if(o.push(A),0===r._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A,h,p,i,0,v,x,k,0,S,w)){var M=y(B,c);return g(o),M}b(o,"ciphertext cannot be decrypted using that key")}function P(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(h+r._crypto_aead_chacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_chacha20poly1305_ietf_encrypt(w,null,o,h,0,p,i,0,v,m,k)){var Y=y(T,s);return g(c),Y}b(c,"invalid usage")}function R(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(0|h),w=T.address;c.push(w);var Y=new u(0|r._crypto_aead_chacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,p,i,0,v,m,k)){var A=y({ciphertext:T,mac:Y},s);return g(c),A}b(c,"invalid usage")}function X(e){var a=[];l(e);var t=new u(0|r._crypto_aead_chacha20poly1305_ietf_keybytes()),_=t.address;a.push(_),r._crypto_aead_chacha20poly1305_ietf_keygen(_);var n=y(t,e);return g(a),n}function G(e){var a=[];l(e);var t=new u(0|r._crypto_aead_chacha20poly1305_keybytes()),_=t.address;a.push(_),r._crypto_aead_chacha20poly1305_keygen(_);var n=y(t,e);return g(a),n}function D(e,a,t,_,n,s){var c=[];l(s);var o=null;null!=e&&(o=d(e=E(c,e,"secret_nonce")),e.length,c.push(o)),a=E(c,a,"ciphertext");var h,p=r._crypto_aead_xchacha20poly1305_ietf_abytes(),i=a.length;i<p&&f(c,"ciphertext is too short"),h=d(a),c.push(h);var v=null,m=0;null!=t&&(v=d(t=E(c,t,"additional_data")),m=t.length,c.push(v)),_=E(c,_,"public_nonce");var x,k=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==k&&f(c,"invalid public_nonce length"),x=d(_),c.push(x),n=E(c,n,"key");var S,T=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==T&&f(c,"invalid key length"),S=d(n),c.push(S);var w=new u(i-r._crypto_aead_xchacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_xchacha20poly1305_ietf_decrypt(Y,null,o,h,i,0,v,m,0,x,S)){var B=y(w,s);return g(c),B}b(c,"ciphertext cannot be decrypted using that key")}function F(e,a,t,_,n,s,c){var o=[];l(c);var h=null;null!=e&&(h=d(e=E(o,e,"secret_nonce")),e.length,o.push(h));var p=d(a=E(o,a,"ciphertext")),i=a.length;o.push(p),t=E(o,t,"mac");var v,m=0|r._crypto_box_macbytes();t.length!==m&&f(o,"invalid mac length"),v=d(t),o.push(v);var x=null,k=0;null!=_&&(x=d(_=E(o,_,"additional_data")),k=_.length,o.push(x)),n=E(o,n,"public_nonce");var S,T=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();n.length!==T&&f(o,"invalid public_nonce length"),S=d(n),o.push(S),s=E(o,s,"key");var w,Y=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==Y&&f(o,"invalid key length"),w=d(s),o.push(w);var B=new u(0|i),A=B.address;if(o.push(A),0===r._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A,h,p,i,0,v,x,k,0,S,w)){var M=y(B,c);return g(o),M}b(o,"ciphertext cannot be decrypted using that key")}function V(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(h+r._crypto_aead_xchacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_xchacha20poly1305_ietf_encrypt(w,null,o,h,0,p,i,0,v,m,k)){var Y=y(T,s);return g(c),Y}b(c,"invalid usage")}function H(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"message")),h=e.length;c.push(o);var p=null,i=0;null!=a&&(p=d(a=E(c,a,"additional_data")),i=a.length,c.push(p));var v=null;null!=t&&(v=d(t=E(c,t,"secret_nonce")),t.length,c.push(v)),_=E(c,_,"public_nonce");var m,x=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&f(c,"invalid public_nonce length"),m=d(_),c.push(m),n=E(c,n,"key");var k,S=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==S&&f(c,"invalid key length"),k=d(n),c.push(k);var T=new u(0|h),w=T.address;c.push(w);var Y=new u(0|r._crypto_aead_xchacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,p,i,0,v,m,k)){var A=y({ciphertext:T,mac:Y},s);return g(c),A}b(c,"invalid usage")}function W(e){var a=[];l(e);var t=new u(0|r._crypto_aead_xchacha20poly1305_ietf_keybytes()),_=t.address;a.push(_),r._crypto_aead_xchacha20poly1305_ietf_keygen(_);var n=y(t,e);return g(a),n}function q(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_auth_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_auth_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_auth(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function j(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_auth_hmacsha256_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_auth_hmacsha256_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_auth_hmacsha256(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function z(e,a){var t=[];l(a),m(t,e,"state_address");var _=new u(0|r._crypto_auth_hmacsha256_bytes()),n=_.address;if(t.push(n),!(0|r._crypto_auth_hmacsha256_final(e,n))){var s=(r._free(e),y(_,a));return g(t),s}b(t,"invalid usage")}function J(e,a){var t=[];l(a);var _=null,n=0;null!=e&&(_=d(e=E(t,e,"key")),n=e.length,t.push(_));var s=new u(208).address;if(!(0|r._crypto_auth_hmacsha256_init(s,_,n))){var c=s;return g(t),c}b(t,"invalid usage")}function Q(e){var a=[];l(e);var t=new u(0|r._crypto_auth_hmacsha256_keybytes()),_=t.address;a.push(_),r._crypto_auth_hmacsha256_keygen(_);var n=y(t,e);return g(a),n}function Z(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_auth_hmacsha256_update(e,n,s)&&b(_,"invalid usage"),g(_)}function $(e,a,t){var _=[];e=E(_,e,"tag");var n,s=0|r._crypto_auth_hmacsha256_bytes();e.length!==s&&f(_,"invalid tag length"),n=d(e),_.push(n);var c=d(a=E(_,a,"message")),o=a.length;_.push(c),t=E(_,t,"key");var h,p=0|r._crypto_auth_hmacsha256_keybytes();t.length!==p&&f(_,"invalid key length"),h=d(t),_.push(h);var y=!(0|r._crypto_auth_hmacsha256_verify(n,c,o,0,h));return g(_),y}function ee(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_auth_hmacsha512_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_auth_hmacsha512_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_auth_hmacsha512(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function ae(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_auth_hmacsha512256_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_auth_hmacsha512256_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_auth_hmacsha512256(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function re(e,a){var t=[];l(a),m(t,e,"state_address");var _=new u(0|r._crypto_auth_hmacsha512256_bytes()),n=_.address;if(t.push(n),!(0|r._crypto_auth_hmacsha512256_final(e,n))){var s=(r._free(e),y(_,a));return g(t),s}b(t,"invalid usage")}function te(e,a){var t=[];l(a);var _=null,n=0;null!=e&&(_=d(e=E(t,e,"key")),n=e.length,t.push(_));var s=new u(416).address;if(!(0|r._crypto_auth_hmacsha512256_init(s,_,n))){var c=s;return g(t),c}b(t,"invalid usage")}function _e(e){var a=[];l(e);var t=new u(0|r._crypto_auth_hmacsha512256_keybytes()),_=t.address;a.push(_),r._crypto_auth_hmacsha512256_keygen(_);var n=y(t,e);return g(a),n}function ne(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_auth_hmacsha512256_update(e,n,s)&&b(_,"invalid usage"),g(_)}function se(e,a,t){var _=[];e=E(_,e,"tag");var n,s=0|r._crypto_auth_hmacsha512256_bytes();e.length!==s&&f(_,"invalid tag length"),n=d(e),_.push(n);var c=d(a=E(_,a,"message")),o=a.length;_.push(c),t=E(_,t,"key");var h,p=0|r._crypto_auth_hmacsha512256_keybytes();t.length!==p&&f(_,"invalid key length"),h=d(t),_.push(h);var y=!(0|r._crypto_auth_hmacsha512256_verify(n,c,o,0,h));return g(_),y}function ce(e,a){var t=[];l(a),m(t,e,"state_address");var _=new u(0|r._crypto_auth_hmacsha512_bytes()),n=_.address;if(t.push(n),!(0|r._crypto_auth_hmacsha512_final(e,n))){var s=(r._free(e),y(_,a));return g(t),s}b(t,"invalid usage")}function oe(e,a){var t=[];l(a);var _=null,n=0;null!=e&&(_=d(e=E(t,e,"key")),n=e.length,t.push(_));var s=new u(416).address;if(!(0|r._crypto_auth_hmacsha512_init(s,_,n))){var c=s;return g(t),c}b(t,"invalid usage")}function he(e){var a=[];l(e);var t=new u(0|r._crypto_auth_hmacsha512_keybytes()),_=t.address;a.push(_),r._crypto_auth_hmacsha512_keygen(_);var n=y(t,e);return g(a),n}function pe(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_auth_hmacsha512_update(e,n,s)&&b(_,"invalid usage"),g(_)}function ye(e,a,t){var _=[];e=E(_,e,"tag");var n,s=0|r._crypto_auth_hmacsha512_bytes();e.length!==s&&f(_,"invalid tag length"),n=d(e),_.push(n);var c=d(a=E(_,a,"message")),o=a.length;_.push(c),t=E(_,t,"key");var h,p=0|r._crypto_auth_hmacsha512_keybytes();t.length!==p&&f(_,"invalid key length"),h=d(t),_.push(h);var y=!(0|r._crypto_auth_hmacsha512_verify(n,c,o,0,h));return g(_),y}function ie(e){var a=[];l(e);var t=new u(0|r._crypto_auth_keybytes()),_=t.address;a.push(_),r._crypto_auth_keygen(_);var n=y(t,e);return g(a),n}function le(e,a,t){var _=[];e=E(_,e,"tag");var n,s=0|r._crypto_auth_bytes();e.length!==s&&f(_,"invalid tag length"),n=d(e),_.push(n);var c=d(a=E(_,a,"message")),o=a.length;_.push(c),t=E(_,t,"key");var h,p=0|r._crypto_auth_keybytes();t.length!==p&&f(_,"invalid key length"),h=d(t),_.push(h);var y=!(0|r._crypto_auth_verify(n,c,o,0,h));return g(_),y}function ue(e,a,t){var _=[];l(t),e=E(_,e,"publicKey");var n,s=0|r._crypto_box_publickeybytes();e.length!==s&&f(_,"invalid publicKey length"),n=d(e),_.push(n),a=E(_,a,"privateKey");var c,o=0|r._crypto_box_secretkeybytes();a.length!==o&&f(_,"invalid privateKey length"),c=d(a),_.push(c);var h=new u(0|r._crypto_box_beforenmbytes()),p=h.address;if(_.push(p),!(0|r._crypto_box_beforenm(p,n,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function de(e,a,t){var _=[];l(t),e=E(_,e,"publicKey");var n,s=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();e.length!==s&&f(_,"invalid publicKey length"),n=d(e),_.push(n),a=E(_,a,"privateKey");var c,o=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();a.length!==o&&f(_,"invalid privateKey length"),c=d(a),_.push(c);var h=new u(0|r._crypto_box_curve25519xchacha20poly1305_beforenmbytes()),p=h.address;if(_.push(p),!(0|r._crypto_box_curve25519xchacha20poly1305_beforenm(p,n,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function ve(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),t=E(s,t,"publicKey");var i,v=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();t.length!==v&&f(s,"invalid publicKey length"),i=d(t),s.push(i),_=E(s,_,"privateKey");var m,x=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();_.length!==x&&f(s,"invalid privateKey length"),m=d(_),s.push(m);var k=new u(0|o),S=k.address;s.push(S);var T=new u(0|r._crypto_box_curve25519xchacha20poly1305_macbytes()),w=T.address;if(s.push(w),!(0|r._crypto_box_curve25519xchacha20poly1305_detached(S,w,c,o,0,h,i,m))){var Y=y({ciphertext:k,mac:T},n);return g(s),Y}b(s,"invalid usage")}function ge(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"sharedKey");var p,i=0|r._crypto_box_curve25519xchacha20poly1305_beforenmbytes();t.length!==i&&f(n,"invalid sharedKey length"),p=d(t),n.push(p);var v=new u(0|c),m=v.address;n.push(m);var x=new u(0|r._crypto_box_curve25519xchacha20poly1305_macbytes()),k=x.address;if(n.push(k),!(0|r._crypto_box_curve25519xchacha20poly1305_detached_afternm(m,k,s,c,0,o,p))){var S=y({ciphertext:v,mac:x},_);return g(n),S}b(n,"invalid usage")}function be(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),t=E(s,t,"publicKey");var i,v=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();t.length!==v&&f(s,"invalid publicKey length"),i=d(t),s.push(i),_=E(s,_,"privateKey");var m,x=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();_.length!==x&&f(s,"invalid privateKey length"),m=d(_),s.push(m);var k=new u(o+r._crypto_box_curve25519xchacha20poly1305_macbytes()|0),S=k.address;if(s.push(S),!(0|r._crypto_box_curve25519xchacha20poly1305_easy(S,c,o,0,h,i,m))){var T=y(k,n);return g(s),T}b(s,"invalid usage")}function fe(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"sharedKey");var p,i=0|r._crypto_box_curve25519xchacha20poly1305_beforenmbytes();t.length!==i&&f(n,"invalid sharedKey length"),p=d(t),n.push(p);var v=new u(c+r._crypto_box_curve25519xchacha20poly1305_macbytes()|0),m=v.address;if(n.push(m),!(0|r._crypto_box_curve25519xchacha20poly1305_easy_afternm(m,s,c,0,o,p))){var x=y(v,_);return g(n),x}b(n,"invalid usage")}function me(e){var a=[];l(e);var t=new u(0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes()),_=t.address;a.push(_);var n=new u(0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes()),s=n.address;a.push(s),r._crypto_box_curve25519xchacha20poly1305_keypair(_,s);var c=y({publicKey:t,privateKey:n,keyType:"curve25519"},e);return g(a),c}function Ee(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"ciphertext")),h=e.length;c.push(o),a=E(c,a,"mac");var p,i=0|r._crypto_box_curve25519xchacha20poly1305_macbytes();a.length!==i&&f(c,"invalid mac length"),p=d(a),c.push(p),t=E(c,t,"nonce");var v,m=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();t.length!==m&&f(c,"invalid nonce length"),v=d(t),c.push(v),_=E(c,_,"publicKey");var x,k=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();_.length!==k&&f(c,"invalid publicKey length"),x=d(_),c.push(x),n=E(c,n,"privateKey");var S,T=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();n.length!==T&&f(c,"invalid privateKey length"),S=d(n),c.push(S);var w=new u(0|h),Y=w.address;if(c.push(Y),!(0|r._crypto_box_curve25519xchacha20poly1305_open_detached(Y,o,p,h,0,v,x,S))){var B=y(w,s);return g(c),B}b(c,"incorrect key pair for the given ciphertext")}function xe(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"ciphertext")),o=e.length;s.push(c),a=E(s,a,"mac");var h,p=0|r._crypto_box_curve25519xchacha20poly1305_macbytes();a.length!==p&&f(s,"invalid mac length"),h=d(a),s.push(h),t=E(s,t,"nonce");var i,v=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();t.length!==v&&f(s,"invalid nonce length"),i=d(t),s.push(i),_=E(s,_,"sharedKey");var m,x=0|r._crypto_box_curve25519xchacha20poly1305_beforenmbytes();_.length!==x&&f(s,"invalid sharedKey length"),m=d(_),s.push(m);var k=new u(0|o),S=k.address;if(s.push(S),!(0|r._crypto_box_curve25519xchacha20poly1305_open_detached_afternm(S,c,h,o,0,i,m))){var T=y(k,n);return g(s),T}b(s,"incorrect secret key for the given ciphertext")}function ke(e,a,t,_,n){var s=[];l(n),e=E(s,e,"ciphertext");var c,o=r._crypto_box_curve25519xchacha20poly1305_macbytes(),h=e.length;h<o&&f(s,"ciphertext is too short"),c=d(e),s.push(c),a=E(s,a,"nonce");var p,i=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();a.length!==i&&f(s,"invalid nonce length"),p=d(a),s.push(p),t=E(s,t,"publicKey");var v,m=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();t.length!==m&&f(s,"invalid publicKey length"),v=d(t),s.push(v),_=E(s,_,"privateKey");var x,k=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();_.length!==k&&f(s,"invalid privateKey length"),x=d(_),s.push(x);var S=new u(h-r._crypto_box_curve25519xchacha20poly1305_macbytes()|0),T=S.address;if(s.push(T),!(0|r._crypto_box_curve25519xchacha20poly1305_open_easy(T,c,h,0,p,v,x))){var w=y(S,n);return g(s),w}b(s,"incorrect key pair for the given ciphertext")}function Se(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"ciphertext")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_box_curve25519xchacha20poly1305_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"sharedKey");var p,i=0|r._crypto_box_curve25519xchacha20poly1305_beforenmbytes();t.length!==i&&f(n,"invalid sharedKey length"),p=d(t),n.push(p);var v=new u(c-r._crypto_box_curve25519xchacha20poly1305_macbytes()|0),m=v.address;if(n.push(m),!(0|r._crypto_box_curve25519xchacha20poly1305_open_easy_afternm(m,s,c,0,o,p))){var x=y(v,_);return g(n),x}b(n,"incorrect secret key for the given ciphertext")}function Te(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"publicKey");var c,o=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();a.length!==o&&f(_,"invalid publicKey length"),c=d(a),_.push(c);var h=new u(s+r._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),p=h.address;_.push(p),r._crypto_box_curve25519xchacha20poly1305_seal(p,n,s,0,c);var i=y(h,t);return g(_),i}function we(e,a,t,_){var n=[];l(_),e=E(n,e,"ciphertext");var s,c=r._crypto_box_curve25519xchacha20poly1305_sealbytes(),o=e.length;o<c&&f(n,"ciphertext is too short"),s=d(e),n.push(s),a=E(n,a,"publicKey");var h,p=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();a.length!==p&&f(n,"invalid publicKey length"),h=d(a),n.push(h),t=E(n,t,"secretKey");var i,v=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();t.length!==v&&f(n,"invalid secretKey length"),i=d(t),n.push(i);var b=new u(o-r._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),m=b.address;n.push(m),r._crypto_box_curve25519xchacha20poly1305_seal_open(m,s,o,0,h,i);var x=y(b,_);return g(n),x}function Ye(e,a){var t=[];l(a),e=E(t,e,"seed");var _,n=0|r._crypto_box_curve25519xchacha20poly1305_seedbytes();e.length!==n&&f(t,"invalid seed length"),_=d(e),t.push(_);var s=new u(0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes()),c=s.address;t.push(c);var o=new u(0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes()),h=o.address;if(t.push(h),!(0|r._crypto_box_curve25519xchacha20poly1305_seed_keypair(c,h,_))){var p={publicKey:y(s,a),privateKey:y(o,a),keyType:"x25519"};return g(t),p}b(t,"invalid usage")}function Be(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_box_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),t=E(s,t,"publicKey");var i,v=0|r._crypto_box_publickeybytes();t.length!==v&&f(s,"invalid publicKey length"),i=d(t),s.push(i),_=E(s,_,"privateKey");var m,x=0|r._crypto_box_secretkeybytes();_.length!==x&&f(s,"invalid privateKey length"),m=d(_),s.push(m);var k=new u(0|o),S=k.address;s.push(S);var T=new u(0|r._crypto_box_macbytes()),w=T.address;if(s.push(w),!(0|r._crypto_box_detached(S,w,c,o,0,h,i,m))){var Y=y({ciphertext:k,mac:T},n);return g(s),Y}b(s,"invalid usage")}function Ae(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_box_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),t=E(s,t,"publicKey");var i,v=0|r._crypto_box_publickeybytes();t.length!==v&&f(s,"invalid publicKey length"),i=d(t),s.push(i),_=E(s,_,"privateKey");var m,x=0|r._crypto_box_secretkeybytes();_.length!==x&&f(s,"invalid privateKey length"),m=d(_),s.push(m);var k=new u(o+r._crypto_box_macbytes()|0),S=k.address;if(s.push(S),!(0|r._crypto_box_easy(S,c,o,0,h,i,m))){var T=y(k,n);return g(s),T}b(s,"invalid usage")}function Me(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_box_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"sharedKey");var p,i=0|r._crypto_box_beforenmbytes();t.length!==i&&f(n,"invalid sharedKey length"),p=d(t),n.push(p);var v=new u(c+r._crypto_box_macbytes()|0),m=v.address;if(n.push(m),!(0|r._crypto_box_easy_afternm(m,s,c,0,o,p))){var x=y(v,_);return g(n),x}b(n,"invalid usage")}function Ie(e){var a=[];l(e);var t=new u(0|r._crypto_box_publickeybytes()),_=t.address;a.push(_);var n=new u(0|r._crypto_box_secretkeybytes()),s=n.address;if(a.push(s),!(0|r._crypto_box_keypair(_,s))){var c={publicKey:y(t,e),privateKey:y(n,e),keyType:"x25519"};return g(a),c}b(a,"internal error")}function Ke(e,a,t,_,n,s){var c=[];l(s);var o=d(e=E(c,e,"ciphertext")),h=e.length;c.push(o),a=E(c,a,"mac");var p,i=0|r._crypto_box_macbytes();a.length!==i&&f(c,"invalid mac length"),p=d(a),c.push(p),t=E(c,t,"nonce");var v,m=0|r._crypto_box_noncebytes();t.length!==m&&f(c,"invalid nonce length"),v=d(t),c.push(v),_=E(c,_,"publicKey");var x,k=0|r._crypto_box_publickeybytes();_.length!==k&&f(c,"invalid publicKey length"),x=d(_),c.push(x),n=E(c,n,"privateKey");var S,T=0|r._crypto_box_secretkeybytes();n.length!==T&&f(c,"invalid privateKey length"),S=d(n),c.push(S);var w=new u(0|h),Y=w.address;if(c.push(Y),!(0|r._crypto_box_open_detached(Y,o,p,h,0,v,x,S))){var B=y(w,s);return g(c),B}b(c,"incorrect key pair for the given ciphertext")}function Ne(e,a,t,_,n){var s=[];l(n),e=E(s,e,"ciphertext");var c,o=r._crypto_box_macbytes(),h=e.length;h<o&&f(s,"ciphertext is too short"),c=d(e),s.push(c),a=E(s,a,"nonce");var p,i=0|r._crypto_box_noncebytes();a.length!==i&&f(s,"invalid nonce length"),p=d(a),s.push(p),t=E(s,t,"publicKey");var v,m=0|r._crypto_box_publickeybytes();t.length!==m&&f(s,"invalid publicKey length"),v=d(t),s.push(v),_=E(s,_,"privateKey");var x,k=0|r._crypto_box_secretkeybytes();_.length!==k&&f(s,"invalid privateKey length"),x=d(_),s.push(x);var S=new u(h-r._crypto_box_macbytes()|0),T=S.address;if(s.push(T),!(0|r._crypto_box_open_easy(T,c,h,0,p,v,x))){var w=y(S,n);return g(s),w}b(s,"incorrect key pair for the given ciphertext")}function Le(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"ciphertext")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_box_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"sharedKey");var p,i=0|r._crypto_box_beforenmbytes();t.length!==i&&f(n,"invalid sharedKey length"),p=d(t),n.push(p);var v=new u(c-r._crypto_box_macbytes()|0),m=v.address;if(n.push(m),!(0|r._crypto_box_open_easy_afternm(m,s,c,0,o,p))){var x=y(v,_);return g(n),x}b(n,"incorrect secret key for the given ciphertext")}function Oe(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"publicKey");var c,o=0|r._crypto_box_publickeybytes();a.length!==o&&f(_,"invalid publicKey length"),c=d(a),_.push(c);var h=new u(s+r._crypto_box_sealbytes()|0),p=h.address;if(_.push(p),!(0|r._crypto_box_seal(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function Ue(e,a,t,_){var n=[];l(_),e=E(n,e,"ciphertext");var s,c=r._crypto_box_sealbytes(),o=e.length;o<c&&f(n,"ciphertext is too short"),s=d(e),n.push(s),a=E(n,a,"publicKey");var h,p=0|r._crypto_box_publickeybytes();a.length!==p&&f(n,"invalid publicKey length"),h=d(a),n.push(h),t=E(n,t,"privateKey");var i,v=0|r._crypto_box_secretkeybytes();t.length!==v&&f(n,"invalid privateKey length"),i=d(t),n.push(i);var m=new u(o-r._crypto_box_sealbytes()|0),x=m.address;if(n.push(x),!(0|r._crypto_box_seal_open(x,s,o,0,h,i))){var k=y(m,_);return g(n),k}b(n,"incorrect key pair for the given ciphertext")}function Ce(e,a){var t=[];l(a),e=E(t,e,"seed");var _,n=0|r._crypto_box_seedbytes();e.length!==n&&f(t,"invalid seed length"),_=d(e),t.push(_);var s=new u(0|r._crypto_box_publickeybytes()),c=s.address;t.push(c);var o=new u(0|r._crypto_box_secretkeybytes()),h=o.address;if(t.push(h),!(0|r._crypto_box_seed_keypair(c,h,_))){var p={publicKey:y(s,a),privateKey:y(o,a),keyType:"x25519"};return g(t),p}b(t,"invalid usage")}function Pe(e,a,t){var _=[];l(t),e=E(_,e,"p");var n,s=0|r._crypto_core_ed25519_bytes();e.length!==s&&f(_,"invalid p length"),n=d(e),_.push(n),a=E(_,a,"q");var c,o=0|r._crypto_core_ed25519_bytes();a.length!==o&&f(_,"invalid q length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ed25519_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_core_ed25519_add(p,n,c))){var i=y(h,t);return g(_),i}b(_,"input is an invalid element")}function Re(e,a){var t=[];l(a);var _=d(e=E(t,e,"r"));e.length,t.push(_);var n=new u(0|r._crypto_core_ed25519_bytes()),s=n.address;if(t.push(s),!(0|r._crypto_core_ed25519_from_hash(s,_))){var c=y(n,a);return g(t),c}b(t,"invalid usage")}function Xe(e,a){var t=[];l(a);var _=d(e=E(t,e,"r"));e.length,t.push(_);var n=new u(0|r._crypto_core_ed25519_bytes()),s=n.address;if(t.push(s),!(0|r._crypto_core_ed25519_from_uniform(s,_))){var c=y(n,a);return g(t),c}b(t,"invalid usage")}function Ge(e,a){var t=[];l(a),e=E(t,e,"repr");var _,n=0|r._crypto_core_ed25519_bytes();e.length!==n&&f(t,"invalid repr length"),_=d(e),t.push(_);var s=1==(0|r._crypto_core_ed25519_is_valid_point(_));return g(t),s}function De(e){var a=[];l(e);var t=new u(0|r._crypto_core_ed25519_bytes()),_=t.address;a.push(_),r._crypto_core_ed25519_random(_);var n=y(t,e);return g(a),n}function Fe(e,a,t){var _=[];l(t),e=E(_,e,"x");var n,s=0|r._crypto_core_ed25519_scalarbytes();e.length!==s&&f(_,"invalid x length"),n=d(e),_.push(n),a=E(_,a,"y");var c,o=0|r._crypto_core_ed25519_scalarbytes();a.length!==o&&f(_,"invalid y length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ed25519_scalarbytes()),p=h.address;_.push(p),r._crypto_core_ed25519_scalar_add(p,n,c);var i=y(h,t);return g(_),i}function Ve(e,a){var t=[];l(a),e=E(t,e,"s");var _,n=0|r._crypto_core_ed25519_scalarbytes();e.length!==n&&f(t,"invalid s length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ed25519_scalarbytes()),c=s.address;t.push(c),r._crypto_core_ed25519_scalar_complement(c,_);var o=y(s,a);return g(t),o}function He(e,a){var t=[];l(a),e=E(t,e,"s");var _,n=0|r._crypto_core_ed25519_scalarbytes();e.length!==n&&f(t,"invalid s length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ed25519_scalarbytes()),c=s.address;if(t.push(c),!(0|r._crypto_core_ed25519_scalar_invert(c,_))){var o=y(s,a);return g(t),o}b(t,"invalid reciprocate")}function We(e,a,t){var _=[];l(t),e=E(_,e,"x");var n,s=0|r._crypto_core_ed25519_scalarbytes();e.length!==s&&f(_,"invalid x length"),n=d(e),_.push(n),a=E(_,a,"y");var c,o=0|r._crypto_core_ed25519_scalarbytes();a.length!==o&&f(_,"invalid y length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ed25519_scalarbytes()),p=h.address;_.push(p),r._crypto_core_ed25519_scalar_mul(p,n,c);var i=y(h,t);return g(_),i}function qe(e,a){var t=[];l(a),e=E(t,e,"s");var _,n=0|r._crypto_core_ed25519_scalarbytes();e.length!==n&&f(t,"invalid s length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ed25519_scalarbytes()),c=s.address;t.push(c),r._crypto_core_ed25519_scalar_negate(c,_);var o=y(s,a);return g(t),o}function je(e){var a=[];l(e);var t=new u(0|r._crypto_core_ed25519_scalarbytes()),_=t.address;a.push(_),r._crypto_core_ed25519_scalar_random(_);var n=y(t,e);return g(a),n}function ze(e,a){var t=[];l(a),e=E(t,e,"sample");var _,n=0|r._crypto_core_ed25519_nonreducedscalarbytes();e.length!==n&&f(t,"invalid sample length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ed25519_scalarbytes()),c=s.address;t.push(c),r._crypto_core_ed25519_scalar_reduce(c,_);var o=y(s,a);return g(t),o}function Je(e,a,t){var _=[];l(t),e=E(_,e,"x");var n,s=0|r._crypto_core_ed25519_scalarbytes();e.length!==s&&f(_,"invalid x length"),n=d(e),_.push(n),a=E(_,a,"y");var c,o=0|r._crypto_core_ed25519_scalarbytes();a.length!==o&&f(_,"invalid y length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ed25519_scalarbytes()),p=h.address;_.push(p),r._crypto_core_ed25519_scalar_sub(p,n,c);var i=y(h,t);return g(_),i}function Qe(e,a,t){var _=[];l(t),e=E(_,e,"p");var n,s=0|r._crypto_core_ed25519_bytes();e.length!==s&&f(_,"invalid p length"),n=d(e),_.push(n),a=E(_,a,"q");var c,o=0|r._crypto_core_ed25519_bytes();a.length!==o&&f(_,"invalid q length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ed25519_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_core_ed25519_sub(p,n,c))){var i=y(h,t);return g(_),i}b(_,"input is an invalid element")}function Ze(e,a,t,_){var n=[];l(_),e=E(n,e,"input");var s,c=0|r._crypto_core_hchacha20_inputbytes();e.length!==c&&f(n,"invalid input length"),s=d(e),n.push(s),a=E(n,a,"privateKey");var o,h=0|r._crypto_core_hchacha20_keybytes();a.length!==h&&f(n,"invalid privateKey length"),o=d(a),n.push(o);var p=null;null!=t&&(p=d(t=E(n,t,"constant")),t.length,n.push(p));var i=new u(0|r._crypto_core_hchacha20_outputbytes()),v=i.address;if(n.push(v),!(0|r._crypto_core_hchacha20(v,s,o,p))){var m=y(i,_);return g(n),m}b(n,"invalid usage")}function $e(e,a,t,_){var n=[];l(_),e=E(n,e,"input");var s,c=0|r._crypto_core_hsalsa20_inputbytes();e.length!==c&&f(n,"invalid input length"),s=d(e),n.push(s),a=E(n,a,"privateKey");var o,h=0|r._crypto_core_hsalsa20_keybytes();a.length!==h&&f(n,"invalid privateKey length"),o=d(a),n.push(o);var p=null;null!=t&&(p=d(t=E(n,t,"constant")),t.length,n.push(p));var i=new u(0|r._crypto_core_hsalsa20_outputbytes()),v=i.address;if(n.push(v),!(0|r._crypto_core_hsalsa20(v,s,o,p))){var m=y(i,_);return g(n),m}b(n,"invalid usage")}function ea(e,a,t){var _=[];l(t),e=E(_,e,"p");var n,s=0|r._crypto_core_ristretto255_bytes();e.length!==s&&f(_,"invalid p length"),n=d(e),_.push(n),a=E(_,a,"q");var c,o=0|r._crypto_core_ristretto255_bytes();a.length!==o&&f(_,"invalid q length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ristretto255_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_core_ristretto255_add(p,n,c))){var i=y(h,t);return g(_),i}b(_,"input is an invalid element")}function aa(e,a){var t=[];l(a);var _=d(e=E(t,e,"r"));e.length,t.push(_);var n=new u(0|r._crypto_core_ristretto255_bytes()),s=n.address;if(t.push(s),!(0|r._crypto_core_ristretto255_from_hash(s,_))){var c=y(n,a);return g(t),c}b(t,"invalid usage")}function ra(e,a){var t=[];l(a),e=E(t,e,"repr");var _,n=0|r._crypto_core_ristretto255_bytes();e.length!==n&&f(t,"invalid repr length"),_=d(e),t.push(_);var s=1==(0|r._crypto_core_ristretto255_is_valid_point(_));return g(t),s}function ta(e){var a=[];l(e);var t=new u(0|r._crypto_core_ristretto255_bytes()),_=t.address;a.push(_),r._crypto_core_ristretto255_random(_);var n=y(t,e);return g(a),n}function _a(e,a,t){var _=[];l(t),e=E(_,e,"x");var n,s=0|r._crypto_core_ristretto255_scalarbytes();e.length!==s&&f(_,"invalid x length"),n=d(e),_.push(n),a=E(_,a,"y");var c,o=0|r._crypto_core_ristretto255_scalarbytes();a.length!==o&&f(_,"invalid y length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ristretto255_scalarbytes()),p=h.address;_.push(p),r._crypto_core_ristretto255_scalar_add(p,n,c);var i=y(h,t);return g(_),i}function na(e,a){var t=[];l(a),e=E(t,e,"s");var _,n=0|r._crypto_core_ristretto255_scalarbytes();e.length!==n&&f(t,"invalid s length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ristretto255_scalarbytes()),c=s.address;t.push(c),r._crypto_core_ristretto255_scalar_complement(c,_);var o=y(s,a);return g(t),o}function sa(e,a){var t=[];l(a),e=E(t,e,"s");var _,n=0|r._crypto_core_ristretto255_scalarbytes();e.length!==n&&f(t,"invalid s length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ristretto255_scalarbytes()),c=s.address;if(t.push(c),!(0|r._crypto_core_ristretto255_scalar_invert(c,_))){var o=y(s,a);return g(t),o}b(t,"invalid reciprocate")}function ca(e,a,t){var _=[];l(t),e=E(_,e,"x");var n,s=0|r._crypto_core_ristretto255_scalarbytes();e.length!==s&&f(_,"invalid x length"),n=d(e),_.push(n),a=E(_,a,"y");var c,o=0|r._crypto_core_ristretto255_scalarbytes();a.length!==o&&f(_,"invalid y length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ristretto255_scalarbytes()),p=h.address;_.push(p),r._crypto_core_ristretto255_scalar_mul(p,n,c);var i=y(h,t);return g(_),i}function oa(e,a){var t=[];l(a),e=E(t,e,"s");var _,n=0|r._crypto_core_ristretto255_scalarbytes();e.length!==n&&f(t,"invalid s length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ristretto255_scalarbytes()),c=s.address;t.push(c),r._crypto_core_ristretto255_scalar_negate(c,_);var o=y(s,a);return g(t),o}function ha(e){var a=[];l(e);var t=new u(0|r._crypto_core_ristretto255_scalarbytes()),_=t.address;a.push(_),r._crypto_core_ristretto255_scalar_random(_);var n=y(t,e);return g(a),n}function pa(e,a){var t=[];l(a),e=E(t,e,"sample");var _,n=0|r._crypto_core_ristretto255_nonreducedscalarbytes();e.length!==n&&f(t,"invalid sample length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ristretto255_scalarbytes()),c=s.address;t.push(c),r._crypto_core_ristretto255_scalar_reduce(c,_);var o=y(s,a);return g(t),o}function ya(e,a,t){var _=[];l(t),e=E(_,e,"x");var n,s=0|r._crypto_core_ristretto255_scalarbytes();e.length!==s&&f(_,"invalid x length"),n=d(e),_.push(n),a=E(_,a,"y");var c,o=0|r._crypto_core_ristretto255_scalarbytes();a.length!==o&&f(_,"invalid y length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ristretto255_scalarbytes()),p=h.address;_.push(p),r._crypto_core_ristretto255_scalar_sub(p,n,c);var i=y(h,t);return g(_),i}function ia(e,a,t){var _=[];l(t),e=E(_,e,"p");var n,s=0|r._crypto_core_ristretto255_bytes();e.length!==s&&f(_,"invalid p length"),n=d(e),_.push(n),a=E(_,a,"q");var c,o=0|r._crypto_core_ristretto255_bytes();a.length!==o&&f(_,"invalid q length"),c=d(a),_.push(c);var h=new u(0|r._crypto_core_ristretto255_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_core_ristretto255_sub(p,n,c))){var i=y(h,t);return g(_),i}b(_,"input is an invalid element")}function la(e,a,t,_){var n=[];l(_),m(n,e,"hash_length"),("number"!=typeof e||(0|e)!==e||e<0)&&f(n,"hash_length must be an unsigned integer");var s=d(a=E(n,a,"message")),c=a.length;n.push(s);var o=null,h=0;null!=t&&(o=d(t=E(n,t,"key")),h=t.length,n.push(o));var p=new u(e|=0),i=p.address;if(n.push(i),!(0|r._crypto_generichash(i,e,s,c,0,o,h))){var v=y(p,_);return g(n),v}b(n,"invalid usage")}function ua(e,a,t,_,n){var s=[];l(n),m(s,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&f(s,"subkey_len must be an unsigned integer");var c=null,o=0;null!=a&&(c=d(a=E(s,a,"key")),o=a.length,s.push(c));var h=null,p=0;null!=t&&(t=E(s,t,"id"),p=0|r._crypto_generichash_blake2b_saltbytes(),t.length!==p&&f(s,"invalid id length"),h=d(t),s.push(h));var i=null,v=0;null!=_&&(_=E(s,_,"ctx"),v=0|r._crypto_generichash_blake2b_personalbytes(),_.length!==v&&f(s,"invalid ctx length"),i=d(_),s.push(i));var x=new u(0|e),k=x.address;if(s.push(k),!(0|r._crypto_generichash_blake2b_salt_personal(k,e,null,0,0,c,o,h,i))){var S=y(x,n);return g(s),S}b(s,"invalid usage")}function da(e,a,t){var _=[];l(t),m(_,e,"state_address"),m(_,a,"hash_length"),("number"!=typeof a||(0|a)!==a||a<0)&&f(_,"hash_length must be an unsigned integer");var n=new u(a|=0),s=n.address;if(_.push(s),!(0|r._crypto_generichash_final(e,s,a))){var c=(r._free(e),y(n,t));return g(_),c}b(_,"invalid usage")}function va(e,a,t){var _=[];l(t);var n=null,s=0;null!=e&&(n=d(e=E(_,e,"key")),s=e.length,_.push(n)),m(_,a,"hash_length"),("number"!=typeof a||(0|a)!==a||a<0)&&f(_,"hash_length must be an unsigned integer");var c=new u(357).address;if(!(0|r._crypto_generichash_init(c,n,s,a))){var o=c;return g(_),o}b(_,"invalid usage")}function ga(e){var a=[];l(e);var t=new u(0|r._crypto_generichash_keybytes()),_=t.address;a.push(_),r._crypto_generichash_keygen(_);var n=y(t,e);return g(a),n}function ba(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_generichash_update(e,n,s)&&b(_,"invalid usage"),g(_)}function fa(e,a){var t=[];l(a);var _=d(e=E(t,e,"message")),n=e.length;t.push(_);var s=new u(0|r._crypto_hash_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_hash(c,_,n,0))){var o=y(s,a);return g(t),o}b(t,"invalid usage")}function ma(e,a){var t=[];l(a);var _=d(e=E(t,e,"message")),n=e.length;t.push(_);var s=new u(0|r._crypto_hash_sha256_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_hash_sha256(c,_,n,0))){var o=y(s,a);return g(t),o}b(t,"invalid usage")}function Ea(e,a){var t=[];l(a),m(t,e,"state_address");var _=new u(0|r._crypto_hash_sha256_bytes()),n=_.address;if(t.push(n),!(0|r._crypto_hash_sha256_final(e,n))){var s=(r._free(e),y(_,a));return g(t),s}b(t,"invalid usage")}function xa(e){var a=[];l(e);var t=new u(104).address;if(!(0|r._crypto_hash_sha256_init(t))){var _=t;return g(a),_}b(a,"invalid usage")}function ka(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_hash_sha256_update(e,n,s)&&b(_,"invalid usage"),g(_)}function Sa(e,a){var t=[];l(a);var _=d(e=E(t,e,"message")),n=e.length;t.push(_);var s=new u(0|r._crypto_hash_sha512_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_hash_sha512(c,_,n,0))){var o=y(s,a);return g(t),o}b(t,"invalid usage")}function Ta(e,a){var t=[];l(a),m(t,e,"state_address");var _=new u(0|r._crypto_hash_sha512_bytes()),n=_.address;if(t.push(n),!(0|r._crypto_hash_sha512_final(e,n))){var s=(r._free(e),y(_,a));return g(t),s}b(t,"invalid usage")}function wa(e){var a=[];l(e);var t=new u(208).address;if(!(0|r._crypto_hash_sha512_init(t))){var _=t;return g(a),_}b(a,"invalid usage")}function Ya(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_hash_sha512_update(e,n,s)&&b(_,"invalid usage"),g(_)}function Ba(e,a,t,_,s){var c=[];l(s),m(c,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&f(c,"subkey_len must be an unsigned integer"),m(c,a,"subkey_id");var o,h=0;if("bigint"==typeof a&&a>=BigInt(0)){const e=a>>BigInt(32);e>BigInt(4294967295)&&f(c,"subkey_id cannot be more than 64 bits"),h=Number(e),o=Number(a&BigInt(4294967295))}else"number"==typeof a&&(0|a)===a&&a>=0?o=a:f(c,"subkey_id must be an unsigned integer or bigint");"string"!=typeof t&&f(c,"ctx must be a string"),t=n(t+"\0"),null!=i&&t.length-1!==i&&f(c,"invalid ctx length");var p=d(t),i=t.length-1;c.push(p),_=E(c,_,"key");var v,b=0|r._crypto_kdf_keybytes();_.length!==b&&f(c,"invalid key length"),v=d(_),c.push(v);var x=new u(0|e),k=x.address;c.push(k),r._crypto_kdf_derive_from_key(k,e,o,h,p,v);var S=y(x,s);return g(c),S}function Aa(e){var a=[];l(e);var t=new u(0|r._crypto_kdf_keybytes()),_=t.address;a.push(_),r._crypto_kdf_keygen(_);var n=y(t,e);return g(a),n}function Ma(e,a,t,_){var n=[];l(_),e=E(n,e,"clientPublicKey");var s,c=0|r._crypto_kx_publickeybytes();e.length!==c&&f(n,"invalid clientPublicKey length"),s=d(e),n.push(s),a=E(n,a,"clientSecretKey");var o,h=0|r._crypto_kx_secretkeybytes();a.length!==h&&f(n,"invalid clientSecretKey length"),o=d(a),n.push(o),t=E(n,t,"serverPublicKey");var p,i=0|r._crypto_kx_publickeybytes();t.length!==i&&f(n,"invalid serverPublicKey length"),p=d(t),n.push(p);var v=new u(0|r._crypto_kx_sessionkeybytes()),m=v.address;n.push(m);var x=new u(0|r._crypto_kx_sessionkeybytes()),k=x.address;if(n.push(k),!(0|r._crypto_kx_client_session_keys(m,k,s,o,p))){var S=y({sharedRx:v,sharedTx:x},_);return g(n),S}b(n,"invalid usage")}function Ia(e){var a=[];l(e);var t=new u(0|r._crypto_kx_publickeybytes()),_=t.address;a.push(_);var n=new u(0|r._crypto_kx_secretkeybytes()),s=n.address;if(a.push(s),!(0|r._crypto_kx_keypair(_,s))){var c={publicKey:y(t,e),privateKey:y(n,e),keyType:"x25519"};return g(a),c}b(a,"internal error")}function Ka(e,a){var t=[];l(a),e=E(t,e,"seed");var _,n=0|r._crypto_kx_seedbytes();e.length!==n&&f(t,"invalid seed length"),_=d(e),t.push(_);var s=new u(0|r._crypto_kx_publickeybytes()),c=s.address;t.push(c);var o=new u(0|r._crypto_kx_secretkeybytes()),h=o.address;if(t.push(h),!(0|r._crypto_kx_seed_keypair(c,h,_))){var p={publicKey:y(s,a),privateKey:y(o,a),keyType:"x25519"};return g(t),p}b(t,"internal error")}function Na(e,a,t,_){var n=[];l(_),e=E(n,e,"serverPublicKey");var s,c=0|r._crypto_kx_publickeybytes();e.length!==c&&f(n,"invalid serverPublicKey length"),s=d(e),n.push(s),a=E(n,a,"serverSecretKey");var o,h=0|r._crypto_kx_secretkeybytes();a.length!==h&&f(n,"invalid serverSecretKey length"),o=d(a),n.push(o),t=E(n,t,"clientPublicKey");var p,i=0|r._crypto_kx_publickeybytes();t.length!==i&&f(n,"invalid clientPublicKey length"),p=d(t),n.push(p);var v=new u(0|r._crypto_kx_sessionkeybytes()),m=v.address;n.push(m);var x=new u(0|r._crypto_kx_sessionkeybytes()),k=x.address;if(n.push(k),!(0|r._crypto_kx_server_session_keys(m,k,s,o,p))){var S=y({sharedRx:v,sharedTx:x},_);return g(n),S}b(n,"invalid usage")}function La(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_onetimeauth_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_onetimeauth_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_onetimeauth(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function Oa(e,a){var t=[];l(a),m(t,e,"state_address");var _=new u(0|r._crypto_onetimeauth_bytes()),n=_.address;if(t.push(n),!(0|r._crypto_onetimeauth_final(e,n))){var s=(r._free(e),y(_,a));return g(t),s}b(t,"invalid usage")}function Ua(e,a){var t=[];l(a);var _=null;null!=e&&(_=d(e=E(t,e,"key")),e.length,t.push(_));var n=new u(144).address;if(!(0|r._crypto_onetimeauth_init(n,_))){var s=n;return g(t),s}b(t,"invalid usage")}function Ca(e){var a=[];l(e);var t=new u(0|r._crypto_onetimeauth_keybytes()),_=t.address;a.push(_),r._crypto_onetimeauth_keygen(_);var n=y(t,e);return g(a),n}function Pa(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_onetimeauth_update(e,n,s)&&b(_,"invalid usage"),g(_)}function Ra(e,a,t){var _=[];e=E(_,e,"hash");var n,s=0|r._crypto_onetimeauth_bytes();e.length!==s&&f(_,"invalid hash length"),n=d(e),_.push(n);var c=d(a=E(_,a,"message")),o=a.length;_.push(c),t=E(_,t,"key");var h,p=0|r._crypto_onetimeauth_keybytes();t.length!==p&&f(_,"invalid key length"),h=d(t),_.push(h);var y=!(0|r._crypto_onetimeauth_verify(n,c,o,0,h));return g(_),y}function Xa(e,a,t,_,n,s,c){var o=[];l(c),m(o,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&f(o,"keyLength must be an unsigned integer");var h=d(a=E(o,a,"password")),p=a.length;o.push(h),t=E(o,t,"salt");var i,v=0|r._crypto_pwhash_saltbytes();t.length!==v&&f(o,"invalid salt length"),i=d(t),o.push(i),m(o,_,"opsLimit"),("number"!=typeof _||(0|_)!==_||_<0)&&f(o,"opsLimit must be an unsigned integer"),m(o,n,"memLimit"),("number"!=typeof n||(0|n)!==n||n<0)&&f(o,"memLimit must be an unsigned integer"),m(o,s,"algorithm"),("number"!=typeof s||(0|s)!==s||s<0)&&f(o,"algorithm must be an unsigned integer");var x=new u(0|e),k=x.address;if(o.push(k),!(0|r._crypto_pwhash(k,e,0,h,p,0,i,_,0,n,s))){var S=y(x,c);return g(o),S}b(o,"invalid usage")}function Ga(e,a,t,_,n,s){var c=[];l(s),m(c,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&f(c,"keyLength must be an unsigned integer");var o=d(a=E(c,a,"password")),h=a.length;c.push(o),t=E(c,t,"salt");var p,i=0|r._crypto_pwhash_scryptsalsa208sha256_saltbytes();t.length!==i&&f(c,"invalid salt length"),p=d(t),c.push(p),m(c,_,"opsLimit"),("number"!=typeof _||(0|_)!==_||_<0)&&f(c,"opsLimit must be an unsigned integer"),m(c,n,"memLimit"),("number"!=typeof n||(0|n)!==n||n<0)&&f(c,"memLimit must be an unsigned integer");var v=new u(0|e),x=v.address;if(c.push(x),!(0|r._crypto_pwhash_scryptsalsa208sha256(x,e,0,o,h,0,p,_,0,n))){var k=y(v,s);return g(c),k}b(c,"invalid usage")}function Da(e,a,t,_,n,s,c){var o=[];l(c);var h=d(e=E(o,e,"password")),p=e.length;o.push(h);var i=d(a=E(o,a,"salt")),v=a.length;o.push(i),m(o,t,"opsLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&f(o,"opsLimit must be an unsigned integer"),m(o,_,"r"),("number"!=typeof _||(0|_)!==_||_<0)&&f(o,"r must be an unsigned integer"),m(o,n,"p"),("number"!=typeof n||(0|n)!==n||n<0)&&f(o,"p must be an unsigned integer"),m(o,s,"keyLength"),("number"!=typeof s||(0|s)!==s||s<0)&&f(o,"keyLength must be an unsigned integer");var x=new u(0|s),k=x.address;if(o.push(k),!(0|r._crypto_pwhash_scryptsalsa208sha256_ll(h,p,i,v,t,0,_,n,k,s))){var S=y(x,c);return g(o),S}b(o,"invalid usage")}function Fa(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"password")),c=e.length;n.push(s),m(n,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&f(n,"opsLimit must be an unsigned integer"),m(n,t,"memLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&f(n,"memLimit must be an unsigned integer");var o=new u(0|r._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;if(n.push(o),!(0|r._crypto_pwhash_scryptsalsa208sha256_str(o,s,c,0,a,0,t))){var h=r.UTF8ToString(o);return g(n),h}b(n,"invalid usage")}function Va(e,a,t){var _=[];l(t),"string"!=typeof e&&f(_,"hashed_password must be a string"),e=n(e+"\0"),null!=c&&e.length-1!==c&&f(_,"invalid hashed_password length");var s=d(e),c=e.length-1;_.push(s);var o=d(a=E(_,a,"password")),h=a.length;_.push(o);var p=!(0|r._crypto_pwhash_scryptsalsa208sha256_str_verify(s,o,h,0));return g(_),p}function Ha(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"password")),c=e.length;n.push(s),m(n,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&f(n,"opsLimit must be an unsigned integer"),m(n,t,"memLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&f(n,"memLimit must be an unsigned integer");var o=new u(0|r._crypto_pwhash_strbytes()).address;if(n.push(o),!(0|r._crypto_pwhash_str(o,s,c,0,a,0,t))){var h=r.UTF8ToString(o);return g(n),h}b(n,"invalid usage")}function Wa(e,a,t,_){var s=[];l(_),"string"!=typeof e&&f(s,"hashed_password must be a string"),e=n(e+"\0"),null!=o&&e.length-1!==o&&f(s,"invalid hashed_password length");var c=d(e),o=e.length-1;s.push(c),m(s,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&f(s,"opsLimit must be an unsigned integer"),m(s,t,"memLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&f(s,"memLimit must be an unsigned integer");var h=!!(0|r._crypto_pwhash_str_needs_rehash(c,a,0,t));return g(s),h}function qa(e,a,t){var _=[];l(t),"string"!=typeof e&&f(_,"hashed_password must be a string"),e=n(e+"\0"),null!=c&&e.length-1!==c&&f(_,"invalid hashed_password length");var s=d(e),c=e.length-1;_.push(s);var o=d(a=E(_,a,"password")),h=a.length;_.push(o);var p=!(0|r._crypto_pwhash_str_verify(s,o,h,0));return g(_),p}function ja(e,a,t){var _=[];l(t),e=E(_,e,"privateKey");var n,s=0|r._crypto_scalarmult_scalarbytes();e.length!==s&&f(_,"invalid privateKey length"),n=d(e),_.push(n),a=E(_,a,"publicKey");var c,o=0|r._crypto_scalarmult_bytes();a.length!==o&&f(_,"invalid publicKey length"),c=d(a),_.push(c);var h=new u(0|r._crypto_scalarmult_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_scalarmult(p,n,c))){var i=y(h,t);return g(_),i}b(_,"weak public key")}function za(e,a){var t=[];l(a),e=E(t,e,"privateKey");var _,n=0|r._crypto_scalarmult_scalarbytes();e.length!==n&&f(t,"invalid privateKey length"),_=d(e),t.push(_);var s=new u(0|r._crypto_scalarmult_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_scalarmult_base(c,_))){var o=y(s,a);return g(t),o}b(t,"unknown error")}function Ja(e,a,t){var _=[];l(t),e=E(_,e,"n");var n,s=0|r._crypto_scalarmult_ed25519_scalarbytes();e.length!==s&&f(_,"invalid n length"),n=d(e),_.push(n),a=E(_,a,"p");var c,o=0|r._crypto_scalarmult_ed25519_bytes();a.length!==o&&f(_,"invalid p length"),c=d(a),_.push(c);var h=new u(0|r._crypto_scalarmult_ed25519_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_scalarmult_ed25519(p,n,c))){var i=y(h,t);return g(_),i}b(_,"invalid point or scalar is 0")}function Qa(e,a){var t=[];l(a),e=E(t,e,"scalar");var _,n=0|r._crypto_scalarmult_ed25519_scalarbytes();e.length!==n&&f(t,"invalid scalar length"),_=d(e),t.push(_);var s=new u(0|r._crypto_scalarmult_ed25519_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_scalarmult_ed25519_base(c,_))){var o=y(s,a);return g(t),o}b(t,"scalar is 0")}function Za(e,a){var t=[];l(a),e=E(t,e,"scalar");var _,n=0|r._crypto_scalarmult_ed25519_scalarbytes();e.length!==n&&f(t,"invalid scalar length"),_=d(e),t.push(_);var s=new u(0|r._crypto_scalarmult_ed25519_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_scalarmult_ed25519_base_noclamp(c,_))){var o=y(s,a);return g(t),o}b(t,"scalar is 0")}function $a(e,a,t){var _=[];l(t),e=E(_,e,"n");var n,s=0|r._crypto_scalarmult_ed25519_scalarbytes();e.length!==s&&f(_,"invalid n length"),n=d(e),_.push(n),a=E(_,a,"p");var c,o=0|r._crypto_scalarmult_ed25519_bytes();a.length!==o&&f(_,"invalid p length"),c=d(a),_.push(c);var h=new u(0|r._crypto_scalarmult_ed25519_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_scalarmult_ed25519_noclamp(p,n,c))){var i=y(h,t);return g(_),i}b(_,"invalid point or scalar is 0")}function er(e,a,t){var _=[];l(t),e=E(_,e,"scalar");var n,s=0|r._crypto_scalarmult_ristretto255_scalarbytes();e.length!==s&&f(_,"invalid scalar length"),n=d(e),_.push(n),a=E(_,a,"element");var c,o=0|r._crypto_scalarmult_ristretto255_bytes();a.length!==o&&f(_,"invalid element length"),c=d(a),_.push(c);var h=new u(0|r._crypto_scalarmult_ristretto255_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_scalarmult_ristretto255(p,n,c))){var i=y(h,t);return g(_),i}b(_,"result is identity element")}function ar(e,a){var t=[];l(a),e=E(t,e,"scalar");var _,n=0|r._crypto_core_ristretto255_scalarbytes();e.length!==n&&f(t,"invalid scalar length"),_=d(e),t.push(_);var s=new u(0|r._crypto_core_ristretto255_bytes()),c=s.address;if(t.push(c),!(0|r._crypto_scalarmult_ristretto255_base(c,_))){var o=y(s,a);return g(t),o}b(t,"scalar is 0")}function rr(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_secretbox_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"key");var p,i=0|r._crypto_secretbox_keybytes();t.length!==i&&f(n,"invalid key length"),p=d(t),n.push(p);var v=new u(0|c),m=v.address;n.push(m);var x=new u(0|r._crypto_secretbox_macbytes()),k=x.address;if(n.push(k),!(0|r._crypto_secretbox_detached(m,k,s,c,0,o,p))){var S=y({mac:x,cipher:v},_);return g(n),S}b(n,"invalid usage")}function tr(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_secretbox_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"key");var p,i=0|r._crypto_secretbox_keybytes();t.length!==i&&f(n,"invalid key length"),p=d(t),n.push(p);var v=new u(c+r._crypto_secretbox_macbytes()|0),m=v.address;if(n.push(m),!(0|r._crypto_secretbox_easy(m,s,c,0,o,p))){var x=y(v,_);return g(n),x}b(n,"invalid usage")}function _r(e){var a=[];l(e);var t=new u(0|r._crypto_secretbox_keybytes()),_=t.address;a.push(_),r._crypto_secretbox_keygen(_);var n=y(t,e);return g(a),n}function nr(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"ciphertext")),o=e.length;s.push(c),a=E(s,a,"mac");var h,p=0|r._crypto_secretbox_macbytes();a.length!==p&&f(s,"invalid mac length"),h=d(a),s.push(h),t=E(s,t,"nonce");var i,v=0|r._crypto_secretbox_noncebytes();t.length!==v&&f(s,"invalid nonce length"),i=d(t),s.push(i),_=E(s,_,"key");var m,x=0|r._crypto_secretbox_keybytes();_.length!==x&&f(s,"invalid key length"),m=d(_),s.push(m);var k=new u(0|o),S=k.address;if(s.push(S),!(0|r._crypto_secretbox_open_detached(S,c,h,o,0,i,m))){var T=y(k,n);return g(s),T}b(s,"wrong secret key for the given ciphertext")}function sr(e,a,t,_){var n=[];l(_),e=E(n,e,"ciphertext");var s,c=r._crypto_secretbox_macbytes(),o=e.length;o<c&&f(n,"ciphertext is too short"),s=d(e),n.push(s),a=E(n,a,"nonce");var h,p=0|r._crypto_secretbox_noncebytes();a.length!==p&&f(n,"invalid nonce length"),h=d(a),n.push(h),t=E(n,t,"key");var i,v=0|r._crypto_secretbox_keybytes();t.length!==v&&f(n,"invalid key length"),i=d(t),n.push(i);var m=new u(o-r._crypto_secretbox_macbytes()|0),x=m.address;if(n.push(x),!(0|r._crypto_secretbox_open_easy(x,s,o,0,h,i))){var k=y(m,_);return g(n),k}b(n,"wrong secret key for the given ciphertext")}function cr(e,a,t){var _=[];l(t),e=E(_,e,"header");var n,s=0|r._crypto_secretstream_xchacha20poly1305_headerbytes();e.length!==s&&f(_,"invalid header length"),n=d(e),_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_secretstream_xchacha20poly1305_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(52).address;if(!(0|r._crypto_secretstream_xchacha20poly1305_init_pull(h,n,c))){var p=h;return g(_),p}b(_,"invalid usage")}function or(e,a){var t=[];l(a),e=E(t,e,"key");var _,n=0|r._crypto_secretstream_xchacha20poly1305_keybytes();e.length!==n&&f(t,"invalid key length"),_=d(e),t.push(_);var s=new u(52).address,c=new u(0|r._crypto_secretstream_xchacha20poly1305_headerbytes()),o=c.address;if(t.push(o),!(0|r._crypto_secretstream_xchacha20poly1305_init_push(s,o,_))){var h={state:s,header:y(c,a)};return g(t),h}b(t,"invalid usage")}function hr(e){var a=[];l(e);var t=new u(0|r._crypto_secretstream_xchacha20poly1305_keybytes()),_=t.address;a.push(_),r._crypto_secretstream_xchacha20poly1305_keygen(_);var n=y(t,e);return g(a),n}function pr(e,a,t,_){var n=[];l(_),m(n,e,"state_address"),a=E(n,a,"cipher");var s,c=r._crypto_secretstream_xchacha20poly1305_abytes(),o=a.length;o<c&&f(n,"cipher is too short"),s=d(a),n.push(s);var h=null,p=0;null!=t&&(h=d(t=E(n,t,"ad")),p=t.length,n.push(h));var i=new u(o-r._crypto_secretstream_xchacha20poly1305_abytes()|0),b=i.address;n.push(b);var x,k=(x=v(1),n.push(x),(k=0===r._crypto_secretstream_xchacha20poly1305_pull(e,b,0,x,s,o,0,h,p)&&{tag:r.HEAPU8[x],message:i})&&{message:y(k.message,_),tag:k.tag});return g(n),k}function yr(e,a,t,_,n){var s=[];l(n),m(s,e,"state_address");var c=d(a=E(s,a,"message_chunk")),o=a.length;s.push(c);var h=null,p=0;null!=t&&(h=d(t=E(s,t,"ad")),p=t.length,s.push(h)),m(s,_,"tag"),("number"!=typeof _||(0|_)!==_||_<0)&&f(s,"tag must be an unsigned integer");var i=new u(o+r._crypto_secretstream_xchacha20poly1305_abytes()|0),v=i.address;if(s.push(v),!(0|r._crypto_secretstream_xchacha20poly1305_push(e,v,0,c,o,0,h,p,0,_))){var x=y(i,n);return g(s),x}b(s,"invalid usage")}function ir(e,a){var t=[];return l(a),m(t,e,"state_address"),r._crypto_secretstream_xchacha20poly1305_rekey(e),g(t),!0}function lr(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_shorthash_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_shorthash_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_shorthash(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function ur(e){var a=[];l(e);var t=new u(0|r._crypto_shorthash_keybytes()),_=t.address;a.push(_),r._crypto_shorthash_keygen(_);var n=y(t,e);return g(a),n}function dr(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"key");var c,o=0|r._crypto_shorthash_siphashx24_keybytes();a.length!==o&&f(_,"invalid key length"),c=d(a),_.push(c);var h=new u(0|r._crypto_shorthash_siphashx24_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_shorthash_siphashx24(p,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function vr(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"privateKey");var c,o=0|r._crypto_sign_secretkeybytes();a.length!==o&&f(_,"invalid privateKey length"),c=d(a),_.push(c);var h=new u(e.length+r._crypto_sign_bytes()|0),p=h.address;if(_.push(p),!(0|r._crypto_sign(p,null,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function gr(e,a,t){var _=[];l(t);var n=d(e=E(_,e,"message")),s=e.length;_.push(n),a=E(_,a,"privateKey");var c,o=0|r._crypto_sign_secretkeybytes();a.length!==o&&f(_,"invalid privateKey length"),c=d(a),_.push(c);var h=new u(0|r._crypto_sign_bytes()),p=h.address;if(_.push(p),!(0|r._crypto_sign_detached(p,null,n,s,0,c))){var i=y(h,t);return g(_),i}b(_,"invalid usage")}function br(e,a){var t=[];l(a),e=E(t,e,"edPk");var _,n=0|r._crypto_sign_publickeybytes();e.length!==n&&f(t,"invalid edPk length"),_=d(e),t.push(_);var s=new u(0|r._crypto_scalarmult_scalarbytes()),c=s.address;if(t.push(c),!(0|r._crypto_sign_ed25519_pk_to_curve25519(c,_))){var o=y(s,a);return g(t),o}b(t,"invalid key")}function fr(e,a){var t=[];l(a),e=E(t,e,"edSk");var _,n=0|r._crypto_sign_secretkeybytes();e.length!==n&&f(t,"invalid edSk length"),_=d(e),t.push(_);var s=new u(0|r._crypto_scalarmult_scalarbytes()),c=s.address;if(t.push(c),!(0|r._crypto_sign_ed25519_sk_to_curve25519(c,_))){var o=y(s,a);return g(t),o}b(t,"invalid key")}function mr(e,a){var t=[];l(a),e=E(t,e,"privateKey");var _,n=0|r._crypto_sign_secretkeybytes();e.length!==n&&f(t,"invalid privateKey length"),_=d(e),t.push(_);var s=new u(0|r._crypto_sign_publickeybytes()),c=s.address;if(t.push(c),!(0|r._crypto_sign_ed25519_sk_to_pk(c,_))){var o=y(s,a);return g(t),o}b(t,"invalid key")}function Er(e,a){var t=[];l(a),e=E(t,e,"privateKey");var _,n=0|r._crypto_sign_secretkeybytes();e.length!==n&&f(t,"invalid privateKey length"),_=d(e),t.push(_);var s=new u(0|r._crypto_sign_seedbytes()),c=s.address;if(t.push(c),!(0|r._crypto_sign_ed25519_sk_to_seed(c,_))){var o=y(s,a);return g(t),o}b(t,"invalid key")}function xr(e,a,t){var _=[];l(t),m(_,e,"state_address"),a=E(_,a,"privateKey");var n,s=0|r._crypto_sign_secretkeybytes();a.length!==s&&f(_,"invalid privateKey length"),n=d(a),_.push(n);var c=new u(0|r._crypto_sign_bytes()),o=c.address;if(_.push(o),!(0|r._crypto_sign_final_create(e,o,null,n))){var h=(r._free(e),y(c,t));return g(_),h}b(_,"invalid usage")}function kr(e,a,t,_){var n=[];l(_),m(n,e,"state_address"),a=E(n,a,"signature");var s,c=0|r._crypto_sign_bytes();a.length!==c&&f(n,"invalid signature length"),s=d(a),n.push(s),t=E(n,t,"publicKey");var o,h=0|r._crypto_sign_publickeybytes();t.length!==h&&f(n,"invalid publicKey length"),o=d(t),n.push(o);var p=!(0|r._crypto_sign_final_verify(e,s,o));return g(n),p}function Sr(e){var a=[];l(e);var t=new u(208).address;if(!(0|r._crypto_sign_init(t))){var _=t;return g(a),_}b(a,"internal error")}function Tr(e){var a=[];l(e);var t=new u(0|r._crypto_sign_publickeybytes()),_=t.address;a.push(_);var n=new u(0|r._crypto_sign_secretkeybytes()),s=n.address;if(a.push(s),!(0|r._crypto_sign_keypair(_,s))){var c={publicKey:y(t,e),privateKey:y(n,e),keyType:"ed25519"};return g(a),c}b(a,"internal error")}function wr(e,a,t){var _=[];l(t),e=E(_,e,"signedMessage");var n,s=r._crypto_sign_bytes(),c=e.length;c<s&&f(_,"signedMessage is too short"),n=d(e),_.push(n),a=E(_,a,"publicKey");var o,h=0|r._crypto_sign_publickeybytes();a.length!==h&&f(_,"invalid publicKey length"),o=d(a),_.push(o);var p=new u(c-r._crypto_sign_bytes()|0),i=p.address;if(_.push(i),!(0|r._crypto_sign_open(i,null,n,c,0,o))){var v=y(p,t);return g(_),v}b(_,"incorrect signature for the given public key")}function Yr(e,a){var t=[];l(a),e=E(t,e,"seed");var _,n=0|r._crypto_sign_seedbytes();e.length!==n&&f(t,"invalid seed length"),_=d(e),t.push(_);var s=new u(0|r._crypto_sign_publickeybytes()),c=s.address;t.push(c);var o=new u(0|r._crypto_sign_secretkeybytes()),h=o.address;if(t.push(h),!(0|r._crypto_sign_seed_keypair(c,h,_))){var p={publicKey:y(s,a),privateKey:y(o,a),keyType:"ed25519"};return g(t),p}b(t,"invalid usage")}function Br(e,a,t){var _=[];l(t),m(_,e,"state_address");var n=d(a=E(_,a,"message_chunk")),s=a.length;_.push(n),0|r._crypto_sign_update(e,n,s,0)&&b(_,"invalid usage"),g(_)}function Ar(e,a,t){var _=[];e=E(_,e,"signature");var n,s=0|r._crypto_sign_bytes();e.length!==s&&f(_,"invalid signature length"),n=d(e),_.push(n);var c=d(a=E(_,a,"message")),o=a.length;_.push(c),t=E(_,t,"publicKey");var h,p=0|r._crypto_sign_publickeybytes();t.length!==p&&f(_,"invalid publicKey length"),h=d(t),_.push(h);var y=!(0|r._crypto_sign_verify_detached(n,c,o,0,h));return g(_),y}function Mr(e,a,t,_){var n=[];l(_),m(n,e,"outLength"),("number"!=typeof e||(0|e)!==e||e<0)&&f(n,"outLength must be an unsigned integer"),a=E(n,a,"key");var s,c=0|r._crypto_stream_chacha20_keybytes();a.length!==c&&f(n,"invalid key length"),s=d(a),n.push(s),t=E(n,t,"nonce");var o,h=0|r._crypto_stream_chacha20_noncebytes();t.length!==h&&f(n,"invalid nonce length"),o=d(t),n.push(o);var p=new u(0|e),i=p.address;n.push(i),r._crypto_stream_chacha20(i,e,0,o,s);var v=y(p,_);return g(n),v}function Ir(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"input_message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_stream_chacha20_ietf_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"key");var p,i=0|r._crypto_stream_chacha20_ietf_keybytes();t.length!==i&&f(n,"invalid key length"),p=d(t),n.push(p);var v=new u(0|c),m=v.address;if(n.push(m),0===r._crypto_stream_chacha20_ietf_xor(m,s,c,0,o,p)){var x=y(v,_);return g(n),x}b(n,"invalid usage")}function Kr(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"input_message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_stream_chacha20_ietf_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),m(s,t,"nonce_increment"),("number"!=typeof t||(0|t)!==t||t<0)&&f(s,"nonce_increment must be an unsigned integer"),_=E(s,_,"key");var i,v=0|r._crypto_stream_chacha20_ietf_keybytes();_.length!==v&&f(s,"invalid key length"),i=d(_),s.push(i);var x=new u(0|o),k=x.address;if(s.push(k),0===r._crypto_stream_chacha20_ietf_xor_ic(k,c,o,0,h,t,i)){var S=y(x,n);return g(s),S}b(s,"invalid usage")}function Nr(e){var a=[];l(e);var t=new u(0|r._crypto_stream_chacha20_keybytes()),_=t.address;a.push(_),r._crypto_stream_chacha20_keygen(_);var n=y(t,e);return g(a),n}function Lr(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"input_message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_stream_chacha20_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"key");var p,i=0|r._crypto_stream_chacha20_keybytes();t.length!==i&&f(n,"invalid key length"),p=d(t),n.push(p);var v=new u(0|c),m=v.address;if(n.push(m),0===r._crypto_stream_chacha20_xor(m,s,c,0,o,p)){var x=y(v,_);return g(n),x}b(n,"invalid usage")}function Or(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"input_message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_stream_chacha20_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),m(s,t,"nonce_increment"),("number"!=typeof t||(0|t)!==t||t<0)&&f(s,"nonce_increment must be an unsigned integer"),_=E(s,_,"key");var i,v=0|r._crypto_stream_chacha20_keybytes();_.length!==v&&f(s,"invalid key length"),i=d(_),s.push(i);var x=new u(0|o),k=x.address;if(s.push(k),0===r._crypto_stream_chacha20_xor_ic(k,c,o,0,h,t,0,i)){var S=y(x,n);return g(s),S}b(s,"invalid usage")}function Ur(e){var a=[];l(e);var t=new u(0|r._crypto_stream_keybytes()),_=t.address;a.push(_),r._crypto_stream_keygen(_);var n=y(t,e);return g(a),n}function Cr(e){var a=[];l(e);var t=new u(0|r._crypto_stream_xchacha20_keybytes()),_=t.address;a.push(_),r._crypto_stream_xchacha20_keygen(_);var n=y(t,e);return g(a),n}function Pr(e,a,t,_){var n=[];l(_);var s=d(e=E(n,e,"input_message")),c=e.length;n.push(s),a=E(n,a,"nonce");var o,h=0|r._crypto_stream_xchacha20_noncebytes();a.length!==h&&f(n,"invalid nonce length"),o=d(a),n.push(o),t=E(n,t,"key");var p,i=0|r._crypto_stream_xchacha20_keybytes();t.length!==i&&f(n,"invalid key length"),p=d(t),n.push(p);var v=new u(0|c),m=v.address;if(n.push(m),0===r._crypto_stream_xchacha20_xor(m,s,c,0,o,p)){var x=y(v,_);return g(n),x}b(n,"invalid usage")}function Rr(e,a,t,_,n){var s=[];l(n);var c=d(e=E(s,e,"input_message")),o=e.length;s.push(c),a=E(s,a,"nonce");var h,p=0|r._crypto_stream_xchacha20_noncebytes();a.length!==p&&f(s,"invalid nonce length"),h=d(a),s.push(h),m(s,t,"nonce_increment"),("number"!=typeof t||(0|t)!==t||t<0)&&f(s,"nonce_increment must be an unsigned integer"),_=E(s,_,"key");var i,v=0|r._crypto_stream_xchacha20_keybytes();_.length!==v&&f(s,"invalid key length"),i=d(_),s.push(i);var x=new u(0|o),k=x.address;if(s.push(k),0===r._crypto_stream_xchacha20_xor_ic(k,c,o,0,h,t,0,i)){var S=y(x,n);return g(s),S}b(s,"invalid usage")}function Xr(e,a){var t=[];l(a),m(t,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&f(t,"length must be an unsigned integer");var _=new u(0|e),n=_.address;t.push(n),r._randombytes_buf(n,e);var s=y(_,a);return g(t),s}function Gr(e,a,t){var _=[];l(t),m(_,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&f(_,"length must be an unsigned integer"),a=E(_,a,"seed");var n,s=0|r._randombytes_seedbytes();a.length!==s&&f(_,"invalid seed length"),n=d(a),_.push(n);var c=new u(0|e),o=c.address;_.push(o),r._randombytes_buf_deterministic(o,e,n);var h=y(c,t);return g(_),h}function Dr(e){l(e),r._randombytes_close()}function Fr(e){l(e);var a=r._randombytes_random()>>>0;return g([]),a}function Vr(e,a){var t=[];l(a);for(var _=r._malloc(24),n=0;n<6;n++)r.setValue(_+4*n,r.Runtime.addFunction(e[["implementation_name","random","stir","uniform","buf","close"][n]]),"i32");0|r._randombytes_set_implementation(_)&&b(t,"unsupported implementation"),g(t)}function Hr(e){l(e),r._randombytes_stir()}function Wr(e,a){var t=[];l(a),m(t,e,"upper_bound"),("number"!=typeof e||(0|e)!==e||e<0)&&f(t,"upper_bound must be an unsigned integer");var _=r._randombytes_uniform(e)>>>0;return g(t),_}function qr(){var e=r._sodium_version_string(),a=r.UTF8ToString(e);return g([]),a}return u.prototype.to_Uint8Array=function(){var e=new Uint8Array(this.length);return e.set(r.HEAPU8.subarray(this.address,this.address+this.length)),e},e.add=function(e,a){if(!(e instanceof Uint8Array&&a instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can added");var r=e.length,t=0,_=0;if(a.length!=e.length)throw new TypeError("Arguments must have the same length");for(_=0;_<r;_++)t>>=8,t+=e[_]+a[_],e[_]=255&t},e.base64_variants=o,e.compare=function(e,a){if(!(e instanceof Uint8Array&&a instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==a.length)throw new TypeError("Only instances of identical length can be compared");for(var r=0,t=1,_=e.length;_-- >0;)r|=a[_]-e[_]>>8&t,t&=(a[_]^e[_])-1>>8;return r+r+t-1},e.from_base64=function(e,a){a=h(a);var t,_=[],n=new u(3*(e=E(_,e,"input")).length/4),s=d(e),c=v(4),o=v(4);return _.push(s),_.push(n.address),_.push(n.result_bin_len_p),_.push(n.b64_end_p),0!==r._sodium_base642bin(n.address,n.length,s,e.length,0,c,o,a)&&b(_,"invalid input"),r.getValue(o,"i32")-s!==e.length&&b(_,"incomplete input"),n.length=r.getValue(c,"i32"),t=n.to_Uint8Array(),g(_),t},e.from_hex=function(e){var a,t=[],_=new u((e=E(t,e,"input")).length/2),n=d(e),s=v(4);return t.push(n),t.push(_.address),t.push(_.hex_end_p),0!==r._sodium_hex2bin(_.address,_.length,n,e.length,0,0,s)&&b(t,"invalid input"),r.getValue(s,"i32")-n!==e.length&&b(t,"incomplete input"),a=_.to_Uint8Array(),g(t),a},e.from_string=n,e.increment=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be incremented");for(var a=256,r=0,t=e.length;r<t;r++)a>>=8,a+=e[r],e[r]=255&a},e.is_zero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be checked");for(var a=0,r=0,t=e.length;r<t;r++)a|=e[r];return 0===a},e.libsodium=a,e.memcmp=function(e,a){if(!(e instanceof Uint8Array&&a instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==a.length)throw new TypeError("Only instances of identical length can be compared");for(var r=0,t=0,_=e.length;t<_;t++)r|=e[t]^a[t];return 0===r},e.memzero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be wiped");for(var a=0,r=e.length;a<r;a++)e[a]=0},e.output_formats=function(){return["uint8array","text","hex","base64"]},e.pad=function(e,a){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((a|=0)<=0)throw new Error("block size must be > 0");var t,_=[],n=v(4),s=1,c=0,o=0|e.length,h=new u(o+a);_.push(n),_.push(h.address);for(var p=h.address,y=h.address+o+a;p<y;p++)r.HEAPU8[p]=e[c],c+=s=1&~((65535&((o-=s)>>>48|o>>>32|o>>>16|o))-1>>16);return 0!==r._sodium_pad(n,h.address,e.length,a,h.length)&&b(_,"internal error"),h.length=r.getValue(n,"i32"),t=h.to_Uint8Array(),g(_),t},e.unpad=function(e,a){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((a|=0)<=0)throw new Error("block size must be > 0");var t=[],_=d(e),n=v(4);return t.push(_),t.push(n),0!==r._sodium_unpad(n,_,e.length,a)&&b(t,"unsupported/invalid padding"),e=(e=new Uint8Array(e)).subarray(0,r.getValue(n,"i32")),g(t),e},e.ready=_,e.symbols=function(){return Object.keys(e).sort()},e.to_base64=p,e.to_hex=c,e.to_string=s,e}var r="object"==typeof e.sodium&&"function"==typeof e.sodium.onload?e.sodium.onload:null; true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports,__webpack_require__(/*! libsodium-sumo */ "./node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0,r&&e.sodium.ready.then((function(){r(e.sodium)}))}(this);


/***/ }),

/***/ "./node_modules/math-intrinsics/abs.js":
/*!*********************************************!*\
  !*** ./node_modules/math-intrinsics/abs.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./abs')} */
module.exports = Math.abs;


/***/ }),

/***/ "./node_modules/math-intrinsics/floor.js":
/*!***********************************************!*\
  !*** ./node_modules/math-intrinsics/floor.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./floor')} */
module.exports = Math.floor;


/***/ }),

/***/ "./node_modules/math-intrinsics/isNaN.js":
/*!***********************************************!*\
  !*** ./node_modules/math-intrinsics/isNaN.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./isNaN')} */
module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};


/***/ }),

/***/ "./node_modules/math-intrinsics/max.js":
/*!*********************************************!*\
  !*** ./node_modules/math-intrinsics/max.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./max')} */
module.exports = Math.max;


/***/ }),

/***/ "./node_modules/math-intrinsics/min.js":
/*!*********************************************!*\
  !*** ./node_modules/math-intrinsics/min.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./min')} */
module.exports = Math.min;


/***/ }),

/***/ "./node_modules/math-intrinsics/pow.js":
/*!*********************************************!*\
  !*** ./node_modules/math-intrinsics/pow.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./pow')} */
module.exports = Math.pow;


/***/ }),

/***/ "./node_modules/math-intrinsics/round.js":
/*!***********************************************!*\
  !*** ./node_modules/math-intrinsics/round.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";


/** @type {import('./round')} */
module.exports = Math.round;


/***/ }),

/***/ "./node_modules/math-intrinsics/sign.js":
/*!**********************************************!*\
  !*** ./node_modules/math-intrinsics/sign.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $isNaN = __webpack_require__(/*! ./isNaN */ "./node_modules/math-intrinsics/isNaN.js");

/** @type {import('./sign')} */
module.exports = function sign(number) {
	if ($isNaN(number) || number === 0) {
		return number;
	}
	return number < 0 ? -1 : +1;
};


/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5


/***/ }),

/***/ "./node_modules/miller-rabin/lib/mr.js":
/*!*********************************************!*\
  !*** ./node_modules/miller-rabin/lib/mr.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bn = __webpack_require__(/*! bn.js */ "./node_modules/miller-rabin/node_modules/bn.js/lib/bn.js");
var brorand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};


/***/ }),

/***/ "./node_modules/miller-rabin/node_modules/bn.js/lib/bn.js":
/*!****************************************************************!*\
  !*** ./node_modules/miller-rabin/node_modules/bn.js/lib/bn.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?0aec").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ "./node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),

/***/ "./node_modules/object-is/implementation.js":
/*!**************************************************!*\
  !*** ./node_modules/object-is/implementation.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


var numberIsNaN = function (value) {
	return value !== value;
};

module.exports = function is(a, b) {
	if (a === 0 && b === 0) {
		return 1 / a === 1 / b;
	}
	if (a === b) {
		return true;
	}
	if (numberIsNaN(a) && numberIsNaN(b)) {
		return true;
	}
	return false;
};



/***/ }),

/***/ "./node_modules/object-is/index.js":
/*!*****************************************!*\
  !*** ./node_modules/object-is/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object-is/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object-is/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/object-is/shim.js");

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),

/***/ "./node_modules/object-is/polyfill.js":
/*!********************************************!*\
  !*** ./node_modules/object-is/polyfill.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object-is/implementation.js");

module.exports = function getPolyfill() {
	return typeof Object.is === 'function' ? Object.is : implementation;
};


/***/ }),

/***/ "./node_modules/object-is/shim.js":
/*!****************************************!*\
  !*** ./node_modules/object-is/shim.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object-is/polyfill.js");
var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

module.exports = function shimObjectIs() {
	var polyfill = getPolyfill();
	define(Object, { is: polyfill }, {
		is: function testObjectIs() {
			return Object.is !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),

/***/ "./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js"); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "./node_modules/object-keys/implementation.js");

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),

/***/ "./node_modules/object.assign/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/object.assign/implementation.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// modified from https://github.com/es-shims/es6-shim
var objectKeys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js")();
var callBound = __webpack_require__(/*! call-bound */ "./node_modules/call-bound/index.js");
var $Object = __webpack_require__(/*! es-object-atoms */ "./node_modules/es-object-atoms/index.js");
var $push = callBound('Array.prototype.push');
var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var originalGetSymbols = hasSymbols ? $Object.getOwnPropertySymbols : null;

// eslint-disable-next-line no-unused-vars
module.exports = function assign(target, source1) {
	if (target == null) { throw new TypeError('target must be an object'); }
	var to = $Object(target); // step 1
	if (arguments.length === 1) {
		return to; // step 2
	}
	for (var s = 1; s < arguments.length; ++s) {
		var from = $Object(arguments[s]); // step 3.a.i

		// step 3.a.ii:
		var keys = objectKeys(from);
		var getSymbols = hasSymbols && ($Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) {
			var syms = getSymbols(from);
			for (var j = 0; j < syms.length; ++j) {
				var key = syms[j];
				if ($propIsEnumerable(from, key)) {
					$push(keys, key);
				}
			}
		}

		// step 3.a.iii:
		for (var i = 0; i < keys.length; ++i) {
			var nextKey = keys[i];
			if ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2
				var propValue = from[nextKey]; // step 3.a.iii.2.a
				to[nextKey] = propValue; // step 3.a.iii.2.b
			}
		}
	}

	return to; // step 4
};


/***/ }),

/***/ "./node_modules/object.assign/polyfill.js":
/*!************************************************!*\
  !*** ./node_modules/object.assign/polyfill.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object.assign/implementation.js");

var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	/*
	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	 * note: this does not detect the bug unless there's 20 characters
	 */
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	/*
	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	 * which is 72% slower than our shim, and Firefox 40's native implementation.
	 */
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
	return false;
};

module.exports = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};


/***/ }),

/***/ "./node_modules/parse-asn1/asn1.js":
/*!*****************************************!*\
  !*** ./node_modules/parse-asn1/asn1.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.



var asn1 = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js");

exports.certificate = __webpack_require__(/*! ./certificate */ "./node_modules/parse-asn1/certificate.js");

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
	this.seq().obj(
		this.key('version')['int'](),
		this.key('modulus')['int'](),
		this.key('publicExponent')['int'](),
		this.key('privateExponent')['int'](),
		this.key('prime1')['int'](),
		this.key('prime2')['int'](),
		this.key('exponent1')['int'](),
		this.key('exponent2')['int'](),
		this.key('coefficient')['int']()
	);
});
exports.RSAPrivateKey = RSAPrivateKey;

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
	this.seq().obj(
		this.key('modulus')['int'](),
		this.key('publicExponent')['int']()
	);
});
exports.RSAPublicKey = RSAPublicKey;

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
	this.seq().obj(
		this.key('algorithm').objid(),
		this.key('none').null_().optional(),
		this.key('curve').objid().optional(),
		this.key('params').seq().obj(
			this.key('p')['int'](),
			this.key('q')['int'](),
			this.key('g')['int']()
		).optional()
	);
});

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
	this.seq().obj(
		this.key('algorithm').use(AlgorithmIdentifier),
		this.key('subjectPublicKey').bitstr()
	);
});
exports.PublicKey = PublicKey;

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
	this.seq().obj(
		this.key('version')['int'](),
		this.key('algorithm').use(AlgorithmIdentifier),
		this.key('subjectPrivateKey').octstr()
	);
});
exports.PrivateKey = PrivateKeyInfo;
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
	this.seq().obj(
		this.key('algorithm').seq().obj(
			this.key('id').objid(),
			this.key('decrypt').seq().obj(
				this.key('kde').seq().obj(
					this.key('id').objid(),
					this.key('kdeparams').seq().obj(
						this.key('salt').octstr(),
						this.key('iters')['int']()
					)
				),
				this.key('cipher').seq().obj(
					this.key('algo').objid(),
					this.key('iv').octstr()
				)
			)
		),
		this.key('subjectPrivateKey').octstr()
	);
});

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
	this.seq().obj(
		this.key('version')['int'](),
		this.key('p')['int'](),
		this.key('q')['int'](),
		this.key('g')['int'](),
		this.key('pub_key')['int'](),
		this.key('priv_key')['int']()
	);
});
exports.DSAPrivateKey = DSAPrivateKey;

exports.DSAparam = asn1.define('DSAparam', function () {
	this['int']();
});

var ECParameters = asn1.define('ECParameters', function () {
	this.choice({
		namedCurve: this.objid()
	});
});

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
	this.seq().obj(
		this.key('version')['int'](),
		this.key('privateKey').octstr(),
		this.key('parameters').optional().explicit(0).use(ECParameters),
		this.key('publicKey').optional().explicit(1).bitstr()
	);
});
exports.ECPrivateKey = ECPrivateKey;

exports.signature = asn1.define('signature', function () {
	this.seq().obj(
		this.key('r')['int'](),
		this.key('s')['int']()
	);
});


/***/ }),

/***/ "./node_modules/parse-asn1/certificate.js":
/*!************************************************!*\
  !*** ./node_modules/parse-asn1/certificate.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen



var asn = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js");

var Time = asn.define('Time', function () {
	this.choice({
		utcTime: this.utctime(),
		generalTime: this.gentime()
	});
});

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
	this.seq().obj(
		this.key('type').objid(),
		this.key('value').any()
	);
});

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
	this.seq().obj(
		this.key('algorithm').objid(),
		this.key('parameters').optional(),
		this.key('curve').objid().optional()
	);
});

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
	this.seq().obj(
		this.key('algorithm').use(AlgorithmIdentifier),
		this.key('subjectPublicKey').bitstr()
	);
});

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
	this.setof(AttributeTypeValue);
});

var RDNSequence = asn.define('RDNSequence', function () {
	this.seqof(RelativeDistinguishedName);
});

var Name = asn.define('Name', function () {
	this.choice({
		rdnSequence: this.use(RDNSequence)
	});
});

var Validity = asn.define('Validity', function () {
	this.seq().obj(
		this.key('notBefore').use(Time),
		this.key('notAfter').use(Time)
	);
});

var Extension = asn.define('Extension', function () {
	this.seq().obj(
		this.key('extnID').objid(),
		this.key('critical').bool().def(false),
		this.key('extnValue').octstr()
	);
});

var TBSCertificate = asn.define('TBSCertificate', function () {
	this.seq().obj(
		this.key('version').explicit(0)['int']().optional(),
		this.key('serialNumber')['int'](),
		this.key('signature').use(AlgorithmIdentifier),
		this.key('issuer').use(Name),
		this.key('validity').use(Validity),
		this.key('subject').use(Name),
		this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
		this.key('issuerUniqueID').implicit(1).bitstr().optional(),
		this.key('subjectUniqueID').implicit(2).bitstr().optional(),
		this.key('extensions').explicit(3).seqof(Extension).optional()
	);
});

var X509Certificate = asn.define('X509Certificate', function () {
	this.seq().obj(
		this.key('tbsCertificate').use(TBSCertificate),
		this.key('signatureAlgorithm').use(AlgorithmIdentifier),
		this.key('signatureValue').bitstr()
	);
});

module.exports = X509Certificate;


/***/ }),

/***/ "./node_modules/parse-asn1/fixProc.js":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/fixProc.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m;
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m;
var evp = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js");
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js");
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);
module.exports = function (okey, password) {
	var key = okey.toString();
	var match = key.match(findProc);
	var decrypted;
	if (!match) {
		var match2 = key.match(fullRegex);
		decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64');
	} else {
		var suite = 'aes' + match[1];
		var iv = Buffer.from(match[2], 'hex');
		var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64');
		var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;
		var out = [];
		var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
		out.push(cipher.update(cipherText));
		out.push(cipher['final']());
		decrypted = Buffer.concat(out);
	}
	var tag = key.match(startRegex)[1];
	return {
		tag: tag,
		data: decrypted
	};
};


/***/ }),

/***/ "./node_modules/parse-asn1/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse-asn1/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var asn1 = __webpack_require__(/*! ./asn1 */ "./node_modules/parse-asn1/asn1.js");
var aesid = __webpack_require__(/*! ./aesid.json */ "./node_modules/parse-asn1/aesid.json");
var fixProc = __webpack_require__(/*! ./fixProc */ "./node_modules/parse-asn1/fixProc.js");
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js");
var compat = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js");
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);

function decrypt(data, password) {
	var salt = data.algorithm.decrypt.kde.kdeparams.salt;
	var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);
	var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];
	var iv = data.algorithm.decrypt.cipher.iv;
	var cipherText = data.subjectPrivateKey;
	var keylen = parseInt(algo.split('-')[1], 10) / 8;
	var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');
	var cipher = ciphers.createDecipheriv(algo, key, iv);
	var out = [];
	out.push(cipher.update(cipherText));
	out.push(cipher['final']());
	return Buffer.concat(out);
}

function parseKeys(buffer) {
	var password;
	if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
		password = buffer.passphrase;
		buffer = buffer.key;
	}
	if (typeof buffer === 'string') {
		buffer = Buffer.from(buffer);
	}

	var stripped = fixProc(buffer, password);

	var type = stripped.tag;
	var data = stripped.data;
	var subtype, ndata;
	switch (type) {
		case 'CERTIFICATE':
			ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;
			// falls through
		case 'PUBLIC KEY':
			if (!ndata) {
				ndata = asn1.PublicKey.decode(data, 'der');
			}
			subtype = ndata.algorithm.algorithm.join('.');
			switch (subtype) {
				case '1.2.840.113549.1.1.1':
					return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');
				case '1.2.840.10045.2.1':
					ndata.subjectPrivateKey = ndata.subjectPublicKey;
					return {
						type: 'ec',
						data: ndata
					};
				case '1.2.840.10040.4.1':
					ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');
					return {
						type: 'dsa',
						data: ndata.algorithm.params
					};
				default: throw new Error('unknown key id ' + subtype);
			}
			// throw new Error('unknown key type ' + type)
		case 'ENCRYPTED PRIVATE KEY':
			data = asn1.EncryptedPrivateKey.decode(data, 'der');
			data = decrypt(data, password);
			// falls through
		case 'PRIVATE KEY':
			ndata = asn1.PrivateKey.decode(data, 'der');
			subtype = ndata.algorithm.algorithm.join('.');
			switch (subtype) {
				case '1.2.840.113549.1.1.1':
					return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');
				case '1.2.840.10045.2.1':
					return {
						curve: ndata.algorithm.curve,
						privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
					};
				case '1.2.840.10040.4.1':
					ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');
					return {
						type: 'dsa',
						params: ndata.algorithm.params
					};
				default: throw new Error('unknown key id ' + subtype);
			}
			// throw new Error('unknown key type ' + type)
		case 'RSA PUBLIC KEY':
			return asn1.RSAPublicKey.decode(data, 'der');
		case 'RSA PRIVATE KEY':
			return asn1.RSAPrivateKey.decode(data, 'der');
		case 'DSA PRIVATE KEY':
			return {
				type: 'dsa',
				params: asn1.DSAPrivateKey.decode(data, 'der')
			};
		case 'EC PRIVATE KEY':
			data = asn1.ECPrivateKey.decode(data, 'der');
			return {
				curve: data.parameters.value,
				privateKey: data.privateKey
			};
		default: throw new Error('unknown key type ' + type);
	}
}
parseKeys.signature = asn1.signature;

module.exports = parseKeys;


/***/ }),

/***/ "./node_modules/pbkdf2/browser.js":
/*!****************************************!*\
  !*** ./node_modules/pbkdf2/browser.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ "./node_modules/pbkdf2/lib/async.js")
exports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ "./node_modules/pbkdf2/lib/sync-browser.js")


/***/ }),

/***/ "./node_modules/pbkdf2/lib/async.js":
/*!******************************************!*\
  !*** ./node_modules/pbkdf2/lib/async.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var sync = __webpack_require__(/*! ./sync */ "./node_modules/pbkdf2/lib/sync-browser.js")
var toBuffer = __webpack_require__(/*! ./to-buffer */ "./node_modules/pbkdf2/lib/to-buffer.js")

var ZERO_BUF
var subtle = __webpack_require__.g.crypto && __webpack_require__.g.crypto.subtle
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (__webpack_require__.g.process && !__webpack_require__.g.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
var nextTick
function getNextTick () {
  if (nextTick) {
    return nextTick
  }
  if (__webpack_require__.g.process && __webpack_require__.g.process.nextTick) {
    nextTick = __webpack_require__.g.process.nextTick
  } else if (__webpack_require__.g.queueMicrotask) {
    nextTick = __webpack_require__.g.queueMicrotask
  } else if (__webpack_require__.g.setImmediate) {
    nextTick = __webpack_require__.g.setImmediate
  } else {
    nextTick = __webpack_require__.g.setTimeout
  }
  return nextTick
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    getNextTick()(function () {
      callback(null, out)
    })
  }, function (e) {
    getNextTick()(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof __webpack_require__.g.Promise !== 'function') {
    getNextTick()(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
    return
  }

  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}


/***/ }),

/***/ "./node_modules/pbkdf2/lib/default-encoding.js":
/*!*****************************************************!*\
  !*** ./node_modules/pbkdf2/lib/default-encoding.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
var defaultEncoding
/* istanbul ignore next */
if (__webpack_require__.g.process && __webpack_require__.g.process.browser) {
  defaultEncoding = 'utf-8'
} else if (__webpack_require__.g.process && __webpack_require__.g.process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
} else {
  defaultEncoding = 'utf-8'
}
module.exports = defaultEncoding


/***/ }),

/***/ "./node_modules/pbkdf2/lib/precondition.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/precondition.js ***!
  \*************************************************/
/***/ ((module) => {

var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}


/***/ }),

/***/ "./node_modules/pbkdf2/lib/sync-browser.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/sync-browser.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var toBuffer = __webpack_require__(/*! ./to-buffer */ "./node_modules/pbkdf2/lib/to-buffer.js")

var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }
  function rmd160Func (data) {
    return new RIPEMD160().update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2


/***/ }),

/***/ "./node_modules/pbkdf2/lib/to-buffer.js":
/*!**********************************************!*\
  !*** ./node_modules/pbkdf2/lib/to-buffer.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

module.exports = function (thing, encoding, name) {
  if (Buffer.isBuffer(thing)) {
    return thing
  } else if (typeof thing === 'string') {
    return Buffer.from(thing, encoding)
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer.from(thing.buffer)
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
  }
}


/***/ }),

/***/ "./node_modules/possible-typed-array-names/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/possible-typed-array-names/index.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";


/** @type {import('.')} */
module.exports = [
	'Float16Array',
	'Float32Array',
	'Float64Array',
	'Int8Array',
	'Int16Array',
	'Int32Array',
	'Uint8Array',
	'Uint8ClampedArray',
	'Uint16Array',
	'Uint32Array',
	'BigInt64Array',
	'BigUint64Array'
];


/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");


if (typeof process === 'undefined' ||
    !process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}



/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/public-encrypt/browser.js":
/*!************************************************!*\
  !*** ./node_modules/public-encrypt/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ "./node_modules/public-encrypt/publicEncrypt.js")
exports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ "./node_modules/public-encrypt/privateDecrypt.js")

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}


/***/ }),

/***/ "./node_modules/public-encrypt/mgf.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/mgf.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}


/***/ }),

/***/ "./node_modules/public-encrypt/node_modules/bn.js/lib/bn.js":
/*!******************************************************************!*\
  !*** ./node_modules/public-encrypt/node_modules/bn.js/lib/bn.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?fbf1").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/public-encrypt/privateDecrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/public-encrypt/privateDecrypt.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js")
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/public-encrypt/node_modules/bn.js/lib/bn.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}


/***/ }),

/***/ "./node_modules/public-encrypt/publicEncrypt.js":
/*!******************************************************!*\
  !*** ./node_modules/public-encrypt/publicEncrypt.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js")
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/public-encrypt/node_modules/bn.js/lib/bn.js")
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}


/***/ }),

/***/ "./node_modules/public-encrypt/withPublic.js":
/*!***************************************************!*\
  !*** ./node_modules/public-encrypt/withPublic.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var BN = __webpack_require__(/*! bn.js */ "./node_modules/public-encrypt/node_modules/bn.js/lib/bn.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic


/***/ }),

/***/ "./node_modules/public-encrypt/xor.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/xor.js ***!
  \********************************************/
/***/ ((module) => {

module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}


/***/ }),

/***/ "./node_modules/randombytes/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/randombytes/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");


// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)
var crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}


/***/ }),

/***/ "./node_modules/randomfill/browser.js":
/*!********************************************!*\
  !*** ./node_modules/randomfill/browser.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");


function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js")
var randombytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof __webpack_require__.g.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof __webpack_require__.g.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}


/***/ }),

/***/ "./node_modules/readable-stream/errors-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/errors-browser.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;


/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
};
/*</replacement>*/

module.exports = Duplex;
var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/readable-stream/lib/_stream_writable.js");
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Duplex, Readable);
{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}
function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;
  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;
    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

// the no-half-open enforcer
function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(onEndNT, this);
}
function onEndNT(self) {
  self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;
var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/readable-stream/lib/_stream_transform.js");
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(PassThrough, Transform);
function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}
PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



module.exports = Readable;

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = (__webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter);
var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);
var OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ "?d17e");
var debug;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ "./node_modules/readable-stream/lib/internal/streams/buffer_list.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");
var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/readable-stream/lib/internal/streams/state.js"),
  getHighWaterMark = _require.getHighWaterMark;
var _require$codes = (__webpack_require__(/*! ../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;

// Lazy loaded to improve the startup performance.
var StringDecoder;
var createReadableStreamAsyncIterator;
var from;
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Readable, Stream);
var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];
function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}
function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true;

  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;

  // Should .destroy() be called after 'end' (and potentially 'finish')
  this.autoDestroy = !!options.autoDestroy;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}
function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  if (!(this instanceof Readable)) return new Readable(options);

  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5
  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex);

  // legacy
  this.readable = true;
  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }
  Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;
  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }
  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  }

  // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.
  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}
function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }
  return er;
}
Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder;
  // If setEncoding(null), decoder.encoding equals utf8
  this._readableState.encoding = this._readableState.decoder.encoding;

  // Iterate over current buffer to convert already stored Buffers:
  var p = this._readableState.buffer.head;
  var content = '';
  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }
  this._readableState.buffer.clear();
  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
};

// Don't raise the hwm > 1GB
var MAX_HWM = 0x40000000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }
  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }
  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;
  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }
  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }
  if (ret !== null) this.emit('data', ret);
  return ret;
};
function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;
  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;
    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}
function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);
  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  }

  // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.
  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}
function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};
Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;
  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }
  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);
    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);
  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }
  return dest;
};
function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}
Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {
      hasUnpiped: false
    });
    return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;
  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0;

    // Try start flowing on next tick if stream isn't explicitly paused
    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);
      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }
  return res;
};
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);
  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }
  return res;
};
Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);
  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }
  return res;
};
function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;
  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true;

    // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}
function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()
    state.flowing = !state.readableListening;
    resume(this, state);
  }
  state.paused = false;
  return this;
};
function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}
function resume_(stream, state) {
  debug('resume', state.reading);
  if (!state.reading) {
    stream.read(0);
  }
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  this._readableState.paused = true;
  return this;
};
function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null);
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;
  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }
    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };
  return this;
};
if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ "./node_modules/readable-stream/lib/internal/streams/async_iterator.js");
    }
    return createReadableStreamAsyncIterator(this);
  };
}
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
});

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}
function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);
  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}
function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length);

  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;
      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}
if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = __webpack_require__(/*! ./internal/streams/from */ "./node_modules/readable-stream/lib/internal/streams/from-browser.js");
    }
    return from(Readable, iterable, opts);
  };
}
function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;
var _require$codes = (__webpack_require__(/*! ../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Transform, Duplex);
function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;
  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }
  ts.writechunk = null;
  ts.writecb = null;
  if (data != null)
    // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}
function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;
  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}
function prefinish() {
  var _this = this;
  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}
Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};
Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;
  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};
Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};
function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null)
    // single equals check for both `null` and `undefined`
    stream.push(data);

  // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;
  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);
var OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");
var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/readable-stream/lib/internal/streams/state.js"),
  getHighWaterMark = _require.getHighWaterMark;
var _require$codes = (__webpack_require__(/*! ../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
var errorOrDestroy = destroyImpl.errorOrDestroy;
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Writable, Stream);
function nop() {}
function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;

  // Should .destroy() be called after 'finish' (and potentially 'end')
  this.autoDestroy = !!options.autoDestroy;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};
(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}
function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.

  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5
  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex);

  // legacy.
  this.writable = true;
  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }
  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};
function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END();
  // TODO: defer error events consistently everywhere, not just the cb
  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var er;
  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }
  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }
  return true;
}
Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);
  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }
  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }
  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};
Writable.prototype.cork = function () {
  this._writableState.corked++;
};
Writable.prototype.uncork = function () {
  var state = this._writableState;
  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};
Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;
  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }
  return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}
function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}
function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;
    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }
    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}
function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;
  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }
    if (entry === null) state.lastBufferedRequest = null;
  }
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}
Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;
  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }
  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending) endWritable(this, state, cb);
  return this;
};
Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});
function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      errorOrDestroy(stream, err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}
function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;
        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }
  return need;
}
function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }

  // reuse the free corkReq.
  state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  cb(err);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");


var _Object$setPrototypeO;
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var finished = __webpack_require__(/*! ./end-of-stream */ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');
function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}
function readAndResolve(iter) {
  var resolve = iter[kLastResolve];
  if (resolve !== null) {
    var data = iter[kStream].read();
    // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'
    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}
function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}
function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }
      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}
var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },
  next: function next() {
    var _this = this;
    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];
    if (error !== null) {
      return Promise.reject(error);
    }
    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }
    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    }

    // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time
    var lastPromise = this[kLastPromise];
    var promise;
    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();
      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }
      promise = new Promise(this[kHandlePromise]);
    }
    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;
  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }
      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);
var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;
  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();
      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject];
      // reject if we are waiting for data in the Promise
      // returned by next() and store the error
      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }
      iterator[kError] = err;
      return;
    }
    var resolve = iterator[kLastResolve];
    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }
    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};
module.exports = createReadableStreamAsyncIterator;

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!**************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var _require = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js"),
  Buffer = _require.Buffer;
var _require2 = __webpack_require__(/*! util */ "?ed1b"),
  inspect = _require2.inspect;
var custom = inspect && inspect.custom || 'inspect';
function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}
module.exports = /*#__PURE__*/function () {
  function BufferList() {
    _classCallCheck(this, BufferList);
    this.head = null;
    this.tail = null;
    this.length = 0;
  }
  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;
      while (p = p.next) ret += s + p.data;
      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;
      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }
      return ret;
    }

    // Consumes a specified amount of bytes or characters from the buffered data.
  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;
      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }
      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    }

    // Consumes a specified amount of characters from the buffered data.
  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;
      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;
        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }
          break;
        }
        ++c;
      }
      this.length -= c;
      return ret;
    }

    // Consumes a specified amount of bytes from the buffered data.
  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;
      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;
        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }
          break;
        }
        ++c;
      }
      this.length -= c;
      return ret;
    }

    // Make sure the linked list only shows the minimal necessary information.
  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);
  return BufferList;
}();

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");


// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;
  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;
  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }
  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });
  return this;
}
function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}
function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}
function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }
  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}
function emitErrorNT(self, err) {
  self.emit('error', err);
}
function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.

  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}
module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).



var ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ "./node_modules/readable-stream/errors-browser.js").codes).ERR_STREAM_PREMATURE_CLOSE;
function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    callback.apply(this, args);
  };
}
function noop() {}
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}
function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;
  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };
  var writableEnded = stream._writableState && stream._writableState.finished;
  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };
  var readableEnded = stream._readableState && stream._readableState.endEmitted;
  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };
  var onerror = function onerror(err) {
    callback.call(stream, err);
  };
  var onclose = function onclose() {
    var err;
    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };
  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };
  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }
  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}
module.exports = eos;

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};


/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!***********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).



var eos;
function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}
var _require$codes = (__webpack_require__(/*! ../../../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}
function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true;

    // request.destroy just do .end - .abort is what we want
    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}
function call(fn) {
  fn();
}
function pipe(from, to) {
  return from.pipe(to);
}
function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}
function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }
  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];
  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }
  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}
module.exports = pipeline;

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/state.js":
/*!********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/state.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ "./node_modules/readable-stream/errors-browser.js").codes).ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}
function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }
    return Math.floor(hwm);
  }

  // Default value
  return state.objectMode ? 16 : 16 * 1024;
}
module.exports = {
  getHighWaterMark: getHighWaterMark
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer)
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160


/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/safe-regex-test/index.js":
/*!***********************************************!*\
  !*** ./node_modules/safe-regex-test/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBound = __webpack_require__(/*! call-bound */ "./node_modules/call-bound/index.js");
var isRegex = __webpack_require__(/*! is-regex */ "./node_modules/is-regex/index.js");

var $exec = callBound('RegExp.prototype.exec');
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");

/** @type {import('.')} */
module.exports = function regexTester(regex) {
	if (!isRegex(regex)) {
		throw new $TypeError('`regex` must be a RegExp');
	}
	return function test(s) {
		return $exec(regex, s) !== null;
	};
};


/***/ }),

/***/ "./node_modules/set-function-length/index.js":
/*!***************************************************!*\
  !*** ./node_modules/set-function-length/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
var define = __webpack_require__(/*! define-data-property */ "./node_modules/define-data-property/index.js");
var hasDescriptors = __webpack_require__(/*! has-property-descriptors */ "./node_modules/has-property-descriptors/index.js")();
var gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");
var $floor = GetIntrinsic('%Math.floor%');

/** @type {import('.')} */
module.exports = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError('`fn` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError('`length` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD) {
		var desc = gOPD(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};


/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(/*! ./sha */ "./node_modules/sha.js/sha.js")
exports.sha1 = __webpack_require__(/*! ./sha1 */ "./node_modules/sha.js/sha1.js")
exports.sha224 = __webpack_require__(/*! ./sha224 */ "./node_modules/sha.js/sha224.js")
exports.sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
exports.sha384 = __webpack_require__(/*! ./sha384 */ "./node_modules/sha.js/sha384.js")
exports.sha512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")


/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var SHA512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer)

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = (__webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter);
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

inherits(Stream, EE);
Stream.Readable = __webpack_require__(/*! readable-stream/lib/_stream_readable.js */ "./node_modules/readable-stream/lib/_stream_readable.js");
Stream.Writable = __webpack_require__(/*! readable-stream/lib/_stream_writable.js */ "./node_modules/readable-stream/lib/_stream_writable.js");
Stream.Duplex = __webpack_require__(/*! readable-stream/lib/_stream_duplex.js */ "./node_modules/readable-stream/lib/_stream_duplex.js");
Stream.Transform = __webpack_require__(/*! readable-stream/lib/_stream_transform.js */ "./node_modules/readable-stream/lib/_stream_transform.js");
Stream.PassThrough = __webpack_require__(/*! readable-stream/lib/_stream_passthrough.js */ "./node_modules/readable-stream/lib/_stream_passthrough.js");
Stream.finished = __webpack_require__(/*! readable-stream/lib/internal/streams/end-of-stream.js */ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js")
Stream.pipeline = __webpack_require__(/*! readable-stream/lib/internal/streams/pipeline.js */ "./node_modules/readable-stream/lib/internal/streams/pipeline.js")

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};


/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer);
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************!*\
  !*** ./node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = Math.floor((x[j] + 128) / 256);
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  return n;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES,

  gf: gf,
  D: D,
  L: L,
  pack25519: pack25519,
  unpack25519: unpack25519,
  M: M,
  A: A,
  S: S,
  Z: Z,
  pow2523: pow2523,
  add: add,
  set25519: set25519,
  modL: modL,
  scalarmult: scalarmult,
  scalarbase: scalarbase,
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  for (var i = 0; i < arguments.length; i++) {
    if (!(arguments[i] instanceof Uint8Array))
      throw new TypeError('unexpected type, use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return null;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (true) {
    // Node.js.
    crypto = __webpack_require__(/*! crypto */ "?dba7");
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));


/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!__webpack_require__.g.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = __webpack_require__.g.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}


/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/***/ ((module) => {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),

/***/ "./node_modules/util/support/types.js":
/*!********************************************!*\
  !*** ./node_modules/util/support/types.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Currently in sync with Node.js lib/internal/util/types.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9



var isArgumentsObject = __webpack_require__(/*! is-arguments */ "./node_modules/is-arguments/index.js");
var isGeneratorFunction = __webpack_require__(/*! is-generator-function */ "./node_modules/is-generator-function/index.js");
var whichTypedArray = __webpack_require__(/*! which-typed-array */ "./node_modules/which-typed-array/index.js");
var isTypedArray = __webpack_require__(/*! is-typed-array */ "./node_modules/is-typed-array/index.js");

function uncurryThis(f) {
  return f.call.bind(f);
}

var BigIntSupported = typeof BigInt !== 'undefined';
var SymbolSupported = typeof Symbol !== 'undefined';

var ObjectToString = uncurryThis(Object.prototype.toString);

var numberValue = uncurryThis(Number.prototype.valueOf);
var stringValue = uncurryThis(String.prototype.valueOf);
var booleanValue = uncurryThis(Boolean.prototype.valueOf);

if (BigIntSupported) {
  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
}

if (SymbolSupported) {
  var symbolValue = uncurryThis(Symbol.prototype.valueOf);
}

function checkBoxedPrimitive(value, prototypeValueOf) {
  if (typeof value !== 'object') {
    return false;
  }
  try {
    prototypeValueOf(value);
    return true;
  } catch(e) {
    return false;
  }
}

exports.isArgumentsObject = isArgumentsObject;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isTypedArray = isTypedArray;

// Taken from here and modified for better browser support
// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js
function isPromise(input) {
	return (
		(
			typeof Promise !== 'undefined' &&
			input instanceof Promise
		) ||
		(
			input !== null &&
			typeof input === 'object' &&
			typeof input.then === 'function' &&
			typeof input.catch === 'function'
		)
	);
}
exports.isPromise = isPromise;

function isArrayBufferView(value) {
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    return ArrayBuffer.isView(value);
  }

  return (
    isTypedArray(value) ||
    isDataView(value)
  );
}
exports.isArrayBufferView = isArrayBufferView;


function isUint8Array(value) {
  return whichTypedArray(value) === 'Uint8Array';
}
exports.isUint8Array = isUint8Array;

function isUint8ClampedArray(value) {
  return whichTypedArray(value) === 'Uint8ClampedArray';
}
exports.isUint8ClampedArray = isUint8ClampedArray;

function isUint16Array(value) {
  return whichTypedArray(value) === 'Uint16Array';
}
exports.isUint16Array = isUint16Array;

function isUint32Array(value) {
  return whichTypedArray(value) === 'Uint32Array';
}
exports.isUint32Array = isUint32Array;

function isInt8Array(value) {
  return whichTypedArray(value) === 'Int8Array';
}
exports.isInt8Array = isInt8Array;

function isInt16Array(value) {
  return whichTypedArray(value) === 'Int16Array';
}
exports.isInt16Array = isInt16Array;

function isInt32Array(value) {
  return whichTypedArray(value) === 'Int32Array';
}
exports.isInt32Array = isInt32Array;

function isFloat32Array(value) {
  return whichTypedArray(value) === 'Float32Array';
}
exports.isFloat32Array = isFloat32Array;

function isFloat64Array(value) {
  return whichTypedArray(value) === 'Float64Array';
}
exports.isFloat64Array = isFloat64Array;

function isBigInt64Array(value) {
  return whichTypedArray(value) === 'BigInt64Array';
}
exports.isBigInt64Array = isBigInt64Array;

function isBigUint64Array(value) {
  return whichTypedArray(value) === 'BigUint64Array';
}
exports.isBigUint64Array = isBigUint64Array;

function isMapToString(value) {
  return ObjectToString(value) === '[object Map]';
}
isMapToString.working = (
  typeof Map !== 'undefined' &&
  isMapToString(new Map())
);

function isMap(value) {
  if (typeof Map === 'undefined') {
    return false;
  }

  return isMapToString.working
    ? isMapToString(value)
    : value instanceof Map;
}
exports.isMap = isMap;

function isSetToString(value) {
  return ObjectToString(value) === '[object Set]';
}
isSetToString.working = (
  typeof Set !== 'undefined' &&
  isSetToString(new Set())
);
function isSet(value) {
  if (typeof Set === 'undefined') {
    return false;
  }

  return isSetToString.working
    ? isSetToString(value)
    : value instanceof Set;
}
exports.isSet = isSet;

function isWeakMapToString(value) {
  return ObjectToString(value) === '[object WeakMap]';
}
isWeakMapToString.working = (
  typeof WeakMap !== 'undefined' &&
  isWeakMapToString(new WeakMap())
);
function isWeakMap(value) {
  if (typeof WeakMap === 'undefined') {
    return false;
  }

  return isWeakMapToString.working
    ? isWeakMapToString(value)
    : value instanceof WeakMap;
}
exports.isWeakMap = isWeakMap;

function isWeakSetToString(value) {
  return ObjectToString(value) === '[object WeakSet]';
}
isWeakSetToString.working = (
  typeof WeakSet !== 'undefined' &&
  isWeakSetToString(new WeakSet())
);
function isWeakSet(value) {
  return isWeakSetToString(value);
}
exports.isWeakSet = isWeakSet;

function isArrayBufferToString(value) {
  return ObjectToString(value) === '[object ArrayBuffer]';
}
isArrayBufferToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  isArrayBufferToString(new ArrayBuffer())
);
function isArrayBuffer(value) {
  if (typeof ArrayBuffer === 'undefined') {
    return false;
  }

  return isArrayBufferToString.working
    ? isArrayBufferToString(value)
    : value instanceof ArrayBuffer;
}
exports.isArrayBuffer = isArrayBuffer;

function isDataViewToString(value) {
  return ObjectToString(value) === '[object DataView]';
}
isDataViewToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  typeof DataView !== 'undefined' &&
  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))
);
function isDataView(value) {
  if (typeof DataView === 'undefined') {
    return false;
  }

  return isDataViewToString.working
    ? isDataViewToString(value)
    : value instanceof DataView;
}
exports.isDataView = isDataView;

// Store a copy of SharedArrayBuffer in case it's deleted elsewhere
var SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;
function isSharedArrayBufferToString(value) {
  return ObjectToString(value) === '[object SharedArrayBuffer]';
}
function isSharedArrayBuffer(value) {
  if (typeof SharedArrayBufferCopy === 'undefined') {
    return false;
  }

  if (typeof isSharedArrayBufferToString.working === 'undefined') {
    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());
  }

  return isSharedArrayBufferToString.working
    ? isSharedArrayBufferToString(value)
    : value instanceof SharedArrayBufferCopy;
}
exports.isSharedArrayBuffer = isSharedArrayBuffer;

function isAsyncFunction(value) {
  return ObjectToString(value) === '[object AsyncFunction]';
}
exports.isAsyncFunction = isAsyncFunction;

function isMapIterator(value) {
  return ObjectToString(value) === '[object Map Iterator]';
}
exports.isMapIterator = isMapIterator;

function isSetIterator(value) {
  return ObjectToString(value) === '[object Set Iterator]';
}
exports.isSetIterator = isSetIterator;

function isGeneratorObject(value) {
  return ObjectToString(value) === '[object Generator]';
}
exports.isGeneratorObject = isGeneratorObject;

function isWebAssemblyCompiledModule(value) {
  return ObjectToString(value) === '[object WebAssembly.Module]';
}
exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;

function isNumberObject(value) {
  return checkBoxedPrimitive(value, numberValue);
}
exports.isNumberObject = isNumberObject;

function isStringObject(value) {
  return checkBoxedPrimitive(value, stringValue);
}
exports.isStringObject = isStringObject;

function isBooleanObject(value) {
  return checkBoxedPrimitive(value, booleanValue);
}
exports.isBooleanObject = isBooleanObject;

function isBigIntObject(value) {
  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
}
exports.isBigIntObject = isBigIntObject;

function isSymbolObject(value) {
  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
}
exports.isSymbolObject = isSymbolObject;

function isBoxedPrimitive(value) {
  return (
    isNumberObject(value) ||
    isStringObject(value) ||
    isBooleanObject(value) ||
    isBigIntObject(value) ||
    isSymbolObject(value)
  );
}
exports.isBoxedPrimitive = isBoxedPrimitive;

function isAnyArrayBuffer(value) {
  return typeof Uint8Array !== 'undefined' && (
    isArrayBuffer(value) ||
    isSharedArrayBuffer(value)
  );
}
exports.isAnyArrayBuffer = isAnyArrayBuffer;

['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {
  Object.defineProperty(exports, method, {
    enumerable: false,
    value: function() {
      throw new Error(method + ' is not supported in userland');
    }
  });
});


/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* provided dependency */ var process = __webpack_require__(/*! ./node_modules/process/browser.js */ "./node_modules/process/browser.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnvRegex = /^$/;

if (process.env.NODE_DEBUG) {
  var debugEnv = process.env.NODE_DEBUG;
  debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
    .replace(/\*/g, '.*')
    .replace(/,/g, '$|^')
    .toUpperCase();
  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');
}
exports.debuglog = function(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').slice(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.slice(1, -1);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
exports.types = __webpack_require__(/*! ./support/types */ "./node_modules/util/support/types.js");

function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
exports.types.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
exports.types.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;
exports.types.isNativeError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ "./node_modules/util/support/isBufferBrowser.js");

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },
            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;


/***/ }),

/***/ "./node_modules/vm-browserify/index.js":
/*!*********************************************!*\
  !*** ./node_modules/vm-browserify/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

var indexOf = function (xs, item) {
    if (xs.indexOf) return xs.indexOf(item);
    else for (var i = 0; i < xs.length; i++) {
        if (xs[i] === item) return i;
    }
    return -1;
};
var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    if (context) {
        forEach(Object_keys(ctx), function (key) {
            context[key] = ctx[key];
        });
    }

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.isContext = function (context) {
    return context instanceof Context;
};

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};


/***/ }),

/***/ "./node_modules/which-typed-array/index.js":
/*!*************************************************!*\
  !*** ./node_modules/which-typed-array/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var forEach = __webpack_require__(/*! for-each */ "./node_modules/for-each/index.js");
var availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ "./node_modules/available-typed-arrays/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");
var callBound = __webpack_require__(/*! call-bound */ "./node_modules/call-bound/index.js");
var gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");
var getProto = __webpack_require__(/*! get-proto */ "./node_modules/get-proto/index.js");

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();

var g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;
var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');

/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */
var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};

/** @typedef {import('./types').Getter} Getter */
/** @type {import('./types').Cache} */
var cache = { __proto__: null };
if (hasToStringTag && gOPD && getProto) {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		if (Symbol.toStringTag in arr && getProto) {
			var proto = getProto(arr);
			// @ts-expect-error TS won't narrow inside a closure
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor && proto) {
				var superProto = getProto(proto);
				// @ts-expect-error TS won't narrow inside a closure
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			// @ts-expect-error TODO: fix
			cache['$' + typedArray] = callBind(descriptor.get);
		}
	});
} else {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		var fn = arr.slice || arr.set;
		if (fn) {
			cache[
				/** @type {`$${import('.').TypedArrayName}`} */ ('$' + typedArray)
			] = /** @type {import('./types').BoundSlice | import('./types').BoundSet} */ (
				// @ts-expect-error TODO FIXME
				callBind(fn)
			);
		}
	});
}

/** @type {(value: object) => false | import('.').TypedArrayName} */
var tryTypedArrays = function tryAllTypedArrays(value) {
	/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;
	forEach(
		/** @type {Record<`\$${import('.').TypedArrayName}`, Getter>} */ (cache),
		/** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */
		function (getter, typedArray) {
			if (!found) {
				try {
					// @ts-expect-error a throw is fine here
					if ('$' + getter(value) === typedArray) {
						found = /** @type {import('.').TypedArrayName} */ ($slice(typedArray, 1));
					}
				} catch (e) { /**/ }
			}
		}
	);
	return found;
};

/** @type {(value: object) => false | import('.').TypedArrayName} */
var trySlices = function tryAllSlices(value) {
	/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;
	forEach(
		/** @type {Record<`\$${import('.').TypedArrayName}`, Getter>} */(cache),
		/** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {
			if (!found) {
				try {
					// @ts-expect-error a throw is fine here
					getter(value);
					found = /** @type {import('.').TypedArrayName} */ ($slice(name, 1));
				} catch (e) { /**/ }
			}
		}
	);
	return found;
};

/** @type {import('.')} */
module.exports = function whichTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag) {
		/** @type {string} */
		var tag = $slice($toString(value), 8, -1);
		if ($indexOf(typedArrays, tag) > -1) {
			return tag;
		}
		if (tag !== 'Object') {
			return false;
		}
		// node < 0.6 hits here on real Typed Arrays
		return trySlices(value);
	}
	if (!gOPD) { return null; } // unknown engine
	return tryTypedArrays(value);
};


/***/ }),

/***/ "?d546":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?8131":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?3fc0":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?cad2":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?593c":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?4068":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?e7e4":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?7bec":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?0b9d":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?5b1a":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?0aec":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?fbf1":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?ed1b":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?d17e":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?dba7":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/available-typed-arrays/index.js":
/*!******************************************************!*\
  !*** ./node_modules/available-typed-arrays/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var possibleNames = __webpack_require__(/*! possible-typed-array-names */ "./node_modules/possible-typed-array-names/index.js");

var g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;

/** @type {import('.')} */
module.exports = function availableTypedArrays() {
	var /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];
	for (var i = 0; i < possibleNames.length; i++) {
		if (typeof g[possibleNames[i]] === 'function') {
			// @ts-expect-error
			out[out.length] = possibleNames[i];
		}
	}
	return out;
};


/***/ }),

/***/ "./node_modules/browserify-aes/modes/list.json":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/list.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');

/***/ }),

/***/ "./node_modules/browserify-sign/browser/algorithms.json":
/*!**************************************************************!*\
  !*** ./node_modules/browserify-sign/browser/algorithms.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');

/***/ }),

/***/ "./node_modules/browserify-sign/browser/curves.json":
/*!**********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/curves.json ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/primes.json":
/*!*****************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/primes.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');

/***/ }),

/***/ "./node_modules/elliptic/package.json":
/*!********************************************!*\
  !*** ./node_modules/elliptic/package.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"elliptic","version":"6.6.1","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}}');

/***/ }),

/***/ "./node_modules/parse-asn1/aesid.json":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/aesid.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module used 'module' so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./js/index.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.js.map